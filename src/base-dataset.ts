import { Dataset, Element } from './dataset';

/**
 * Implements a Dataset. All the fields are optional and can thus be undefined.
 */
export class BaseDataset implements Dataset {
  constructor(private readonly dataset: Dataset) {
    if (dataset === undefined) {
      throw new Error('BaseDataset requires a DICOM valid dataset as parameter');
    }
  }

  get link(): string {
    return this.dataset.link;
  }

  // File Meta Information Group Length
  get FileMetaInformationGroupLength(): any {
    const element = this.dataset['00020000'];
    return (element?.Value.length === 1)
      ? this.dataset['00020000']?.Value[0]
      : this.dataset['00020000']?.Value;
  }

  get '00020000'(): Element {
    return this.dataset['00020000'];
  }

  // File Meta Information Version
  get FileMetaInformationVersion(): any {
    const element = this.dataset['00020001'];
    return (element?.Value.length === 1)
      ? this.dataset['00020001']?.Value[0]
      : this.dataset['00020001']?.Value;
  }

  get '00020001'(): Element {
    return this.dataset['00020001'];
  }

  // Media Storage SOP Class UID
  get MediaStorageSOPClassUID(): any {
    const element = this.dataset['00020002'];
    return (element?.Value.length === 1)
      ? this.dataset['00020002']?.Value[0]
      : this.dataset['00020002']?.Value;
  }

  get '00020002'(): Element {
    return this.dataset['00020002'];
  }

  // Media Storage SOP Instance UID
  get MediaStorageSOPInstanceUID(): any {
    const element = this.dataset['00020003'];
    return (element?.Value.length === 1)
      ? this.dataset['00020003']?.Value[0]
      : this.dataset['00020003']?.Value;
  }

  get '00020003'(): Element {
    return this.dataset['00020003'];
  }

  // Transfer Syntax UID
  get TransferSyntaxUID(): any {
    const element = this.dataset['00020010'];
    return (element?.Value.length === 1)
      ? this.dataset['00020010']?.Value[0]
      : this.dataset['00020010']?.Value;
  }

  get '00020010'(): Element {
    return this.dataset['00020010'];
  }

  // Implementation Class UID
  get ImplementationClassUID(): any {
    const element = this.dataset['00020012'];
    return (element?.Value.length === 1)
      ? this.dataset['00020012']?.Value[0]
      : this.dataset['00020012']?.Value;
  }

  get '00020012'(): Element {
    return this.dataset['00020012'];
  }

  // Implementation Version Name
  get ImplementationVersionName(): any {
    const element = this.dataset['00020013'];
    return (element?.Value.length === 1)
      ? this.dataset['00020013']?.Value[0]
      : this.dataset['00020013']?.Value;
  }

  get '00020013'(): Element {
    return this.dataset['00020013'];
  }

  // Source Application Entity Title
  get SourceApplicationEntityTitle(): any {
    const element = this.dataset['00020016'];
    return (element?.Value.length === 1)
      ? this.dataset['00020016']?.Value[0]
      : this.dataset['00020016']?.Value;
  }

  get '00020016'(): Element {
    return this.dataset['00020016'];
  }

  // Sending Application Entity Title
  get SendingApplicationEntityTitle(): any {
    const element = this.dataset['00020017'];
    return (element?.Value.length === 1)
      ? this.dataset['00020017']?.Value[0]
      : this.dataset['00020017']?.Value;
  }

  get '00020017'(): Element {
    return this.dataset['00020017'];
  }

  // Receiving Application Entity Title
  get ReceivingApplicationEntityTitle(): any {
    const element = this.dataset['00020018'];
    return (element?.Value.length === 1)
      ? this.dataset['00020018']?.Value[0]
      : this.dataset['00020018']?.Value;
  }

  get '00020018'(): Element {
    return this.dataset['00020018'];
  }

  // Private Information Creator UID
  get PrivateInformationCreatorUID(): any {
    const element = this.dataset['00020100'];
    return (element?.Value.length === 1)
      ? this.dataset['00020100']?.Value[0]
      : this.dataset['00020100']?.Value;
  }

  get '00020100'(): Element {
    return this.dataset['00020100'];
  }

  // Private Information
  get PrivateInformation(): any {
    const element = this.dataset['00020102'];
    return (element?.Value.length === 1)
      ? this.dataset['00020102']?.Value[0]
      : this.dataset['00020102']?.Value;
  }

  get '00020102'(): Element {
    return this.dataset['00020102'];
  }

  // File-set ID
  get FileSetID(): any {
    const element = this.dataset['00041130'];
    return (element?.Value.length === 1)
      ? this.dataset['00041130']?.Value[0]
      : this.dataset['00041130']?.Value;
  }

  get '00041130'(): Element {
    return this.dataset['00041130'];
  }

  // File-set Descriptor File ID
  get FileSetDescriptorFileID(): any {
    const element = this.dataset['00041141'];
    return (element?.Value.length === 1)
      ? this.dataset['00041141']?.Value[0]
      : this.dataset['00041141']?.Value;
  }

  get '00041141'(): Element {
    return this.dataset['00041141'];
  }

  // Specific Character Set of File-set Descriptor File
  get SpecificCharacterSetOfFileSetDescriptorFile(): any {
    const element = this.dataset['00041142'];
    return (element?.Value.length === 1)
      ? this.dataset['00041142']?.Value[0]
      : this.dataset['00041142']?.Value;
  }

  get '00041142'(): Element {
    return this.dataset['00041142'];
  }

  // Offset of the First Directory Record of the Root Directory Entity
  get OffsetOfTheFirstDirectoryRecordOfTheRootDirectoryEntity(): any {
    const element = this.dataset['00041200'];
    return (element?.Value.length === 1)
      ? this.dataset['00041200']?.Value[0]
      : this.dataset['00041200']?.Value;
  }

  get '00041200'(): Element {
    return this.dataset['00041200'];
  }

  // Offset of the Last Directory Record of the Root Directory Entity
  get OffsetOfTheLastDirectoryRecordOfTheRootDirectoryEntity(): any {
    const element = this.dataset['00041202'];
    return (element?.Value.length === 1)
      ? this.dataset['00041202']?.Value[0]
      : this.dataset['00041202']?.Value;
  }

  get '00041202'(): Element {
    return this.dataset['00041202'];
  }

  // File-set Consistency Flag
  get FileSetConsistencyFlag(): any {
    const element = this.dataset['00041212'];
    return (element?.Value.length === 1)
      ? this.dataset['00041212']?.Value[0]
      : this.dataset['00041212']?.Value;
  }

  get '00041212'(): Element {
    return this.dataset['00041212'];
  }

  // Directory Record Sequence
  get DirectoryRecordSequence(): any {
    const element = this.dataset['00041220'];
    return (element?.Value.length === 1)
      ? this.dataset['00041220']?.Value[0]
      : this.dataset['00041220']?.Value;
  }

  get '00041220'(): Element {
    return this.dataset['00041220'];
  }

  // Offset of the Next Directory Record
  get OffsetOfTheNextDirectoryRecord(): any {
    const element = this.dataset['00041400'];
    return (element?.Value.length === 1)
      ? this.dataset['00041400']?.Value[0]
      : this.dataset['00041400']?.Value;
  }

  get '00041400'(): Element {
    return this.dataset['00041400'];
  }

  // Record In-use Flag
  get RecordInUseFlag(): any {
    const element = this.dataset['00041410'];
    return (element?.Value.length === 1)
      ? this.dataset['00041410']?.Value[0]
      : this.dataset['00041410']?.Value;
  }

  get '00041410'(): Element {
    return this.dataset['00041410'];
  }

  // Offset of Referenced Lower-Level Directory Entity
  get OffsetOfReferencedLowerLevelDirectoryEntity(): any {
    const element = this.dataset['00041420'];
    return (element?.Value.length === 1)
      ? this.dataset['00041420']?.Value[0]
      : this.dataset['00041420']?.Value;
  }

  get '00041420'(): Element {
    return this.dataset['00041420'];
  }

  // Directory Record Type
  get DirectoryRecordType(): any {
    const element = this.dataset['00041430'];
    return (element?.Value.length === 1)
      ? this.dataset['00041430']?.Value[0]
      : this.dataset['00041430']?.Value;
  }

  get '00041430'(): Element {
    return this.dataset['00041430'];
  }

  // Private Record UID
  get PrivateRecordUID(): any {
    const element = this.dataset['00041432'];
    return (element?.Value.length === 1)
      ? this.dataset['00041432']?.Value[0]
      : this.dataset['00041432']?.Value;
  }

  get '00041432'(): Element {
    return this.dataset['00041432'];
  }

  // Referenced File ID
  get ReferencedFileID(): any {
    const element = this.dataset['00041500'];
    return (element?.Value.length === 1)
      ? this.dataset['00041500']?.Value[0]
      : this.dataset['00041500']?.Value;
  }

  get '00041500'(): Element {
    return this.dataset['00041500'];
  }

  // MRDR Directory Record Offset
  get MRDRDirectoryRecordOffset(): any {
    const element = this.dataset['00041504'];
    return (element?.Value.length === 1)
      ? this.dataset['00041504']?.Value[0]
      : this.dataset['00041504']?.Value;
  }

  get '00041504'(): Element {
    return this.dataset['00041504'];
  }

  // Referenced SOP Class UID in File
  get ReferencedSOPClassUIDInFile(): any {
    const element = this.dataset['00041510'];
    return (element?.Value.length === 1)
      ? this.dataset['00041510']?.Value[0]
      : this.dataset['00041510']?.Value;
  }

  get '00041510'(): Element {
    return this.dataset['00041510'];
  }

  // Referenced SOP Instance UID in File
  get ReferencedSOPInstanceUIDInFile(): any {
    const element = this.dataset['00041511'];
    return (element?.Value.length === 1)
      ? this.dataset['00041511']?.Value[0]
      : this.dataset['00041511']?.Value;
  }

  get '00041511'(): Element {
    return this.dataset['00041511'];
  }

  // Referenced Transfer Syntax UID in File
  get ReferencedTransferSyntaxUIDInFile(): any {
    const element = this.dataset['00041512'];
    return (element?.Value.length === 1)
      ? this.dataset['00041512']?.Value[0]
      : this.dataset['00041512']?.Value;
  }

  get '00041512'(): Element {
    return this.dataset['00041512'];
  }

  // Referenced Related General SOP Class UID in File
  get ReferencedRelatedGeneralSOPClassUIDInFile(): any {
    const element = this.dataset['0004151A'];
    return (element?.Value.length === 1)
      ? this.dataset['0004151A']?.Value[0]
      : this.dataset['0004151A']?.Value;
  }

  get '0004151A'(): Element {
    return this.dataset['0004151A'];
  }

  // Number of References
  get NumberOfReferences(): any {
    const element = this.dataset['00041600'];
    return (element?.Value.length === 1)
      ? this.dataset['00041600']?.Value[0]
      : this.dataset['00041600']?.Value;
  }

  get '00041600'(): Element {
    return this.dataset['00041600'];
  }

  // Length to End
  get LengthToEnd(): any {
    const element = this.dataset['00080001'];
    return (element?.Value.length === 1)
      ? this.dataset['00080001']?.Value[0]
      : this.dataset['00080001']?.Value;
  }

  get '00080001'(): Element {
    return this.dataset['00080001'];
  }

  // Specific Character Set
  get SpecificCharacterSet(): any {
    const element = this.dataset['00080005'];
    return (element?.Value.length === 1)
      ? this.dataset['00080005']?.Value[0]
      : this.dataset['00080005']?.Value;
  }

  get '00080005'(): Element {
    return this.dataset['00080005'];
  }

  // Language Code Sequence
  get LanguageCodeSequence(): any {
    const element = this.dataset['00080006'];
    return (element?.Value.length === 1)
      ? this.dataset['00080006']?.Value[0]
      : this.dataset['00080006']?.Value;
  }

  get '00080006'(): Element {
    return this.dataset['00080006'];
  }

  // Image Type
  get ImageType(): any {
    const element = this.dataset['00080008'];
    return (element?.Value.length === 1)
      ? this.dataset['00080008']?.Value[0]
      : this.dataset['00080008']?.Value;
  }

  get '00080008'(): Element {
    return this.dataset['00080008'];
  }

  // Recognition Code
  get RecognitionCode(): any {
    const element = this.dataset['00080010'];
    return (element?.Value.length === 1)
      ? this.dataset['00080010']?.Value[0]
      : this.dataset['00080010']?.Value;
  }

  get '00080010'(): Element {
    return this.dataset['00080010'];
  }

  // Instance Creation Date
  get InstanceCreationDate(): any {
    const element = this.dataset['00080012'];
    return (element?.Value.length === 1)
      ? this.dataset['00080012']?.Value[0]
      : this.dataset['00080012']?.Value;
  }

  get '00080012'(): Element {
    return this.dataset['00080012'];
  }

  // Instance Creation Time
  get InstanceCreationTime(): any {
    const element = this.dataset['00080013'];
    return (element?.Value.length === 1)
      ? this.dataset['00080013']?.Value[0]
      : this.dataset['00080013']?.Value;
  }

  get '00080013'(): Element {
    return this.dataset['00080013'];
  }

  // Instance Creator UID
  get InstanceCreatorUID(): any {
    const element = this.dataset['00080014'];
    return (element?.Value.length === 1)
      ? this.dataset['00080014']?.Value[0]
      : this.dataset['00080014']?.Value;
  }

  get '00080014'(): Element {
    return this.dataset['00080014'];
  }

  // Instance Coercion DateTime
  get InstanceCoercionDateTime(): any {
    const element = this.dataset['00080015'];
    return (element?.Value.length === 1)
      ? this.dataset['00080015']?.Value[0]
      : this.dataset['00080015']?.Value;
  }

  get '00080015'(): Element {
    return this.dataset['00080015'];
  }

  // SOP Class UID
  get SOPClassUID(): any {
    const element = this.dataset['00080016'];
    return (element?.Value.length === 1)
      ? this.dataset['00080016']?.Value[0]
      : this.dataset['00080016']?.Value;
  }

  get '00080016'(): Element {
    return this.dataset['00080016'];
  }

  // SOP Instance UID
  get SOPInstanceUID(): any {
    const element = this.dataset['00080018'];
    return (element?.Value.length === 1)
      ? this.dataset['00080018']?.Value[0]
      : this.dataset['00080018']?.Value;
  }

  get '00080018'(): Element {
    return this.dataset['00080018'];
  }

  // Related General SOP Class UID
  get RelatedGeneralSOPClassUID(): any {
    const element = this.dataset['0008001A'];
    return (element?.Value.length === 1)
      ? this.dataset['0008001A']?.Value[0]
      : this.dataset['0008001A']?.Value;
  }

  get '0008001A'(): Element {
    return this.dataset['0008001A'];
  }

  // Original Specialized SOP Class UID
  get OriginalSpecializedSOPClassUID(): any {
    const element = this.dataset['0008001B'];
    return (element?.Value.length === 1)
      ? this.dataset['0008001B']?.Value[0]
      : this.dataset['0008001B']?.Value;
  }

  get '0008001B'(): Element {
    return this.dataset['0008001B'];
  }

  // Study Date
  get StudyDate(): any {
    const element = this.dataset['00080020'];
    return (element?.Value.length === 1)
      ? this.dataset['00080020']?.Value[0]
      : this.dataset['00080020']?.Value;
  }

  get '00080020'(): Element {
    return this.dataset['00080020'];
  }

  // Series Date
  get SeriesDate(): any {
    const element = this.dataset['00080021'];
    return (element?.Value.length === 1)
      ? this.dataset['00080021']?.Value[0]
      : this.dataset['00080021']?.Value;
  }

  get '00080021'(): Element {
    return this.dataset['00080021'];
  }

  // Acquisition Date
  get AcquisitionDate(): any {
    const element = this.dataset['00080022'];
    return (element?.Value.length === 1)
      ? this.dataset['00080022']?.Value[0]
      : this.dataset['00080022']?.Value;
  }

  get '00080022'(): Element {
    return this.dataset['00080022'];
  }

  // Content Date
  get ContentDate(): any {
    const element = this.dataset['00080023'];
    return (element?.Value.length === 1)
      ? this.dataset['00080023']?.Value[0]
      : this.dataset['00080023']?.Value;
  }

  get '00080023'(): Element {
    return this.dataset['00080023'];
  }

  // Overlay Date
  get OverlayDate(): any {
    const element = this.dataset['00080024'];
    return (element?.Value.length === 1)
      ? this.dataset['00080024']?.Value[0]
      : this.dataset['00080024']?.Value;
  }

  get '00080024'(): Element {
    return this.dataset['00080024'];
  }

  // Curve Date
  get CurveDate(): any {
    const element = this.dataset['00080025'];
    return (element?.Value.length === 1)
      ? this.dataset['00080025']?.Value[0]
      : this.dataset['00080025']?.Value;
  }

  get '00080025'(): Element {
    return this.dataset['00080025'];
  }

  // Acquisition DateTime
  get AcquisitionDateTime(): any {
    const element = this.dataset['0008002A'];
    return (element?.Value.length === 1)
      ? this.dataset['0008002A']?.Value[0]
      : this.dataset['0008002A']?.Value;
  }

  get '0008002A'(): Element {
    return this.dataset['0008002A'];
  }

  // Study Time
  get StudyTime(): any {
    const element = this.dataset['00080030'];
    return (element?.Value.length === 1)
      ? this.dataset['00080030']?.Value[0]
      : this.dataset['00080030']?.Value;
  }

  get '00080030'(): Element {
    return this.dataset['00080030'];
  }

  // Series Time
  get SeriesTime(): any {
    const element = this.dataset['00080031'];
    return (element?.Value.length === 1)
      ? this.dataset['00080031']?.Value[0]
      : this.dataset['00080031']?.Value;
  }

  get '00080031'(): Element {
    return this.dataset['00080031'];
  }

  // Acquisition Time
  get AcquisitionTime(): any {
    const element = this.dataset['00080032'];
    return (element?.Value.length === 1)
      ? this.dataset['00080032']?.Value[0]
      : this.dataset['00080032']?.Value;
  }

  get '00080032'(): Element {
    return this.dataset['00080032'];
  }

  // Content Time
  get ContentTime(): any {
    const element = this.dataset['00080033'];
    return (element?.Value.length === 1)
      ? this.dataset['00080033']?.Value[0]
      : this.dataset['00080033']?.Value;
  }

  get '00080033'(): Element {
    return this.dataset['00080033'];
  }

  // Overlay Time
  get OverlayTime(): any {
    const element = this.dataset['00080034'];
    return (element?.Value.length === 1)
      ? this.dataset['00080034']?.Value[0]
      : this.dataset['00080034']?.Value;
  }

  get '00080034'(): Element {
    return this.dataset['00080034'];
  }

  // Curve Time
  get CurveTime(): any {
    const element = this.dataset['00080035'];
    return (element?.Value.length === 1)
      ? this.dataset['00080035']?.Value[0]
      : this.dataset['00080035']?.Value;
  }

  get '00080035'(): Element {
    return this.dataset['00080035'];
  }

  // Data Set Type
  get DataSetType(): any {
    const element = this.dataset['00080040'];
    return (element?.Value.length === 1)
      ? this.dataset['00080040']?.Value[0]
      : this.dataset['00080040']?.Value;
  }

  get '00080040'(): Element {
    return this.dataset['00080040'];
  }

  // Data Set Subtype
  get DataSetSubtype(): any {
    const element = this.dataset['00080041'];
    return (element?.Value.length === 1)
      ? this.dataset['00080041']?.Value[0]
      : this.dataset['00080041']?.Value;
  }

  get '00080041'(): Element {
    return this.dataset['00080041'];
  }

  // Nuclear Medicine Series Type
  get NuclearMedicineSeriesType(): any {
    const element = this.dataset['00080042'];
    return (element?.Value.length === 1)
      ? this.dataset['00080042']?.Value[0]
      : this.dataset['00080042']?.Value;
  }

  get '00080042'(): Element {
    return this.dataset['00080042'];
  }

  // Accession Number
  get AccessionNumber(): any {
    const element = this.dataset['00080050'];
    return (element?.Value.length === 1)
      ? this.dataset['00080050']?.Value[0]
      : this.dataset['00080050']?.Value;
  }

  get '00080050'(): Element {
    return this.dataset['00080050'];
  }

  // Issuer of Accession Number Sequence
  get IssuerOfAccessionNumberSequence(): any {
    const element = this.dataset['00080051'];
    return (element?.Value.length === 1)
      ? this.dataset['00080051']?.Value[0]
      : this.dataset['00080051']?.Value;
  }

  get '00080051'(): Element {
    return this.dataset['00080051'];
  }

  // Query/Retrieve Level
  get QueryRetrieveLevel(): any {
    const element = this.dataset['00080052'];
    return (element?.Value.length === 1)
      ? this.dataset['00080052']?.Value[0]
      : this.dataset['00080052']?.Value;
  }

  get '00080052'(): Element {
    return this.dataset['00080052'];
  }

  // Query/Retrieve View
  get QueryRetrieveView(): any {
    const element = this.dataset['00080053'];
    return (element?.Value.length === 1)
      ? this.dataset['00080053']?.Value[0]
      : this.dataset['00080053']?.Value;
  }

  get '00080053'(): Element {
    return this.dataset['00080053'];
  }

  // Retrieve AE Title
  get RetrieveAETitle(): any {
    const element = this.dataset['00080054'];
    return (element?.Value.length === 1)
      ? this.dataset['00080054']?.Value[0]
      : this.dataset['00080054']?.Value;
  }

  get '00080054'(): Element {
    return this.dataset['00080054'];
  }

  // Instance Availability
  get InstanceAvailability(): any {
    const element = this.dataset['00080056'];
    return (element?.Value.length === 1)
      ? this.dataset['00080056']?.Value[0]
      : this.dataset['00080056']?.Value;
  }

  get '00080056'(): Element {
    return this.dataset['00080056'];
  }

  // Failed SOP Instance UID List
  get FailedSOPInstanceUIDList(): any {
    const element = this.dataset['00080058'];
    return (element?.Value.length === 1)
      ? this.dataset['00080058']?.Value[0]
      : this.dataset['00080058']?.Value;
  }

  get '00080058'(): Element {
    return this.dataset['00080058'];
  }

  // Modality
  get Modality(): any {
    const element = this.dataset['00080060'];
    return (element?.Value.length === 1)
      ? this.dataset['00080060']?.Value[0]
      : this.dataset['00080060']?.Value;
  }

  get '00080060'(): Element {
    return this.dataset['00080060'];
  }

  // Modalities in Study
  get ModalitiesInStudy(): any {
    const element = this.dataset['00080061'];
    return (element?.Value.length === 1)
      ? this.dataset['00080061']?.Value[0]
      : this.dataset['00080061']?.Value;
  }

  get '00080061'(): Element {
    return this.dataset['00080061'];
  }

  // SOP Classes in Study
  get SOPClassesInStudy(): any {
    const element = this.dataset['00080062'];
    return (element?.Value.length === 1)
      ? this.dataset['00080062']?.Value[0]
      : this.dataset['00080062']?.Value;
  }

  get '00080062'(): Element {
    return this.dataset['00080062'];
  }

  // Conversion Type
  get ConversionType(): any {
    const element = this.dataset['00080064'];
    return (element?.Value.length === 1)
      ? this.dataset['00080064']?.Value[0]
      : this.dataset['00080064']?.Value;
  }

  get '00080064'(): Element {
    return this.dataset['00080064'];
  }

  // Presentation Intent Type
  get PresentationIntentType(): any {
    const element = this.dataset['00080068'];
    return (element?.Value.length === 1)
      ? this.dataset['00080068']?.Value[0]
      : this.dataset['00080068']?.Value;
  }

  get '00080068'(): Element {
    return this.dataset['00080068'];
  }

  // Manufacturer
  get Manufacturer(): any {
    const element = this.dataset['00080070'];
    return (element?.Value.length === 1)
      ? this.dataset['00080070']?.Value[0]
      : this.dataset['00080070']?.Value;
  }

  get '00080070'(): Element {
    return this.dataset['00080070'];
  }

  // Institution Name
  get InstitutionName(): any {
    const element = this.dataset['00080080'];
    return (element?.Value.length === 1)
      ? this.dataset['00080080']?.Value[0]
      : this.dataset['00080080']?.Value;
  }

  get '00080080'(): Element {
    return this.dataset['00080080'];
  }

  // Institution Address
  get InstitutionAddress(): any {
    const element = this.dataset['00080081'];
    return (element?.Value.length === 1)
      ? this.dataset['00080081']?.Value[0]
      : this.dataset['00080081']?.Value;
  }

  get '00080081'(): Element {
    return this.dataset['00080081'];
  }

  // Institution Code Sequence
  get InstitutionCodeSequence(): any {
    const element = this.dataset['00080082'];
    return (element?.Value.length === 1)
      ? this.dataset['00080082']?.Value[0]
      : this.dataset['00080082']?.Value;
  }

  get '00080082'(): Element {
    return this.dataset['00080082'];
  }

  // Referring Physician's Name
  get ReferringPhysicianName(): any {
    const element = this.dataset['00080090'];
    return (element?.Value.length === 1)
      ? this.dataset['00080090']?.Value[0]
      : this.dataset['00080090']?.Value;
  }

  get '00080090'(): Element {
    return this.dataset['00080090'];
  }

  // Referring Physician's Address
  get ReferringPhysicianAddress(): any {
    const element = this.dataset['00080092'];
    return (element?.Value.length === 1)
      ? this.dataset['00080092']?.Value[0]
      : this.dataset['00080092']?.Value;
  }

  get '00080092'(): Element {
    return this.dataset['00080092'];
  }

  // Referring Physician's Telephone Numbers
  get ReferringPhysicianTelephoneNumbers(): any {
    const element = this.dataset['00080094'];
    return (element?.Value.length === 1)
      ? this.dataset['00080094']?.Value[0]
      : this.dataset['00080094']?.Value;
  }

  get '00080094'(): Element {
    return this.dataset['00080094'];
  }

  // Referring Physician Identification Sequence
  get ReferringPhysicianIdentificationSequence(): any {
    const element = this.dataset['00080096'];
    return (element?.Value.length === 1)
      ? this.dataset['00080096']?.Value[0]
      : this.dataset['00080096']?.Value;
  }

  get '00080096'(): Element {
    return this.dataset['00080096'];
  }

  // Code Value
  get CodeValue(): any {
    const element = this.dataset['00080100'];
    return (element?.Value.length === 1)
      ? this.dataset['00080100']?.Value[0]
      : this.dataset['00080100']?.Value;
  }

  get '00080100'(): Element {
    return this.dataset['00080100'];
  }

  // Extended Code Value
  get ExtendedCodeValue(): any {
    const element = this.dataset['00080101'];
    return (element?.Value.length === 1)
      ? this.dataset['00080101']?.Value[0]
      : this.dataset['00080101']?.Value;
  }

  get '00080101'(): Element {
    return this.dataset['00080101'];
  }

  // Coding Scheme Designator
  get CodingSchemeDesignator(): any {
    const element = this.dataset['00080102'];
    return (element?.Value.length === 1)
      ? this.dataset['00080102']?.Value[0]
      : this.dataset['00080102']?.Value;
  }

  get '00080102'(): Element {
    return this.dataset['00080102'];
  }

  // Coding Scheme Version
  get CodingSchemeVersion(): any {
    const element = this.dataset['00080103'];
    return (element?.Value.length === 1)
      ? this.dataset['00080103']?.Value[0]
      : this.dataset['00080103']?.Value;
  }

  get '00080103'(): Element {
    return this.dataset['00080103'];
  }

  // Code Meaning
  get CodeMeaning(): any {
    const element = this.dataset['00080104'];
    return (element?.Value.length === 1)
      ? this.dataset['00080104']?.Value[0]
      : this.dataset['00080104']?.Value;
  }

  get '00080104'(): Element {
    return this.dataset['00080104'];
  }

  // Mapping Resource
  get MappingResource(): any {
    const element = this.dataset['00080105'];
    return (element?.Value.length === 1)
      ? this.dataset['00080105']?.Value[0]
      : this.dataset['00080105']?.Value;
  }

  get '00080105'(): Element {
    return this.dataset['00080105'];
  }

  // Context Group Version
  get ContextGroupVersion(): any {
    const element = this.dataset['00080106'];
    return (element?.Value.length === 1)
      ? this.dataset['00080106']?.Value[0]
      : this.dataset['00080106']?.Value;
  }

  get '00080106'(): Element {
    return this.dataset['00080106'];
  }

  // Context Group Local Version
  get ContextGroupLocalVersion(): any {
    const element = this.dataset['00080107'];
    return (element?.Value.length === 1)
      ? this.dataset['00080107']?.Value[0]
      : this.dataset['00080107']?.Value;
  }

  get '00080107'(): Element {
    return this.dataset['00080107'];
  }

  // Extended Code Meaning
  get ExtendedCodeMeaning(): any {
    const element = this.dataset['00080108'];
    return (element?.Value.length === 1)
      ? this.dataset['00080108']?.Value[0]
      : this.dataset['00080108']?.Value;
  }

  get '00080108'(): Element {
    return this.dataset['00080108'];
  }

  // Context Group Extension Flag
  get ContextGroupExtensionFlag(): any {
    const element = this.dataset['0008010B'];
    return (element?.Value.length === 1)
      ? this.dataset['0008010B']?.Value[0]
      : this.dataset['0008010B']?.Value;
  }

  get '0008010B'(): Element {
    return this.dataset['0008010B'];
  }

  // Coding Scheme UID
  get CodingSchemeUID(): any {
    const element = this.dataset['0008010C'];
    return (element?.Value.length === 1)
      ? this.dataset['0008010C']?.Value[0]
      : this.dataset['0008010C']?.Value;
  }

  get '0008010C'(): Element {
    return this.dataset['0008010C'];
  }

  // Context Group Extension Creator UID
  get ContextGroupExtensionCreatorUID(): any {
    const element = this.dataset['0008010D'];
    return (element?.Value.length === 1)
      ? this.dataset['0008010D']?.Value[0]
      : this.dataset['0008010D']?.Value;
  }

  get '0008010D'(): Element {
    return this.dataset['0008010D'];
  }

  // Context Identifier
  get ContextIdentifier(): any {
    const element = this.dataset['0008010F'];
    return (element?.Value.length === 1)
      ? this.dataset['0008010F']?.Value[0]
      : this.dataset['0008010F']?.Value;
  }

  get '0008010F'(): Element {
    return this.dataset['0008010F'];
  }

  // Coding Scheme Identification Sequence
  get CodingSchemeIdentificationSequence(): any {
    const element = this.dataset['00080110'];
    return (element?.Value.length === 1)
      ? this.dataset['00080110']?.Value[0]
      : this.dataset['00080110']?.Value;
  }

  get '00080110'(): Element {
    return this.dataset['00080110'];
  }

  // Coding Scheme Registry
  get CodingSchemeRegistry(): any {
    const element = this.dataset['00080112'];
    return (element?.Value.length === 1)
      ? this.dataset['00080112']?.Value[0]
      : this.dataset['00080112']?.Value;
  }

  get '00080112'(): Element {
    return this.dataset['00080112'];
  }

  // Coding Scheme External ID
  get CodingSchemeExternalID(): any {
    const element = this.dataset['00080114'];
    return (element?.Value.length === 1)
      ? this.dataset['00080114']?.Value[0]
      : this.dataset['00080114']?.Value;
  }

  get '00080114'(): Element {
    return this.dataset['00080114'];
  }

  // Coding Scheme Name
  get CodingSchemeName(): any {
    const element = this.dataset['00080115'];
    return (element?.Value.length === 1)
      ? this.dataset['00080115']?.Value[0]
      : this.dataset['00080115']?.Value;
  }

  get '00080115'(): Element {
    return this.dataset['00080115'];
  }

  // Coding Scheme Responsible Organization
  get CodingSchemeResponsibleOrganization(): any {
    const element = this.dataset['00080116'];
    return (element?.Value.length === 1)
      ? this.dataset['00080116']?.Value[0]
      : this.dataset['00080116']?.Value;
  }

  get '00080116'(): Element {
    return this.dataset['00080116'];
  }

  // Context UID
  get ContextUID(): any {
    const element = this.dataset['00080117'];
    return (element?.Value.length === 1)
      ? this.dataset['00080117']?.Value[0]
      : this.dataset['00080117']?.Value;
  }

  get '00080117'(): Element {
    return this.dataset['00080117'];
  }

  // Timezone Offset From UTC
  get TimezoneOffsetFromUTC(): any {
    const element = this.dataset['00080201'];
    return (element?.Value.length === 1)
      ? this.dataset['00080201']?.Value[0]
      : this.dataset['00080201']?.Value;
  }

  get '00080201'(): Element {
    return this.dataset['00080201'];
  }

  // Network ID
  get NetworkID(): any {
    const element = this.dataset['00081000'];
    return (element?.Value.length === 1)
      ? this.dataset['00081000']?.Value[0]
      : this.dataset['00081000']?.Value;
  }

  get '00081000'(): Element {
    return this.dataset['00081000'];
  }

  // Station Name
  get StationName(): any {
    const element = this.dataset['00081010'];
    return (element?.Value.length === 1)
      ? this.dataset['00081010']?.Value[0]
      : this.dataset['00081010']?.Value;
  }

  get '00081010'(): Element {
    return this.dataset['00081010'];
  }

  // Study Description
  get StudyDescription(): any {
    const element = this.dataset['00081030'];
    return (element?.Value.length === 1)
      ? this.dataset['00081030']?.Value[0]
      : this.dataset['00081030']?.Value;
  }

  get '00081030'(): Element {
    return this.dataset['00081030'];
  }

  // Procedure Code Sequence
  get ProcedureCodeSequence(): any {
    const element = this.dataset['00081032'];
    return (element?.Value.length === 1)
      ? this.dataset['00081032']?.Value[0]
      : this.dataset['00081032']?.Value;
  }

  get '00081032'(): Element {
    return this.dataset['00081032'];
  }

  // Series Description
  get SeriesDescription(): any {
    const element = this.dataset['0008103E'];
    return (element?.Value.length === 1)
      ? this.dataset['0008103E']?.Value[0]
      : this.dataset['0008103E']?.Value;
  }

  get '0008103E'(): Element {
    return this.dataset['0008103E'];
  }

  // Series Description Code Sequence
  get SeriesDescriptionCodeSequence(): any {
    const element = this.dataset['0008103F'];
    return (element?.Value.length === 1)
      ? this.dataset['0008103F']?.Value[0]
      : this.dataset['0008103F']?.Value;
  }

  get '0008103F'(): Element {
    return this.dataset['0008103F'];
  }

  // Institutional Department Name
  get InstitutionalDepartmentName(): any {
    const element = this.dataset['00081040'];
    return (element?.Value.length === 1)
      ? this.dataset['00081040']?.Value[0]
      : this.dataset['00081040']?.Value;
  }

  get '00081040'(): Element {
    return this.dataset['00081040'];
  }

  // Physician(s) of Record
  get PhysiciansOfRecord(): any {
    const element = this.dataset['00081048'];
    return (element?.Value.length === 1)
      ? this.dataset['00081048']?.Value[0]
      : this.dataset['00081048']?.Value;
  }

  get '00081048'(): Element {
    return this.dataset['00081048'];
  }

  // Physician(s) of Record Identification Sequence
  get PhysiciansOfRecordIdentificationSequence(): any {
    const element = this.dataset['00081049'];
    return (element?.Value.length === 1)
      ? this.dataset['00081049']?.Value[0]
      : this.dataset['00081049']?.Value;
  }

  get '00081049'(): Element {
    return this.dataset['00081049'];
  }

  // Performing Physician's Name
  get PerformingPhysicianName(): any {
    const element = this.dataset['00081050'];
    return (element?.Value.length === 1)
      ? this.dataset['00081050']?.Value[0]
      : this.dataset['00081050']?.Value;
  }

  get '00081050'(): Element {
    return this.dataset['00081050'];
  }

  // Performing Physician Identification Sequence
  get PerformingPhysicianIdentificationSequence(): any {
    const element = this.dataset['00081052'];
    return (element?.Value.length === 1)
      ? this.dataset['00081052']?.Value[0]
      : this.dataset['00081052']?.Value;
  }

  get '00081052'(): Element {
    return this.dataset['00081052'];
  }

  // Name of Physician(s) Reading Study
  get NameOfPhysiciansReadingStudy(): any {
    const element = this.dataset['00081060'];
    return (element?.Value.length === 1)
      ? this.dataset['00081060']?.Value[0]
      : this.dataset['00081060']?.Value;
  }

  get '00081060'(): Element {
    return this.dataset['00081060'];
  }

  // Physician(s) Reading Study Identification Sequence
  get PhysiciansReadingStudyIdentificationSequence(): any {
    const element = this.dataset['00081062'];
    return (element?.Value.length === 1)
      ? this.dataset['00081062']?.Value[0]
      : this.dataset['00081062']?.Value;
  }

  get '00081062'(): Element {
    return this.dataset['00081062'];
  }

  // Operators' Name
  get OperatorsName(): any {
    const element = this.dataset['00081070'];
    return (element?.Value.length === 1)
      ? this.dataset['00081070']?.Value[0]
      : this.dataset['00081070']?.Value;
  }

  get '00081070'(): Element {
    return this.dataset['00081070'];
  }

  // Operator Identification Sequence
  get OperatorIdentificationSequence(): any {
    const element = this.dataset['00081072'];
    return (element?.Value.length === 1)
      ? this.dataset['00081072']?.Value[0]
      : this.dataset['00081072']?.Value;
  }

  get '00081072'(): Element {
    return this.dataset['00081072'];
  }

  // Admitting Diagnoses Description
  get AdmittingDiagnosesDescription(): any {
    const element = this.dataset['00081080'];
    return (element?.Value.length === 1)
      ? this.dataset['00081080']?.Value[0]
      : this.dataset['00081080']?.Value;
  }

  get '00081080'(): Element {
    return this.dataset['00081080'];
  }

  // Admitting Diagnoses Code Sequence
  get AdmittingDiagnosesCodeSequence(): any {
    const element = this.dataset['00081084'];
    return (element?.Value.length === 1)
      ? this.dataset['00081084']?.Value[0]
      : this.dataset['00081084']?.Value;
  }

  get '00081084'(): Element {
    return this.dataset['00081084'];
  }

  // Manufacturer's Model Name
  get ManufacturerModelName(): any {
    const element = this.dataset['00081090'];
    return (element?.Value.length === 1)
      ? this.dataset['00081090']?.Value[0]
      : this.dataset['00081090']?.Value;
  }

  get '00081090'(): Element {
    return this.dataset['00081090'];
  }

  // Referenced Results Sequence
  get ReferencedResultsSequence(): any {
    const element = this.dataset['00081100'];
    return (element?.Value.length === 1)
      ? this.dataset['00081100']?.Value[0]
      : this.dataset['00081100']?.Value;
  }

  get '00081100'(): Element {
    return this.dataset['00081100'];
  }

  // Referenced Study Sequence
  get ReferencedStudySequence(): any {
    const element = this.dataset['00081110'];
    return (element?.Value.length === 1)
      ? this.dataset['00081110']?.Value[0]
      : this.dataset['00081110']?.Value;
  }

  get '00081110'(): Element {
    return this.dataset['00081110'];
  }

  // Referenced Performed Procedure Step Sequence
  get ReferencedPerformedProcedureStepSequence(): any {
    const element = this.dataset['00081111'];
    return (element?.Value.length === 1)
      ? this.dataset['00081111']?.Value[0]
      : this.dataset['00081111']?.Value;
  }

  get '00081111'(): Element {
    return this.dataset['00081111'];
  }

  // Referenced Series Sequence
  get ReferencedSeriesSequence(): any {
    const element = this.dataset['00081115'];
    return (element?.Value.length === 1)
      ? this.dataset['00081115']?.Value[0]
      : this.dataset['00081115']?.Value;
  }

  get '00081115'(): Element {
    return this.dataset['00081115'];
  }

  // Referenced Patient Sequence
  get ReferencedPatientSequence(): any {
    const element = this.dataset['00081120'];
    return (element?.Value.length === 1)
      ? this.dataset['00081120']?.Value[0]
      : this.dataset['00081120']?.Value;
  }

  get '00081120'(): Element {
    return this.dataset['00081120'];
  }

  // Referenced Visit Sequence
  get ReferencedVisitSequence(): any {
    const element = this.dataset['00081125'];
    return (element?.Value.length === 1)
      ? this.dataset['00081125']?.Value[0]
      : this.dataset['00081125']?.Value;
  }

  get '00081125'(): Element {
    return this.dataset['00081125'];
  }

  // Referenced Overlay Sequence
  get ReferencedOverlaySequence(): any {
    const element = this.dataset['00081130'];
    return (element?.Value.length === 1)
      ? this.dataset['00081130']?.Value[0]
      : this.dataset['00081130']?.Value;
  }

  get '00081130'(): Element {
    return this.dataset['00081130'];
  }

  // Referenced Stereometric Instance Sequence
  get ReferencedStereometricInstanceSequence(): any {
    const element = this.dataset['00081134'];
    return (element?.Value.length === 1)
      ? this.dataset['00081134']?.Value[0]
      : this.dataset['00081134']?.Value;
  }

  get '00081134'(): Element {
    return this.dataset['00081134'];
  }

  // Referenced Waveform Sequence
  get ReferencedWaveformSequence(): any {
    const element = this.dataset['0008113A'];
    return (element?.Value.length === 1)
      ? this.dataset['0008113A']?.Value[0]
      : this.dataset['0008113A']?.Value;
  }

  get '0008113A'(): Element {
    return this.dataset['0008113A'];
  }

  // Referenced Image Sequence
  get ReferencedImageSequence(): any {
    const element = this.dataset['00081140'];
    return (element?.Value.length === 1)
      ? this.dataset['00081140']?.Value[0]
      : this.dataset['00081140']?.Value;
  }

  get '00081140'(): Element {
    return this.dataset['00081140'];
  }

  // Referenced Curve Sequence
  get ReferencedCurveSequence(): any {
    const element = this.dataset['00081145'];
    return (element?.Value.length === 1)
      ? this.dataset['00081145']?.Value[0]
      : this.dataset['00081145']?.Value;
  }

  get '00081145'(): Element {
    return this.dataset['00081145'];
  }

  // Referenced Instance Sequence
  get ReferencedInstanceSequence(): any {
    const element = this.dataset['0008114A'];
    return (element?.Value.length === 1)
      ? this.dataset['0008114A']?.Value[0]
      : this.dataset['0008114A']?.Value;
  }

  get '0008114A'(): Element {
    return this.dataset['0008114A'];
  }

  // Referenced Real World Value Mapping Instance Sequence
  get ReferencedRealWorldValueMappingInstanceSequence(): any {
    const element = this.dataset['0008114B'];
    return (element?.Value.length === 1)
      ? this.dataset['0008114B']?.Value[0]
      : this.dataset['0008114B']?.Value;
  }

  get '0008114B'(): Element {
    return this.dataset['0008114B'];
  }

  // Referenced SOP Class UID
  get ReferencedSOPClassUID(): any {
    const element = this.dataset['00081150'];
    return (element?.Value.length === 1)
      ? this.dataset['00081150']?.Value[0]
      : this.dataset['00081150']?.Value;
  }

  get '00081150'(): Element {
    return this.dataset['00081150'];
  }

  // Referenced SOP Instance UID
  get ReferencedSOPInstanceUID(): any {
    const element = this.dataset['00081155'];
    return (element?.Value.length === 1)
      ? this.dataset['00081155']?.Value[0]
      : this.dataset['00081155']?.Value;
  }

  get '00081155'(): Element {
    return this.dataset['00081155'];
  }

  // SOP Classes Supported
  get SOPClassesSupported(): any {
    const element = this.dataset['0008115A'];
    return (element?.Value.length === 1)
      ? this.dataset['0008115A']?.Value[0]
      : this.dataset['0008115A']?.Value;
  }

  get '0008115A'(): Element {
    return this.dataset['0008115A'];
  }

  // Referenced Frame Number
  get ReferencedFrameNumber(): any {
    const element = this.dataset['00081160'];
    return (element?.Value.length === 1)
      ? this.dataset['00081160']?.Value[0]
      : this.dataset['00081160']?.Value;
  }

  get '00081160'(): Element {
    return this.dataset['00081160'];
  }

  // Simple Frame List
  get SimpleFrameList(): any {
    const element = this.dataset['00081161'];
    return (element?.Value.length === 1)
      ? this.dataset['00081161']?.Value[0]
      : this.dataset['00081161']?.Value;
  }

  get '00081161'(): Element {
    return this.dataset['00081161'];
  }

  // Calculated Frame List
  get CalculatedFrameList(): any {
    const element = this.dataset['00081162'];
    return (element?.Value.length === 1)
      ? this.dataset['00081162']?.Value[0]
      : this.dataset['00081162']?.Value;
  }

  get '00081162'(): Element {
    return this.dataset['00081162'];
  }

  // Time Range
  get TimeRange(): any {
    const element = this.dataset['00081163'];
    return (element?.Value.length === 1)
      ? this.dataset['00081163']?.Value[0]
      : this.dataset['00081163']?.Value;
  }

  get '00081163'(): Element {
    return this.dataset['00081163'];
  }

  // Frame Extraction Sequence
  get FrameExtractionSequence(): any {
    const element = this.dataset['00081164'];
    return (element?.Value.length === 1)
      ? this.dataset['00081164']?.Value[0]
      : this.dataset['00081164']?.Value;
  }

  get '00081164'(): Element {
    return this.dataset['00081164'];
  }

  // Multi-frame Source SOP Instance UID
  get MultiFrameSourceSOPInstanceUID(): any {
    const element = this.dataset['00081167'];
    return (element?.Value.length === 1)
      ? this.dataset['00081167']?.Value[0]
      : this.dataset['00081167']?.Value;
  }

  get '00081167'(): Element {
    return this.dataset['00081167'];
  }

  // Retrieve URL
  get RetrieveURL(): any {
    const element = this.dataset['00081190'];
    return (element?.Value.length === 1)
      ? this.dataset['00081190']?.Value[0]
      : this.dataset['00081190']?.Value;
  }

  get '00081190'(): Element {
    return this.dataset['00081190'];
  }

  // Transaction UID
  get TransactionUID(): any {
    const element = this.dataset['00081195'];
    return (element?.Value.length === 1)
      ? this.dataset['00081195']?.Value[0]
      : this.dataset['00081195']?.Value;
  }

  get '00081195'(): Element {
    return this.dataset['00081195'];
  }

  // Warning Reason
  get WarningReason(): any {
    const element = this.dataset['00081196'];
    return (element?.Value.length === 1)
      ? this.dataset['00081196']?.Value[0]
      : this.dataset['00081196']?.Value;
  }

  get '00081196'(): Element {
    return this.dataset['00081196'];
  }

  // Failure Reason
  get FailureReason(): any {
    const element = this.dataset['00081197'];
    return (element?.Value.length === 1)
      ? this.dataset['00081197']?.Value[0]
      : this.dataset['00081197']?.Value;
  }

  get '00081197'(): Element {
    return this.dataset['00081197'];
  }

  // Failed SOP Sequence
  get FailedSOPSequence(): any {
    const element = this.dataset['00081198'];
    return (element?.Value.length === 1)
      ? this.dataset['00081198']?.Value[0]
      : this.dataset['00081198']?.Value;
  }

  get '00081198'(): Element {
    return this.dataset['00081198'];
  }

  // Referenced SOP Sequence
  get ReferencedSOPSequence(): any {
    const element = this.dataset['00081199'];
    return (element?.Value.length === 1)
      ? this.dataset['00081199']?.Value[0]
      : this.dataset['00081199']?.Value;
  }

  get '00081199'(): Element {
    return this.dataset['00081199'];
  }

  // Studies Containing Other Referenced Instances Sequence
  get StudiesContainingOtherReferencedInstancesSequence(): any {
    const element = this.dataset['00081200'];
    return (element?.Value.length === 1)
      ? this.dataset['00081200']?.Value[0]
      : this.dataset['00081200']?.Value;
  }

  get '00081200'(): Element {
    return this.dataset['00081200'];
  }

  // Related Series Sequence
  get RelatedSeriesSequence(): any {
    const element = this.dataset['00081250'];
    return (element?.Value.length === 1)
      ? this.dataset['00081250']?.Value[0]
      : this.dataset['00081250']?.Value;
  }

  get '00081250'(): Element {
    return this.dataset['00081250'];
  }

  // Lossy Image Compression (Retired)
  get LossyImageCompressionRetired(): any {
    const element = this.dataset['00082110'];
    return (element?.Value.length === 1)
      ? this.dataset['00082110']?.Value[0]
      : this.dataset['00082110']?.Value;
  }

  get '00082110'(): Element {
    return this.dataset['00082110'];
  }

  // Derivation Description
  get DerivationDescription(): any {
    const element = this.dataset['00082111'];
    return (element?.Value.length === 1)
      ? this.dataset['00082111']?.Value[0]
      : this.dataset['00082111']?.Value;
  }

  get '00082111'(): Element {
    return this.dataset['00082111'];
  }

  // Source Image Sequence
  get SourceImageSequence(): any {
    const element = this.dataset['00082112'];
    return (element?.Value.length === 1)
      ? this.dataset['00082112']?.Value[0]
      : this.dataset['00082112']?.Value;
  }

  get '00082112'(): Element {
    return this.dataset['00082112'];
  }

  // Stage Name
  get StageName(): any {
    const element = this.dataset['00082120'];
    return (element?.Value.length === 1)
      ? this.dataset['00082120']?.Value[0]
      : this.dataset['00082120']?.Value;
  }

  get '00082120'(): Element {
    return this.dataset['00082120'];
  }

  // Stage Number
  get StageNumber(): any {
    const element = this.dataset['00082122'];
    return (element?.Value.length === 1)
      ? this.dataset['00082122']?.Value[0]
      : this.dataset['00082122']?.Value;
  }

  get '00082122'(): Element {
    return this.dataset['00082122'];
  }

  // Number of Stages
  get NumberOfStages(): any {
    const element = this.dataset['00082124'];
    return (element?.Value.length === 1)
      ? this.dataset['00082124']?.Value[0]
      : this.dataset['00082124']?.Value;
  }

  get '00082124'(): Element {
    return this.dataset['00082124'];
  }

  // View Name
  get ViewName(): any {
    const element = this.dataset['00082127'];
    return (element?.Value.length === 1)
      ? this.dataset['00082127']?.Value[0]
      : this.dataset['00082127']?.Value;
  }

  get '00082127'(): Element {
    return this.dataset['00082127'];
  }

  // View Number
  get ViewNumber(): any {
    const element = this.dataset['00082128'];
    return (element?.Value.length === 1)
      ? this.dataset['00082128']?.Value[0]
      : this.dataset['00082128']?.Value;
  }

  get '00082128'(): Element {
    return this.dataset['00082128'];
  }

  // Number of Event Timers
  get NumberOfEventTimers(): any {
    const element = this.dataset['00082129'];
    return (element?.Value.length === 1)
      ? this.dataset['00082129']?.Value[0]
      : this.dataset['00082129']?.Value;
  }

  get '00082129'(): Element {
    return this.dataset['00082129'];
  }

  // Number of Views in Stage
  get NumberOfViewsInStage(): any {
    const element = this.dataset['0008212A'];
    return (element?.Value.length === 1)
      ? this.dataset['0008212A']?.Value[0]
      : this.dataset['0008212A']?.Value;
  }

  get '0008212A'(): Element {
    return this.dataset['0008212A'];
  }

  // Event Elapsed Time(s)
  get EventElapsedTimes(): any {
    const element = this.dataset['00082130'];
    return (element?.Value.length === 1)
      ? this.dataset['00082130']?.Value[0]
      : this.dataset['00082130']?.Value;
  }

  get '00082130'(): Element {
    return this.dataset['00082130'];
  }

  // Event Timer Name(s)
  get EventTimerNames(): any {
    const element = this.dataset['00082132'];
    return (element?.Value.length === 1)
      ? this.dataset['00082132']?.Value[0]
      : this.dataset['00082132']?.Value;
  }

  get '00082132'(): Element {
    return this.dataset['00082132'];
  }

  // Event Timer Sequence
  get EventTimerSequence(): any {
    const element = this.dataset['00082133'];
    return (element?.Value.length === 1)
      ? this.dataset['00082133']?.Value[0]
      : this.dataset['00082133']?.Value;
  }

  get '00082133'(): Element {
    return this.dataset['00082133'];
  }

  // Event Time Offset
  get EventTimeOffset(): any {
    const element = this.dataset['00082134'];
    return (element?.Value.length === 1)
      ? this.dataset['00082134']?.Value[0]
      : this.dataset['00082134']?.Value;
  }

  get '00082134'(): Element {
    return this.dataset['00082134'];
  }

  // Event Code Sequence
  get EventCodeSequence(): any {
    const element = this.dataset['00082135'];
    return (element?.Value.length === 1)
      ? this.dataset['00082135']?.Value[0]
      : this.dataset['00082135']?.Value;
  }

  get '00082135'(): Element {
    return this.dataset['00082135'];
  }

  // Start Trim
  get StartTrim(): any {
    const element = this.dataset['00082142'];
    return (element?.Value.length === 1)
      ? this.dataset['00082142']?.Value[0]
      : this.dataset['00082142']?.Value;
  }

  get '00082142'(): Element {
    return this.dataset['00082142'];
  }

  // Stop Trim
  get StopTrim(): any {
    const element = this.dataset['00082143'];
    return (element?.Value.length === 1)
      ? this.dataset['00082143']?.Value[0]
      : this.dataset['00082143']?.Value;
  }

  get '00082143'(): Element {
    return this.dataset['00082143'];
  }

  // Recommended Display Frame Rate
  get RecommendedDisplayFrameRate(): any {
    const element = this.dataset['00082144'];
    return (element?.Value.length === 1)
      ? this.dataset['00082144']?.Value[0]
      : this.dataset['00082144']?.Value;
  }

  get '00082144'(): Element {
    return this.dataset['00082144'];
  }

  // Transducer Position
  get TransducerPosition(): any {
    const element = this.dataset['00082200'];
    return (element?.Value.length === 1)
      ? this.dataset['00082200']?.Value[0]
      : this.dataset['00082200']?.Value;
  }

  get '00082200'(): Element {
    return this.dataset['00082200'];
  }

  // Transducer Orientation
  get TransducerOrientation(): any {
    const element = this.dataset['00082204'];
    return (element?.Value.length === 1)
      ? this.dataset['00082204']?.Value[0]
      : this.dataset['00082204']?.Value;
  }

  get '00082204'(): Element {
    return this.dataset['00082204'];
  }

  // Anatomic Structure
  get AnatomicStructure(): any {
    const element = this.dataset['00082208'];
    return (element?.Value.length === 1)
      ? this.dataset['00082208']?.Value[0]
      : this.dataset['00082208']?.Value;
  }

  get '00082208'(): Element {
    return this.dataset['00082208'];
  }

  // Anatomic Region Sequence
  get AnatomicRegionSequence(): any {
    const element = this.dataset['00082218'];
    return (element?.Value.length === 1)
      ? this.dataset['00082218']?.Value[0]
      : this.dataset['00082218']?.Value;
  }

  get '00082218'(): Element {
    return this.dataset['00082218'];
  }

  // Anatomic Region Modifier Sequence
  get AnatomicRegionModifierSequence(): any {
    const element = this.dataset['00082220'];
    return (element?.Value.length === 1)
      ? this.dataset['00082220']?.Value[0]
      : this.dataset['00082220']?.Value;
  }

  get '00082220'(): Element {
    return this.dataset['00082220'];
  }

  // Primary Anatomic Structure Sequence
  get PrimaryAnatomicStructureSequence(): any {
    const element = this.dataset['00082228'];
    return (element?.Value.length === 1)
      ? this.dataset['00082228']?.Value[0]
      : this.dataset['00082228']?.Value;
  }

  get '00082228'(): Element {
    return this.dataset['00082228'];
  }

  // Anatomic Structure
  get AnatomicStructureSpaceOrRegionSequence(): any {
    const element = this.dataset['00082229'];
    return (element?.Value.length === 1)
      ? this.dataset['00082229']?.Value[0]
      : this.dataset['00082229']?.Value;
  }

  get '00082229'(): Element {
    return this.dataset['00082229'];
  }

  // Primary Anatomic Structure Modifier Sequence
  get PrimaryAnatomicStructureModifierSequence(): any {
    const element = this.dataset['00082230'];
    return (element?.Value.length === 1)
      ? this.dataset['00082230']?.Value[0]
      : this.dataset['00082230']?.Value;
  }

  get '00082230'(): Element {
    return this.dataset['00082230'];
  }

  // Transducer Position Sequence
  get TransducerPositionSequence(): any {
    const element = this.dataset['00082240'];
    return (element?.Value.length === 1)
      ? this.dataset['00082240']?.Value[0]
      : this.dataset['00082240']?.Value;
  }

  get '00082240'(): Element {
    return this.dataset['00082240'];
  }

  // Transducer Position Modifier Sequence
  get TransducerPositionModifierSequence(): any {
    const element = this.dataset['00082242'];
    return (element?.Value.length === 1)
      ? this.dataset['00082242']?.Value[0]
      : this.dataset['00082242']?.Value;
  }

  get '00082242'(): Element {
    return this.dataset['00082242'];
  }

  // Transducer Orientation Sequence
  get TransducerOrientationSequence(): any {
    const element = this.dataset['00082244'];
    return (element?.Value.length === 1)
      ? this.dataset['00082244']?.Value[0]
      : this.dataset['00082244']?.Value;
  }

  get '00082244'(): Element {
    return this.dataset['00082244'];
  }

  // Transducer Orientation Modifier Sequence
  get TransducerOrientationModifierSequence(): any {
    const element = this.dataset['00082246'];
    return (element?.Value.length === 1)
      ? this.dataset['00082246']?.Value[0]
      : this.dataset['00082246']?.Value;
  }

  get '00082246'(): Element {
    return this.dataset['00082246'];
  }

  // Anatomic Structure Space Or Region Code Sequence (Trial)
  get AnatomicStructureSpaceOrRegionCodeSequenceTrial(): any {
    const element = this.dataset['00082251'];
    return (element?.Value.length === 1)
      ? this.dataset['00082251']?.Value[0]
      : this.dataset['00082251']?.Value;
  }

  get '00082251'(): Element {
    return this.dataset['00082251'];
  }

  // Anatomic Portal Of Entrance Code Sequence (Trial)
  get AnatomicPortalOfEntranceCodeSequenceTrial(): any {
    const element = this.dataset['00082253'];
    return (element?.Value.length === 1)
      ? this.dataset['00082253']?.Value[0]
      : this.dataset['00082253']?.Value;
  }

  get '00082253'(): Element {
    return this.dataset['00082253'];
  }

  // Anatomic Approach Direction Code Sequence (Trial)
  get AnatomicApproachDirectionCodeSequenceTrial(): any {
    const element = this.dataset['00082255'];
    return (element?.Value.length === 1)
      ? this.dataset['00082255']?.Value[0]
      : this.dataset['00082255']?.Value;
  }

  get '00082255'(): Element {
    return this.dataset['00082255'];
  }

  // Anatomic Perspective Description (Trial)
  get AnatomicPerspectiveDescriptionTrial(): any {
    const element = this.dataset['00082256'];
    return (element?.Value.length === 1)
      ? this.dataset['00082256']?.Value[0]
      : this.dataset['00082256']?.Value;
  }

  get '00082256'(): Element {
    return this.dataset['00082256'];
  }

  // Anatomic Perspective Code Sequence (Trial)
  get AnatomicPerspectiveCodeSequenceTrial(): any {
    const element = this.dataset['00082257'];
    return (element?.Value.length === 1)
      ? this.dataset['00082257']?.Value[0]
      : this.dataset['00082257']?.Value;
  }

  get '00082257'(): Element {
    return this.dataset['00082257'];
  }

  // Anatomic Location Of Examining Instrument Description (Trial)
  get AnatomicLocationOfExaminingInstrumentDescriptionTrial(): any {
    const element = this.dataset['00082258'];
    return (element?.Value.length === 1)
      ? this.dataset['00082258']?.Value[0]
      : this.dataset['00082258']?.Value;
  }

  get '00082258'(): Element {
    return this.dataset['00082258'];
  }

  // Anatomic Location Of Examining Instrument Code Sequence (Trial)
  get AnatomicLocationOfExaminingInstrumentCodeSequenceTrial(): any {
    const element = this.dataset['00082259'];
    return (element?.Value.length === 1)
      ? this.dataset['00082259']?.Value[0]
      : this.dataset['00082259']?.Value;
  }

  get '00082259'(): Element {
    return this.dataset['00082259'];
  }

  // Anatomic Structure Space Or Region Modifier Code Sequence (Trial)
  get AnatomicStructureSpaceOrRegionModifierCodeSequenceTrial(): any {
    const element = this.dataset['0008225A'];
    return (element?.Value.length === 1)
      ? this.dataset['0008225A']?.Value[0]
      : this.dataset['0008225A']?.Value;
  }

  get '0008225A'(): Element {
    return this.dataset['0008225A'];
  }

  // OnAxis Background Anatomic Structure Code Sequence (Trial)
  get OnAxisBackgroundAnatomicStructureCodeSequenceTrial(): any {
    const element = this.dataset['0008225C'];
    return (element?.Value.length === 1)
      ? this.dataset['0008225C']?.Value[0]
      : this.dataset['0008225C']?.Value;
  }

  get '0008225C'(): Element {
    return this.dataset['0008225C'];
  }

  // Alternate Representation Sequence
  get AlternateRepresentationSequence(): any {
    const element = this.dataset['00083001'];
    return (element?.Value.length === 1)
      ? this.dataset['00083001']?.Value[0]
      : this.dataset['00083001']?.Value;
  }

  get '00083001'(): Element {
    return this.dataset['00083001'];
  }

  // Irradiation Event UID
  get IrradiationEventUID(): any {
    const element = this.dataset['00083010'];
    return (element?.Value.length === 1)
      ? this.dataset['00083010']?.Value[0]
      : this.dataset['00083010']?.Value;
  }

  get '00083010'(): Element {
    return this.dataset['00083010'];
  }

  // Source Irradiation Event Sequence
  get SourceIrradiationEventSequence(): any {
    const element = this.dataset['00083011'];
    return (element?.Value.length === 1)
      ? this.dataset['00083011']?.Value[0]
      : this.dataset['00083011']?.Value;
  }

  get '00083011'(): Element {
    return this.dataset['00083011'];
  }

  // Radiopharmaceutical Administration Event UID
  get RadiopharmaceuticalAdministrationEventUID(): any {
    const element = this.dataset['00083012'];
    return (element?.Value.length === 1)
      ? this.dataset['00083012']?.Value[0]
      : this.dataset['00083012']?.Value;
  }

  get '00083012'(): Element {
    return this.dataset['00083012'];
  }

  // Identifying Comments
  get IdentifyingComments(): any {
    const element = this.dataset['00084000'];
    return (element?.Value.length === 1)
      ? this.dataset['00084000']?.Value[0]
      : this.dataset['00084000']?.Value;
  }

  get '00084000'(): Element {
    return this.dataset['00084000'];
  }

  // Frame Type
  get FrameType(): any {
    const element = this.dataset['00089007'];
    return (element?.Value.length === 1)
      ? this.dataset['00089007']?.Value[0]
      : this.dataset['00089007']?.Value;
  }

  get '00089007'(): Element {
    return this.dataset['00089007'];
  }

  // Referenced Image Evidence Sequence
  get ReferencedImageEvidenceSequence(): any {
    const element = this.dataset['00089092'];
    return (element?.Value.length === 1)
      ? this.dataset['00089092']?.Value[0]
      : this.dataset['00089092']?.Value;
  }

  get '00089092'(): Element {
    return this.dataset['00089092'];
  }

  // Referenced Raw Data Sequence
  get ReferencedRawDataSequence(): any {
    const element = this.dataset['00089121'];
    return (element?.Value.length === 1)
      ? this.dataset['00089121']?.Value[0]
      : this.dataset['00089121']?.Value;
  }

  get '00089121'(): Element {
    return this.dataset['00089121'];
  }

  // Creator-Version UID
  get CreatorVersionUID(): any {
    const element = this.dataset['00089123'];
    return (element?.Value.length === 1)
      ? this.dataset['00089123']?.Value[0]
      : this.dataset['00089123']?.Value;
  }

  get '00089123'(): Element {
    return this.dataset['00089123'];
  }

  // Derivation Image Sequence
  get DerivationImageSequence(): any {
    const element = this.dataset['00089124'];
    return (element?.Value.length === 1)
      ? this.dataset['00089124']?.Value[0]
      : this.dataset['00089124']?.Value;
  }

  get '00089124'(): Element {
    return this.dataset['00089124'];
  }

  // Source Image Evidence Sequence
  get SourceImageEvidenceSequence(): any {
    const element = this.dataset['00089154'];
    return (element?.Value.length === 1)
      ? this.dataset['00089154']?.Value[0]
      : this.dataset['00089154']?.Value;
  }

  get '00089154'(): Element {
    return this.dataset['00089154'];
  }

  // Pixel Presentation
  get PixelPresentation(): any {
    const element = this.dataset['00089205'];
    return (element?.Value.length === 1)
      ? this.dataset['00089205']?.Value[0]
      : this.dataset['00089205']?.Value;
  }

  get '00089205'(): Element {
    return this.dataset['00089205'];
  }

  // Volumetric Properties
  get VolumetricProperties(): any {
    const element = this.dataset['00089206'];
    return (element?.Value.length === 1)
      ? this.dataset['00089206']?.Value[0]
      : this.dataset['00089206']?.Value;
  }

  get '00089206'(): Element {
    return this.dataset['00089206'];
  }

  // Volume Based Calculation Technique
  get VolumeBasedCalculationTechnique(): any {
    const element = this.dataset['00089207'];
    return (element?.Value.length === 1)
      ? this.dataset['00089207']?.Value[0]
      : this.dataset['00089207']?.Value;
  }

  get '00089207'(): Element {
    return this.dataset['00089207'];
  }

  // Complex Image Component
  get ComplexImageComponent(): any {
    const element = this.dataset['00089208'];
    return (element?.Value.length === 1)
      ? this.dataset['00089208']?.Value[0]
      : this.dataset['00089208']?.Value;
  }

  get '00089208'(): Element {
    return this.dataset['00089208'];
  }

  // Acquisition Contrast
  get AcquisitionContrast(): any {
    const element = this.dataset['00089209'];
    return (element?.Value.length === 1)
      ? this.dataset['00089209']?.Value[0]
      : this.dataset['00089209']?.Value;
  }

  get '00089209'(): Element {
    return this.dataset['00089209'];
  }

  // Derivation Code Sequence
  get DerivationCodeSequence(): any {
    const element = this.dataset['00089215'];
    return (element?.Value.length === 1)
      ? this.dataset['00089215']?.Value[0]
      : this.dataset['00089215']?.Value;
  }

  get '00089215'(): Element {
    return this.dataset['00089215'];
  }

  // Referenced Presentation State Sequence
  get ReferencedPresentationStateSequence(): any {
    const element = this.dataset['00089237'];
    return (element?.Value.length === 1)
      ? this.dataset['00089237']?.Value[0]
      : this.dataset['00089237']?.Value;
  }

  get '00089237'(): Element {
    return this.dataset['00089237'];
  }

  // Referenced Other Plane Sequence
  get ReferencedOtherPlaneSequence(): any {
    const element = this.dataset['00089410'];
    return (element?.Value.length === 1)
      ? this.dataset['00089410']?.Value[0]
      : this.dataset['00089410']?.Value;
  }

  get '00089410'(): Element {
    return this.dataset['00089410'];
  }

  // Frame Display Sequence
  get FrameDisplaySequence(): any {
    const element = this.dataset['00089458'];
    return (element?.Value.length === 1)
      ? this.dataset['00089458']?.Value[0]
      : this.dataset['00089458']?.Value;
  }

  get '00089458'(): Element {
    return this.dataset['00089458'];
  }

  // Recommended Display Frame Rate in Float
  get RecommendedDisplayFrameRateInFloat(): any {
    const element = this.dataset['00089459'];
    return (element?.Value.length === 1)
      ? this.dataset['00089459']?.Value[0]
      : this.dataset['00089459']?.Value;
  }

  get '00089459'(): Element {
    return this.dataset['00089459'];
  }

  // Skip Frame Range Flag
  get SkipFrameRangeFlag(): any {
    const element = this.dataset['00089460'];
    return (element?.Value.length === 1)
      ? this.dataset['00089460']?.Value[0]
      : this.dataset['00089460']?.Value;
  }

  get '00089460'(): Element {
    return this.dataset['00089460'];
  }

  // Patient's Name
  get PatientName(): any {
    const element = this.dataset['00100010'];
    return (element?.Value.length === 1)
      ? this.dataset['00100010']?.Value[0]
      : this.dataset['00100010']?.Value;
  }

  get '00100010'(): Element {
    return this.dataset['00100010'];
  }

  // Patient ID
  get PatientID(): any {
    const element = this.dataset['00100020'];
    return (element?.Value.length === 1)
      ? this.dataset['00100020']?.Value[0]
      : this.dataset['00100020']?.Value;
  }

  get '00100020'(): Element {
    return this.dataset['00100020'];
  }

  // Issuer of Patient ID
  get IssuerOfPatientID(): any {
    const element = this.dataset['00100021'];
    return (element?.Value.length === 1)
      ? this.dataset['00100021']?.Value[0]
      : this.dataset['00100021']?.Value;
  }

  get '00100021'(): Element {
    return this.dataset['00100021'];
  }

  // Type of Patient ID
  get TypeOfPatientID(): any {
    const element = this.dataset['00100022'];
    return (element?.Value.length === 1)
      ? this.dataset['00100022']?.Value[0]
      : this.dataset['00100022']?.Value;
  }

  get '00100022'(): Element {
    return this.dataset['00100022'];
  }

  // Issuer of Patient ID Qualifiers Sequence
  get IssuerOfPatientIDQualifiersSequence(): any {
    const element = this.dataset['00100024'];
    return (element?.Value.length === 1)
      ? this.dataset['00100024']?.Value[0]
      : this.dataset['00100024']?.Value;
  }

  get '00100024'(): Element {
    return this.dataset['00100024'];
  }

  // Patient's Birth Date
  get PatientBirthDate(): any {
    const element = this.dataset['00100030'];
    return (element?.Value.length === 1)
      ? this.dataset['00100030']?.Value[0]
      : this.dataset['00100030']?.Value;
  }

  get '00100030'(): Element {
    return this.dataset['00100030'];
  }

  // Patient's Birth Time
  get PatientBirthTime(): any {
    const element = this.dataset['00100032'];
    return (element?.Value.length === 1)
      ? this.dataset['00100032']?.Value[0]
      : this.dataset['00100032']?.Value;
  }

  get '00100032'(): Element {
    return this.dataset['00100032'];
  }

  // Patient's Sex
  get PatientSex(): any {
    const element = this.dataset['00100040'];
    return (element?.Value.length === 1)
      ? this.dataset['00100040']?.Value[0]
      : this.dataset['00100040']?.Value;
  }

  get '00100040'(): Element {
    return this.dataset['00100040'];
  }

  // Patient's Insurance Plan Code Sequence
  get PatientInsurancePlanCodeSequence(): any {
    const element = this.dataset['00100050'];
    return (element?.Value.length === 1)
      ? this.dataset['00100050']?.Value[0]
      : this.dataset['00100050']?.Value;
  }

  get '00100050'(): Element {
    return this.dataset['00100050'];
  }

  // Patient's Primary Language Code Sequence
  get PatientPrimaryLanguageCodeSequence(): any {
    const element = this.dataset['00100101'];
    return (element?.Value.length === 1)
      ? this.dataset['00100101']?.Value[0]
      : this.dataset['00100101']?.Value;
  }

  get '00100101'(): Element {
    return this.dataset['00100101'];
  }

  // Patient's Primary Language Modifier Code Sequence
  get PatientPrimaryLanguageModifierCodeSequence(): any {
    const element = this.dataset['00100102'];
    return (element?.Value.length === 1)
      ? this.dataset['00100102']?.Value[0]
      : this.dataset['00100102']?.Value;
  }

  get '00100102'(): Element {
    return this.dataset['00100102'];
  }

  // Quality Control Subject
  get QualityControlSubject(): any {
    const element = this.dataset['00100200'];
    return (element?.Value.length === 1)
      ? this.dataset['00100200']?.Value[0]
      : this.dataset['00100200']?.Value;
  }

  get '00100200'(): Element {
    return this.dataset['00100200'];
  }

  // Quality Control Subject Type Code Sequence
  get QualityControlSubjectTypeCodeSequence(): any {
    const element = this.dataset['00100201'];
    return (element?.Value.length === 1)
      ? this.dataset['00100201']?.Value[0]
      : this.dataset['00100201']?.Value;
  }

  get '00100201'(): Element {
    return this.dataset['00100201'];
  }

  // Other Patient IDs
  get OtherPatientIDs(): any {
    const element = this.dataset['00101000'];
    return (element?.Value.length === 1)
      ? this.dataset['00101000']?.Value[0]
      : this.dataset['00101000']?.Value;
  }

  get '00101000'(): Element {
    return this.dataset['00101000'];
  }

  // Other Patient Names
  get OtherPatientNames(): any {
    const element = this.dataset['00101001'];
    return (element?.Value.length === 1)
      ? this.dataset['00101001']?.Value[0]
      : this.dataset['00101001']?.Value;
  }

  get '00101001'(): Element {
    return this.dataset['00101001'];
  }

  // Other Patient IDs Sequence
  get OtherPatientIDsSequence(): any {
    const element = this.dataset['00101002'];
    return (element?.Value.length === 1)
      ? this.dataset['00101002']?.Value[0]
      : this.dataset['00101002']?.Value;
  }

  get '00101002'(): Element {
    return this.dataset['00101002'];
  }

  // Patient's Birth Name
  get PatientBirthName(): any {
    const element = this.dataset['00101005'];
    return (element?.Value.length === 1)
      ? this.dataset['00101005']?.Value[0]
      : this.dataset['00101005']?.Value;
  }

  get '00101005'(): Element {
    return this.dataset['00101005'];
  }

  // Patient's Age
  get PatientAge(): any {
    const element = this.dataset['00101010'];
    return (element?.Value.length === 1)
      ? this.dataset['00101010']?.Value[0]
      : this.dataset['00101010']?.Value;
  }

  get '00101010'(): Element {
    return this.dataset['00101010'];
  }

  // Patient's Size
  get PatientSize(): any {
    const element = this.dataset['00101020'];
    return (element?.Value.length === 1)
      ? this.dataset['00101020']?.Value[0]
      : this.dataset['00101020']?.Value;
  }

  get '00101020'(): Element {
    return this.dataset['00101020'];
  }

  // Patient's Size Code Sequence
  get PatientSizeCodeSequence(): any {
    const element = this.dataset['00101021'];
    return (element?.Value.length === 1)
      ? this.dataset['00101021']?.Value[0]
      : this.dataset['00101021']?.Value;
  }

  get '00101021'(): Element {
    return this.dataset['00101021'];
  }

  // Patient's Weight
  get PatientWeight(): any {
    const element = this.dataset['00101030'];
    return (element?.Value.length === 1)
      ? this.dataset['00101030']?.Value[0]
      : this.dataset['00101030']?.Value;
  }

  get '00101030'(): Element {
    return this.dataset['00101030'];
  }

  // Patient's Address
  get PatientAddress(): any {
    const element = this.dataset['00101040'];
    return (element?.Value.length === 1)
      ? this.dataset['00101040']?.Value[0]
      : this.dataset['00101040']?.Value;
  }

  get '00101040'(): Element {
    return this.dataset['00101040'];
  }

  // Insurance Plan Identification
  get InsurancePlanIdentification(): any {
    const element = this.dataset['00101050'];
    return (element?.Value.length === 1)
      ? this.dataset['00101050']?.Value[0]
      : this.dataset['00101050']?.Value;
  }

  get '00101050'(): Element {
    return this.dataset['00101050'];
  }

  // Patient's Mother's Birth Name
  get PatientMotherBirthName(): any {
    const element = this.dataset['00101060'];
    return (element?.Value.length === 1)
      ? this.dataset['00101060']?.Value[0]
      : this.dataset['00101060']?.Value;
  }

  get '00101060'(): Element {
    return this.dataset['00101060'];
  }

  // Military Rank
  get MilitaryRank(): any {
    const element = this.dataset['00101080'];
    return (element?.Value.length === 1)
      ? this.dataset['00101080']?.Value[0]
      : this.dataset['00101080']?.Value;
  }

  get '00101080'(): Element {
    return this.dataset['00101080'];
  }

  // Branch of Service
  get BranchOfService(): any {
    const element = this.dataset['00101081'];
    return (element?.Value.length === 1)
      ? this.dataset['00101081']?.Value[0]
      : this.dataset['00101081']?.Value;
  }

  get '00101081'(): Element {
    return this.dataset['00101081'];
  }

  // Medical Record Locator
  get MedicalRecordLocator(): any {
    const element = this.dataset['00101090'];
    return (element?.Value.length === 1)
      ? this.dataset['00101090']?.Value[0]
      : this.dataset['00101090']?.Value;
  }

  get '00101090'(): Element {
    return this.dataset['00101090'];
  }

  // Referenced Patient Photo Sequence
  get ReferencedPatientPhotoSequence(): any {
    const element = this.dataset['00101100'];
    return (element?.Value.length === 1)
      ? this.dataset['00101100']?.Value[0]
      : this.dataset['00101100']?.Value;
  }

  get '00101100'(): Element {
    return this.dataset['00101100'];
  }

  // Medical Alerts
  get MedicalAlerts(): any {
    const element = this.dataset['00102000'];
    return (element?.Value.length === 1)
      ? this.dataset['00102000']?.Value[0]
      : this.dataset['00102000']?.Value;
  }

  get '00102000'(): Element {
    return this.dataset['00102000'];
  }

  // Allergies
  get Allergies(): any {
    const element = this.dataset['00102110'];
    return (element?.Value.length === 1)
      ? this.dataset['00102110']?.Value[0]
      : this.dataset['00102110']?.Value;
  }

  get '00102110'(): Element {
    return this.dataset['00102110'];
  }

  // Country of Residence
  get CountryOfResidence(): any {
    const element = this.dataset['00102150'];
    return (element?.Value.length === 1)
      ? this.dataset['00102150']?.Value[0]
      : this.dataset['00102150']?.Value;
  }

  get '00102150'(): Element {
    return this.dataset['00102150'];
  }

  // Region of Residence
  get RegionOfResidence(): any {
    const element = this.dataset['00102152'];
    return (element?.Value.length === 1)
      ? this.dataset['00102152']?.Value[0]
      : this.dataset['00102152']?.Value;
  }

  get '00102152'(): Element {
    return this.dataset['00102152'];
  }

  // Patient's Telephone Numbers
  get PatientTelephoneNumbers(): any {
    const element = this.dataset['00102154'];
    return (element?.Value.length === 1)
      ? this.dataset['00102154']?.Value[0]
      : this.dataset['00102154']?.Value;
  }

  get '00102154'(): Element {
    return this.dataset['00102154'];
  }

  // Ethnic Group
  get EthnicGroup(): any {
    const element = this.dataset['00102160'];
    return (element?.Value.length === 1)
      ? this.dataset['00102160']?.Value[0]
      : this.dataset['00102160']?.Value;
  }

  get '00102160'(): Element {
    return this.dataset['00102160'];
  }

  // Occupation
  get Occupation(): any {
    const element = this.dataset['00102180'];
    return (element?.Value.length === 1)
      ? this.dataset['00102180']?.Value[0]
      : this.dataset['00102180']?.Value;
  }

  get '00102180'(): Element {
    return this.dataset['00102180'];
  }

  // Smoking Status
  get SmokingStatus(): any {
    const element = this.dataset['001021A0'];
    return (element?.Value.length === 1)
      ? this.dataset['001021A0']?.Value[0]
      : this.dataset['001021A0']?.Value;
  }

  get '001021A0'(): Element {
    return this.dataset['001021A0'];
  }

  // Additional Patient History
  get AdditionalPatientHistory(): any {
    const element = this.dataset['001021B0'];
    return (element?.Value.length === 1)
      ? this.dataset['001021B0']?.Value[0]
      : this.dataset['001021B0']?.Value;
  }

  get '001021B0'(): Element {
    return this.dataset['001021B0'];
  }

  // Pregnancy Status
  get PregnancyStatus(): any {
    const element = this.dataset['001021C0'];
    return (element?.Value.length === 1)
      ? this.dataset['001021C0']?.Value[0]
      : this.dataset['001021C0']?.Value;
  }

  get '001021C0'(): Element {
    return this.dataset['001021C0'];
  }

  // Last Menstrual Date
  get LastMenstrualDate(): any {
    const element = this.dataset['001021D0'];
    return (element?.Value.length === 1)
      ? this.dataset['001021D0']?.Value[0]
      : this.dataset['001021D0']?.Value;
  }

  get '001021D0'(): Element {
    return this.dataset['001021D0'];
  }

  // Patient's Religious Preference
  get PatientReligiousPreference(): any {
    const element = this.dataset['001021F0'];
    return (element?.Value.length === 1)
      ? this.dataset['001021F0']?.Value[0]
      : this.dataset['001021F0']?.Value;
  }

  get '001021F0'(): Element {
    return this.dataset['001021F0'];
  }

  // Patient Species Description
  get PatientSpeciesDescription(): any {
    const element = this.dataset['00102201'];
    return (element?.Value.length === 1)
      ? this.dataset['00102201']?.Value[0]
      : this.dataset['00102201']?.Value;
  }

  get '00102201'(): Element {
    return this.dataset['00102201'];
  }

  // Patient Species Code Sequence
  get PatientSpeciesCodeSequence(): any {
    const element = this.dataset['00102202'];
    return (element?.Value.length === 1)
      ? this.dataset['00102202']?.Value[0]
      : this.dataset['00102202']?.Value;
  }

  get '00102202'(): Element {
    return this.dataset['00102202'];
  }

  // Patient's Sex Neutered
  get PatientSexNeutered(): any {
    const element = this.dataset['00102203'];
    return (element?.Value.length === 1)
      ? this.dataset['00102203']?.Value[0]
      : this.dataset['00102203']?.Value;
  }

  get '00102203'(): Element {
    return this.dataset['00102203'];
  }

  // Anatomical Orientation Type
  get AnatomicalOrientationType(): any {
    const element = this.dataset['00102210'];
    return (element?.Value.length === 1)
      ? this.dataset['00102210']?.Value[0]
      : this.dataset['00102210']?.Value;
  }

  get '00102210'(): Element {
    return this.dataset['00102210'];
  }

  // Patient Breed Description
  get PatientBreedDescription(): any {
    const element = this.dataset['00102292'];
    return (element?.Value.length === 1)
      ? this.dataset['00102292']?.Value[0]
      : this.dataset['00102292']?.Value;
  }

  get '00102292'(): Element {
    return this.dataset['00102292'];
  }

  // Patient Breed Code Sequence
  get PatientBreedCodeSequence(): any {
    const element = this.dataset['00102293'];
    return (element?.Value.length === 1)
      ? this.dataset['00102293']?.Value[0]
      : this.dataset['00102293']?.Value;
  }

  get '00102293'(): Element {
    return this.dataset['00102293'];
  }

  // Breed Registration Sequence
  get BreedRegistrationSequence(): any {
    const element = this.dataset['00102294'];
    return (element?.Value.length === 1)
      ? this.dataset['00102294']?.Value[0]
      : this.dataset['00102294']?.Value;
  }

  get '00102294'(): Element {
    return this.dataset['00102294'];
  }

  // Breed Registration Number
  get BreedRegistrationNumber(): any {
    const element = this.dataset['00102295'];
    return (element?.Value.length === 1)
      ? this.dataset['00102295']?.Value[0]
      : this.dataset['00102295']?.Value;
  }

  get '00102295'(): Element {
    return this.dataset['00102295'];
  }

  // Breed Registry Code Sequence
  get BreedRegistryCodeSequence(): any {
    const element = this.dataset['00102296'];
    return (element?.Value.length === 1)
      ? this.dataset['00102296']?.Value[0]
      : this.dataset['00102296']?.Value;
  }

  get '00102296'(): Element {
    return this.dataset['00102296'];
  }

  // Responsible Person
  get ResponsiblePerson(): any {
    const element = this.dataset['00102297'];
    return (element?.Value.length === 1)
      ? this.dataset['00102297']?.Value[0]
      : this.dataset['00102297']?.Value;
  }

  get '00102297'(): Element {
    return this.dataset['00102297'];
  }

  // Responsible Person Role
  get ResponsiblePersonRole(): any {
    const element = this.dataset['00102298'];
    return (element?.Value.length === 1)
      ? this.dataset['00102298']?.Value[0]
      : this.dataset['00102298']?.Value;
  }

  get '00102298'(): Element {
    return this.dataset['00102298'];
  }

  // Responsible Organization
  get ResponsibleOrganization(): any {
    const element = this.dataset['00102299'];
    return (element?.Value.length === 1)
      ? this.dataset['00102299']?.Value[0]
      : this.dataset['00102299']?.Value;
  }

  get '00102299'(): Element {
    return this.dataset['00102299'];
  }

  // Patient Comments
  get PatientComments(): any {
    const element = this.dataset['00104000'];
    return (element?.Value.length === 1)
      ? this.dataset['00104000']?.Value[0]
      : this.dataset['00104000']?.Value;
  }

  get '00104000'(): Element {
    return this.dataset['00104000'];
  }

  // Examined Body Thickness
  get ExaminedBodyThickness(): any {
    const element = this.dataset['00109431'];
    return (element?.Value.length === 1)
      ? this.dataset['00109431']?.Value[0]
      : this.dataset['00109431']?.Value;
  }

  get '00109431'(): Element {
    return this.dataset['00109431'];
  }

  // Clinical Trial Sponsor Name
  get ClinicalTrialSponsorName(): any {
    const element = this.dataset['00120010'];
    return (element?.Value.length === 1)
      ? this.dataset['00120010']?.Value[0]
      : this.dataset['00120010']?.Value;
  }

  get '00120010'(): Element {
    return this.dataset['00120010'];
  }

  // Clinical Trial Protocol ID
  get ClinicalTrialProtocolID(): any {
    const element = this.dataset['00120020'];
    return (element?.Value.length === 1)
      ? this.dataset['00120020']?.Value[0]
      : this.dataset['00120020']?.Value;
  }

  get '00120020'(): Element {
    return this.dataset['00120020'];
  }

  // Clinical Trial Protocol Name
  get ClinicalTrialProtocolName(): any {
    const element = this.dataset['00120021'];
    return (element?.Value.length === 1)
      ? this.dataset['00120021']?.Value[0]
      : this.dataset['00120021']?.Value;
  }

  get '00120021'(): Element {
    return this.dataset['00120021'];
  }

  // Clinical Trial Site ID
  get ClinicalTrialSiteID(): any {
    const element = this.dataset['00120030'];
    return (element?.Value.length === 1)
      ? this.dataset['00120030']?.Value[0]
      : this.dataset['00120030']?.Value;
  }

  get '00120030'(): Element {
    return this.dataset['00120030'];
  }

  // Clinical Trial Site Name
  get ClinicalTrialSiteName(): any {
    const element = this.dataset['00120031'];
    return (element?.Value.length === 1)
      ? this.dataset['00120031']?.Value[0]
      : this.dataset['00120031']?.Value;
  }

  get '00120031'(): Element {
    return this.dataset['00120031'];
  }

  // Clinical Trial Subject ID
  get ClinicalTrialSubjectID(): any {
    const element = this.dataset['00120040'];
    return (element?.Value.length === 1)
      ? this.dataset['00120040']?.Value[0]
      : this.dataset['00120040']?.Value;
  }

  get '00120040'(): Element {
    return this.dataset['00120040'];
  }

  // Clinical Trial Subject Reading ID
  get ClinicalTrialSubjectReadingID(): any {
    const element = this.dataset['00120042'];
    return (element?.Value.length === 1)
      ? this.dataset['00120042']?.Value[0]
      : this.dataset['00120042']?.Value;
  }

  get '00120042'(): Element {
    return this.dataset['00120042'];
  }

  // Clinical Trial Time Point ID
  get ClinicalTrialTimePointID(): any {
    const element = this.dataset['00120050'];
    return (element?.Value.length === 1)
      ? this.dataset['00120050']?.Value[0]
      : this.dataset['00120050']?.Value;
  }

  get '00120050'(): Element {
    return this.dataset['00120050'];
  }

  // Clinical Trial Time Point Description
  get ClinicalTrialTimePointDescription(): any {
    const element = this.dataset['00120051'];
    return (element?.Value.length === 1)
      ? this.dataset['00120051']?.Value[0]
      : this.dataset['00120051']?.Value;
  }

  get '00120051'(): Element {
    return this.dataset['00120051'];
  }

  // Clinical Trial Coordinating Center Name
  get ClinicalTrialCoordinatingCenterName(): any {
    const element = this.dataset['00120060'];
    return (element?.Value.length === 1)
      ? this.dataset['00120060']?.Value[0]
      : this.dataset['00120060']?.Value;
  }

  get '00120060'(): Element {
    return this.dataset['00120060'];
  }

  // Patient Identity Removed
  get PatientIdentityRemoved(): any {
    const element = this.dataset['00120062'];
    return (element?.Value.length === 1)
      ? this.dataset['00120062']?.Value[0]
      : this.dataset['00120062']?.Value;
  }

  get '00120062'(): Element {
    return this.dataset['00120062'];
  }

  // De-identification Method
  get DeidentificationMethod(): any {
    const element = this.dataset['00120063'];
    return (element?.Value.length === 1)
      ? this.dataset['00120063']?.Value[0]
      : this.dataset['00120063']?.Value;
  }

  get '00120063'(): Element {
    return this.dataset['00120063'];
  }

  // De-identification Method Code Sequence
  get DeidentificationMethodCodeSequence(): any {
    const element = this.dataset['00120064'];
    return (element?.Value.length === 1)
      ? this.dataset['00120064']?.Value[0]
      : this.dataset['00120064']?.Value;
  }

  get '00120064'(): Element {
    return this.dataset['00120064'];
  }

  // Clinical Trial Series ID
  get ClinicalTrialSeriesID(): any {
    const element = this.dataset['00120071'];
    return (element?.Value.length === 1)
      ? this.dataset['00120071']?.Value[0]
      : this.dataset['00120071']?.Value;
  }

  get '00120071'(): Element {
    return this.dataset['00120071'];
  }

  // Clinical Trial Series Description
  get ClinicalTrialSeriesDescription(): any {
    const element = this.dataset['00120072'];
    return (element?.Value.length === 1)
      ? this.dataset['00120072']?.Value[0]
      : this.dataset['00120072']?.Value;
  }

  get '00120072'(): Element {
    return this.dataset['00120072'];
  }

  // Clinical Trial Protocol Ethics Committee Name
  get ClinicalTrialProtocolEthicsCommitteeName(): any {
    const element = this.dataset['00120081'];
    return (element?.Value.length === 1)
      ? this.dataset['00120081']?.Value[0]
      : this.dataset['00120081']?.Value;
  }

  get '00120081'(): Element {
    return this.dataset['00120081'];
  }

  // Clinical Trial Protocol Ethics Committee Approval Number
  get ClinicalTrialProtocolEthicsCommitteeApprovalNumber(): any {
    const element = this.dataset['00120082'];
    return (element?.Value.length === 1)
      ? this.dataset['00120082']?.Value[0]
      : this.dataset['00120082']?.Value;
  }

  get '00120082'(): Element {
    return this.dataset['00120082'];
  }

  // Consent for Clinical Trial Use Sequence
  get ConsentForClinicalTrialUseSequence(): any {
    const element = this.dataset['00120083'];
    return (element?.Value.length === 1)
      ? this.dataset['00120083']?.Value[0]
      : this.dataset['00120083']?.Value;
  }

  get '00120083'(): Element {
    return this.dataset['00120083'];
  }

  // Distribution Type
  get DistributionType(): any {
    const element = this.dataset['00120084'];
    return (element?.Value.length === 1)
      ? this.dataset['00120084']?.Value[0]
      : this.dataset['00120084']?.Value;
  }

  get '00120084'(): Element {
    return this.dataset['00120084'];
  }

  // Consent for Distribution Flag
  get ConsentForDistributionFlag(): any {
    const element = this.dataset['00120085'];
    return (element?.Value.length === 1)
      ? this.dataset['00120085']?.Value[0]
      : this.dataset['00120085']?.Value;
  }

  get '00120085'(): Element {
    return this.dataset['00120085'];
  }

  // CAD File Format
  get CADFileFormat(): any {
    const element = this.dataset['00140023'];
    return (element?.Value.length === 1)
      ? this.dataset['00140023']?.Value[0]
      : this.dataset['00140023']?.Value;
  }

  get '00140023'(): Element {
    return this.dataset['00140023'];
  }

  // Component Reference System
  get ComponentReferenceSystem(): any {
    const element = this.dataset['00140024'];
    return (element?.Value.length === 1)
      ? this.dataset['00140024']?.Value[0]
      : this.dataset['00140024']?.Value;
  }

  get '00140024'(): Element {
    return this.dataset['00140024'];
  }

  // Component Manufacturing Procedure
  get ComponentManufacturingProcedure(): any {
    const element = this.dataset['00140025'];
    return (element?.Value.length === 1)
      ? this.dataset['00140025']?.Value[0]
      : this.dataset['00140025']?.Value;
  }

  get '00140025'(): Element {
    return this.dataset['00140025'];
  }

  // Component Manufacturer
  get ComponentManufacturer(): any {
    const element = this.dataset['00140028'];
    return (element?.Value.length === 1)
      ? this.dataset['00140028']?.Value[0]
      : this.dataset['00140028']?.Value;
  }

  get '00140028'(): Element {
    return this.dataset['00140028'];
  }

  // Material Thickness
  get MaterialThickness(): any {
    const element = this.dataset['00140030'];
    return (element?.Value.length === 1)
      ? this.dataset['00140030']?.Value[0]
      : this.dataset['00140030']?.Value;
  }

  get '00140030'(): Element {
    return this.dataset['00140030'];
  }

  // Material Pipe Diameter
  get MaterialPipeDiameter(): any {
    const element = this.dataset['00140032'];
    return (element?.Value.length === 1)
      ? this.dataset['00140032']?.Value[0]
      : this.dataset['00140032']?.Value;
  }

  get '00140032'(): Element {
    return this.dataset['00140032'];
  }

  // Material Isolation Diameter
  get MaterialIsolationDiameter(): any {
    const element = this.dataset['00140034'];
    return (element?.Value.length === 1)
      ? this.dataset['00140034']?.Value[0]
      : this.dataset['00140034']?.Value;
  }

  get '00140034'(): Element {
    return this.dataset['00140034'];
  }

  // Material Grade
  get MaterialGrade(): any {
    const element = this.dataset['00140042'];
    return (element?.Value.length === 1)
      ? this.dataset['00140042']?.Value[0]
      : this.dataset['00140042']?.Value;
  }

  get '00140042'(): Element {
    return this.dataset['00140042'];
  }

  // Material Properties Description
  get MaterialPropertiesDescription(): any {
    const element = this.dataset['00140044'];
    return (element?.Value.length === 1)
      ? this.dataset['00140044']?.Value[0]
      : this.dataset['00140044']?.Value;
  }

  get '00140044'(): Element {
    return this.dataset['00140044'];
  }

  // Material Properties File Format (Retired)
  get MaterialPropertiesFileFormatRetired(): any {
    const element = this.dataset['00140045'];
    return (element?.Value.length === 1)
      ? this.dataset['00140045']?.Value[0]
      : this.dataset['00140045']?.Value;
  }

  get '00140045'(): Element {
    return this.dataset['00140045'];
  }

  // Material Notes
  get MaterialNotes(): any {
    const element = this.dataset['00140046'];
    return (element?.Value.length === 1)
      ? this.dataset['00140046']?.Value[0]
      : this.dataset['00140046']?.Value;
  }

  get '00140046'(): Element {
    return this.dataset['00140046'];
  }

  // Component Shape
  get ComponentShape(): any {
    const element = this.dataset['00140050'];
    return (element?.Value.length === 1)
      ? this.dataset['00140050']?.Value[0]
      : this.dataset['00140050']?.Value;
  }

  get '00140050'(): Element {
    return this.dataset['00140050'];
  }

  // Curvature Type
  get CurvatureType(): any {
    const element = this.dataset['00140052'];
    return (element?.Value.length === 1)
      ? this.dataset['00140052']?.Value[0]
      : this.dataset['00140052']?.Value;
  }

  get '00140052'(): Element {
    return this.dataset['00140052'];
  }

  // Outer Diameter
  get OuterDiameter(): any {
    const element = this.dataset['00140054'];
    return (element?.Value.length === 1)
      ? this.dataset['00140054']?.Value[0]
      : this.dataset['00140054']?.Value;
  }

  get '00140054'(): Element {
    return this.dataset['00140054'];
  }

  // Inner Diameter
  get InnerDiameter(): any {
    const element = this.dataset['00140056'];
    return (element?.Value.length === 1)
      ? this.dataset['00140056']?.Value[0]
      : this.dataset['00140056']?.Value;
  }

  get '00140056'(): Element {
    return this.dataset['00140056'];
  }

  // Actual Environmental Conditions
  get ActualEnvironmentalConditions(): any {
    const element = this.dataset['00141010'];
    return (element?.Value.length === 1)
      ? this.dataset['00141010']?.Value[0]
      : this.dataset['00141010']?.Value;
  }

  get '00141010'(): Element {
    return this.dataset['00141010'];
  }

  // Expiry Date
  get ExpiryDate(): any {
    const element = this.dataset['00141020'];
    return (element?.Value.length === 1)
      ? this.dataset['00141020']?.Value[0]
      : this.dataset['00141020']?.Value;
  }

  get '00141020'(): Element {
    return this.dataset['00141020'];
  }

  // Environmental Conditions
  get EnvironmentalConditions(): any {
    const element = this.dataset['00141040'];
    return (element?.Value.length === 1)
      ? this.dataset['00141040']?.Value[0]
      : this.dataset['00141040']?.Value;
  }

  get '00141040'(): Element {
    return this.dataset['00141040'];
  }

  // Evaluator Sequence
  get EvaluatorSequence(): any {
    const element = this.dataset['00142002'];
    return (element?.Value.length === 1)
      ? this.dataset['00142002']?.Value[0]
      : this.dataset['00142002']?.Value;
  }

  get '00142002'(): Element {
    return this.dataset['00142002'];
  }

  // Evaluator Number
  get EvaluatorNumber(): any {
    const element = this.dataset['00142004'];
    return (element?.Value.length === 1)
      ? this.dataset['00142004']?.Value[0]
      : this.dataset['00142004']?.Value;
  }

  get '00142004'(): Element {
    return this.dataset['00142004'];
  }

  // Evaluator Name
  get EvaluatorName(): any {
    const element = this.dataset['00142006'];
    return (element?.Value.length === 1)
      ? this.dataset['00142006']?.Value[0]
      : this.dataset['00142006']?.Value;
  }

  get '00142006'(): Element {
    return this.dataset['00142006'];
  }

  // Evaluation Attempt
  get EvaluationAttempt(): any {
    const element = this.dataset['00142008'];
    return (element?.Value.length === 1)
      ? this.dataset['00142008']?.Value[0]
      : this.dataset['00142008']?.Value;
  }

  get '00142008'(): Element {
    return this.dataset['00142008'];
  }

  // Indication Sequence
  get IndicationSequence(): any {
    const element = this.dataset['00142012'];
    return (element?.Value.length === 1)
      ? this.dataset['00142012']?.Value[0]
      : this.dataset['00142012']?.Value;
  }

  get '00142012'(): Element {
    return this.dataset['00142012'];
  }

  // Indication Number
  get IndicationNumber(): any {
    const element = this.dataset['00142014'];
    return (element?.Value.length === 1)
      ? this.dataset['00142014']?.Value[0]
      : this.dataset['00142014']?.Value;
  }

  get '00142014'(): Element {
    return this.dataset['00142014'];
  }

  // Indication Label
  get IndicationLabel(): any {
    const element = this.dataset['00142016'];
    return (element?.Value.length === 1)
      ? this.dataset['00142016']?.Value[0]
      : this.dataset['00142016']?.Value;
  }

  get '00142016'(): Element {
    return this.dataset['00142016'];
  }

  // Indication Description
  get IndicationDescription(): any {
    const element = this.dataset['00142018'];
    return (element?.Value.length === 1)
      ? this.dataset['00142018']?.Value[0]
      : this.dataset['00142018']?.Value;
  }

  get '00142018'(): Element {
    return this.dataset['00142018'];
  }

  // Indication Type
  get IndicationType(): any {
    const element = this.dataset['0014201A'];
    return (element?.Value.length === 1)
      ? this.dataset['0014201A']?.Value[0]
      : this.dataset['0014201A']?.Value;
  }

  get '0014201A'(): Element {
    return this.dataset['0014201A'];
  }

  // Indication Disposition
  get IndicationDisposition(): any {
    const element = this.dataset['0014201C'];
    return (element?.Value.length === 1)
      ? this.dataset['0014201C']?.Value[0]
      : this.dataset['0014201C']?.Value;
  }

  get '0014201C'(): Element {
    return this.dataset['0014201C'];
  }

  // Indication ROI Sequence
  get IndicationROISequence(): any {
    const element = this.dataset['0014201E'];
    return (element?.Value.length === 1)
      ? this.dataset['0014201E']?.Value[0]
      : this.dataset['0014201E']?.Value;
  }

  get '0014201E'(): Element {
    return this.dataset['0014201E'];
  }

  // Indication Physical Property Sequence
  get IndicationPhysicalPropertySequence(): any {
    const element = this.dataset['00142030'];
    return (element?.Value.length === 1)
      ? this.dataset['00142030']?.Value[0]
      : this.dataset['00142030']?.Value;
  }

  get '00142030'(): Element {
    return this.dataset['00142030'];
  }

  // Property Label
  get PropertyLabel(): any {
    const element = this.dataset['00142032'];
    return (element?.Value.length === 1)
      ? this.dataset['00142032']?.Value[0]
      : this.dataset['00142032']?.Value;
  }

  get '00142032'(): Element {
    return this.dataset['00142032'];
  }

  // Coordinate System Number of Axes
  get CoordinateSystemNumberOfAxes(): any {
    const element = this.dataset['00142202'];
    return (element?.Value.length === 1)
      ? this.dataset['00142202']?.Value[0]
      : this.dataset['00142202']?.Value;
  }

  get '00142202'(): Element {
    return this.dataset['00142202'];
  }

  // Coordinate System Axes Sequence
  get CoordinateSystemAxesSequence(): any {
    const element = this.dataset['00142204'];
    return (element?.Value.length === 1)
      ? this.dataset['00142204']?.Value[0]
      : this.dataset['00142204']?.Value;
  }

  get '00142204'(): Element {
    return this.dataset['00142204'];
  }

  // Coordinate System Axis Description
  get CoordinateSystemAxisDescription(): any {
    const element = this.dataset['00142206'];
    return (element?.Value.length === 1)
      ? this.dataset['00142206']?.Value[0]
      : this.dataset['00142206']?.Value;
  }

  get '00142206'(): Element {
    return this.dataset['00142206'];
  }

  // Coordinate System Data Set Mapping
  get CoordinateSystemDataSetMapping(): any {
    const element = this.dataset['00142208'];
    return (element?.Value.length === 1)
      ? this.dataset['00142208']?.Value[0]
      : this.dataset['00142208']?.Value;
  }

  get '00142208'(): Element {
    return this.dataset['00142208'];
  }

  // Coordinate System Axis Number
  get CoordinateSystemAxisNumber(): any {
    const element = this.dataset['0014220A'];
    return (element?.Value.length === 1)
      ? this.dataset['0014220A']?.Value[0]
      : this.dataset['0014220A']?.Value;
  }

  get '0014220A'(): Element {
    return this.dataset['0014220A'];
  }

  // Coordinate System Axis Type
  get CoordinateSystemAxisType(): any {
    const element = this.dataset['0014220C'];
    return (element?.Value.length === 1)
      ? this.dataset['0014220C']?.Value[0]
      : this.dataset['0014220C']?.Value;
  }

  get '0014220C'(): Element {
    return this.dataset['0014220C'];
  }

  // Coordinate System Axis Units
  get CoordinateSystemAxisUnits(): any {
    const element = this.dataset['0014220E'];
    return (element?.Value.length === 1)
      ? this.dataset['0014220E']?.Value[0]
      : this.dataset['0014220E']?.Value;
  }

  get '0014220E'(): Element {
    return this.dataset['0014220E'];
  }

  // Coordinate System Axis Values
  get CoordinateSystemAxisValues(): any {
    const element = this.dataset['00142210'];
    return (element?.Value.length === 1)
      ? this.dataset['00142210']?.Value[0]
      : this.dataset['00142210']?.Value;
  }

  get '00142210'(): Element {
    return this.dataset['00142210'];
  }

  // Coordinate System Transform Sequence
  get CoordinateSystemTransformSequence(): any {
    const element = this.dataset['00142220'];
    return (element?.Value.length === 1)
      ? this.dataset['00142220']?.Value[0]
      : this.dataset['00142220']?.Value;
  }

  get '00142220'(): Element {
    return this.dataset['00142220'];
  }

  // Transform Description
  get TransformDescription(): any {
    const element = this.dataset['00142222'];
    return (element?.Value.length === 1)
      ? this.dataset['00142222']?.Value[0]
      : this.dataset['00142222']?.Value;
  }

  get '00142222'(): Element {
    return this.dataset['00142222'];
  }

  // Transform Number of Axes
  get TransformNumberOfAxes(): any {
    const element = this.dataset['00142224'];
    return (element?.Value.length === 1)
      ? this.dataset['00142224']?.Value[0]
      : this.dataset['00142224']?.Value;
  }

  get '00142224'(): Element {
    return this.dataset['00142224'];
  }

  // Transform Order of Axes
  get TransformOrderOfAxes(): any {
    const element = this.dataset['00142226'];
    return (element?.Value.length === 1)
      ? this.dataset['00142226']?.Value[0]
      : this.dataset['00142226']?.Value;
  }

  get '00142226'(): Element {
    return this.dataset['00142226'];
  }

  // Transformed Axis Units
  get TransformedAxisUnits(): any {
    const element = this.dataset['00142228'];
    return (element?.Value.length === 1)
      ? this.dataset['00142228']?.Value[0]
      : this.dataset['00142228']?.Value;
  }

  get '00142228'(): Element {
    return this.dataset['00142228'];
  }

  // Coordinate System Transform Rotation and Scale Matrix
  get CoordinateSystemTransformRotationAndScaleMatrix(): any {
    const element = this.dataset['0014222A'];
    return (element?.Value.length === 1)
      ? this.dataset['0014222A']?.Value[0]
      : this.dataset['0014222A']?.Value;
  }

  get '0014222A'(): Element {
    return this.dataset['0014222A'];
  }

  // Coordinate System Transform Translation Matrix
  get CoordinateSystemTransformTranslationMatrix(): any {
    const element = this.dataset['0014222C'];
    return (element?.Value.length === 1)
      ? this.dataset['0014222C']?.Value[0]
      : this.dataset['0014222C']?.Value;
  }

  get '0014222C'(): Element {
    return this.dataset['0014222C'];
  }

  // Internal Detector Frame Time
  get InternalDetectorFrameTime(): any {
    const element = this.dataset['00143011'];
    return (element?.Value.length === 1)
      ? this.dataset['00143011']?.Value[0]
      : this.dataset['00143011']?.Value;
  }

  get '00143011'(): Element {
    return this.dataset['00143011'];
  }

  // Number of Frames Integrated
  get NumberOfFramesIntegrated(): any {
    const element = this.dataset['00143012'];
    return (element?.Value.length === 1)
      ? this.dataset['00143012']?.Value[0]
      : this.dataset['00143012']?.Value;
  }

  get '00143012'(): Element {
    return this.dataset['00143012'];
  }

  // Detector Temperature Sequence
  get DetectorTemperatureSequence(): any {
    const element = this.dataset['00143020'];
    return (element?.Value.length === 1)
      ? this.dataset['00143020']?.Value[0]
      : this.dataset['00143020']?.Value;
  }

  get '00143020'(): Element {
    return this.dataset['00143020'];
  }

  // Sensor Name
  get SensorName(): any {
    const element = this.dataset['00143022'];
    return (element?.Value.length === 1)
      ? this.dataset['00143022']?.Value[0]
      : this.dataset['00143022']?.Value;
  }

  get '00143022'(): Element {
    return this.dataset['00143022'];
  }

  // Horizontal Offset of Sensor
  get HorizontalOffsetOfSensor(): any {
    const element = this.dataset['00143024'];
    return (element?.Value.length === 1)
      ? this.dataset['00143024']?.Value[0]
      : this.dataset['00143024']?.Value;
  }

  get '00143024'(): Element {
    return this.dataset['00143024'];
  }

  // Vertical Offset of Sensor
  get VerticalOffsetOfSensor(): any {
    const element = this.dataset['00143026'];
    return (element?.Value.length === 1)
      ? this.dataset['00143026']?.Value[0]
      : this.dataset['00143026']?.Value;
  }

  get '00143026'(): Element {
    return this.dataset['00143026'];
  }

  // Sensor Temperature
  get SensorTemperature(): any {
    const element = this.dataset['00143028'];
    return (element?.Value.length === 1)
      ? this.dataset['00143028']?.Value[0]
      : this.dataset['00143028']?.Value;
  }

  get '00143028'(): Element {
    return this.dataset['00143028'];
  }

  // Dark Current Sequence
  get DarkCurrentSequence(): any {
    const element = this.dataset['00143040'];
    return (element?.Value.length === 1)
      ? this.dataset['00143040']?.Value[0]
      : this.dataset['00143040']?.Value;
  }

  get '00143040'(): Element {
    return this.dataset['00143040'];
  }

  // Dark Current Counts
  get DarkCurrentCounts(): any {
    const element = this.dataset['00143050'];
    return (element?.Value.length === 1)
      ? this.dataset['00143050']?.Value[0]
      : this.dataset['00143050']?.Value;
  }

  get '00143050'(): Element {
    return this.dataset['00143050'];
  }

  // Gain Correction Reference Sequence
  get GainCorrectionReferenceSequence(): any {
    const element = this.dataset['00143060'];
    return (element?.Value.length === 1)
      ? this.dataset['00143060']?.Value[0]
      : this.dataset['00143060']?.Value;
  }

  get '00143060'(): Element {
    return this.dataset['00143060'];
  }

  // Air Counts
  get AirCounts(): any {
    const element = this.dataset['00143070'];
    return (element?.Value.length === 1)
      ? this.dataset['00143070']?.Value[0]
      : this.dataset['00143070']?.Value;
  }

  get '00143070'(): Element {
    return this.dataset['00143070'];
  }

  // KV Used in Gain Calibration
  get KVUsedInGainCalibration(): any {
    const element = this.dataset['00143071'];
    return (element?.Value.length === 1)
      ? this.dataset['00143071']?.Value[0]
      : this.dataset['00143071']?.Value;
  }

  get '00143071'(): Element {
    return this.dataset['00143071'];
  }

  // MA Used in Gain Calibration
  get MAUsedInGainCalibration(): any {
    const element = this.dataset['00143072'];
    return (element?.Value.length === 1)
      ? this.dataset['00143072']?.Value[0]
      : this.dataset['00143072']?.Value;
  }

  get '00143072'(): Element {
    return this.dataset['00143072'];
  }

  // Number of Frames Used for Integration
  get NumberOfFramesUsedForIntegration(): any {
    const element = this.dataset['00143073'];
    return (element?.Value.length === 1)
      ? this.dataset['00143073']?.Value[0]
      : this.dataset['00143073']?.Value;
  }

  get '00143073'(): Element {
    return this.dataset['00143073'];
  }

  // Filter Material Used in Gain Calibration
  get FilterMaterialUsedInGainCalibration(): any {
    const element = this.dataset['00143074'];
    return (element?.Value.length === 1)
      ? this.dataset['00143074']?.Value[0]
      : this.dataset['00143074']?.Value;
  }

  get '00143074'(): Element {
    return this.dataset['00143074'];
  }

  // Filter Thickness Used in Gain Calibration
  get FilterThicknessUsedInGainCalibration(): any {
    const element = this.dataset['00143075'];
    return (element?.Value.length === 1)
      ? this.dataset['00143075']?.Value[0]
      : this.dataset['00143075']?.Value;
  }

  get '00143075'(): Element {
    return this.dataset['00143075'];
  }

  // Date of Gain Calibration
  get DateOfGainCalibration(): any {
    const element = this.dataset['00143076'];
    return (element?.Value.length === 1)
      ? this.dataset['00143076']?.Value[0]
      : this.dataset['00143076']?.Value;
  }

  get '00143076'(): Element {
    return this.dataset['00143076'];
  }

  // Time of Gain Calibration
  get TimeOfGainCalibration(): any {
    const element = this.dataset['00143077'];
    return (element?.Value.length === 1)
      ? this.dataset['00143077']?.Value[0]
      : this.dataset['00143077']?.Value;
  }

  get '00143077'(): Element {
    return this.dataset['00143077'];
  }

  // Bad Pixel Image
  get BadPixelImage(): any {
    const element = this.dataset['00143080'];
    return (element?.Value.length === 1)
      ? this.dataset['00143080']?.Value[0]
      : this.dataset['00143080']?.Value;
  }

  get '00143080'(): Element {
    return this.dataset['00143080'];
  }

  // Calibration Notes
  get CalibrationNotes(): any {
    const element = this.dataset['00143099'];
    return (element?.Value.length === 1)
      ? this.dataset['00143099']?.Value[0]
      : this.dataset['00143099']?.Value;
  }

  get '00143099'(): Element {
    return this.dataset['00143099'];
  }

  // Pulser Equipment Sequence
  get PulserEquipmentSequence(): any {
    const element = this.dataset['00144002'];
    return (element?.Value.length === 1)
      ? this.dataset['00144002']?.Value[0]
      : this.dataset['00144002']?.Value;
  }

  get '00144002'(): Element {
    return this.dataset['00144002'];
  }

  // Pulser Type
  get PulserType(): any {
    const element = this.dataset['00144004'];
    return (element?.Value.length === 1)
      ? this.dataset['00144004']?.Value[0]
      : this.dataset['00144004']?.Value;
  }

  get '00144004'(): Element {
    return this.dataset['00144004'];
  }

  // Pulser Notes
  get PulserNotes(): any {
    const element = this.dataset['00144006'];
    return (element?.Value.length === 1)
      ? this.dataset['00144006']?.Value[0]
      : this.dataset['00144006']?.Value;
  }

  get '00144006'(): Element {
    return this.dataset['00144006'];
  }

  // Receiver Equipment Sequence
  get ReceiverEquipmentSequence(): any {
    const element = this.dataset['00144008'];
    return (element?.Value.length === 1)
      ? this.dataset['00144008']?.Value[0]
      : this.dataset['00144008']?.Value;
  }

  get '00144008'(): Element {
    return this.dataset['00144008'];
  }

  // Amplifier Type
  get AmplifierType(): any {
    const element = this.dataset['0014400A'];
    return (element?.Value.length === 1)
      ? this.dataset['0014400A']?.Value[0]
      : this.dataset['0014400A']?.Value;
  }

  get '0014400A'(): Element {
    return this.dataset['0014400A'];
  }

  // Receiver Notes
  get ReceiverNotes(): any {
    const element = this.dataset['0014400C'];
    return (element?.Value.length === 1)
      ? this.dataset['0014400C']?.Value[0]
      : this.dataset['0014400C']?.Value;
  }

  get '0014400C'(): Element {
    return this.dataset['0014400C'];
  }

  // Pre-Amplifier Equipment Sequence
  get PreAmplifierEquipmentSequence(): any {
    const element = this.dataset['0014400E'];
    return (element?.Value.length === 1)
      ? this.dataset['0014400E']?.Value[0]
      : this.dataset['0014400E']?.Value;
  }

  get '0014400E'(): Element {
    return this.dataset['0014400E'];
  }

  // Pre-Amplifier Notes
  get PreAmplifierNotes(): any {
    const element = this.dataset['0014400F'];
    return (element?.Value.length === 1)
      ? this.dataset['0014400F']?.Value[0]
      : this.dataset['0014400F']?.Value;
  }

  get '0014400F'(): Element {
    return this.dataset['0014400F'];
  }

  // Transmit Transducer Sequence
  get TransmitTransducerSequence(): any {
    const element = this.dataset['00144010'];
    return (element?.Value.length === 1)
      ? this.dataset['00144010']?.Value[0]
      : this.dataset['00144010']?.Value;
  }

  get '00144010'(): Element {
    return this.dataset['00144010'];
  }

  // Receive Transducer Sequence
  get ReceiveTransducerSequence(): any {
    const element = this.dataset['00144011'];
    return (element?.Value.length === 1)
      ? this.dataset['00144011']?.Value[0]
      : this.dataset['00144011']?.Value;
  }

  get '00144011'(): Element {
    return this.dataset['00144011'];
  }

  // Number of Elements
  get NumberOfElements(): any {
    const element = this.dataset['00144012'];
    return (element?.Value.length === 1)
      ? this.dataset['00144012']?.Value[0]
      : this.dataset['00144012']?.Value;
  }

  get '00144012'(): Element {
    return this.dataset['00144012'];
  }

  // Element Shape
  get ElementShape(): any {
    const element = this.dataset['00144013'];
    return (element?.Value.length === 1)
      ? this.dataset['00144013']?.Value[0]
      : this.dataset['00144013']?.Value;
  }

  get '00144013'(): Element {
    return this.dataset['00144013'];
  }

  // Element Dimension A
  get ElementDimensionA(): any {
    const element = this.dataset['00144014'];
    return (element?.Value.length === 1)
      ? this.dataset['00144014']?.Value[0]
      : this.dataset['00144014']?.Value;
  }

  get '00144014'(): Element {
    return this.dataset['00144014'];
  }

  // Element Dimension B
  get ElementDimensionB(): any {
    const element = this.dataset['00144015'];
    return (element?.Value.length === 1)
      ? this.dataset['00144015']?.Value[0]
      : this.dataset['00144015']?.Value;
  }

  get '00144015'(): Element {
    return this.dataset['00144015'];
  }

  // Element Pitch A
  get ElementPitchA(): any {
    const element = this.dataset['00144016'];
    return (element?.Value.length === 1)
      ? this.dataset['00144016']?.Value[0]
      : this.dataset['00144016']?.Value;
  }

  get '00144016'(): Element {
    return this.dataset['00144016'];
  }

  // Measured Beam Dimension A
  get MeasuredBeamDimensionA(): any {
    const element = this.dataset['00144017'];
    return (element?.Value.length === 1)
      ? this.dataset['00144017']?.Value[0]
      : this.dataset['00144017']?.Value;
  }

  get '00144017'(): Element {
    return this.dataset['00144017'];
  }

  // Measured Beam Dimension B
  get MeasuredBeamDimensionB(): any {
    const element = this.dataset['00144018'];
    return (element?.Value.length === 1)
      ? this.dataset['00144018']?.Value[0]
      : this.dataset['00144018']?.Value;
  }

  get '00144018'(): Element {
    return this.dataset['00144018'];
  }

  // Location of Measured Beam Diameter
  get LocationOfMeasuredBeamDiameter(): any {
    const element = this.dataset['00144019'];
    return (element?.Value.length === 1)
      ? this.dataset['00144019']?.Value[0]
      : this.dataset['00144019']?.Value;
  }

  get '00144019'(): Element {
    return this.dataset['00144019'];
  }

  // Nominal Frequency
  get NominalFrequency(): any {
    const element = this.dataset['0014401A'];
    return (element?.Value.length === 1)
      ? this.dataset['0014401A']?.Value[0]
      : this.dataset['0014401A']?.Value;
  }

  get '0014401A'(): Element {
    return this.dataset['0014401A'];
  }

  // Measured Center Frequency
  get MeasuredCenterFrequency(): any {
    const element = this.dataset['0014401B'];
    return (element?.Value.length === 1)
      ? this.dataset['0014401B']?.Value[0]
      : this.dataset['0014401B']?.Value;
  }

  get '0014401B'(): Element {
    return this.dataset['0014401B'];
  }

  // Measured Bandwidth
  get MeasuredBandwidth(): any {
    const element = this.dataset['0014401C'];
    return (element?.Value.length === 1)
      ? this.dataset['0014401C']?.Value[0]
      : this.dataset['0014401C']?.Value;
  }

  get '0014401C'(): Element {
    return this.dataset['0014401C'];
  }

  // Element Pitch B
  get ElementPitchB(): any {
    const element = this.dataset['0014401D'];
    return (element?.Value.length === 1)
      ? this.dataset['0014401D']?.Value[0]
      : this.dataset['0014401D']?.Value;
  }

  get '0014401D'(): Element {
    return this.dataset['0014401D'];
  }

  // Pulser Settings Sequence
  get PulserSettingsSequence(): any {
    const element = this.dataset['00144020'];
    return (element?.Value.length === 1)
      ? this.dataset['00144020']?.Value[0]
      : this.dataset['00144020']?.Value;
  }

  get '00144020'(): Element {
    return this.dataset['00144020'];
  }

  // Pulse Width
  get PulseWidth(): any {
    const element = this.dataset['00144022'];
    return (element?.Value.length === 1)
      ? this.dataset['00144022']?.Value[0]
      : this.dataset['00144022']?.Value;
  }

  get '00144022'(): Element {
    return this.dataset['00144022'];
  }

  // Excitation Frequency
  get ExcitationFrequency(): any {
    const element = this.dataset['00144024'];
    return (element?.Value.length === 1)
      ? this.dataset['00144024']?.Value[0]
      : this.dataset['00144024']?.Value;
  }

  get '00144024'(): Element {
    return this.dataset['00144024'];
  }

  // Modulation Type
  get ModulationType(): any {
    const element = this.dataset['00144026'];
    return (element?.Value.length === 1)
      ? this.dataset['00144026']?.Value[0]
      : this.dataset['00144026']?.Value;
  }

  get '00144026'(): Element {
    return this.dataset['00144026'];
  }

  // Damping
  get Damping(): any {
    const element = this.dataset['00144028'];
    return (element?.Value.length === 1)
      ? this.dataset['00144028']?.Value[0]
      : this.dataset['00144028']?.Value;
  }

  get '00144028'(): Element {
    return this.dataset['00144028'];
  }

  // Receiver Settings Sequence
  get ReceiverSettingsSequence(): any {
    const element = this.dataset['00144030'];
    return (element?.Value.length === 1)
      ? this.dataset['00144030']?.Value[0]
      : this.dataset['00144030']?.Value;
  }

  get '00144030'(): Element {
    return this.dataset['00144030'];
  }

  // Acquired Soundpath Length
  get AcquiredSoundpathLength(): any {
    const element = this.dataset['00144031'];
    return (element?.Value.length === 1)
      ? this.dataset['00144031']?.Value[0]
      : this.dataset['00144031']?.Value;
  }

  get '00144031'(): Element {
    return this.dataset['00144031'];
  }

  // Acquisition Compression Type
  get AcquisitionCompressionType(): any {
    const element = this.dataset['00144032'];
    return (element?.Value.length === 1)
      ? this.dataset['00144032']?.Value[0]
      : this.dataset['00144032']?.Value;
  }

  get '00144032'(): Element {
    return this.dataset['00144032'];
  }

  // Acquisition Sample Size
  get AcquisitionSampleSize(): any {
    const element = this.dataset['00144033'];
    return (element?.Value.length === 1)
      ? this.dataset['00144033']?.Value[0]
      : this.dataset['00144033']?.Value;
  }

  get '00144033'(): Element {
    return this.dataset['00144033'];
  }

  // Rectifier Smoothing
  get RectifierSmoothing(): any {
    const element = this.dataset['00144034'];
    return (element?.Value.length === 1)
      ? this.dataset['00144034']?.Value[0]
      : this.dataset['00144034']?.Value;
  }

  get '00144034'(): Element {
    return this.dataset['00144034'];
  }

  // DAC Sequence
  get DACSequence(): any {
    const element = this.dataset['00144035'];
    return (element?.Value.length === 1)
      ? this.dataset['00144035']?.Value[0]
      : this.dataset['00144035']?.Value;
  }

  get '00144035'(): Element {
    return this.dataset['00144035'];
  }

  // DAC Type
  get DACType(): any {
    const element = this.dataset['00144036'];
    return (element?.Value.length === 1)
      ? this.dataset['00144036']?.Value[0]
      : this.dataset['00144036']?.Value;
  }

  get '00144036'(): Element {
    return this.dataset['00144036'];
  }

  // DAC Gain Points
  get DACGainPoints(): any {
    const element = this.dataset['00144038'];
    return (element?.Value.length === 1)
      ? this.dataset['00144038']?.Value[0]
      : this.dataset['00144038']?.Value;
  }

  get '00144038'(): Element {
    return this.dataset['00144038'];
  }

  // DAC Time Points
  get DACTimePoints(): any {
    const element = this.dataset['0014403A'];
    return (element?.Value.length === 1)
      ? this.dataset['0014403A']?.Value[0]
      : this.dataset['0014403A']?.Value;
  }

  get '0014403A'(): Element {
    return this.dataset['0014403A'];
  }

  // DAC Amplitude
  get DACAmplitude(): any {
    const element = this.dataset['0014403C'];
    return (element?.Value.length === 1)
      ? this.dataset['0014403C']?.Value[0]
      : this.dataset['0014403C']?.Value;
  }

  get '0014403C'(): Element {
    return this.dataset['0014403C'];
  }

  // Pre-Amplifier Settings Sequence
  get PreAmplifierSettingsSequence(): any {
    const element = this.dataset['00144040'];
    return (element?.Value.length === 1)
      ? this.dataset['00144040']?.Value[0]
      : this.dataset['00144040']?.Value;
  }

  get '00144040'(): Element {
    return this.dataset['00144040'];
  }

  // Transmit Transducer Settings Sequence
  get TransmitTransducerSettingsSequence(): any {
    const element = this.dataset['00144050'];
    return (element?.Value.length === 1)
      ? this.dataset['00144050']?.Value[0]
      : this.dataset['00144050']?.Value;
  }

  get '00144050'(): Element {
    return this.dataset['00144050'];
  }

  // Receive Transducer Settings Sequence
  get ReceiveTransducerSettingsSequence(): any {
    const element = this.dataset['00144051'];
    return (element?.Value.length === 1)
      ? this.dataset['00144051']?.Value[0]
      : this.dataset['00144051']?.Value;
  }

  get '00144051'(): Element {
    return this.dataset['00144051'];
  }

  // Incident Angle
  get IncidentAngle(): any {
    const element = this.dataset['00144052'];
    return (element?.Value.length === 1)
      ? this.dataset['00144052']?.Value[0]
      : this.dataset['00144052']?.Value;
  }

  get '00144052'(): Element {
    return this.dataset['00144052'];
  }

  // Coupling Technique
  get CouplingTechnique(): any {
    const element = this.dataset['00144054'];
    return (element?.Value.length === 1)
      ? this.dataset['00144054']?.Value[0]
      : this.dataset['00144054']?.Value;
  }

  get '00144054'(): Element {
    return this.dataset['00144054'];
  }

  // Coupling Medium
  get CouplingMedium(): any {
    const element = this.dataset['00144056'];
    return (element?.Value.length === 1)
      ? this.dataset['00144056']?.Value[0]
      : this.dataset['00144056']?.Value;
  }

  get '00144056'(): Element {
    return this.dataset['00144056'];
  }

  // Coupling Velocity
  get CouplingVelocity(): any {
    const element = this.dataset['00144057'];
    return (element?.Value.length === 1)
      ? this.dataset['00144057']?.Value[0]
      : this.dataset['00144057']?.Value;
  }

  get '00144057'(): Element {
    return this.dataset['00144057'];
  }

  // Probe Center Location X
  get ProbeCenterLocationX(): any {
    const element = this.dataset['00144058'];
    return (element?.Value.length === 1)
      ? this.dataset['00144058']?.Value[0]
      : this.dataset['00144058']?.Value;
  }

  get '00144058'(): Element {
    return this.dataset['00144058'];
  }

  // Probe Center Location Z
  get ProbeCenterLocationZ(): any {
    const element = this.dataset['00144059'];
    return (element?.Value.length === 1)
      ? this.dataset['00144059']?.Value[0]
      : this.dataset['00144059']?.Value;
  }

  get '00144059'(): Element {
    return this.dataset['00144059'];
  }

  // Sound Path Length
  get SoundPathLength(): any {
    const element = this.dataset['0014405A'];
    return (element?.Value.length === 1)
      ? this.dataset['0014405A']?.Value[0]
      : this.dataset['0014405A']?.Value;
  }

  get '0014405A'(): Element {
    return this.dataset['0014405A'];
  }

  // Delay Law Identifier
  get DelayLawIdentifier(): any {
    const element = this.dataset['0014405C'];
    return (element?.Value.length === 1)
      ? this.dataset['0014405C']?.Value[0]
      : this.dataset['0014405C']?.Value;
  }

  get '0014405C'(): Element {
    return this.dataset['0014405C'];
  }

  // Gate Settings Sequence
  get GateSettingsSequence(): any {
    const element = this.dataset['00144060'];
    return (element?.Value.length === 1)
      ? this.dataset['00144060']?.Value[0]
      : this.dataset['00144060']?.Value;
  }

  get '00144060'(): Element {
    return this.dataset['00144060'];
  }

  // Gate Threshold
  get GateThreshold(): any {
    const element = this.dataset['00144062'];
    return (element?.Value.length === 1)
      ? this.dataset['00144062']?.Value[0]
      : this.dataset['00144062']?.Value;
  }

  get '00144062'(): Element {
    return this.dataset['00144062'];
  }

  // Velocity of Sound
  get VelocityOfSound(): any {
    const element = this.dataset['00144064'];
    return (element?.Value.length === 1)
      ? this.dataset['00144064']?.Value[0]
      : this.dataset['00144064']?.Value;
  }

  get '00144064'(): Element {
    return this.dataset['00144064'];
  }

  // Calibration Settings Sequence
  get CalibrationSettingsSequence(): any {
    const element = this.dataset['00144070'];
    return (element?.Value.length === 1)
      ? this.dataset['00144070']?.Value[0]
      : this.dataset['00144070']?.Value;
  }

  get '00144070'(): Element {
    return this.dataset['00144070'];
  }

  // Calibration Procedure
  get CalibrationProcedure(): any {
    const element = this.dataset['00144072'];
    return (element?.Value.length === 1)
      ? this.dataset['00144072']?.Value[0]
      : this.dataset['00144072']?.Value;
  }

  get '00144072'(): Element {
    return this.dataset['00144072'];
  }

  // Procedure Version
  get ProcedureVersion(): any {
    const element = this.dataset['00144074'];
    return (element?.Value.length === 1)
      ? this.dataset['00144074']?.Value[0]
      : this.dataset['00144074']?.Value;
  }

  get '00144074'(): Element {
    return this.dataset['00144074'];
  }

  // Procedure Creation Date
  get ProcedureCreationDate(): any {
    const element = this.dataset['00144076'];
    return (element?.Value.length === 1)
      ? this.dataset['00144076']?.Value[0]
      : this.dataset['00144076']?.Value;
  }

  get '00144076'(): Element {
    return this.dataset['00144076'];
  }

  // Procedure Expiration Date
  get ProcedureExpirationDate(): any {
    const element = this.dataset['00144078'];
    return (element?.Value.length === 1)
      ? this.dataset['00144078']?.Value[0]
      : this.dataset['00144078']?.Value;
  }

  get '00144078'(): Element {
    return this.dataset['00144078'];
  }

  // Procedure Last Modified Date
  get ProcedureLastModifiedDate(): any {
    const element = this.dataset['0014407A'];
    return (element?.Value.length === 1)
      ? this.dataset['0014407A']?.Value[0]
      : this.dataset['0014407A']?.Value;
  }

  get '0014407A'(): Element {
    return this.dataset['0014407A'];
  }

  // Calibration Time
  get CalibrationTime(): any {
    const element = this.dataset['0014407C'];
    return (element?.Value.length === 1)
      ? this.dataset['0014407C']?.Value[0]
      : this.dataset['0014407C']?.Value;
  }

  get '0014407C'(): Element {
    return this.dataset['0014407C'];
  }

  // Calibration Date
  get CalibrationDate(): any {
    const element = this.dataset['0014407E'];
    return (element?.Value.length === 1)
      ? this.dataset['0014407E']?.Value[0]
      : this.dataset['0014407E']?.Value;
  }

  get '0014407E'(): Element {
    return this.dataset['0014407E'];
  }

  // Probe Drive Equipment Sequence
  get ProbeDriveEquipmentSequence(): any {
    const element = this.dataset['00144080'];
    return (element?.Value.length === 1)
      ? this.dataset['00144080']?.Value[0]
      : this.dataset['00144080']?.Value;
  }

  get '00144080'(): Element {
    return this.dataset['00144080'];
  }

  // Drive Type
  get DriveType(): any {
    const element = this.dataset['00144081'];
    return (element?.Value.length === 1)
      ? this.dataset['00144081']?.Value[0]
      : this.dataset['00144081']?.Value;
  }

  get '00144081'(): Element {
    return this.dataset['00144081'];
  }

  // Probe Drive Notes
  get ProbeDriveNotes(): any {
    const element = this.dataset['00144082'];
    return (element?.Value.length === 1)
      ? this.dataset['00144082']?.Value[0]
      : this.dataset['00144082']?.Value;
  }

  get '00144082'(): Element {
    return this.dataset['00144082'];
  }

  // Drive Probe Sequence
  get DriveProbeSequence(): any {
    const element = this.dataset['00144083'];
    return (element?.Value.length === 1)
      ? this.dataset['00144083']?.Value[0]
      : this.dataset['00144083']?.Value;
  }

  get '00144083'(): Element {
    return this.dataset['00144083'];
  }

  // Probe Inductance
  get ProbeInductance(): any {
    const element = this.dataset['00144084'];
    return (element?.Value.length === 1)
      ? this.dataset['00144084']?.Value[0]
      : this.dataset['00144084']?.Value;
  }

  get '00144084'(): Element {
    return this.dataset['00144084'];
  }

  // Probe Resistance
  get ProbeResistance(): any {
    const element = this.dataset['00144085'];
    return (element?.Value.length === 1)
      ? this.dataset['00144085']?.Value[0]
      : this.dataset['00144085']?.Value;
  }

  get '00144085'(): Element {
    return this.dataset['00144085'];
  }

  // Receive Probe Sequence
  get ReceiveProbeSequence(): any {
    const element = this.dataset['00144086'];
    return (element?.Value.length === 1)
      ? this.dataset['00144086']?.Value[0]
      : this.dataset['00144086']?.Value;
  }

  get '00144086'(): Element {
    return this.dataset['00144086'];
  }

  // Probe Drive Settings Sequence
  get ProbeDriveSettingsSequence(): any {
    const element = this.dataset['00144087'];
    return (element?.Value.length === 1)
      ? this.dataset['00144087']?.Value[0]
      : this.dataset['00144087']?.Value;
  }

  get '00144087'(): Element {
    return this.dataset['00144087'];
  }

  // Bridge Resistors
  get BridgeResistors(): any {
    const element = this.dataset['00144088'];
    return (element?.Value.length === 1)
      ? this.dataset['00144088']?.Value[0]
      : this.dataset['00144088']?.Value;
  }

  get '00144088'(): Element {
    return this.dataset['00144088'];
  }

  // Probe Orientation Angle
  get ProbeOrientationAngle(): any {
    const element = this.dataset['00144089'];
    return (element?.Value.length === 1)
      ? this.dataset['00144089']?.Value[0]
      : this.dataset['00144089']?.Value;
  }

  get '00144089'(): Element {
    return this.dataset['00144089'];
  }

  // User Selected Gain Y
  get UserSelectedGainY(): any {
    const element = this.dataset['0014408B'];
    return (element?.Value.length === 1)
      ? this.dataset['0014408B']?.Value[0]
      : this.dataset['0014408B']?.Value;
  }

  get '0014408B'(): Element {
    return this.dataset['0014408B'];
  }

  // User Selected Phase
  get UserSelectedPhase(): any {
    const element = this.dataset['0014408C'];
    return (element?.Value.length === 1)
      ? this.dataset['0014408C']?.Value[0]
      : this.dataset['0014408C']?.Value;
  }

  get '0014408C'(): Element {
    return this.dataset['0014408C'];
  }

  // User Selected Offset X
  get UserSelectedOffsetX(): any {
    const element = this.dataset['0014408D'];
    return (element?.Value.length === 1)
      ? this.dataset['0014408D']?.Value[0]
      : this.dataset['0014408D']?.Value;
  }

  get '0014408D'(): Element {
    return this.dataset['0014408D'];
  }

  // User Selected Offset Y
  get UserSelectedOffsetY(): any {
    const element = this.dataset['0014408E'];
    return (element?.Value.length === 1)
      ? this.dataset['0014408E']?.Value[0]
      : this.dataset['0014408E']?.Value;
  }

  get '0014408E'(): Element {
    return this.dataset['0014408E'];
  }

  // Channel Settings Sequence
  get ChannelSettingsSequence(): any {
    const element = this.dataset['00144091'];
    return (element?.Value.length === 1)
      ? this.dataset['00144091']?.Value[0]
      : this.dataset['00144091']?.Value;
  }

  get '00144091'(): Element {
    return this.dataset['00144091'];
  }

  // Channel Threshold
  get ChannelThreshold(): any {
    const element = this.dataset['00144092'];
    return (element?.Value.length === 1)
      ? this.dataset['00144092']?.Value[0]
      : this.dataset['00144092']?.Value;
  }

  get '00144092'(): Element {
    return this.dataset['00144092'];
  }

  // Scanner Settings Sequence
  get ScannerSettingsSequence(): any {
    const element = this.dataset['0014409A'];
    return (element?.Value.length === 1)
      ? this.dataset['0014409A']?.Value[0]
      : this.dataset['0014409A']?.Value;
  }

  get '0014409A'(): Element {
    return this.dataset['0014409A'];
  }

  // Scan Procedure
  get ScanProcedure(): any {
    const element = this.dataset['0014409B'];
    return (element?.Value.length === 1)
      ? this.dataset['0014409B']?.Value[0]
      : this.dataset['0014409B']?.Value;
  }

  get '0014409B'(): Element {
    return this.dataset['0014409B'];
  }

  // Translation Rate X
  get TranslationRateX(): any {
    const element = this.dataset['0014409C'];
    return (element?.Value.length === 1)
      ? this.dataset['0014409C']?.Value[0]
      : this.dataset['0014409C']?.Value;
  }

  get '0014409C'(): Element {
    return this.dataset['0014409C'];
  }

  // Translation Rate Y
  get TranslationRateY(): any {
    const element = this.dataset['0014409D'];
    return (element?.Value.length === 1)
      ? this.dataset['0014409D']?.Value[0]
      : this.dataset['0014409D']?.Value;
  }

  get '0014409D'(): Element {
    return this.dataset['0014409D'];
  }

  // Channel Overlap
  get ChannelOverlap(): any {
    const element = this.dataset['0014409F'];
    return (element?.Value.length === 1)
      ? this.dataset['0014409F']?.Value[0]
      : this.dataset['0014409F']?.Value;
  }

  get '0014409F'(): Element {
    return this.dataset['0014409F'];
  }

  // Image Quality Indicator Type
  get ImageQualityIndicatorType(): any {
    const element = this.dataset['001440A0'];
    return (element?.Value.length === 1)
      ? this.dataset['001440A0']?.Value[0]
      : this.dataset['001440A0']?.Value;
  }

  get '001440A0'(): Element {
    return this.dataset['001440A0'];
  }

  // Image Quality Indicator Material
  get ImageQualityIndicatorMaterial(): any {
    const element = this.dataset['001440A1'];
    return (element?.Value.length === 1)
      ? this.dataset['001440A1']?.Value[0]
      : this.dataset['001440A1']?.Value;
  }

  get '001440A1'(): Element {
    return this.dataset['001440A1'];
  }

  // Image Quality Indicator Size
  get ImageQualityIndicatorSize(): any {
    const element = this.dataset['001440A2'];
    return (element?.Value.length === 1)
      ? this.dataset['001440A2']?.Value[0]
      : this.dataset['001440A2']?.Value;
  }

  get '001440A2'(): Element {
    return this.dataset['001440A2'];
  }

  // LINAC Energy
  get LINACEnergy(): any {
    const element = this.dataset['00145002'];
    return (element?.Value.length === 1)
      ? this.dataset['00145002']?.Value[0]
      : this.dataset['00145002']?.Value;
  }

  get '00145002'(): Element {
    return this.dataset['00145002'];
  }

  // LINAC Output
  get LINACOutput(): any {
    const element = this.dataset['00145004'];
    return (element?.Value.length === 1)
      ? this.dataset['00145004']?.Value[0]
      : this.dataset['00145004']?.Value;
  }

  get '00145004'(): Element {
    return this.dataset['00145004'];
  }

  // Contrast/Bolus Agent
  get ContrastBolusAgent(): any {
    const element = this.dataset['00180010'];
    return (element?.Value.length === 1)
      ? this.dataset['00180010']?.Value[0]
      : this.dataset['00180010']?.Value;
  }

  get '00180010'(): Element {
    return this.dataset['00180010'];
  }

  // Contrast/Bolus Agent Sequence
  get ContrastBolusAgentSequence(): any {
    const element = this.dataset['00180012'];
    return (element?.Value.length === 1)
      ? this.dataset['00180012']?.Value[0]
      : this.dataset['00180012']?.Value;
  }

  get '00180012'(): Element {
    return this.dataset['00180012'];
  }

  // Contrast/Bolus T1 Relaxivity
  get ContrastBolusT1Relaxivity(): any {
    const element = this.dataset['00180013'];
    return (element?.Value.length === 1)
      ? this.dataset['00180013']?.Value[0]
      : this.dataset['00180013']?.Value;
  }

  get '00180013'(): Element {
    return this.dataset['00180013'];
  }

  // Contrast/Bolus Administration Route Sequence
  get ContrastBolusAdministrationRouteSequence(): any {
    const element = this.dataset['00180014'];
    return (element?.Value.length === 1)
      ? this.dataset['00180014']?.Value[0]
      : this.dataset['00180014']?.Value;
  }

  get '00180014'(): Element {
    return this.dataset['00180014'];
  }

  // Body Part Examined
  get BodyPartExamined(): any {
    const element = this.dataset['00180015'];
    return (element?.Value.length === 1)
      ? this.dataset['00180015']?.Value[0]
      : this.dataset['00180015']?.Value;
  }

  get '00180015'(): Element {
    return this.dataset['00180015'];
  }

  // Scanning Sequence
  get ScanningSequence(): any {
    const element = this.dataset['00180020'];
    return (element?.Value.length === 1)
      ? this.dataset['00180020']?.Value[0]
      : this.dataset['00180020']?.Value;
  }

  get '00180020'(): Element {
    return this.dataset['00180020'];
  }

  // Sequence Variant
  get SequenceVariant(): any {
    const element = this.dataset['00180021'];
    return (element?.Value.length === 1)
      ? this.dataset['00180021']?.Value[0]
      : this.dataset['00180021']?.Value;
  }

  get '00180021'(): Element {
    return this.dataset['00180021'];
  }

  // Scan Options
  get ScanOptions(): any {
    const element = this.dataset['00180022'];
    return (element?.Value.length === 1)
      ? this.dataset['00180022']?.Value[0]
      : this.dataset['00180022']?.Value;
  }

  get '00180022'(): Element {
    return this.dataset['00180022'];
  }

  // MR Acquisition Type
  get MRAcquisitionType(): any {
    const element = this.dataset['00180023'];
    return (element?.Value.length === 1)
      ? this.dataset['00180023']?.Value[0]
      : this.dataset['00180023']?.Value;
  }

  get '00180023'(): Element {
    return this.dataset['00180023'];
  }

  // Sequence Name
  get SequenceName(): any {
    const element = this.dataset['00180024'];
    return (element?.Value.length === 1)
      ? this.dataset['00180024']?.Value[0]
      : this.dataset['00180024']?.Value;
  }

  get '00180024'(): Element {
    return this.dataset['00180024'];
  }

  // Angio Flag
  get AngioFlag(): any {
    const element = this.dataset['00180025'];
    return (element?.Value.length === 1)
      ? this.dataset['00180025']?.Value[0]
      : this.dataset['00180025']?.Value;
  }

  get '00180025'(): Element {
    return this.dataset['00180025'];
  }

  // Intervention Drug Information Sequence
  get InterventionDrugInformationSequence(): any {
    const element = this.dataset['00180026'];
    return (element?.Value.length === 1)
      ? this.dataset['00180026']?.Value[0]
      : this.dataset['00180026']?.Value;
  }

  get '00180026'(): Element {
    return this.dataset['00180026'];
  }

  // Intervention Drug Stop Time
  get InterventionDrugStopTime(): any {
    const element = this.dataset['00180027'];
    return (element?.Value.length === 1)
      ? this.dataset['00180027']?.Value[0]
      : this.dataset['00180027']?.Value;
  }

  get '00180027'(): Element {
    return this.dataset['00180027'];
  }

  // Intervention Drug Dose
  get InterventionDrugDose(): any {
    const element = this.dataset['00180028'];
    return (element?.Value.length === 1)
      ? this.dataset['00180028']?.Value[0]
      : this.dataset['00180028']?.Value;
  }

  get '00180028'(): Element {
    return this.dataset['00180028'];
  }

  // Intervention Drug Code Sequence
  get InterventionDrugCodeSequence(): any {
    const element = this.dataset['00180029'];
    return (element?.Value.length === 1)
      ? this.dataset['00180029']?.Value[0]
      : this.dataset['00180029']?.Value;
  }

  get '00180029'(): Element {
    return this.dataset['00180029'];
  }

  // Additional Drug Sequence
  get AdditionalDrugSequence(): any {
    const element = this.dataset['0018002A'];
    return (element?.Value.length === 1)
      ? this.dataset['0018002A']?.Value[0]
      : this.dataset['0018002A']?.Value;
  }

  get '0018002A'(): Element {
    return this.dataset['0018002A'];
  }

  // Radionuclide
  get Radionuclide(): any {
    const element = this.dataset['00180030'];
    return (element?.Value.length === 1)
      ? this.dataset['00180030']?.Value[0]
      : this.dataset['00180030']?.Value;
  }

  get '00180030'(): Element {
    return this.dataset['00180030'];
  }

  // Radiopharmaceutical
  get Radiopharmaceutical(): any {
    const element = this.dataset['00180031'];
    return (element?.Value.length === 1)
      ? this.dataset['00180031']?.Value[0]
      : this.dataset['00180031']?.Value;
  }

  get '00180031'(): Element {
    return this.dataset['00180031'];
  }

  // Energy Window Centerline
  get EnergyWindowCenterline(): any {
    const element = this.dataset['00180032'];
    return (element?.Value.length === 1)
      ? this.dataset['00180032']?.Value[0]
      : this.dataset['00180032']?.Value;
  }

  get '00180032'(): Element {
    return this.dataset['00180032'];
  }

  // Energy Window Total Width
  get EnergyWindowTotalWidth(): any {
    const element = this.dataset['00180033'];
    return (element?.Value.length === 1)
      ? this.dataset['00180033']?.Value[0]
      : this.dataset['00180033']?.Value;
  }

  get '00180033'(): Element {
    return this.dataset['00180033'];
  }

  // Intervention Drug Name
  get InterventionDrugName(): any {
    const element = this.dataset['00180034'];
    return (element?.Value.length === 1)
      ? this.dataset['00180034']?.Value[0]
      : this.dataset['00180034']?.Value;
  }

  get '00180034'(): Element {
    return this.dataset['00180034'];
  }

  // Intervention Drug Start Time
  get InterventionDrugStartTime(): any {
    const element = this.dataset['00180035'];
    return (element?.Value.length === 1)
      ? this.dataset['00180035']?.Value[0]
      : this.dataset['00180035']?.Value;
  }

  get '00180035'(): Element {
    return this.dataset['00180035'];
  }

  // Intervention Sequence
  get InterventionSequence(): any {
    const element = this.dataset['00180036'];
    return (element?.Value.length === 1)
      ? this.dataset['00180036']?.Value[0]
      : this.dataset['00180036']?.Value;
  }

  get '00180036'(): Element {
    return this.dataset['00180036'];
  }

  // Therapy Type
  get TherapyType(): any {
    const element = this.dataset['00180037'];
    return (element?.Value.length === 1)
      ? this.dataset['00180037']?.Value[0]
      : this.dataset['00180037']?.Value;
  }

  get '00180037'(): Element {
    return this.dataset['00180037'];
  }

  // Intervention Status
  get InterventionStatus(): any {
    const element = this.dataset['00180038'];
    return (element?.Value.length === 1)
      ? this.dataset['00180038']?.Value[0]
      : this.dataset['00180038']?.Value;
  }

  get '00180038'(): Element {
    return this.dataset['00180038'];
  }

  // Therapy Description
  get TherapyDescription(): any {
    const element = this.dataset['00180039'];
    return (element?.Value.length === 1)
      ? this.dataset['00180039']?.Value[0]
      : this.dataset['00180039']?.Value;
  }

  get '00180039'(): Element {
    return this.dataset['00180039'];
  }

  // Intervention Description
  get InterventionDescription(): any {
    const element = this.dataset['0018003A'];
    return (element?.Value.length === 1)
      ? this.dataset['0018003A']?.Value[0]
      : this.dataset['0018003A']?.Value;
  }

  get '0018003A'(): Element {
    return this.dataset['0018003A'];
  }

  // Cine Rate
  get CineRate(): any {
    const element = this.dataset['00180040'];
    return (element?.Value.length === 1)
      ? this.dataset['00180040']?.Value[0]
      : this.dataset['00180040']?.Value;
  }

  get '00180040'(): Element {
    return this.dataset['00180040'];
  }

  // Initial Cine Run State
  get InitialCineRunState(): any {
    const element = this.dataset['00180042'];
    return (element?.Value.length === 1)
      ? this.dataset['00180042']?.Value[0]
      : this.dataset['00180042']?.Value;
  }

  get '00180042'(): Element {
    return this.dataset['00180042'];
  }

  // Slice Thickness
  get SliceThickness(): any {
    const element = this.dataset['00180050'];
    return (element?.Value.length === 1)
      ? this.dataset['00180050']?.Value[0]
      : this.dataset['00180050']?.Value;
  }

  get '00180050'(): Element {
    return this.dataset['00180050'];
  }

  // KVP
  get KVP(): any {
    const element = this.dataset['00180060'];
    return (element?.Value.length === 1)
      ? this.dataset['00180060']?.Value[0]
      : this.dataset['00180060']?.Value;
  }

  get '00180060'(): Element {
    return this.dataset['00180060'];
  }

  // Counts Accumulated
  get CountsAccumulated(): any {
    const element = this.dataset['00180070'];
    return (element?.Value.length === 1)
      ? this.dataset['00180070']?.Value[0]
      : this.dataset['00180070']?.Value;
  }

  get '00180070'(): Element {
    return this.dataset['00180070'];
  }

  // Acquisition Termination Condition
  get AcquisitionTerminationCondition(): any {
    const element = this.dataset['00180071'];
    return (element?.Value.length === 1)
      ? this.dataset['00180071']?.Value[0]
      : this.dataset['00180071']?.Value;
  }

  get '00180071'(): Element {
    return this.dataset['00180071'];
  }

  // Effective Duration
  get EffectiveDuration(): any {
    const element = this.dataset['00180072'];
    return (element?.Value.length === 1)
      ? this.dataset['00180072']?.Value[0]
      : this.dataset['00180072']?.Value;
  }

  get '00180072'(): Element {
    return this.dataset['00180072'];
  }

  // Acquisition Start Condition
  get AcquisitionStartCondition(): any {
    const element = this.dataset['00180073'];
    return (element?.Value.length === 1)
      ? this.dataset['00180073']?.Value[0]
      : this.dataset['00180073']?.Value;
  }

  get '00180073'(): Element {
    return this.dataset['00180073'];
  }

  // Acquisition Start Condition Data
  get AcquisitionStartConditionData(): any {
    const element = this.dataset['00180074'];
    return (element?.Value.length === 1)
      ? this.dataset['00180074']?.Value[0]
      : this.dataset['00180074']?.Value;
  }

  get '00180074'(): Element {
    return this.dataset['00180074'];
  }

  // Acquisition Termination Condition Data
  get AcquisitionTerminationConditionData(): any {
    const element = this.dataset['00180075'];
    return (element?.Value.length === 1)
      ? this.dataset['00180075']?.Value[0]
      : this.dataset['00180075']?.Value;
  }

  get '00180075'(): Element {
    return this.dataset['00180075'];
  }

  // Repetition Time
  get RepetitionTime(): any {
    const element = this.dataset['00180080'];
    return (element?.Value.length === 1)
      ? this.dataset['00180080']?.Value[0]
      : this.dataset['00180080']?.Value;
  }

  get '00180080'(): Element {
    return this.dataset['00180080'];
  }

  // Echo Time
  get EchoTime(): any {
    const element = this.dataset['00180081'];
    return (element?.Value.length === 1)
      ? this.dataset['00180081']?.Value[0]
      : this.dataset['00180081']?.Value;
  }

  get '00180081'(): Element {
    return this.dataset['00180081'];
  }

  // Inversion Time
  get InversionTime(): any {
    const element = this.dataset['00180082'];
    return (element?.Value.length === 1)
      ? this.dataset['00180082']?.Value[0]
      : this.dataset['00180082']?.Value;
  }

  get '00180082'(): Element {
    return this.dataset['00180082'];
  }

  // Number of Averages
  get NumberOfAverages(): any {
    const element = this.dataset['00180083'];
    return (element?.Value.length === 1)
      ? this.dataset['00180083']?.Value[0]
      : this.dataset['00180083']?.Value;
  }

  get '00180083'(): Element {
    return this.dataset['00180083'];
  }

  // Imaging Frequency
  get ImagingFrequency(): any {
    const element = this.dataset['00180084'];
    return (element?.Value.length === 1)
      ? this.dataset['00180084']?.Value[0]
      : this.dataset['00180084']?.Value;
  }

  get '00180084'(): Element {
    return this.dataset['00180084'];
  }

  // Imaged Nucleus
  get ImagedNucleus(): any {
    const element = this.dataset['00180085'];
    return (element?.Value.length === 1)
      ? this.dataset['00180085']?.Value[0]
      : this.dataset['00180085']?.Value;
  }

  get '00180085'(): Element {
    return this.dataset['00180085'];
  }

  // Echo Number(s)
  get EchoNumbers(): any {
    const element = this.dataset['00180086'];
    return (element?.Value.length === 1)
      ? this.dataset['00180086']?.Value[0]
      : this.dataset['00180086']?.Value;
  }

  get '00180086'(): Element {
    return this.dataset['00180086'];
  }

  // Magnetic Field Strength
  get MagneticFieldStrength(): any {
    const element = this.dataset['00180087'];
    return (element?.Value.length === 1)
      ? this.dataset['00180087']?.Value[0]
      : this.dataset['00180087']?.Value;
  }

  get '00180087'(): Element {
    return this.dataset['00180087'];
  }

  // Spacing Between Slices
  get SpacingBetweenSlices(): any {
    const element = this.dataset['00180088'];
    return (element?.Value.length === 1)
      ? this.dataset['00180088']?.Value[0]
      : this.dataset['00180088']?.Value;
  }

  get '00180088'(): Element {
    return this.dataset['00180088'];
  }

  // Number of Phase Encoding Steps
  get NumberOfPhaseEncodingSteps(): any {
    const element = this.dataset['00180089'];
    return (element?.Value.length === 1)
      ? this.dataset['00180089']?.Value[0]
      : this.dataset['00180089']?.Value;
  }

  get '00180089'(): Element {
    return this.dataset['00180089'];
  }

  // Data Collection Diameter
  get DataCollectionDiameter(): any {
    const element = this.dataset['00180090'];
    return (element?.Value.length === 1)
      ? this.dataset['00180090']?.Value[0]
      : this.dataset['00180090']?.Value;
  }

  get '00180090'(): Element {
    return this.dataset['00180090'];
  }

  // Echo Train Length
  get EchoTrainLength(): any {
    const element = this.dataset['00180091'];
    return (element?.Value.length === 1)
      ? this.dataset['00180091']?.Value[0]
      : this.dataset['00180091']?.Value;
  }

  get '00180091'(): Element {
    return this.dataset['00180091'];
  }

  // Percent Sampling
  get PercentSampling(): any {
    const element = this.dataset['00180093'];
    return (element?.Value.length === 1)
      ? this.dataset['00180093']?.Value[0]
      : this.dataset['00180093']?.Value;
  }

  get '00180093'(): Element {
    return this.dataset['00180093'];
  }

  // Percent Phase Field of View
  get PercentPhaseFieldOfView(): any {
    const element = this.dataset['00180094'];
    return (element?.Value.length === 1)
      ? this.dataset['00180094']?.Value[0]
      : this.dataset['00180094']?.Value;
  }

  get '00180094'(): Element {
    return this.dataset['00180094'];
  }

  // Pixel Bandwidth
  get PixelBandwidth(): any {
    const element = this.dataset['00180095'];
    return (element?.Value.length === 1)
      ? this.dataset['00180095']?.Value[0]
      : this.dataset['00180095']?.Value;
  }

  get '00180095'(): Element {
    return this.dataset['00180095'];
  }

  // Device Serial Number
  get DeviceSerialNumber(): any {
    const element = this.dataset['00181000'];
    return (element?.Value.length === 1)
      ? this.dataset['00181000']?.Value[0]
      : this.dataset['00181000']?.Value;
  }

  get '00181000'(): Element {
    return this.dataset['00181000'];
  }

  // Device UID
  get DeviceUID(): any {
    const element = this.dataset['00181002'];
    return (element?.Value.length === 1)
      ? this.dataset['00181002']?.Value[0]
      : this.dataset['00181002']?.Value;
  }

  get '00181002'(): Element {
    return this.dataset['00181002'];
  }

  // Device ID
  get DeviceID(): any {
    const element = this.dataset['00181003'];
    return (element?.Value.length === 1)
      ? this.dataset['00181003']?.Value[0]
      : this.dataset['00181003']?.Value;
  }

  get '00181003'(): Element {
    return this.dataset['00181003'];
  }

  // Plate ID
  get PlateID(): any {
    const element = this.dataset['00181004'];
    return (element?.Value.length === 1)
      ? this.dataset['00181004']?.Value[0]
      : this.dataset['00181004']?.Value;
  }

  get '00181004'(): Element {
    return this.dataset['00181004'];
  }

  // Generator ID
  get GeneratorID(): any {
    const element = this.dataset['00181005'];
    return (element?.Value.length === 1)
      ? this.dataset['00181005']?.Value[0]
      : this.dataset['00181005']?.Value;
  }

  get '00181005'(): Element {
    return this.dataset['00181005'];
  }

  // Grid ID
  get GridID(): any {
    const element = this.dataset['00181006'];
    return (element?.Value.length === 1)
      ? this.dataset['00181006']?.Value[0]
      : this.dataset['00181006']?.Value;
  }

  get '00181006'(): Element {
    return this.dataset['00181006'];
  }

  // Cassette ID
  get CassetteID(): any {
    const element = this.dataset['00181007'];
    return (element?.Value.length === 1)
      ? this.dataset['00181007']?.Value[0]
      : this.dataset['00181007']?.Value;
  }

  get '00181007'(): Element {
    return this.dataset['00181007'];
  }

  // Gantry ID
  get GantryID(): any {
    const element = this.dataset['00181008'];
    return (element?.Value.length === 1)
      ? this.dataset['00181008']?.Value[0]
      : this.dataset['00181008']?.Value;
  }

  get '00181008'(): Element {
    return this.dataset['00181008'];
  }

  // Secondary Capture Device ID
  get SecondaryCaptureDeviceID(): any {
    const element = this.dataset['00181010'];
    return (element?.Value.length === 1)
      ? this.dataset['00181010']?.Value[0]
      : this.dataset['00181010']?.Value;
  }

  get '00181010'(): Element {
    return this.dataset['00181010'];
  }

  // Hardcopy Creation Device ID
  get HardcopyCreationDeviceID(): any {
    const element = this.dataset['00181011'];
    return (element?.Value.length === 1)
      ? this.dataset['00181011']?.Value[0]
      : this.dataset['00181011']?.Value;
  }

  get '00181011'(): Element {
    return this.dataset['00181011'];
  }

  // Date of Secondary Capture
  get DateOfSecondaryCapture(): any {
    const element = this.dataset['00181012'];
    return (element?.Value.length === 1)
      ? this.dataset['00181012']?.Value[0]
      : this.dataset['00181012']?.Value;
  }

  get '00181012'(): Element {
    return this.dataset['00181012'];
  }

  // Time of Secondary Capture
  get TimeOfSecondaryCapture(): any {
    const element = this.dataset['00181014'];
    return (element?.Value.length === 1)
      ? this.dataset['00181014']?.Value[0]
      : this.dataset['00181014']?.Value;
  }

  get '00181014'(): Element {
    return this.dataset['00181014'];
  }

  // Secondary Capture Device Manufacturer
  get SecondaryCaptureDeviceManufacturer(): any {
    const element = this.dataset['00181016'];
    return (element?.Value.length === 1)
      ? this.dataset['00181016']?.Value[0]
      : this.dataset['00181016']?.Value;
  }

  get '00181016'(): Element {
    return this.dataset['00181016'];
  }

  // Hardcopy Device Manufacturer
  get HardcopyDeviceManufacturer(): any {
    const element = this.dataset['00181017'];
    return (element?.Value.length === 1)
      ? this.dataset['00181017']?.Value[0]
      : this.dataset['00181017']?.Value;
  }

  get '00181017'(): Element {
    return this.dataset['00181017'];
  }

  // Secondary Capture Device Manufacturer's Model Name
  get SecondaryCaptureDeviceManufacturerModelName(): any {
    const element = this.dataset['00181018'];
    return (element?.Value.length === 1)
      ? this.dataset['00181018']?.Value[0]
      : this.dataset['00181018']?.Value;
  }

  get '00181018'(): Element {
    return this.dataset['00181018'];
  }

  // Secondary Capture Device Software Versions
  get SecondaryCaptureDeviceSoftwareVersions(): any {
    const element = this.dataset['00181019'];
    return (element?.Value.length === 1)
      ? this.dataset['00181019']?.Value[0]
      : this.dataset['00181019']?.Value;
  }

  get '00181019'(): Element {
    return this.dataset['00181019'];
  }

  // Hardcopy Device Software Version
  get HardcopyDeviceSoftwareVersion(): any {
    const element = this.dataset['0018101A'];
    return (element?.Value.length === 1)
      ? this.dataset['0018101A']?.Value[0]
      : this.dataset['0018101A']?.Value;
  }

  get '0018101A'(): Element {
    return this.dataset['0018101A'];
  }

  // Hardcopy Device Manufacturer's Model Name
  get HardcopyDeviceManufacturerModelName(): any {
    const element = this.dataset['0018101B'];
    return (element?.Value.length === 1)
      ? this.dataset['0018101B']?.Value[0]
      : this.dataset['0018101B']?.Value;
  }

  get '0018101B'(): Element {
    return this.dataset['0018101B'];
  }

  // Software Version(s)
  get SoftwareVersions(): any {
    const element = this.dataset['00181020'];
    return (element?.Value.length === 1)
      ? this.dataset['00181020']?.Value[0]
      : this.dataset['00181020']?.Value;
  }

  get '00181020'(): Element {
    return this.dataset['00181020'];
  }

  // Video Image Format Acquired
  get VideoImageFormatAcquired(): any {
    const element = this.dataset['00181022'];
    return (element?.Value.length === 1)
      ? this.dataset['00181022']?.Value[0]
      : this.dataset['00181022']?.Value;
  }

  get '00181022'(): Element {
    return this.dataset['00181022'];
  }

  // Digital Image Format Acquired
  get DigitalImageFormatAcquired(): any {
    const element = this.dataset['00181023'];
    return (element?.Value.length === 1)
      ? this.dataset['00181023']?.Value[0]
      : this.dataset['00181023']?.Value;
  }

  get '00181023'(): Element {
    return this.dataset['00181023'];
  }

  // Protocol Name
  get ProtocolName(): any {
    const element = this.dataset['00181030'];
    return (element?.Value.length === 1)
      ? this.dataset['00181030']?.Value[0]
      : this.dataset['00181030']?.Value;
  }

  get '00181030'(): Element {
    return this.dataset['00181030'];
  }

  // Contrast/Bolus Route
  get ContrastBolusRoute(): any {
    const element = this.dataset['00181040'];
    return (element?.Value.length === 1)
      ? this.dataset['00181040']?.Value[0]
      : this.dataset['00181040']?.Value;
  }

  get '00181040'(): Element {
    return this.dataset['00181040'];
  }

  // Contrast/Bolus Volume
  get ContrastBolusVolume(): any {
    const element = this.dataset['00181041'];
    return (element?.Value.length === 1)
      ? this.dataset['00181041']?.Value[0]
      : this.dataset['00181041']?.Value;
  }

  get '00181041'(): Element {
    return this.dataset['00181041'];
  }

  // Contrast/Bolus Start Time
  get ContrastBolusStartTime(): any {
    const element = this.dataset['00181042'];
    return (element?.Value.length === 1)
      ? this.dataset['00181042']?.Value[0]
      : this.dataset['00181042']?.Value;
  }

  get '00181042'(): Element {
    return this.dataset['00181042'];
  }

  // Contrast/Bolus Stop Time
  get ContrastBolusStopTime(): any {
    const element = this.dataset['00181043'];
    return (element?.Value.length === 1)
      ? this.dataset['00181043']?.Value[0]
      : this.dataset['00181043']?.Value;
  }

  get '00181043'(): Element {
    return this.dataset['00181043'];
  }

  // Contrast/Bolus Total Dose
  get ContrastBolusTotalDose(): any {
    const element = this.dataset['00181044'];
    return (element?.Value.length === 1)
      ? this.dataset['00181044']?.Value[0]
      : this.dataset['00181044']?.Value;
  }

  get '00181044'(): Element {
    return this.dataset['00181044'];
  }

  // Syringe Counts
  get SyringeCounts(): any {
    const element = this.dataset['00181045'];
    return (element?.Value.length === 1)
      ? this.dataset['00181045']?.Value[0]
      : this.dataset['00181045']?.Value;
  }

  get '00181045'(): Element {
    return this.dataset['00181045'];
  }

  // Contrast Flow Rate
  get ContrastFlowRate(): any {
    const element = this.dataset['00181046'];
    return (element?.Value.length === 1)
      ? this.dataset['00181046']?.Value[0]
      : this.dataset['00181046']?.Value;
  }

  get '00181046'(): Element {
    return this.dataset['00181046'];
  }

  // Contrast Flow Duration
  get ContrastFlowDuration(): any {
    const element = this.dataset['00181047'];
    return (element?.Value.length === 1)
      ? this.dataset['00181047']?.Value[0]
      : this.dataset['00181047']?.Value;
  }

  get '00181047'(): Element {
    return this.dataset['00181047'];
  }

  // Contrast/Bolus Ingredient
  get ContrastBolusIngredient(): any {
    const element = this.dataset['00181048'];
    return (element?.Value.length === 1)
      ? this.dataset['00181048']?.Value[0]
      : this.dataset['00181048']?.Value;
  }

  get '00181048'(): Element {
    return this.dataset['00181048'];
  }

  // Contrast/Bolus Ingredient Concentration
  get ContrastBolusIngredientConcentration(): any {
    const element = this.dataset['00181049'];
    return (element?.Value.length === 1)
      ? this.dataset['00181049']?.Value[0]
      : this.dataset['00181049']?.Value;
  }

  get '00181049'(): Element {
    return this.dataset['00181049'];
  }

  // Spatial Resolution
  get SpatialResolution(): any {
    const element = this.dataset['00181050'];
    return (element?.Value.length === 1)
      ? this.dataset['00181050']?.Value[0]
      : this.dataset['00181050']?.Value;
  }

  get '00181050'(): Element {
    return this.dataset['00181050'];
  }

  // Trigger Time
  get TriggerTime(): any {
    const element = this.dataset['00181060'];
    return (element?.Value.length === 1)
      ? this.dataset['00181060']?.Value[0]
      : this.dataset['00181060']?.Value;
  }

  get '00181060'(): Element {
    return this.dataset['00181060'];
  }

  // Trigger Source or Type
  get TriggerSourceOrType(): any {
    const element = this.dataset['00181061'];
    return (element?.Value.length === 1)
      ? this.dataset['00181061']?.Value[0]
      : this.dataset['00181061']?.Value;
  }

  get '00181061'(): Element {
    return this.dataset['00181061'];
  }

  // Nominal Interval
  get NominalInterval(): any {
    const element = this.dataset['00181062'];
    return (element?.Value.length === 1)
      ? this.dataset['00181062']?.Value[0]
      : this.dataset['00181062']?.Value;
  }

  get '00181062'(): Element {
    return this.dataset['00181062'];
  }

  // Frame Time
  get FrameTime(): any {
    const element = this.dataset['00181063'];
    return (element?.Value.length === 1)
      ? this.dataset['00181063']?.Value[0]
      : this.dataset['00181063']?.Value;
  }

  get '00181063'(): Element {
    return this.dataset['00181063'];
  }

  // Cardiac Framing Type
  get CardiacFramingType(): any {
    const element = this.dataset['00181064'];
    return (element?.Value.length === 1)
      ? this.dataset['00181064']?.Value[0]
      : this.dataset['00181064']?.Value;
  }

  get '00181064'(): Element {
    return this.dataset['00181064'];
  }

  // Frame Time Vector
  get FrameTimeVector(): any {
    const element = this.dataset['00181065'];
    return (element?.Value.length === 1)
      ? this.dataset['00181065']?.Value[0]
      : this.dataset['00181065']?.Value;
  }

  get '00181065'(): Element {
    return this.dataset['00181065'];
  }

  // Frame Delay
  get FrameDelay(): any {
    const element = this.dataset['00181066'];
    return (element?.Value.length === 1)
      ? this.dataset['00181066']?.Value[0]
      : this.dataset['00181066']?.Value;
  }

  get '00181066'(): Element {
    return this.dataset['00181066'];
  }

  // Image Trigger Delay
  get ImageTriggerDelay(): any {
    const element = this.dataset['00181067'];
    return (element?.Value.length === 1)
      ? this.dataset['00181067']?.Value[0]
      : this.dataset['00181067']?.Value;
  }

  get '00181067'(): Element {
    return this.dataset['00181067'];
  }

  // Multiplex Group Time Offset
  get MultiplexGroupTimeOffset(): any {
    const element = this.dataset['00181068'];
    return (element?.Value.length === 1)
      ? this.dataset['00181068']?.Value[0]
      : this.dataset['00181068']?.Value;
  }

  get '00181068'(): Element {
    return this.dataset['00181068'];
  }

  // Trigger Time Offset
  get TriggerTimeOffset(): any {
    const element = this.dataset['00181069'];
    return (element?.Value.length === 1)
      ? this.dataset['00181069']?.Value[0]
      : this.dataset['00181069']?.Value;
  }

  get '00181069'(): Element {
    return this.dataset['00181069'];
  }

  // Synchronization Trigger
  get SynchronizationTrigger(): any {
    const element = this.dataset['0018106A'];
    return (element?.Value.length === 1)
      ? this.dataset['0018106A']?.Value[0]
      : this.dataset['0018106A']?.Value;
  }

  get '0018106A'(): Element {
    return this.dataset['0018106A'];
  }

  // Synchronization Channel
  get SynchronizationChannel(): any {
    const element = this.dataset['0018106C'];
    return (element?.Value.length === 1)
      ? this.dataset['0018106C']?.Value[0]
      : this.dataset['0018106C']?.Value;
  }

  get '0018106C'(): Element {
    return this.dataset['0018106C'];
  }

  // Trigger Sample Position
  get TriggerSamplePosition(): any {
    const element = this.dataset['0018106E'];
    return (element?.Value.length === 1)
      ? this.dataset['0018106E']?.Value[0]
      : this.dataset['0018106E']?.Value;
  }

  get '0018106E'(): Element {
    return this.dataset['0018106E'];
  }

  // Radiopharmaceutical Route
  get RadiopharmaceuticalRoute(): any {
    const element = this.dataset['00181070'];
    return (element?.Value.length === 1)
      ? this.dataset['00181070']?.Value[0]
      : this.dataset['00181070']?.Value;
  }

  get '00181070'(): Element {
    return this.dataset['00181070'];
  }

  // Radiopharmaceutical Volume
  get RadiopharmaceuticalVolume(): any {
    const element = this.dataset['00181071'];
    return (element?.Value.length === 1)
      ? this.dataset['00181071']?.Value[0]
      : this.dataset['00181071']?.Value;
  }

  get '00181071'(): Element {
    return this.dataset['00181071'];
  }

  // Radiopharmaceutical Start Time
  get RadiopharmaceuticalStartTime(): any {
    const element = this.dataset['00181072'];
    return (element?.Value.length === 1)
      ? this.dataset['00181072']?.Value[0]
      : this.dataset['00181072']?.Value;
  }

  get '00181072'(): Element {
    return this.dataset['00181072'];
  }

  // Radiopharmaceutical Stop Time
  get RadiopharmaceuticalStopTime(): any {
    const element = this.dataset['00181073'];
    return (element?.Value.length === 1)
      ? this.dataset['00181073']?.Value[0]
      : this.dataset['00181073']?.Value;
  }

  get '00181073'(): Element {
    return this.dataset['00181073'];
  }

  // Radionuclide Total Dose
  get RadionuclideTotalDose(): any {
    const element = this.dataset['00181074'];
    return (element?.Value.length === 1)
      ? this.dataset['00181074']?.Value[0]
      : this.dataset['00181074']?.Value;
  }

  get '00181074'(): Element {
    return this.dataset['00181074'];
  }

  // Radionuclide Half Life
  get RadionuclideHalfLife(): any {
    const element = this.dataset['00181075'];
    return (element?.Value.length === 1)
      ? this.dataset['00181075']?.Value[0]
      : this.dataset['00181075']?.Value;
  }

  get '00181075'(): Element {
    return this.dataset['00181075'];
  }

  // Radionuclide Positron Fraction
  get RadionuclidePositronFraction(): any {
    const element = this.dataset['00181076'];
    return (element?.Value.length === 1)
      ? this.dataset['00181076']?.Value[0]
      : this.dataset['00181076']?.Value;
  }

  get '00181076'(): Element {
    return this.dataset['00181076'];
  }

  // Radiopharmaceutical Specific Activity
  get RadiopharmaceuticalSpecificActivity(): any {
    const element = this.dataset['00181077'];
    return (element?.Value.length === 1)
      ? this.dataset['00181077']?.Value[0]
      : this.dataset['00181077']?.Value;
  }

  get '00181077'(): Element {
    return this.dataset['00181077'];
  }

  // Radiopharmaceutical Start DateTime
  get RadiopharmaceuticalStartDateTime(): any {
    const element = this.dataset['00181078'];
    return (element?.Value.length === 1)
      ? this.dataset['00181078']?.Value[0]
      : this.dataset['00181078']?.Value;
  }

  get '00181078'(): Element {
    return this.dataset['00181078'];
  }

  // Radiopharmaceutical Stop DateTime
  get RadiopharmaceuticalStopDateTime(): any {
    const element = this.dataset['00181079'];
    return (element?.Value.length === 1)
      ? this.dataset['00181079']?.Value[0]
      : this.dataset['00181079']?.Value;
  }

  get '00181079'(): Element {
    return this.dataset['00181079'];
  }

  // Beat Rejection Flag
  get BeatRejectionFlag(): any {
    const element = this.dataset['00181080'];
    return (element?.Value.length === 1)
      ? this.dataset['00181080']?.Value[0]
      : this.dataset['00181080']?.Value;
  }

  get '00181080'(): Element {
    return this.dataset['00181080'];
  }

  // Low R-R Value
  get LowRRValue(): any {
    const element = this.dataset['00181081'];
    return (element?.Value.length === 1)
      ? this.dataset['00181081']?.Value[0]
      : this.dataset['00181081']?.Value;
  }

  get '00181081'(): Element {
    return this.dataset['00181081'];
  }

  // High R-R Value
  get HighRRValue(): any {
    const element = this.dataset['00181082'];
    return (element?.Value.length === 1)
      ? this.dataset['00181082']?.Value[0]
      : this.dataset['00181082']?.Value;
  }

  get '00181082'(): Element {
    return this.dataset['00181082'];
  }

  // Intervals Acquired
  get IntervalsAcquired(): any {
    const element = this.dataset['00181083'];
    return (element?.Value.length === 1)
      ? this.dataset['00181083']?.Value[0]
      : this.dataset['00181083']?.Value;
  }

  get '00181083'(): Element {
    return this.dataset['00181083'];
  }

  // Intervals Rejected
  get IntervalsRejected(): any {
    const element = this.dataset['00181084'];
    return (element?.Value.length === 1)
      ? this.dataset['00181084']?.Value[0]
      : this.dataset['00181084']?.Value;
  }

  get '00181084'(): Element {
    return this.dataset['00181084'];
  }

  // PVC Rejection
  get PVCRejection(): any {
    const element = this.dataset['00181085'];
    return (element?.Value.length === 1)
      ? this.dataset['00181085']?.Value[0]
      : this.dataset['00181085']?.Value;
  }

  get '00181085'(): Element {
    return this.dataset['00181085'];
  }

  // Skip Beats
  get SkipBeats(): any {
    const element = this.dataset['00181086'];
    return (element?.Value.length === 1)
      ? this.dataset['00181086']?.Value[0]
      : this.dataset['00181086']?.Value;
  }

  get '00181086'(): Element {
    return this.dataset['00181086'];
  }

  // Heart Rate
  get HeartRate(): any {
    const element = this.dataset['00181088'];
    return (element?.Value.length === 1)
      ? this.dataset['00181088']?.Value[0]
      : this.dataset['00181088']?.Value;
  }

  get '00181088'(): Element {
    return this.dataset['00181088'];
  }

  // Cardiac Number of Images
  get CardiacNumberOfImages(): any {
    const element = this.dataset['00181090'];
    return (element?.Value.length === 1)
      ? this.dataset['00181090']?.Value[0]
      : this.dataset['00181090']?.Value;
  }

  get '00181090'(): Element {
    return this.dataset['00181090'];
  }

  // Trigger Window
  get TriggerWindow(): any {
    const element = this.dataset['00181094'];
    return (element?.Value.length === 1)
      ? this.dataset['00181094']?.Value[0]
      : this.dataset['00181094']?.Value;
  }

  get '00181094'(): Element {
    return this.dataset['00181094'];
  }

  // Reconstruction Diameter
  get ReconstructionDiameter(): any {
    const element = this.dataset['00181100'];
    return (element?.Value.length === 1)
      ? this.dataset['00181100']?.Value[0]
      : this.dataset['00181100']?.Value;
  }

  get '00181100'(): Element {
    return this.dataset['00181100'];
  }

  // Distance Source to Detector
  get DistanceSourceToDetector(): any {
    const element = this.dataset['00181110'];
    return (element?.Value.length === 1)
      ? this.dataset['00181110']?.Value[0]
      : this.dataset['00181110']?.Value;
  }

  get '00181110'(): Element {
    return this.dataset['00181110'];
  }

  // Distance Source to Patient
  get DistanceSourceToPatient(): any {
    const element = this.dataset['00181111'];
    return (element?.Value.length === 1)
      ? this.dataset['00181111']?.Value[0]
      : this.dataset['00181111']?.Value;
  }

  get '00181111'(): Element {
    return this.dataset['00181111'];
  }

  // Estimated Radiographic Magnification Factor
  get EstimatedRadiographicMagnificationFactor(): any {
    const element = this.dataset['00181114'];
    return (element?.Value.length === 1)
      ? this.dataset['00181114']?.Value[0]
      : this.dataset['00181114']?.Value;
  }

  get '00181114'(): Element {
    return this.dataset['00181114'];
  }

  // Gantry/Detector Tilt
  get GantryDetectorTilt(): any {
    const element = this.dataset['00181120'];
    return (element?.Value.length === 1)
      ? this.dataset['00181120']?.Value[0]
      : this.dataset['00181120']?.Value;
  }

  get '00181120'(): Element {
    return this.dataset['00181120'];
  }

  // Gantry/Detector Slew
  get GantryDetectorSlew(): any {
    const element = this.dataset['00181121'];
    return (element?.Value.length === 1)
      ? this.dataset['00181121']?.Value[0]
      : this.dataset['00181121']?.Value;
  }

  get '00181121'(): Element {
    return this.dataset['00181121'];
  }

  // Table Height
  get TableHeight(): any {
    const element = this.dataset['00181130'];
    return (element?.Value.length === 1)
      ? this.dataset['00181130']?.Value[0]
      : this.dataset['00181130']?.Value;
  }

  get '00181130'(): Element {
    return this.dataset['00181130'];
  }

  // Table Traverse
  get TableTraverse(): any {
    const element = this.dataset['00181131'];
    return (element?.Value.length === 1)
      ? this.dataset['00181131']?.Value[0]
      : this.dataset['00181131']?.Value;
  }

  get '00181131'(): Element {
    return this.dataset['00181131'];
  }

  // Table Motion
  get TableMotion(): any {
    const element = this.dataset['00181134'];
    return (element?.Value.length === 1)
      ? this.dataset['00181134']?.Value[0]
      : this.dataset['00181134']?.Value;
  }

  get '00181134'(): Element {
    return this.dataset['00181134'];
  }

  // Table Vertical Increment
  get TableVerticalIncrement(): any {
    const element = this.dataset['00181135'];
    return (element?.Value.length === 1)
      ? this.dataset['00181135']?.Value[0]
      : this.dataset['00181135']?.Value;
  }

  get '00181135'(): Element {
    return this.dataset['00181135'];
  }

  // Table Lateral Increment
  get TableLateralIncrement(): any {
    const element = this.dataset['00181136'];
    return (element?.Value.length === 1)
      ? this.dataset['00181136']?.Value[0]
      : this.dataset['00181136']?.Value;
  }

  get '00181136'(): Element {
    return this.dataset['00181136'];
  }

  // Table Longitudinal Increment
  get TableLongitudinalIncrement(): any {
    const element = this.dataset['00181137'];
    return (element?.Value.length === 1)
      ? this.dataset['00181137']?.Value[0]
      : this.dataset['00181137']?.Value;
  }

  get '00181137'(): Element {
    return this.dataset['00181137'];
  }

  // Table Angle
  get TableAngle(): any {
    const element = this.dataset['00181138'];
    return (element?.Value.length === 1)
      ? this.dataset['00181138']?.Value[0]
      : this.dataset['00181138']?.Value;
  }

  get '00181138'(): Element {
    return this.dataset['00181138'];
  }

  // Table Type
  get TableType(): any {
    const element = this.dataset['0018113A'];
    return (element?.Value.length === 1)
      ? this.dataset['0018113A']?.Value[0]
      : this.dataset['0018113A']?.Value;
  }

  get '0018113A'(): Element {
    return this.dataset['0018113A'];
  }

  // Rotation Direction
  get RotationDirection(): any {
    const element = this.dataset['00181140'];
    return (element?.Value.length === 1)
      ? this.dataset['00181140']?.Value[0]
      : this.dataset['00181140']?.Value;
  }

  get '00181140'(): Element {
    return this.dataset['00181140'];
  }

  // Angular Position
  get AngularPosition(): any {
    const element = this.dataset['00181141'];
    return (element?.Value.length === 1)
      ? this.dataset['00181141']?.Value[0]
      : this.dataset['00181141']?.Value;
  }

  get '00181141'(): Element {
    return this.dataset['00181141'];
  }

  // Radial Position
  get RadialPosition(): any {
    const element = this.dataset['00181142'];
    return (element?.Value.length === 1)
      ? this.dataset['00181142']?.Value[0]
      : this.dataset['00181142']?.Value;
  }

  get '00181142'(): Element {
    return this.dataset['00181142'];
  }

  // Scan Arc
  get ScanArc(): any {
    const element = this.dataset['00181143'];
    return (element?.Value.length === 1)
      ? this.dataset['00181143']?.Value[0]
      : this.dataset['00181143']?.Value;
  }

  get '00181143'(): Element {
    return this.dataset['00181143'];
  }

  // Angular Step
  get AngularStep(): any {
    const element = this.dataset['00181144'];
    return (element?.Value.length === 1)
      ? this.dataset['00181144']?.Value[0]
      : this.dataset['00181144']?.Value;
  }

  get '00181144'(): Element {
    return this.dataset['00181144'];
  }

  // Center of Rotation Offset
  get CenterOfRotationOffset(): any {
    const element = this.dataset['00181145'];
    return (element?.Value.length === 1)
      ? this.dataset['00181145']?.Value[0]
      : this.dataset['00181145']?.Value;
  }

  get '00181145'(): Element {
    return this.dataset['00181145'];
  }

  // Rotation Offset
  get RotationOffset(): any {
    const element = this.dataset['00181146'];
    return (element?.Value.length === 1)
      ? this.dataset['00181146']?.Value[0]
      : this.dataset['00181146']?.Value;
  }

  get '00181146'(): Element {
    return this.dataset['00181146'];
  }

  // Field of View Shape
  get FieldOfViewShape(): any {
    const element = this.dataset['00181147'];
    return (element?.Value.length === 1)
      ? this.dataset['00181147']?.Value[0]
      : this.dataset['00181147']?.Value;
  }

  get '00181147'(): Element {
    return this.dataset['00181147'];
  }

  // Field of View Dimension(s)
  get FieldOfViewDimensions(): any {
    const element = this.dataset['00181149'];
    return (element?.Value.length === 1)
      ? this.dataset['00181149']?.Value[0]
      : this.dataset['00181149']?.Value;
  }

  get '00181149'(): Element {
    return this.dataset['00181149'];
  }

  // Exposure Time
  get ExposureTime(): any {
    const element = this.dataset['00181150'];
    return (element?.Value.length === 1)
      ? this.dataset['00181150']?.Value[0]
      : this.dataset['00181150']?.Value;
  }

  get '00181150'(): Element {
    return this.dataset['00181150'];
  }

  // X-Ray Tube Current
  get XRayTubeCurrent(): any {
    const element = this.dataset['00181151'];
    return (element?.Value.length === 1)
      ? this.dataset['00181151']?.Value[0]
      : this.dataset['00181151']?.Value;
  }

  get '00181151'(): Element {
    return this.dataset['00181151'];
  }

  // Exposure
  get Exposure(): any {
    const element = this.dataset['00181152'];
    return (element?.Value.length === 1)
      ? this.dataset['00181152']?.Value[0]
      : this.dataset['00181152']?.Value;
  }

  get '00181152'(): Element {
    return this.dataset['00181152'];
  }

  // Exposure in µAs
  get ExposureInuAs(): any {
    const element = this.dataset['00181153'];
    return (element?.Value.length === 1)
      ? this.dataset['00181153']?.Value[0]
      : this.dataset['00181153']?.Value;
  }

  get '00181153'(): Element {
    return this.dataset['00181153'];
  }

  // Average Pulse Width
  get AveragePulseWidth(): any {
    const element = this.dataset['00181154'];
    return (element?.Value.length === 1)
      ? this.dataset['00181154']?.Value[0]
      : this.dataset['00181154']?.Value;
  }

  get '00181154'(): Element {
    return this.dataset['00181154'];
  }

  // Radiation Setting
  get RadiationSetting(): any {
    const element = this.dataset['00181155'];
    return (element?.Value.length === 1)
      ? this.dataset['00181155']?.Value[0]
      : this.dataset['00181155']?.Value;
  }

  get '00181155'(): Element {
    return this.dataset['00181155'];
  }

  // Rectification Type
  get RectificationType(): any {
    const element = this.dataset['00181156'];
    return (element?.Value.length === 1)
      ? this.dataset['00181156']?.Value[0]
      : this.dataset['00181156']?.Value;
  }

  get '00181156'(): Element {
    return this.dataset['00181156'];
  }

  // Radiation Mode
  get RadiationMode(): any {
    const element = this.dataset['0018115A'];
    return (element?.Value.length === 1)
      ? this.dataset['0018115A']?.Value[0]
      : this.dataset['0018115A']?.Value;
  }

  get '0018115A'(): Element {
    return this.dataset['0018115A'];
  }

  // Image and Fluoroscopy Area Dose Product
  get ImageAndFluoroscopyAreaDoseProduct(): any {
    const element = this.dataset['0018115E'];
    return (element?.Value.length === 1)
      ? this.dataset['0018115E']?.Value[0]
      : this.dataset['0018115E']?.Value;
  }

  get '0018115E'(): Element {
    return this.dataset['0018115E'];
  }

  // Filter Type
  get FilterType(): any {
    const element = this.dataset['00181160'];
    return (element?.Value.length === 1)
      ? this.dataset['00181160']?.Value[0]
      : this.dataset['00181160']?.Value;
  }

  get '00181160'(): Element {
    return this.dataset['00181160'];
  }

  // Type of Filters
  get TypeOfFilters(): any {
    const element = this.dataset['00181161'];
    return (element?.Value.length === 1)
      ? this.dataset['00181161']?.Value[0]
      : this.dataset['00181161']?.Value;
  }

  get '00181161'(): Element {
    return this.dataset['00181161'];
  }

  // Intensifier Size
  get IntensifierSize(): any {
    const element = this.dataset['00181162'];
    return (element?.Value.length === 1)
      ? this.dataset['00181162']?.Value[0]
      : this.dataset['00181162']?.Value;
  }

  get '00181162'(): Element {
    return this.dataset['00181162'];
  }

  // Imager Pixel Spacing
  get ImagerPixelSpacing(): any {
    const element = this.dataset['00181164'];
    return (element?.Value.length === 1)
      ? this.dataset['00181164']?.Value[0]
      : this.dataset['00181164']?.Value;
  }

  get '00181164'(): Element {
    return this.dataset['00181164'];
  }

  // Grid
  get Grid(): any {
    const element = this.dataset['00181166'];
    return (element?.Value.length === 1)
      ? this.dataset['00181166']?.Value[0]
      : this.dataset['00181166']?.Value;
  }

  get '00181166'(): Element {
    return this.dataset['00181166'];
  }

  // Generator Power
  get GeneratorPower(): any {
    const element = this.dataset['00181170'];
    return (element?.Value.length === 1)
      ? this.dataset['00181170']?.Value[0]
      : this.dataset['00181170']?.Value;
  }

  get '00181170'(): Element {
    return this.dataset['00181170'];
  }

  // Collimator/grid Name
  get CollimatorGridName(): any {
    const element = this.dataset['00181180'];
    return (element?.Value.length === 1)
      ? this.dataset['00181180']?.Value[0]
      : this.dataset['00181180']?.Value;
  }

  get '00181180'(): Element {
    return this.dataset['00181180'];
  }

  // Collimator Type
  get CollimatorType(): any {
    const element = this.dataset['00181181'];
    return (element?.Value.length === 1)
      ? this.dataset['00181181']?.Value[0]
      : this.dataset['00181181']?.Value;
  }

  get '00181181'(): Element {
    return this.dataset['00181181'];
  }

  // Focal Distance
  get FocalDistance(): any {
    const element = this.dataset['00181182'];
    return (element?.Value.length === 1)
      ? this.dataset['00181182']?.Value[0]
      : this.dataset['00181182']?.Value;
  }

  get '00181182'(): Element {
    return this.dataset['00181182'];
  }

  // X Focus Center
  get XFocusCenter(): any {
    const element = this.dataset['00181183'];
    return (element?.Value.length === 1)
      ? this.dataset['00181183']?.Value[0]
      : this.dataset['00181183']?.Value;
  }

  get '00181183'(): Element {
    return this.dataset['00181183'];
  }

  // Y Focus Center
  get YFocusCenter(): any {
    const element = this.dataset['00181184'];
    return (element?.Value.length === 1)
      ? this.dataset['00181184']?.Value[0]
      : this.dataset['00181184']?.Value;
  }

  get '00181184'(): Element {
    return this.dataset['00181184'];
  }

  // Focal Spot(s)
  get FocalSpots(): any {
    const element = this.dataset['00181190'];
    return (element?.Value.length === 1)
      ? this.dataset['00181190']?.Value[0]
      : this.dataset['00181190']?.Value;
  }

  get '00181190'(): Element {
    return this.dataset['00181190'];
  }

  // Anode Target Material
  get AnodeTargetMaterial(): any {
    const element = this.dataset['00181191'];
    return (element?.Value.length === 1)
      ? this.dataset['00181191']?.Value[0]
      : this.dataset['00181191']?.Value;
  }

  get '00181191'(): Element {
    return this.dataset['00181191'];
  }

  // Body Part Thickness
  get BodyPartThickness(): any {
    const element = this.dataset['001811A0'];
    return (element?.Value.length === 1)
      ? this.dataset['001811A0']?.Value[0]
      : this.dataset['001811A0']?.Value;
  }

  get '001811A0'(): Element {
    return this.dataset['001811A0'];
  }

  // Compression Force
  get CompressionForce(): any {
    const element = this.dataset['001811A2'];
    return (element?.Value.length === 1)
      ? this.dataset['001811A2']?.Value[0]
      : this.dataset['001811A2']?.Value;
  }

  get '001811A2'(): Element {
    return this.dataset['001811A2'];
  }

  // Paddle Description
  get PaddleDescription(): any {
    const element = this.dataset['001811A4'];
    return (element?.Value.length === 1)
      ? this.dataset['001811A4']?.Value[0]
      : this.dataset['001811A4']?.Value;
  }

  get '001811A4'(): Element {
    return this.dataset['001811A4'];
  }

  // Date of Last Calibration
  get DateOfLastCalibration(): any {
    const element = this.dataset['00181200'];
    return (element?.Value.length === 1)
      ? this.dataset['00181200']?.Value[0]
      : this.dataset['00181200']?.Value;
  }

  get '00181200'(): Element {
    return this.dataset['00181200'];
  }

  // Time of Last Calibration
  get TimeOfLastCalibration(): any {
    const element = this.dataset['00181201'];
    return (element?.Value.length === 1)
      ? this.dataset['00181201']?.Value[0]
      : this.dataset['00181201']?.Value;
  }

  get '00181201'(): Element {
    return this.dataset['00181201'];
  }

  // DateTime of Last Calibration
  get DateTimeOfLastCalibration(): any {
    const element = this.dataset['00181202'];
    return (element?.Value.length === 1)
      ? this.dataset['00181202']?.Value[0]
      : this.dataset['00181202']?.Value;
  }

  get '00181202'(): Element {
    return this.dataset['00181202'];
  }

  // Convolution Kernel
  get ConvolutionKernel(): any {
    const element = this.dataset['00181210'];
    return (element?.Value.length === 1)
      ? this.dataset['00181210']?.Value[0]
      : this.dataset['00181210']?.Value;
  }

  get '00181210'(): Element {
    return this.dataset['00181210'];
  }

  // Upper/Lower Pixel Values
  get UpperLowerPixelValues(): any {
    const element = this.dataset['00181240'];
    return (element?.Value.length === 1)
      ? this.dataset['00181240']?.Value[0]
      : this.dataset['00181240']?.Value;
  }

  get '00181240'(): Element {
    return this.dataset['00181240'];
  }

  // Actual Frame Duration
  get ActualFrameDuration(): any {
    const element = this.dataset['00181242'];
    return (element?.Value.length === 1)
      ? this.dataset['00181242']?.Value[0]
      : this.dataset['00181242']?.Value;
  }

  get '00181242'(): Element {
    return this.dataset['00181242'];
  }

  // Count Rate
  get CountRate(): any {
    const element = this.dataset['00181243'];
    return (element?.Value.length === 1)
      ? this.dataset['00181243']?.Value[0]
      : this.dataset['00181243']?.Value;
  }

  get '00181243'(): Element {
    return this.dataset['00181243'];
  }

  // Preferred Playback Sequencing
  get PreferredPlaybackSequencing(): any {
    const element = this.dataset['00181244'];
    return (element?.Value.length === 1)
      ? this.dataset['00181244']?.Value[0]
      : this.dataset['00181244']?.Value;
  }

  get '00181244'(): Element {
    return this.dataset['00181244'];
  }

  // Receive Coil Name
  get ReceiveCoilName(): any {
    const element = this.dataset['00181250'];
    return (element?.Value.length === 1)
      ? this.dataset['00181250']?.Value[0]
      : this.dataset['00181250']?.Value;
  }

  get '00181250'(): Element {
    return this.dataset['00181250'];
  }

  // Transmit Coil Name
  get TransmitCoilName(): any {
    const element = this.dataset['00181251'];
    return (element?.Value.length === 1)
      ? this.dataset['00181251']?.Value[0]
      : this.dataset['00181251']?.Value;
  }

  get '00181251'(): Element {
    return this.dataset['00181251'];
  }

  // Plate Type
  get PlateType(): any {
    const element = this.dataset['00181260'];
    return (element?.Value.length === 1)
      ? this.dataset['00181260']?.Value[0]
      : this.dataset['00181260']?.Value;
  }

  get '00181260'(): Element {
    return this.dataset['00181260'];
  }

  // Phosphor Type
  get PhosphorType(): any {
    const element = this.dataset['00181261'];
    return (element?.Value.length === 1)
      ? this.dataset['00181261']?.Value[0]
      : this.dataset['00181261']?.Value;
  }

  get '00181261'(): Element {
    return this.dataset['00181261'];
  }

  // Scan Velocity
  get ScanVelocity(): any {
    const element = this.dataset['00181300'];
    return (element?.Value.length === 1)
      ? this.dataset['00181300']?.Value[0]
      : this.dataset['00181300']?.Value;
  }

  get '00181300'(): Element {
    return this.dataset['00181300'];
  }

  // Whole Body Technique
  get WholeBodyTechnique(): any {
    const element = this.dataset['00181301'];
    return (element?.Value.length === 1)
      ? this.dataset['00181301']?.Value[0]
      : this.dataset['00181301']?.Value;
  }

  get '00181301'(): Element {
    return this.dataset['00181301'];
  }

  // Scan Length
  get ScanLength(): any {
    const element = this.dataset['00181302'];
    return (element?.Value.length === 1)
      ? this.dataset['00181302']?.Value[0]
      : this.dataset['00181302']?.Value;
  }

  get '00181302'(): Element {
    return this.dataset['00181302'];
  }

  // Acquisition Matrix
  get AcquisitionMatrix(): any {
    const element = this.dataset['00181310'];
    return (element?.Value.length === 1)
      ? this.dataset['00181310']?.Value[0]
      : this.dataset['00181310']?.Value;
  }

  get '00181310'(): Element {
    return this.dataset['00181310'];
  }

  // In-plane Phase Encoding Direction
  get InPlanePhaseEncodingDirection(): any {
    const element = this.dataset['00181312'];
    return (element?.Value.length === 1)
      ? this.dataset['00181312']?.Value[0]
      : this.dataset['00181312']?.Value;
  }

  get '00181312'(): Element {
    return this.dataset['00181312'];
  }

  // Flip Angle
  get FlipAngle(): any {
    const element = this.dataset['00181314'];
    return (element?.Value.length === 1)
      ? this.dataset['00181314']?.Value[0]
      : this.dataset['00181314']?.Value;
  }

  get '00181314'(): Element {
    return this.dataset['00181314'];
  }

  // Variable Flip Angle Flag
  get VariableFlipAngleFlag(): any {
    const element = this.dataset['00181315'];
    return (element?.Value.length === 1)
      ? this.dataset['00181315']?.Value[0]
      : this.dataset['00181315']?.Value;
  }

  get '00181315'(): Element {
    return this.dataset['00181315'];
  }

  // SAR
  get SAR(): any {
    const element = this.dataset['00181316'];
    return (element?.Value.length === 1)
      ? this.dataset['00181316']?.Value[0]
      : this.dataset['00181316']?.Value;
  }

  get '00181316'(): Element {
    return this.dataset['00181316'];
  }

  // dB/dt
  get dBdt(): any {
    const element = this.dataset['00181318'];
    return (element?.Value.length === 1)
      ? this.dataset['00181318']?.Value[0]
      : this.dataset['00181318']?.Value;
  }

  get '00181318'(): Element {
    return this.dataset['00181318'];
  }

  // Acquisition Device Processing Description
  get AcquisitionDeviceProcessingDescription(): any {
    const element = this.dataset['00181400'];
    return (element?.Value.length === 1)
      ? this.dataset['00181400']?.Value[0]
      : this.dataset['00181400']?.Value;
  }

  get '00181400'(): Element {
    return this.dataset['00181400'];
  }

  // Acquisition Device Processing Code
  get AcquisitionDeviceProcessingCode(): any {
    const element = this.dataset['00181401'];
    return (element?.Value.length === 1)
      ? this.dataset['00181401']?.Value[0]
      : this.dataset['00181401']?.Value;
  }

  get '00181401'(): Element {
    return this.dataset['00181401'];
  }

  // Cassette Orientation
  get CassetteOrientation(): any {
    const element = this.dataset['00181402'];
    return (element?.Value.length === 1)
      ? this.dataset['00181402']?.Value[0]
      : this.dataset['00181402']?.Value;
  }

  get '00181402'(): Element {
    return this.dataset['00181402'];
  }

  // Cassette Size
  get CassetteSize(): any {
    const element = this.dataset['00181403'];
    return (element?.Value.length === 1)
      ? this.dataset['00181403']?.Value[0]
      : this.dataset['00181403']?.Value;
  }

  get '00181403'(): Element {
    return this.dataset['00181403'];
  }

  // Exposures on Plate
  get ExposuresOnPlate(): any {
    const element = this.dataset['00181404'];
    return (element?.Value.length === 1)
      ? this.dataset['00181404']?.Value[0]
      : this.dataset['00181404']?.Value;
  }

  get '00181404'(): Element {
    return this.dataset['00181404'];
  }

  // Relative X-Ray Exposure
  get RelativeXRayExposure(): any {
    const element = this.dataset['00181405'];
    return (element?.Value.length === 1)
      ? this.dataset['00181405']?.Value[0]
      : this.dataset['00181405']?.Value;
  }

  get '00181405'(): Element {
    return this.dataset['00181405'];
  }

  // Exposure Index
  get ExposureIndex(): any {
    const element = this.dataset['00181411'];
    return (element?.Value.length === 1)
      ? this.dataset['00181411']?.Value[0]
      : this.dataset['00181411']?.Value;
  }

  get '00181411'(): Element {
    return this.dataset['00181411'];
  }

  // Target Exposure Index
  get TargetExposureIndex(): any {
    const element = this.dataset['00181412'];
    return (element?.Value.length === 1)
      ? this.dataset['00181412']?.Value[0]
      : this.dataset['00181412']?.Value;
  }

  get '00181412'(): Element {
    return this.dataset['00181412'];
  }

  // Deviation Index
  get DeviationIndex(): any {
    const element = this.dataset['00181413'];
    return (element?.Value.length === 1)
      ? this.dataset['00181413']?.Value[0]
      : this.dataset['00181413']?.Value;
  }

  get '00181413'(): Element {
    return this.dataset['00181413'];
  }

  // Column Angulation
  get ColumnAngulation(): any {
    const element = this.dataset['00181450'];
    return (element?.Value.length === 1)
      ? this.dataset['00181450']?.Value[0]
      : this.dataset['00181450']?.Value;
  }

  get '00181450'(): Element {
    return this.dataset['00181450'];
  }

  // Tomo Layer Height
  get TomoLayerHeight(): any {
    const element = this.dataset['00181460'];
    return (element?.Value.length === 1)
      ? this.dataset['00181460']?.Value[0]
      : this.dataset['00181460']?.Value;
  }

  get '00181460'(): Element {
    return this.dataset['00181460'];
  }

  // Tomo Angle
  get TomoAngle(): any {
    const element = this.dataset['00181470'];
    return (element?.Value.length === 1)
      ? this.dataset['00181470']?.Value[0]
      : this.dataset['00181470']?.Value;
  }

  get '00181470'(): Element {
    return this.dataset['00181470'];
  }

  // Tomo Time
  get TomoTime(): any {
    const element = this.dataset['00181480'];
    return (element?.Value.length === 1)
      ? this.dataset['00181480']?.Value[0]
      : this.dataset['00181480']?.Value;
  }

  get '00181480'(): Element {
    return this.dataset['00181480'];
  }

  // Tomo Type
  get TomoType(): any {
    const element = this.dataset['00181490'];
    return (element?.Value.length === 1)
      ? this.dataset['00181490']?.Value[0]
      : this.dataset['00181490']?.Value;
  }

  get '00181490'(): Element {
    return this.dataset['00181490'];
  }

  // Tomo Class
  get TomoClass(): any {
    const element = this.dataset['00181491'];
    return (element?.Value.length === 1)
      ? this.dataset['00181491']?.Value[0]
      : this.dataset['00181491']?.Value;
  }

  get '00181491'(): Element {
    return this.dataset['00181491'];
  }

  // Number of Tomosynthesis Source Images
  get NumberOfTomosynthesisSourceImages(): any {
    const element = this.dataset['00181495'];
    return (element?.Value.length === 1)
      ? this.dataset['00181495']?.Value[0]
      : this.dataset['00181495']?.Value;
  }

  get '00181495'(): Element {
    return this.dataset['00181495'];
  }

  // Positioner Motion
  get PositionerMotion(): any {
    const element = this.dataset['00181500'];
    return (element?.Value.length === 1)
      ? this.dataset['00181500']?.Value[0]
      : this.dataset['00181500']?.Value;
  }

  get '00181500'(): Element {
    return this.dataset['00181500'];
  }

  // Positioner Type
  get PositionerType(): any {
    const element = this.dataset['00181508'];
    return (element?.Value.length === 1)
      ? this.dataset['00181508']?.Value[0]
      : this.dataset['00181508']?.Value;
  }

  get '00181508'(): Element {
    return this.dataset['00181508'];
  }

  // Positioner Primary Angle
  get PositionerPrimaryAngle(): any {
    const element = this.dataset['00181510'];
    return (element?.Value.length === 1)
      ? this.dataset['00181510']?.Value[0]
      : this.dataset['00181510']?.Value;
  }

  get '00181510'(): Element {
    return this.dataset['00181510'];
  }

  // Positioner Secondary Angle
  get PositionerSecondaryAngle(): any {
    const element = this.dataset['00181511'];
    return (element?.Value.length === 1)
      ? this.dataset['00181511']?.Value[0]
      : this.dataset['00181511']?.Value;
  }

  get '00181511'(): Element {
    return this.dataset['00181511'];
  }

  // Positioner Primary Angle Increment
  get PositionerPrimaryAngleIncrement(): any {
    const element = this.dataset['00181520'];
    return (element?.Value.length === 1)
      ? this.dataset['00181520']?.Value[0]
      : this.dataset['00181520']?.Value;
  }

  get '00181520'(): Element {
    return this.dataset['00181520'];
  }

  // Positioner Secondary Angle Increment
  get PositionerSecondaryAngleIncrement(): any {
    const element = this.dataset['00181521'];
    return (element?.Value.length === 1)
      ? this.dataset['00181521']?.Value[0]
      : this.dataset['00181521']?.Value;
  }

  get '00181521'(): Element {
    return this.dataset['00181521'];
  }

  // Detector Primary Angle
  get DetectorPrimaryAngle(): any {
    const element = this.dataset['00181530'];
    return (element?.Value.length === 1)
      ? this.dataset['00181530']?.Value[0]
      : this.dataset['00181530']?.Value;
  }

  get '00181530'(): Element {
    return this.dataset['00181530'];
  }

  // Detector Secondary Angle
  get DetectorSecondaryAngle(): any {
    const element = this.dataset['00181531'];
    return (element?.Value.length === 1)
      ? this.dataset['00181531']?.Value[0]
      : this.dataset['00181531']?.Value;
  }

  get '00181531'(): Element {
    return this.dataset['00181531'];
  }

  // Shutter Shape
  get ShutterShape(): any {
    const element = this.dataset['00181600'];
    return (element?.Value.length === 1)
      ? this.dataset['00181600']?.Value[0]
      : this.dataset['00181600']?.Value;
  }

  get '00181600'(): Element {
    return this.dataset['00181600'];
  }

  // Shutter Left Vertical Edge
  get ShutterLeftVerticalEdge(): any {
    const element = this.dataset['00181602'];
    return (element?.Value.length === 1)
      ? this.dataset['00181602']?.Value[0]
      : this.dataset['00181602']?.Value;
  }

  get '00181602'(): Element {
    return this.dataset['00181602'];
  }

  // Shutter Right Vertical Edge
  get ShutterRightVerticalEdge(): any {
    const element = this.dataset['00181604'];
    return (element?.Value.length === 1)
      ? this.dataset['00181604']?.Value[0]
      : this.dataset['00181604']?.Value;
  }

  get '00181604'(): Element {
    return this.dataset['00181604'];
  }

  // Shutter Upper Horizontal Edge
  get ShutterUpperHorizontalEdge(): any {
    const element = this.dataset['00181606'];
    return (element?.Value.length === 1)
      ? this.dataset['00181606']?.Value[0]
      : this.dataset['00181606']?.Value;
  }

  get '00181606'(): Element {
    return this.dataset['00181606'];
  }

  // Shutter Lower Horizontal Edge
  get ShutterLowerHorizontalEdge(): any {
    const element = this.dataset['00181608'];
    return (element?.Value.length === 1)
      ? this.dataset['00181608']?.Value[0]
      : this.dataset['00181608']?.Value;
  }

  get '00181608'(): Element {
    return this.dataset['00181608'];
  }

  // Center of Circular Shutter
  get CenterOfCircularShutter(): any {
    const element = this.dataset['00181610'];
    return (element?.Value.length === 1)
      ? this.dataset['00181610']?.Value[0]
      : this.dataset['00181610']?.Value;
  }

  get '00181610'(): Element {
    return this.dataset['00181610'];
  }

  // Radius of Circular Shutter
  get RadiusOfCircularShutter(): any {
    const element = this.dataset['00181612'];
    return (element?.Value.length === 1)
      ? this.dataset['00181612']?.Value[0]
      : this.dataset['00181612']?.Value;
  }

  get '00181612'(): Element {
    return this.dataset['00181612'];
  }

  // Vertices of the Polygonal Shutter
  get VerticesOfThePolygonalShutter(): any {
    const element = this.dataset['00181620'];
    return (element?.Value.length === 1)
      ? this.dataset['00181620']?.Value[0]
      : this.dataset['00181620']?.Value;
  }

  get '00181620'(): Element {
    return this.dataset['00181620'];
  }

  // Shutter Presentation Value
  get ShutterPresentationValue(): any {
    const element = this.dataset['00181622'];
    return (element?.Value.length === 1)
      ? this.dataset['00181622']?.Value[0]
      : this.dataset['00181622']?.Value;
  }

  get '00181622'(): Element {
    return this.dataset['00181622'];
  }

  // Shutter Overlay Group
  get ShutterOverlayGroup(): any {
    const element = this.dataset['00181623'];
    return (element?.Value.length === 1)
      ? this.dataset['00181623']?.Value[0]
      : this.dataset['00181623']?.Value;
  }

  get '00181623'(): Element {
    return this.dataset['00181623'];
  }

  // Shutter Presentation Color CIELab Value
  get ShutterPresentationColorCIELabValue(): any {
    const element = this.dataset['00181624'];
    return (element?.Value.length === 1)
      ? this.dataset['00181624']?.Value[0]
      : this.dataset['00181624']?.Value;
  }

  get '00181624'(): Element {
    return this.dataset['00181624'];
  }

  // Collimator Shape
  get CollimatorShape(): any {
    const element = this.dataset['00181700'];
    return (element?.Value.length === 1)
      ? this.dataset['00181700']?.Value[0]
      : this.dataset['00181700']?.Value;
  }

  get '00181700'(): Element {
    return this.dataset['00181700'];
  }

  // Collimator Left Vertical Edge
  get CollimatorLeftVerticalEdge(): any {
    const element = this.dataset['00181702'];
    return (element?.Value.length === 1)
      ? this.dataset['00181702']?.Value[0]
      : this.dataset['00181702']?.Value;
  }

  get '00181702'(): Element {
    return this.dataset['00181702'];
  }

  // Collimator Right Vertical Edge
  get CollimatorRightVerticalEdge(): any {
    const element = this.dataset['00181704'];
    return (element?.Value.length === 1)
      ? this.dataset['00181704']?.Value[0]
      : this.dataset['00181704']?.Value;
  }

  get '00181704'(): Element {
    return this.dataset['00181704'];
  }

  // Collimator Upper Horizontal Edge
  get CollimatorUpperHorizontalEdge(): any {
    const element = this.dataset['00181706'];
    return (element?.Value.length === 1)
      ? this.dataset['00181706']?.Value[0]
      : this.dataset['00181706']?.Value;
  }

  get '00181706'(): Element {
    return this.dataset['00181706'];
  }

  // Collimator Lower Horizontal Edge
  get CollimatorLowerHorizontalEdge(): any {
    const element = this.dataset['00181708'];
    return (element?.Value.length === 1)
      ? this.dataset['00181708']?.Value[0]
      : this.dataset['00181708']?.Value;
  }

  get '00181708'(): Element {
    return this.dataset['00181708'];
  }

  // Center of Circular Collimator
  get CenterOfCircularCollimator(): any {
    const element = this.dataset['00181710'];
    return (element?.Value.length === 1)
      ? this.dataset['00181710']?.Value[0]
      : this.dataset['00181710']?.Value;
  }

  get '00181710'(): Element {
    return this.dataset['00181710'];
  }

  // Radius of Circular Collimator
  get RadiusOfCircularCollimator(): any {
    const element = this.dataset['00181712'];
    return (element?.Value.length === 1)
      ? this.dataset['00181712']?.Value[0]
      : this.dataset['00181712']?.Value;
  }

  get '00181712'(): Element {
    return this.dataset['00181712'];
  }

  // Vertices of the Polygonal Collimator
  get VerticesOfThePolygonalCollimator(): any {
    const element = this.dataset['00181720'];
    return (element?.Value.length === 1)
      ? this.dataset['00181720']?.Value[0]
      : this.dataset['00181720']?.Value;
  }

  get '00181720'(): Element {
    return this.dataset['00181720'];
  }

  // Acquisition Time Synchronized
  get AcquisitionTimeSynchronized(): any {
    const element = this.dataset['00181800'];
    return (element?.Value.length === 1)
      ? this.dataset['00181800']?.Value[0]
      : this.dataset['00181800']?.Value;
  }

  get '00181800'(): Element {
    return this.dataset['00181800'];
  }

  // Time Source
  get TimeSource(): any {
    const element = this.dataset['00181801'];
    return (element?.Value.length === 1)
      ? this.dataset['00181801']?.Value[0]
      : this.dataset['00181801']?.Value;
  }

  get '00181801'(): Element {
    return this.dataset['00181801'];
  }

  // Time Distribution Protocol
  get TimeDistributionProtocol(): any {
    const element = this.dataset['00181802'];
    return (element?.Value.length === 1)
      ? this.dataset['00181802']?.Value[0]
      : this.dataset['00181802']?.Value;
  }

  get '00181802'(): Element {
    return this.dataset['00181802'];
  }

  // NTP Source Address
  get NTPSourceAddress(): any {
    const element = this.dataset['00181803'];
    return (element?.Value.length === 1)
      ? this.dataset['00181803']?.Value[0]
      : this.dataset['00181803']?.Value;
  }

  get '00181803'(): Element {
    return this.dataset['00181803'];
  }

  // Page Number Vector
  get PageNumberVector(): any {
    const element = this.dataset['00182001'];
    return (element?.Value.length === 1)
      ? this.dataset['00182001']?.Value[0]
      : this.dataset['00182001']?.Value;
  }

  get '00182001'(): Element {
    return this.dataset['00182001'];
  }

  // Frame Label Vector
  get FrameLabelVector(): any {
    const element = this.dataset['00182002'];
    return (element?.Value.length === 1)
      ? this.dataset['00182002']?.Value[0]
      : this.dataset['00182002']?.Value;
  }

  get '00182002'(): Element {
    return this.dataset['00182002'];
  }

  // Frame Primary Angle Vector
  get FramePrimaryAngleVector(): any {
    const element = this.dataset['00182003'];
    return (element?.Value.length === 1)
      ? this.dataset['00182003']?.Value[0]
      : this.dataset['00182003']?.Value;
  }

  get '00182003'(): Element {
    return this.dataset['00182003'];
  }

  // Frame Secondary Angle Vector
  get FrameSecondaryAngleVector(): any {
    const element = this.dataset['00182004'];
    return (element?.Value.length === 1)
      ? this.dataset['00182004']?.Value[0]
      : this.dataset['00182004']?.Value;
  }

  get '00182004'(): Element {
    return this.dataset['00182004'];
  }

  // Slice Location Vector
  get SliceLocationVector(): any {
    const element = this.dataset['00182005'];
    return (element?.Value.length === 1)
      ? this.dataset['00182005']?.Value[0]
      : this.dataset['00182005']?.Value;
  }

  get '00182005'(): Element {
    return this.dataset['00182005'];
  }

  // Display Window Label Vector
  get DisplayWindowLabelVector(): any {
    const element = this.dataset['00182006'];
    return (element?.Value.length === 1)
      ? this.dataset['00182006']?.Value[0]
      : this.dataset['00182006']?.Value;
  }

  get '00182006'(): Element {
    return this.dataset['00182006'];
  }

  // Nominal Scanned Pixel Spacing
  get NominalScannedPixelSpacing(): any {
    const element = this.dataset['00182010'];
    return (element?.Value.length === 1)
      ? this.dataset['00182010']?.Value[0]
      : this.dataset['00182010']?.Value;
  }

  get '00182010'(): Element {
    return this.dataset['00182010'];
  }

  // Digitizing Device Transport Direction
  get DigitizingDeviceTransportDirection(): any {
    const element = this.dataset['00182020'];
    return (element?.Value.length === 1)
      ? this.dataset['00182020']?.Value[0]
      : this.dataset['00182020']?.Value;
  }

  get '00182020'(): Element {
    return this.dataset['00182020'];
  }

  // Rotation of Scanned Film
  get RotationOfScannedFilm(): any {
    const element = this.dataset['00182030'];
    return (element?.Value.length === 1)
      ? this.dataset['00182030']?.Value[0]
      : this.dataset['00182030']?.Value;
  }

  get '00182030'(): Element {
    return this.dataset['00182030'];
  }

  // Biopsy Target Sequence
  get BiopsyTargetSequence(): any {
    const element = this.dataset['00182041'];
    return (element?.Value.length === 1)
      ? this.dataset['00182041']?.Value[0]
      : this.dataset['00182041']?.Value;
  }

  get '00182041'(): Element {
    return this.dataset['00182041'];
  }

  // Target UID
  get TargetUID(): any {
    const element = this.dataset['00182042'];
    return (element?.Value.length === 1)
      ? this.dataset['00182042']?.Value[0]
      : this.dataset['00182042']?.Value;
  }

  get '00182042'(): Element {
    return this.dataset['00182042'];
  }

  // Localizing Cursor Position
  get LocalizingCursorPosition(): any {
    const element = this.dataset['00182043'];
    return (element?.Value.length === 1)
      ? this.dataset['00182043']?.Value[0]
      : this.dataset['00182043']?.Value;
  }

  get '00182043'(): Element {
    return this.dataset['00182043'];
  }

  // Calculated Target Position
  get CalculatedTargetPosition(): any {
    const element = this.dataset['00182044'];
    return (element?.Value.length === 1)
      ? this.dataset['00182044']?.Value[0]
      : this.dataset['00182044']?.Value;
  }

  get '00182044'(): Element {
    return this.dataset['00182044'];
  }

  // Target Label
  get TargetLabel(): any {
    const element = this.dataset['00182045'];
    return (element?.Value.length === 1)
      ? this.dataset['00182045']?.Value[0]
      : this.dataset['00182045']?.Value;
  }

  get '00182045'(): Element {
    return this.dataset['00182045'];
  }

  // Displayed Z Value
  get DisplayedZValue(): any {
    const element = this.dataset['00182046'];
    return (element?.Value.length === 1)
      ? this.dataset['00182046']?.Value[0]
      : this.dataset['00182046']?.Value;
  }

  get '00182046'(): Element {
    return this.dataset['00182046'];
  }

  // IVUS Acquisition
  get IVUSAcquisition(): any {
    const element = this.dataset['00183100'];
    return (element?.Value.length === 1)
      ? this.dataset['00183100']?.Value[0]
      : this.dataset['00183100']?.Value;
  }

  get '00183100'(): Element {
    return this.dataset['00183100'];
  }

  // IVUS Pullback Rate
  get IVUSPullbackRate(): any {
    const element = this.dataset['00183101'];
    return (element?.Value.length === 1)
      ? this.dataset['00183101']?.Value[0]
      : this.dataset['00183101']?.Value;
  }

  get '00183101'(): Element {
    return this.dataset['00183101'];
  }

  // IVUS Gated Rate
  get IVUSGatedRate(): any {
    const element = this.dataset['00183102'];
    return (element?.Value.length === 1)
      ? this.dataset['00183102']?.Value[0]
      : this.dataset['00183102']?.Value;
  }

  get '00183102'(): Element {
    return this.dataset['00183102'];
  }

  // IVUS Pullback Start Frame Number
  get IVUSPullbackStartFrameNumber(): any {
    const element = this.dataset['00183103'];
    return (element?.Value.length === 1)
      ? this.dataset['00183103']?.Value[0]
      : this.dataset['00183103']?.Value;
  }

  get '00183103'(): Element {
    return this.dataset['00183103'];
  }

  // IVUS Pullback Stop Frame Number
  get IVUSPullbackStopFrameNumber(): any {
    const element = this.dataset['00183104'];
    return (element?.Value.length === 1)
      ? this.dataset['00183104']?.Value[0]
      : this.dataset['00183104']?.Value;
  }

  get '00183104'(): Element {
    return this.dataset['00183104'];
  }

  // Lesion Number
  get LesionNumber(): any {
    const element = this.dataset['00183105'];
    return (element?.Value.length === 1)
      ? this.dataset['00183105']?.Value[0]
      : this.dataset['00183105']?.Value;
  }

  get '00183105'(): Element {
    return this.dataset['00183105'];
  }

  // Acquisition Comments
  get AcquisitionComments(): any {
    const element = this.dataset['00184000'];
    return (element?.Value.length === 1)
      ? this.dataset['00184000']?.Value[0]
      : this.dataset['00184000']?.Value;
  }

  get '00184000'(): Element {
    return this.dataset['00184000'];
  }

  // Output Power
  get OutputPower(): any {
    const element = this.dataset['00185000'];
    return (element?.Value.length === 1)
      ? this.dataset['00185000']?.Value[0]
      : this.dataset['00185000']?.Value;
  }

  get '00185000'(): Element {
    return this.dataset['00185000'];
  }

  // Transducer Data
  get TransducerData(): any {
    const element = this.dataset['00185010'];
    return (element?.Value.length === 1)
      ? this.dataset['00185010']?.Value[0]
      : this.dataset['00185010']?.Value;
  }

  get '00185010'(): Element {
    return this.dataset['00185010'];
  }

  // Focus Depth
  get FocusDepth(): any {
    const element = this.dataset['00185012'];
    return (element?.Value.length === 1)
      ? this.dataset['00185012']?.Value[0]
      : this.dataset['00185012']?.Value;
  }

  get '00185012'(): Element {
    return this.dataset['00185012'];
  }

  // Processing Function
  get ProcessingFunction(): any {
    const element = this.dataset['00185020'];
    return (element?.Value.length === 1)
      ? this.dataset['00185020']?.Value[0]
      : this.dataset['00185020']?.Value;
  }

  get '00185020'(): Element {
    return this.dataset['00185020'];
  }

  // Postprocessing Function
  get PostprocessingFunction(): any {
    const element = this.dataset['00185021'];
    return (element?.Value.length === 1)
      ? this.dataset['00185021']?.Value[0]
      : this.dataset['00185021']?.Value;
  }

  get '00185021'(): Element {
    return this.dataset['00185021'];
  }

  // Mechanical Index
  get MechanicalIndex(): any {
    const element = this.dataset['00185022'];
    return (element?.Value.length === 1)
      ? this.dataset['00185022']?.Value[0]
      : this.dataset['00185022']?.Value;
  }

  get '00185022'(): Element {
    return this.dataset['00185022'];
  }

  // Bone Thermal Index
  get BoneThermalIndex(): any {
    const element = this.dataset['00185024'];
    return (element?.Value.length === 1)
      ? this.dataset['00185024']?.Value[0]
      : this.dataset['00185024']?.Value;
  }

  get '00185024'(): Element {
    return this.dataset['00185024'];
  }

  // Cranial Thermal Index
  get CranialThermalIndex(): any {
    const element = this.dataset['00185026'];
    return (element?.Value.length === 1)
      ? this.dataset['00185026']?.Value[0]
      : this.dataset['00185026']?.Value;
  }

  get '00185026'(): Element {
    return this.dataset['00185026'];
  }

  // Soft Tissue Thermal Index
  get SoftTissueThermalIndex(): any {
    const element = this.dataset['00185027'];
    return (element?.Value.length === 1)
      ? this.dataset['00185027']?.Value[0]
      : this.dataset['00185027']?.Value;
  }

  get '00185027'(): Element {
    return this.dataset['00185027'];
  }

  // Soft Tissue-focus Thermal Index
  get SoftTissueFocusThermalIndex(): any {
    const element = this.dataset['00185028'];
    return (element?.Value.length === 1)
      ? this.dataset['00185028']?.Value[0]
      : this.dataset['00185028']?.Value;
  }

  get '00185028'(): Element {
    return this.dataset['00185028'];
  }

  // Soft Tissue-surface Thermal Index
  get SoftTissueSurfaceThermalIndex(): any {
    const element = this.dataset['00185029'];
    return (element?.Value.length === 1)
      ? this.dataset['00185029']?.Value[0]
      : this.dataset['00185029']?.Value;
  }

  get '00185029'(): Element {
    return this.dataset['00185029'];
  }

  // Dynamic Range
  get DynamicRange(): any {
    const element = this.dataset['00185030'];
    return (element?.Value.length === 1)
      ? this.dataset['00185030']?.Value[0]
      : this.dataset['00185030']?.Value;
  }

  get '00185030'(): Element {
    return this.dataset['00185030'];
  }

  // Total Gain
  get TotalGain(): any {
    const element = this.dataset['00185040'];
    return (element?.Value.length === 1)
      ? this.dataset['00185040']?.Value[0]
      : this.dataset['00185040']?.Value;
  }

  get '00185040'(): Element {
    return this.dataset['00185040'];
  }

  // Depth of Scan Field
  get DepthOfScanField(): any {
    const element = this.dataset['00185050'];
    return (element?.Value.length === 1)
      ? this.dataset['00185050']?.Value[0]
      : this.dataset['00185050']?.Value;
  }

  get '00185050'(): Element {
    return this.dataset['00185050'];
  }

  // Patient Position
  get PatientPosition(): any {
    const element = this.dataset['00185100'];
    return (element?.Value.length === 1)
      ? this.dataset['00185100']?.Value[0]
      : this.dataset['00185100']?.Value;
  }

  get '00185100'(): Element {
    return this.dataset['00185100'];
  }

  // View Position
  get ViewPosition(): any {
    const element = this.dataset['00185101'];
    return (element?.Value.length === 1)
      ? this.dataset['00185101']?.Value[0]
      : this.dataset['00185101']?.Value;
  }

  get '00185101'(): Element {
    return this.dataset['00185101'];
  }

  // Projection Eponymous Name Code Sequence
  get ProjectionEponymousNameCodeSequence(): any {
    const element = this.dataset['00185104'];
    return (element?.Value.length === 1)
      ? this.dataset['00185104']?.Value[0]
      : this.dataset['00185104']?.Value;
  }

  get '00185104'(): Element {
    return this.dataset['00185104'];
  }

  // Image Transformation Matrix
  get ImageTransformationMatrix(): any {
    const element = this.dataset['00185210'];
    return (element?.Value.length === 1)
      ? this.dataset['00185210']?.Value[0]
      : this.dataset['00185210']?.Value;
  }

  get '00185210'(): Element {
    return this.dataset['00185210'];
  }

  // Image Translation Vector
  get ImageTranslationVector(): any {
    const element = this.dataset['00185212'];
    return (element?.Value.length === 1)
      ? this.dataset['00185212']?.Value[0]
      : this.dataset['00185212']?.Value;
  }

  get '00185212'(): Element {
    return this.dataset['00185212'];
  }

  // Sensitivity
  get Sensitivity(): any {
    const element = this.dataset['00186000'];
    return (element?.Value.length === 1)
      ? this.dataset['00186000']?.Value[0]
      : this.dataset['00186000']?.Value;
  }

  get '00186000'(): Element {
    return this.dataset['00186000'];
  }

  // Sequence of Ultrasound Regions
  get SequenceOfUltrasoundRegions(): any {
    const element = this.dataset['00186011'];
    return (element?.Value.length === 1)
      ? this.dataset['00186011']?.Value[0]
      : this.dataset['00186011']?.Value;
  }

  get '00186011'(): Element {
    return this.dataset['00186011'];
  }

  // Region Spatial Format
  get RegionSpatialFormat(): any {
    const element = this.dataset['00186012'];
    return (element?.Value.length === 1)
      ? this.dataset['00186012']?.Value[0]
      : this.dataset['00186012']?.Value;
  }

  get '00186012'(): Element {
    return this.dataset['00186012'];
  }

  // Region Data Type
  get RegionDataType(): any {
    const element = this.dataset['00186014'];
    return (element?.Value.length === 1)
      ? this.dataset['00186014']?.Value[0]
      : this.dataset['00186014']?.Value;
  }

  get '00186014'(): Element {
    return this.dataset['00186014'];
  }

  // Region Flags
  get RegionFlags(): any {
    const element = this.dataset['00186016'];
    return (element?.Value.length === 1)
      ? this.dataset['00186016']?.Value[0]
      : this.dataset['00186016']?.Value;
  }

  get '00186016'(): Element {
    return this.dataset['00186016'];
  }

  // Region Location Min X0
  get RegionLocationMinX0(): any {
    const element = this.dataset['00186018'];
    return (element?.Value.length === 1)
      ? this.dataset['00186018']?.Value[0]
      : this.dataset['00186018']?.Value;
  }

  get '00186018'(): Element {
    return this.dataset['00186018'];
  }

  // Region Location Min Y0
  get RegionLocationMinY0(): any {
    const element = this.dataset['0018601A'];
    return (element?.Value.length === 1)
      ? this.dataset['0018601A']?.Value[0]
      : this.dataset['0018601A']?.Value;
  }

  get '0018601A'(): Element {
    return this.dataset['0018601A'];
  }

  // Region Location Max X1
  get RegionLocationMaxX1(): any {
    const element = this.dataset['0018601C'];
    return (element?.Value.length === 1)
      ? this.dataset['0018601C']?.Value[0]
      : this.dataset['0018601C']?.Value;
  }

  get '0018601C'(): Element {
    return this.dataset['0018601C'];
  }

  // Region Location Max Y1
  get RegionLocationMaxY1(): any {
    const element = this.dataset['0018601E'];
    return (element?.Value.length === 1)
      ? this.dataset['0018601E']?.Value[0]
      : this.dataset['0018601E']?.Value;
  }

  get '0018601E'(): Element {
    return this.dataset['0018601E'];
  }

  // Reference Pixel X0
  get ReferencePixelX0(): any {
    const element = this.dataset['00186020'];
    return (element?.Value.length === 1)
      ? this.dataset['00186020']?.Value[0]
      : this.dataset['00186020']?.Value;
  }

  get '00186020'(): Element {
    return this.dataset['00186020'];
  }

  // Reference Pixel Y0
  get ReferencePixelY0(): any {
    const element = this.dataset['00186022'];
    return (element?.Value.length === 1)
      ? this.dataset['00186022']?.Value[0]
      : this.dataset['00186022']?.Value;
  }

  get '00186022'(): Element {
    return this.dataset['00186022'];
  }

  // Physical Units X Direction
  get PhysicalUnitsXDirection(): any {
    const element = this.dataset['00186024'];
    return (element?.Value.length === 1)
      ? this.dataset['00186024']?.Value[0]
      : this.dataset['00186024']?.Value;
  }

  get '00186024'(): Element {
    return this.dataset['00186024'];
  }

  // Physical Units Y Direction
  get PhysicalUnitsYDirection(): any {
    const element = this.dataset['00186026'];
    return (element?.Value.length === 1)
      ? this.dataset['00186026']?.Value[0]
      : this.dataset['00186026']?.Value;
  }

  get '00186026'(): Element {
    return this.dataset['00186026'];
  }

  // Reference Pixel Physical Value X
  get ReferencePixelPhysicalValueX(): any {
    const element = this.dataset['00186028'];
    return (element?.Value.length === 1)
      ? this.dataset['00186028']?.Value[0]
      : this.dataset['00186028']?.Value;
  }

  get '00186028'(): Element {
    return this.dataset['00186028'];
  }

  // Reference Pixel Physical Value Y
  get ReferencePixelPhysicalValueY(): any {
    const element = this.dataset['0018602A'];
    return (element?.Value.length === 1)
      ? this.dataset['0018602A']?.Value[0]
      : this.dataset['0018602A']?.Value;
  }

  get '0018602A'(): Element {
    return this.dataset['0018602A'];
  }

  // Physical Delta X
  get PhysicalDeltaX(): any {
    const element = this.dataset['0018602C'];
    return (element?.Value.length === 1)
      ? this.dataset['0018602C']?.Value[0]
      : this.dataset['0018602C']?.Value;
  }

  get '0018602C'(): Element {
    return this.dataset['0018602C'];
  }

  // Physical Delta Y
  get PhysicalDeltaY(): any {
    const element = this.dataset['0018602E'];
    return (element?.Value.length === 1)
      ? this.dataset['0018602E']?.Value[0]
      : this.dataset['0018602E']?.Value;
  }

  get '0018602E'(): Element {
    return this.dataset['0018602E'];
  }

  // Transducer Frequency
  get TransducerFrequency(): any {
    const element = this.dataset['00186030'];
    return (element?.Value.length === 1)
      ? this.dataset['00186030']?.Value[0]
      : this.dataset['00186030']?.Value;
  }

  get '00186030'(): Element {
    return this.dataset['00186030'];
  }

  // Transducer Type
  get TransducerType(): any {
    const element = this.dataset['00186031'];
    return (element?.Value.length === 1)
      ? this.dataset['00186031']?.Value[0]
      : this.dataset['00186031']?.Value;
  }

  get '00186031'(): Element {
    return this.dataset['00186031'];
  }

  // Pulse Repetition Frequency
  get PulseRepetitionFrequency(): any {
    const element = this.dataset['00186032'];
    return (element?.Value.length === 1)
      ? this.dataset['00186032']?.Value[0]
      : this.dataset['00186032']?.Value;
  }

  get '00186032'(): Element {
    return this.dataset['00186032'];
  }

  // Doppler Correction Angle
  get DopplerCorrectionAngle(): any {
    const element = this.dataset['00186034'];
    return (element?.Value.length === 1)
      ? this.dataset['00186034']?.Value[0]
      : this.dataset['00186034']?.Value;
  }

  get '00186034'(): Element {
    return this.dataset['00186034'];
  }

  // Steering Angle
  get SteeringAngle(): any {
    const element = this.dataset['00186036'];
    return (element?.Value.length === 1)
      ? this.dataset['00186036']?.Value[0]
      : this.dataset['00186036']?.Value;
  }

  get '00186036'(): Element {
    return this.dataset['00186036'];
  }

  // Doppler Sample Volume X Position (Retired)
  get DopplerSampleVolumeXPositionRetired(): any {
    const element = this.dataset['00186038'];
    return (element?.Value.length === 1)
      ? this.dataset['00186038']?.Value[0]
      : this.dataset['00186038']?.Value;
  }

  get '00186038'(): Element {
    return this.dataset['00186038'];
  }

  // Doppler Sample Volume X Position
  get DopplerSampleVolumeXPosition(): any {
    const element = this.dataset['00186039'];
    return (element?.Value.length === 1)
      ? this.dataset['00186039']?.Value[0]
      : this.dataset['00186039']?.Value;
  }

  get '00186039'(): Element {
    return this.dataset['00186039'];
  }

  // Doppler Sample Volume Y Position (Retired)
  get DopplerSampleVolumeYPositionRetired(): any {
    const element = this.dataset['0018603A'];
    return (element?.Value.length === 1)
      ? this.dataset['0018603A']?.Value[0]
      : this.dataset['0018603A']?.Value;
  }

  get '0018603A'(): Element {
    return this.dataset['0018603A'];
  }

  // Doppler Sample Volume Y Position
  get DopplerSampleVolumeYPosition(): any {
    const element = this.dataset['0018603B'];
    return (element?.Value.length === 1)
      ? this.dataset['0018603B']?.Value[0]
      : this.dataset['0018603B']?.Value;
  }

  get '0018603B'(): Element {
    return this.dataset['0018603B'];
  }

  // TM-Line Position X0 (Retired)
  get TMLinePositionX0Retired(): any {
    const element = this.dataset['0018603C'];
    return (element?.Value.length === 1)
      ? this.dataset['0018603C']?.Value[0]
      : this.dataset['0018603C']?.Value;
  }

  get '0018603C'(): Element {
    return this.dataset['0018603C'];
  }

  // TM-Line Position X0
  get TMLinePositionX0(): any {
    const element = this.dataset['0018603D'];
    return (element?.Value.length === 1)
      ? this.dataset['0018603D']?.Value[0]
      : this.dataset['0018603D']?.Value;
  }

  get '0018603D'(): Element {
    return this.dataset['0018603D'];
  }

  // TM-Line Position Y0 (Retired)
  get TMLinePositionY0Retired(): any {
    const element = this.dataset['0018603E'];
    return (element?.Value.length === 1)
      ? this.dataset['0018603E']?.Value[0]
      : this.dataset['0018603E']?.Value;
  }

  get '0018603E'(): Element {
    return this.dataset['0018603E'];
  }

  // TM-Line Position Y0
  get TMLinePositionY0(): any {
    const element = this.dataset['0018603F'];
    return (element?.Value.length === 1)
      ? this.dataset['0018603F']?.Value[0]
      : this.dataset['0018603F']?.Value;
  }

  get '0018603F'(): Element {
    return this.dataset['0018603F'];
  }

  // TM-Line Position X1 (Retired)
  get TMLinePositionX1Retired(): any {
    const element = this.dataset['00186040'];
    return (element?.Value.length === 1)
      ? this.dataset['00186040']?.Value[0]
      : this.dataset['00186040']?.Value;
  }

  get '00186040'(): Element {
    return this.dataset['00186040'];
  }

  // TM-Line Position X1
  get TMLinePositionX1(): any {
    const element = this.dataset['00186041'];
    return (element?.Value.length === 1)
      ? this.dataset['00186041']?.Value[0]
      : this.dataset['00186041']?.Value;
  }

  get '00186041'(): Element {
    return this.dataset['00186041'];
  }

  // TM-Line Position Y1 (Retired)
  get TMLinePositionY1Retired(): any {
    const element = this.dataset['00186042'];
    return (element?.Value.length === 1)
      ? this.dataset['00186042']?.Value[0]
      : this.dataset['00186042']?.Value;
  }

  get '00186042'(): Element {
    return this.dataset['00186042'];
  }

  // TM-Line Position Y1
  get TMLinePositionY1(): any {
    const element = this.dataset['00186043'];
    return (element?.Value.length === 1)
      ? this.dataset['00186043']?.Value[0]
      : this.dataset['00186043']?.Value;
  }

  get '00186043'(): Element {
    return this.dataset['00186043'];
  }

  // Pixel Component Organization
  get PixelComponentOrganization(): any {
    const element = this.dataset['00186044'];
    return (element?.Value.length === 1)
      ? this.dataset['00186044']?.Value[0]
      : this.dataset['00186044']?.Value;
  }

  get '00186044'(): Element {
    return this.dataset['00186044'];
  }

  // Pixel Component Mask
  get PixelComponentMask(): any {
    const element = this.dataset['00186046'];
    return (element?.Value.length === 1)
      ? this.dataset['00186046']?.Value[0]
      : this.dataset['00186046']?.Value;
  }

  get '00186046'(): Element {
    return this.dataset['00186046'];
  }

  // Pixel Component Range Start
  get PixelComponentRangeStart(): any {
    const element = this.dataset['00186048'];
    return (element?.Value.length === 1)
      ? this.dataset['00186048']?.Value[0]
      : this.dataset['00186048']?.Value;
  }

  get '00186048'(): Element {
    return this.dataset['00186048'];
  }

  // Pixel Component Range Stop
  get PixelComponentRangeStop(): any {
    const element = this.dataset['0018604A'];
    return (element?.Value.length === 1)
      ? this.dataset['0018604A']?.Value[0]
      : this.dataset['0018604A']?.Value;
  }

  get '0018604A'(): Element {
    return this.dataset['0018604A'];
  }

  // Pixel Component Physical Units
  get PixelComponentPhysicalUnits(): any {
    const element = this.dataset['0018604C'];
    return (element?.Value.length === 1)
      ? this.dataset['0018604C']?.Value[0]
      : this.dataset['0018604C']?.Value;
  }

  get '0018604C'(): Element {
    return this.dataset['0018604C'];
  }

  // Pixel Component Data Type
  get PixelComponentDataType(): any {
    const element = this.dataset['0018604E'];
    return (element?.Value.length === 1)
      ? this.dataset['0018604E']?.Value[0]
      : this.dataset['0018604E']?.Value;
  }

  get '0018604E'(): Element {
    return this.dataset['0018604E'];
  }

  // Number of Table Break Points
  get NumberOfTableBreakPoints(): any {
    const element = this.dataset['00186050'];
    return (element?.Value.length === 1)
      ? this.dataset['00186050']?.Value[0]
      : this.dataset['00186050']?.Value;
  }

  get '00186050'(): Element {
    return this.dataset['00186050'];
  }

  // Table of X Break Points
  get TableOfXBreakPoints(): any {
    const element = this.dataset['00186052'];
    return (element?.Value.length === 1)
      ? this.dataset['00186052']?.Value[0]
      : this.dataset['00186052']?.Value;
  }

  get '00186052'(): Element {
    return this.dataset['00186052'];
  }

  // Table of Y Break Points
  get TableOfYBreakPoints(): any {
    const element = this.dataset['00186054'];
    return (element?.Value.length === 1)
      ? this.dataset['00186054']?.Value[0]
      : this.dataset['00186054']?.Value;
  }

  get '00186054'(): Element {
    return this.dataset['00186054'];
  }

  // Number of Table Entries
  get NumberOfTableEntries(): any {
    const element = this.dataset['00186056'];
    return (element?.Value.length === 1)
      ? this.dataset['00186056']?.Value[0]
      : this.dataset['00186056']?.Value;
  }

  get '00186056'(): Element {
    return this.dataset['00186056'];
  }

  // Table of Pixel Values
  get TableOfPixelValues(): any {
    const element = this.dataset['00186058'];
    return (element?.Value.length === 1)
      ? this.dataset['00186058']?.Value[0]
      : this.dataset['00186058']?.Value;
  }

  get '00186058'(): Element {
    return this.dataset['00186058'];
  }

  // Table of Parameter Values
  get TableOfParameterValues(): any {
    const element = this.dataset['0018605A'];
    return (element?.Value.length === 1)
      ? this.dataset['0018605A']?.Value[0]
      : this.dataset['0018605A']?.Value;
  }

  get '0018605A'(): Element {
    return this.dataset['0018605A'];
  }

  // R Wave Time Vector
  get RWaveTimeVector(): any {
    const element = this.dataset['00186060'];
    return (element?.Value.length === 1)
      ? this.dataset['00186060']?.Value[0]
      : this.dataset['00186060']?.Value;
  }

  get '00186060'(): Element {
    return this.dataset['00186060'];
  }

  // Detector Conditions Nominal Flag
  get DetectorConditionsNominalFlag(): any {
    const element = this.dataset['00187000'];
    return (element?.Value.length === 1)
      ? this.dataset['00187000']?.Value[0]
      : this.dataset['00187000']?.Value;
  }

  get '00187000'(): Element {
    return this.dataset['00187000'];
  }

  // Detector Temperature
  get DetectorTemperature(): any {
    const element = this.dataset['00187001'];
    return (element?.Value.length === 1)
      ? this.dataset['00187001']?.Value[0]
      : this.dataset['00187001']?.Value;
  }

  get '00187001'(): Element {
    return this.dataset['00187001'];
  }

  // Detector Type
  get DetectorType(): any {
    const element = this.dataset['00187004'];
    return (element?.Value.length === 1)
      ? this.dataset['00187004']?.Value[0]
      : this.dataset['00187004']?.Value;
  }

  get '00187004'(): Element {
    return this.dataset['00187004'];
  }

  // Detector Configuration
  get DetectorConfiguration(): any {
    const element = this.dataset['00187005'];
    return (element?.Value.length === 1)
      ? this.dataset['00187005']?.Value[0]
      : this.dataset['00187005']?.Value;
  }

  get '00187005'(): Element {
    return this.dataset['00187005'];
  }

  // Detector Description
  get DetectorDescription(): any {
    const element = this.dataset['00187006'];
    return (element?.Value.length === 1)
      ? this.dataset['00187006']?.Value[0]
      : this.dataset['00187006']?.Value;
  }

  get '00187006'(): Element {
    return this.dataset['00187006'];
  }

  // Detector Mode
  get DetectorMode(): any {
    const element = this.dataset['00187008'];
    return (element?.Value.length === 1)
      ? this.dataset['00187008']?.Value[0]
      : this.dataset['00187008']?.Value;
  }

  get '00187008'(): Element {
    return this.dataset['00187008'];
  }

  // Detector ID
  get DetectorID(): any {
    const element = this.dataset['0018700A'];
    return (element?.Value.length === 1)
      ? this.dataset['0018700A']?.Value[0]
      : this.dataset['0018700A']?.Value;
  }

  get '0018700A'(): Element {
    return this.dataset['0018700A'];
  }

  // Date of Last Detector Calibration
  get DateOfLastDetectorCalibration(): any {
    const element = this.dataset['0018700C'];
    return (element?.Value.length === 1)
      ? this.dataset['0018700C']?.Value[0]
      : this.dataset['0018700C']?.Value;
  }

  get '0018700C'(): Element {
    return this.dataset['0018700C'];
  }

  // Time of Last Detector Calibration
  get TimeOfLastDetectorCalibration(): any {
    const element = this.dataset['0018700E'];
    return (element?.Value.length === 1)
      ? this.dataset['0018700E']?.Value[0]
      : this.dataset['0018700E']?.Value;
  }

  get '0018700E'(): Element {
    return this.dataset['0018700E'];
  }

  // Exposures on Detector Since Last Calibration
  get ExposuresOnDetectorSinceLastCalibration(): any {
    const element = this.dataset['00187010'];
    return (element?.Value.length === 1)
      ? this.dataset['00187010']?.Value[0]
      : this.dataset['00187010']?.Value;
  }

  get '00187010'(): Element {
    return this.dataset['00187010'];
  }

  // Exposures on Detector Since Manufactured
  get ExposuresOnDetectorSinceManufactured(): any {
    const element = this.dataset['00187011'];
    return (element?.Value.length === 1)
      ? this.dataset['00187011']?.Value[0]
      : this.dataset['00187011']?.Value;
  }

  get '00187011'(): Element {
    return this.dataset['00187011'];
  }

  // Detector Time Since Last Exposure
  get DetectorTimeSinceLastExposure(): any {
    const element = this.dataset['00187012'];
    return (element?.Value.length === 1)
      ? this.dataset['00187012']?.Value[0]
      : this.dataset['00187012']?.Value;
  }

  get '00187012'(): Element {
    return this.dataset['00187012'];
  }

  // Detector Active Time
  get DetectorActiveTime(): any {
    const element = this.dataset['00187014'];
    return (element?.Value.length === 1)
      ? this.dataset['00187014']?.Value[0]
      : this.dataset['00187014']?.Value;
  }

  get '00187014'(): Element {
    return this.dataset['00187014'];
  }

  // Detector Activation Offset From Exposure
  get DetectorActivationOffsetFromExposure(): any {
    const element = this.dataset['00187016'];
    return (element?.Value.length === 1)
      ? this.dataset['00187016']?.Value[0]
      : this.dataset['00187016']?.Value;
  }

  get '00187016'(): Element {
    return this.dataset['00187016'];
  }

  // Detector Binning
  get DetectorBinning(): any {
    const element = this.dataset['0018701A'];
    return (element?.Value.length === 1)
      ? this.dataset['0018701A']?.Value[0]
      : this.dataset['0018701A']?.Value;
  }

  get '0018701A'(): Element {
    return this.dataset['0018701A'];
  }

  // Detector Element Physical Size
  get DetectorElementPhysicalSize(): any {
    const element = this.dataset['00187020'];
    return (element?.Value.length === 1)
      ? this.dataset['00187020']?.Value[0]
      : this.dataset['00187020']?.Value;
  }

  get '00187020'(): Element {
    return this.dataset['00187020'];
  }

  // Detector Element Spacing
  get DetectorElementSpacing(): any {
    const element = this.dataset['00187022'];
    return (element?.Value.length === 1)
      ? this.dataset['00187022']?.Value[0]
      : this.dataset['00187022']?.Value;
  }

  get '00187022'(): Element {
    return this.dataset['00187022'];
  }

  // Detector Active Shape
  get DetectorActiveShape(): any {
    const element = this.dataset['00187024'];
    return (element?.Value.length === 1)
      ? this.dataset['00187024']?.Value[0]
      : this.dataset['00187024']?.Value;
  }

  get '00187024'(): Element {
    return this.dataset['00187024'];
  }

  // Detector Active Dimension(s)
  get DetectorActiveDimensions(): any {
    const element = this.dataset['00187026'];
    return (element?.Value.length === 1)
      ? this.dataset['00187026']?.Value[0]
      : this.dataset['00187026']?.Value;
  }

  get '00187026'(): Element {
    return this.dataset['00187026'];
  }

  // Detector Active Origin
  get DetectorActiveOrigin(): any {
    const element = this.dataset['00187028'];
    return (element?.Value.length === 1)
      ? this.dataset['00187028']?.Value[0]
      : this.dataset['00187028']?.Value;
  }

  get '00187028'(): Element {
    return this.dataset['00187028'];
  }

  // Detector Manufacturer Name
  get DetectorManufacturerName(): any {
    const element = this.dataset['0018702A'];
    return (element?.Value.length === 1)
      ? this.dataset['0018702A']?.Value[0]
      : this.dataset['0018702A']?.Value;
  }

  get '0018702A'(): Element {
    return this.dataset['0018702A'];
  }

  // Detector Manufacturer's Model Name
  get DetectorManufacturerModelName(): any {
    const element = this.dataset['0018702B'];
    return (element?.Value.length === 1)
      ? this.dataset['0018702B']?.Value[0]
      : this.dataset['0018702B']?.Value;
  }

  get '0018702B'(): Element {
    return this.dataset['0018702B'];
  }

  // Field of View Origin
  get FieldOfViewOrigin(): any {
    const element = this.dataset['00187030'];
    return (element?.Value.length === 1)
      ? this.dataset['00187030']?.Value[0]
      : this.dataset['00187030']?.Value;
  }

  get '00187030'(): Element {
    return this.dataset['00187030'];
  }

  // Field of View Rotation
  get FieldOfViewRotation(): any {
    const element = this.dataset['00187032'];
    return (element?.Value.length === 1)
      ? this.dataset['00187032']?.Value[0]
      : this.dataset['00187032']?.Value;
  }

  get '00187032'(): Element {
    return this.dataset['00187032'];
  }

  // Field of View Horizontal Flip
  get FieldOfViewHorizontalFlip(): any {
    const element = this.dataset['00187034'];
    return (element?.Value.length === 1)
      ? this.dataset['00187034']?.Value[0]
      : this.dataset['00187034']?.Value;
  }

  get '00187034'(): Element {
    return this.dataset['00187034'];
  }

  // Pixel Data Area Origin Relative To FOV
  get PixelDataAreaOriginRelativeToFOV(): any {
    const element = this.dataset['00187036'];
    return (element?.Value.length === 1)
      ? this.dataset['00187036']?.Value[0]
      : this.dataset['00187036']?.Value;
  }

  get '00187036'(): Element {
    return this.dataset['00187036'];
  }

  // Pixel Data Area Rotation Angle Relative To FOV
  get PixelDataAreaRotationAngleRelativeToFOV(): any {
    const element = this.dataset['00187038'];
    return (element?.Value.length === 1)
      ? this.dataset['00187038']?.Value[0]
      : this.dataset['00187038']?.Value;
  }

  get '00187038'(): Element {
    return this.dataset['00187038'];
  }

  // Grid Absorbing Material
  get GridAbsorbingMaterial(): any {
    const element = this.dataset['00187040'];
    return (element?.Value.length === 1)
      ? this.dataset['00187040']?.Value[0]
      : this.dataset['00187040']?.Value;
  }

  get '00187040'(): Element {
    return this.dataset['00187040'];
  }

  // Grid Spacing Material
  get GridSpacingMaterial(): any {
    const element = this.dataset['00187041'];
    return (element?.Value.length === 1)
      ? this.dataset['00187041']?.Value[0]
      : this.dataset['00187041']?.Value;
  }

  get '00187041'(): Element {
    return this.dataset['00187041'];
  }

  // Grid Thickness
  get GridThickness(): any {
    const element = this.dataset['00187042'];
    return (element?.Value.length === 1)
      ? this.dataset['00187042']?.Value[0]
      : this.dataset['00187042']?.Value;
  }

  get '00187042'(): Element {
    return this.dataset['00187042'];
  }

  // Grid Pitch
  get GridPitch(): any {
    const element = this.dataset['00187044'];
    return (element?.Value.length === 1)
      ? this.dataset['00187044']?.Value[0]
      : this.dataset['00187044']?.Value;
  }

  get '00187044'(): Element {
    return this.dataset['00187044'];
  }

  // Grid Aspect Ratio
  get GridAspectRatio(): any {
    const element = this.dataset['00187046'];
    return (element?.Value.length === 1)
      ? this.dataset['00187046']?.Value[0]
      : this.dataset['00187046']?.Value;
  }

  get '00187046'(): Element {
    return this.dataset['00187046'];
  }

  // Grid Period
  get GridPeriod(): any {
    const element = this.dataset['00187048'];
    return (element?.Value.length === 1)
      ? this.dataset['00187048']?.Value[0]
      : this.dataset['00187048']?.Value;
  }

  get '00187048'(): Element {
    return this.dataset['00187048'];
  }

  // Grid Focal Distance
  get GridFocalDistance(): any {
    const element = this.dataset['0018704C'];
    return (element?.Value.length === 1)
      ? this.dataset['0018704C']?.Value[0]
      : this.dataset['0018704C']?.Value;
  }

  get '0018704C'(): Element {
    return this.dataset['0018704C'];
  }

  // Filter Material
  get FilterMaterial(): any {
    const element = this.dataset['00187050'];
    return (element?.Value.length === 1)
      ? this.dataset['00187050']?.Value[0]
      : this.dataset['00187050']?.Value;
  }

  get '00187050'(): Element {
    return this.dataset['00187050'];
  }

  // Filter Thickness Minimum
  get FilterThicknessMinimum(): any {
    const element = this.dataset['00187052'];
    return (element?.Value.length === 1)
      ? this.dataset['00187052']?.Value[0]
      : this.dataset['00187052']?.Value;
  }

  get '00187052'(): Element {
    return this.dataset['00187052'];
  }

  // Filter Thickness Maximum
  get FilterThicknessMaximum(): any {
    const element = this.dataset['00187054'];
    return (element?.Value.length === 1)
      ? this.dataset['00187054']?.Value[0]
      : this.dataset['00187054']?.Value;
  }

  get '00187054'(): Element {
    return this.dataset['00187054'];
  }

  // Filter Beam Path Length Minimum
  get FilterBeamPathLengthMinimum(): any {
    const element = this.dataset['00187056'];
    return (element?.Value.length === 1)
      ? this.dataset['00187056']?.Value[0]
      : this.dataset['00187056']?.Value;
  }

  get '00187056'(): Element {
    return this.dataset['00187056'];
  }

  // Filter Beam Path Length Maximum
  get FilterBeamPathLengthMaximum(): any {
    const element = this.dataset['00187058'];
    return (element?.Value.length === 1)
      ? this.dataset['00187058']?.Value[0]
      : this.dataset['00187058']?.Value;
  }

  get '00187058'(): Element {
    return this.dataset['00187058'];
  }

  // Exposure Control Mode
  get ExposureControlMode(): any {
    const element = this.dataset['00187060'];
    return (element?.Value.length === 1)
      ? this.dataset['00187060']?.Value[0]
      : this.dataset['00187060']?.Value;
  }

  get '00187060'(): Element {
    return this.dataset['00187060'];
  }

  // Exposure Control Mode Description
  get ExposureControlModeDescription(): any {
    const element = this.dataset['00187062'];
    return (element?.Value.length === 1)
      ? this.dataset['00187062']?.Value[0]
      : this.dataset['00187062']?.Value;
  }

  get '00187062'(): Element {
    return this.dataset['00187062'];
  }

  // Exposure Status
  get ExposureStatus(): any {
    const element = this.dataset['00187064'];
    return (element?.Value.length === 1)
      ? this.dataset['00187064']?.Value[0]
      : this.dataset['00187064']?.Value;
  }

  get '00187064'(): Element {
    return this.dataset['00187064'];
  }

  // Phototimer Setting
  get PhototimerSetting(): any {
    const element = this.dataset['00187065'];
    return (element?.Value.length === 1)
      ? this.dataset['00187065']?.Value[0]
      : this.dataset['00187065']?.Value;
  }

  get '00187065'(): Element {
    return this.dataset['00187065'];
  }

  // Exposure Time in µS
  get ExposureTimeInuS(): any {
    const element = this.dataset['00188150'];
    return (element?.Value.length === 1)
      ? this.dataset['00188150']?.Value[0]
      : this.dataset['00188150']?.Value;
  }

  get '00188150'(): Element {
    return this.dataset['00188150'];
  }

  // X-Ray Tube Current in µA
  get XRayTubeCurrentInuA(): any {
    const element = this.dataset['00188151'];
    return (element?.Value.length === 1)
      ? this.dataset['00188151']?.Value[0]
      : this.dataset['00188151']?.Value;
  }

  get '00188151'(): Element {
    return this.dataset['00188151'];
  }

  // Content Qualification
  get ContentQualification(): any {
    const element = this.dataset['00189004'];
    return (element?.Value.length === 1)
      ? this.dataset['00189004']?.Value[0]
      : this.dataset['00189004']?.Value;
  }

  get '00189004'(): Element {
    return this.dataset['00189004'];
  }

  // Pulse Sequence Name
  get PulseSequenceName(): any {
    const element = this.dataset['00189005'];
    return (element?.Value.length === 1)
      ? this.dataset['00189005']?.Value[0]
      : this.dataset['00189005']?.Value;
  }

  get '00189005'(): Element {
    return this.dataset['00189005'];
  }

  // MR Imaging Modifier Sequence
  get MRImagingModifierSequence(): any {
    const element = this.dataset['00189006'];
    return (element?.Value.length === 1)
      ? this.dataset['00189006']?.Value[0]
      : this.dataset['00189006']?.Value;
  }

  get '00189006'(): Element {
    return this.dataset['00189006'];
  }

  // Echo Pulse Sequence
  get EchoPulseSequence(): any {
    const element = this.dataset['00189008'];
    return (element?.Value.length === 1)
      ? this.dataset['00189008']?.Value[0]
      : this.dataset['00189008']?.Value;
  }

  get '00189008'(): Element {
    return this.dataset['00189008'];
  }

  // Inversion Recovery
  get InversionRecovery(): any {
    const element = this.dataset['00189009'];
    return (element?.Value.length === 1)
      ? this.dataset['00189009']?.Value[0]
      : this.dataset['00189009']?.Value;
  }

  get '00189009'(): Element {
    return this.dataset['00189009'];
  }

  // Flow Compensation
  get FlowCompensation(): any {
    const element = this.dataset['00189010'];
    return (element?.Value.length === 1)
      ? this.dataset['00189010']?.Value[0]
      : this.dataset['00189010']?.Value;
  }

  get '00189010'(): Element {
    return this.dataset['00189010'];
  }

  // Multiple Spin Echo
  get MultipleSpinEcho(): any {
    const element = this.dataset['00189011'];
    return (element?.Value.length === 1)
      ? this.dataset['00189011']?.Value[0]
      : this.dataset['00189011']?.Value;
  }

  get '00189011'(): Element {
    return this.dataset['00189011'];
  }

  // Multi-planar Excitation
  get MultiPlanarExcitation(): any {
    const element = this.dataset['00189012'];
    return (element?.Value.length === 1)
      ? this.dataset['00189012']?.Value[0]
      : this.dataset['00189012']?.Value;
  }

  get '00189012'(): Element {
    return this.dataset['00189012'];
  }

  // Phase Contrast
  get PhaseContrast(): any {
    const element = this.dataset['00189014'];
    return (element?.Value.length === 1)
      ? this.dataset['00189014']?.Value[0]
      : this.dataset['00189014']?.Value;
  }

  get '00189014'(): Element {
    return this.dataset['00189014'];
  }

  // Time of Flight Contrast
  get TimeOfFlightContrast(): any {
    const element = this.dataset['00189015'];
    return (element?.Value.length === 1)
      ? this.dataset['00189015']?.Value[0]
      : this.dataset['00189015']?.Value;
  }

  get '00189015'(): Element {
    return this.dataset['00189015'];
  }

  // Spoiling
  get Spoiling(): any {
    const element = this.dataset['00189016'];
    return (element?.Value.length === 1)
      ? this.dataset['00189016']?.Value[0]
      : this.dataset['00189016']?.Value;
  }

  get '00189016'(): Element {
    return this.dataset['00189016'];
  }

  // Steady State Pulse Sequence
  get SteadyStatePulseSequence(): any {
    const element = this.dataset['00189017'];
    return (element?.Value.length === 1)
      ? this.dataset['00189017']?.Value[0]
      : this.dataset['00189017']?.Value;
  }

  get '00189017'(): Element {
    return this.dataset['00189017'];
  }

  // Echo Planar Pulse Sequence
  get EchoPlanarPulseSequence(): any {
    const element = this.dataset['00189018'];
    return (element?.Value.length === 1)
      ? this.dataset['00189018']?.Value[0]
      : this.dataset['00189018']?.Value;
  }

  get '00189018'(): Element {
    return this.dataset['00189018'];
  }

  // Tag Angle First Axis
  get TagAngleFirstAxis(): any {
    const element = this.dataset['00189019'];
    return (element?.Value.length === 1)
      ? this.dataset['00189019']?.Value[0]
      : this.dataset['00189019']?.Value;
  }

  get '00189019'(): Element {
    return this.dataset['00189019'];
  }

  // Magnetization Transfer
  get MagnetizationTransfer(): any {
    const element = this.dataset['00189020'];
    return (element?.Value.length === 1)
      ? this.dataset['00189020']?.Value[0]
      : this.dataset['00189020']?.Value;
  }

  get '00189020'(): Element {
    return this.dataset['00189020'];
  }

  // T2 Preparation
  get T2Preparation(): any {
    const element = this.dataset['00189021'];
    return (element?.Value.length === 1)
      ? this.dataset['00189021']?.Value[0]
      : this.dataset['00189021']?.Value;
  }

  get '00189021'(): Element {
    return this.dataset['00189021'];
  }

  // Blood Signal Nulling
  get BloodSignalNulling(): any {
    const element = this.dataset['00189022'];
    return (element?.Value.length === 1)
      ? this.dataset['00189022']?.Value[0]
      : this.dataset['00189022']?.Value;
  }

  get '00189022'(): Element {
    return this.dataset['00189022'];
  }

  // Saturation Recovery
  get SaturationRecovery(): any {
    const element = this.dataset['00189024'];
    return (element?.Value.length === 1)
      ? this.dataset['00189024']?.Value[0]
      : this.dataset['00189024']?.Value;
  }

  get '00189024'(): Element {
    return this.dataset['00189024'];
  }

  // Spectrally Selected Suppression
  get SpectrallySelectedSuppression(): any {
    const element = this.dataset['00189025'];
    return (element?.Value.length === 1)
      ? this.dataset['00189025']?.Value[0]
      : this.dataset['00189025']?.Value;
  }

  get '00189025'(): Element {
    return this.dataset['00189025'];
  }

  // Spectrally Selected Excitation
  get SpectrallySelectedExcitation(): any {
    const element = this.dataset['00189026'];
    return (element?.Value.length === 1)
      ? this.dataset['00189026']?.Value[0]
      : this.dataset['00189026']?.Value;
  }

  get '00189026'(): Element {
    return this.dataset['00189026'];
  }

  // Spatial Pre-saturation
  get SpatialPresaturation(): any {
    const element = this.dataset['00189027'];
    return (element?.Value.length === 1)
      ? this.dataset['00189027']?.Value[0]
      : this.dataset['00189027']?.Value;
  }

  get '00189027'(): Element {
    return this.dataset['00189027'];
  }

  // Tagging
  get Tagging(): any {
    const element = this.dataset['00189028'];
    return (element?.Value.length === 1)
      ? this.dataset['00189028']?.Value[0]
      : this.dataset['00189028']?.Value;
  }

  get '00189028'(): Element {
    return this.dataset['00189028'];
  }

  // Oversampling Phase
  get OversamplingPhase(): any {
    const element = this.dataset['00189029'];
    return (element?.Value.length === 1)
      ? this.dataset['00189029']?.Value[0]
      : this.dataset['00189029']?.Value;
  }

  get '00189029'(): Element {
    return this.dataset['00189029'];
  }

  // Tag Spacing First Dimension
  get TagSpacingFirstDimension(): any {
    const element = this.dataset['00189030'];
    return (element?.Value.length === 1)
      ? this.dataset['00189030']?.Value[0]
      : this.dataset['00189030']?.Value;
  }

  get '00189030'(): Element {
    return this.dataset['00189030'];
  }

  // Geometry of k-Space Traversal
  get GeometryOfKSpaceTraversal(): any {
    const element = this.dataset['00189032'];
    return (element?.Value.length === 1)
      ? this.dataset['00189032']?.Value[0]
      : this.dataset['00189032']?.Value;
  }

  get '00189032'(): Element {
    return this.dataset['00189032'];
  }

  // Segmented k-Space Traversal
  get SegmentedKSpaceTraversal(): any {
    const element = this.dataset['00189033'];
    return (element?.Value.length === 1)
      ? this.dataset['00189033']?.Value[0]
      : this.dataset['00189033']?.Value;
  }

  get '00189033'(): Element {
    return this.dataset['00189033'];
  }

  // Rectilinear Phase Encode Reordering
  get RectilinearPhaseEncodeReordering(): any {
    const element = this.dataset['00189034'];
    return (element?.Value.length === 1)
      ? this.dataset['00189034']?.Value[0]
      : this.dataset['00189034']?.Value;
  }

  get '00189034'(): Element {
    return this.dataset['00189034'];
  }

  // Tag Thickness
  get TagThickness(): any {
    const element = this.dataset['00189035'];
    return (element?.Value.length === 1)
      ? this.dataset['00189035']?.Value[0]
      : this.dataset['00189035']?.Value;
  }

  get '00189035'(): Element {
    return this.dataset['00189035'];
  }

  // Partial Fourier Direction
  get PartialFourierDirection(): any {
    const element = this.dataset['00189036'];
    return (element?.Value.length === 1)
      ? this.dataset['00189036']?.Value[0]
      : this.dataset['00189036']?.Value;
  }

  get '00189036'(): Element {
    return this.dataset['00189036'];
  }

  // Cardiac Synchronization Technique
  get CardiacSynchronizationTechnique(): any {
    const element = this.dataset['00189037'];
    return (element?.Value.length === 1)
      ? this.dataset['00189037']?.Value[0]
      : this.dataset['00189037']?.Value;
  }

  get '00189037'(): Element {
    return this.dataset['00189037'];
  }

  // Receive Coil Manufacturer Name
  get ReceiveCoilManufacturerName(): any {
    const element = this.dataset['00189041'];
    return (element?.Value.length === 1)
      ? this.dataset['00189041']?.Value[0]
      : this.dataset['00189041']?.Value;
  }

  get '00189041'(): Element {
    return this.dataset['00189041'];
  }

  // MR Receive Coil Sequence
  get MRReceiveCoilSequence(): any {
    const element = this.dataset['00189042'];
    return (element?.Value.length === 1)
      ? this.dataset['00189042']?.Value[0]
      : this.dataset['00189042']?.Value;
  }

  get '00189042'(): Element {
    return this.dataset['00189042'];
  }

  // Receive Coil Type
  get ReceiveCoilType(): any {
    const element = this.dataset['00189043'];
    return (element?.Value.length === 1)
      ? this.dataset['00189043']?.Value[0]
      : this.dataset['00189043']?.Value;
  }

  get '00189043'(): Element {
    return this.dataset['00189043'];
  }

  // Quadrature Receive Coil
  get QuadratureReceiveCoil(): any {
    const element = this.dataset['00189044'];
    return (element?.Value.length === 1)
      ? this.dataset['00189044']?.Value[0]
      : this.dataset['00189044']?.Value;
  }

  get '00189044'(): Element {
    return this.dataset['00189044'];
  }

  // Multi-Coil Definition Sequence
  get MultiCoilDefinitionSequence(): any {
    const element = this.dataset['00189045'];
    return (element?.Value.length === 1)
      ? this.dataset['00189045']?.Value[0]
      : this.dataset['00189045']?.Value;
  }

  get '00189045'(): Element {
    return this.dataset['00189045'];
  }

  // Multi-Coil Configuration
  get MultiCoilConfiguration(): any {
    const element = this.dataset['00189046'];
    return (element?.Value.length === 1)
      ? this.dataset['00189046']?.Value[0]
      : this.dataset['00189046']?.Value;
  }

  get '00189046'(): Element {
    return this.dataset['00189046'];
  }

  // Multi-Coil Element Name
  get MultiCoilElementName(): any {
    const element = this.dataset['00189047'];
    return (element?.Value.length === 1)
      ? this.dataset['00189047']?.Value[0]
      : this.dataset['00189047']?.Value;
  }

  get '00189047'(): Element {
    return this.dataset['00189047'];
  }

  // Multi-Coil Element Used
  get MultiCoilElementUsed(): any {
    const element = this.dataset['00189048'];
    return (element?.Value.length === 1)
      ? this.dataset['00189048']?.Value[0]
      : this.dataset['00189048']?.Value;
  }

  get '00189048'(): Element {
    return this.dataset['00189048'];
  }

  // MR Transmit Coil Sequence
  get MRTransmitCoilSequence(): any {
    const element = this.dataset['00189049'];
    return (element?.Value.length === 1)
      ? this.dataset['00189049']?.Value[0]
      : this.dataset['00189049']?.Value;
  }

  get '00189049'(): Element {
    return this.dataset['00189049'];
  }

  // Transmit Coil Manufacturer Name
  get TransmitCoilManufacturerName(): any {
    const element = this.dataset['00189050'];
    return (element?.Value.length === 1)
      ? this.dataset['00189050']?.Value[0]
      : this.dataset['00189050']?.Value;
  }

  get '00189050'(): Element {
    return this.dataset['00189050'];
  }

  // Transmit Coil Type
  get TransmitCoilType(): any {
    const element = this.dataset['00189051'];
    return (element?.Value.length === 1)
      ? this.dataset['00189051']?.Value[0]
      : this.dataset['00189051']?.Value;
  }

  get '00189051'(): Element {
    return this.dataset['00189051'];
  }

  // Spectral Width
  get SpectralWidth(): any {
    const element = this.dataset['00189052'];
    return (element?.Value.length === 1)
      ? this.dataset['00189052']?.Value[0]
      : this.dataset['00189052']?.Value;
  }

  get '00189052'(): Element {
    return this.dataset['00189052'];
  }

  // Chemical Shift Reference
  get ChemicalShiftReference(): any {
    const element = this.dataset['00189053'];
    return (element?.Value.length === 1)
      ? this.dataset['00189053']?.Value[0]
      : this.dataset['00189053']?.Value;
  }

  get '00189053'(): Element {
    return this.dataset['00189053'];
  }

  // Volume Localization Technique
  get VolumeLocalizationTechnique(): any {
    const element = this.dataset['00189054'];
    return (element?.Value.length === 1)
      ? this.dataset['00189054']?.Value[0]
      : this.dataset['00189054']?.Value;
  }

  get '00189054'(): Element {
    return this.dataset['00189054'];
  }

  // MR Acquisition Frequency Encoding Steps
  get MRAcquisitionFrequencyEncodingSteps(): any {
    const element = this.dataset['00189058'];
    return (element?.Value.length === 1)
      ? this.dataset['00189058']?.Value[0]
      : this.dataset['00189058']?.Value;
  }

  get '00189058'(): Element {
    return this.dataset['00189058'];
  }

  // De-coupling
  get Decoupling(): any {
    const element = this.dataset['00189059'];
    return (element?.Value.length === 1)
      ? this.dataset['00189059']?.Value[0]
      : this.dataset['00189059']?.Value;
  }

  get '00189059'(): Element {
    return this.dataset['00189059'];
  }

  // De-coupled Nucleus
  get DecoupledNucleus(): any {
    const element = this.dataset['00189060'];
    return (element?.Value.length === 1)
      ? this.dataset['00189060']?.Value[0]
      : this.dataset['00189060']?.Value;
  }

  get '00189060'(): Element {
    return this.dataset['00189060'];
  }

  // De-coupling Frequency
  get DecouplingFrequency(): any {
    const element = this.dataset['00189061'];
    return (element?.Value.length === 1)
      ? this.dataset['00189061']?.Value[0]
      : this.dataset['00189061']?.Value;
  }

  get '00189061'(): Element {
    return this.dataset['00189061'];
  }

  // De-coupling Method
  get DecouplingMethod(): any {
    const element = this.dataset['00189062'];
    return (element?.Value.length === 1)
      ? this.dataset['00189062']?.Value[0]
      : this.dataset['00189062']?.Value;
  }

  get '00189062'(): Element {
    return this.dataset['00189062'];
  }

  // De-coupling Chemical Shift Reference
  get DecouplingChemicalShiftReference(): any {
    const element = this.dataset['00189063'];
    return (element?.Value.length === 1)
      ? this.dataset['00189063']?.Value[0]
      : this.dataset['00189063']?.Value;
  }

  get '00189063'(): Element {
    return this.dataset['00189063'];
  }

  // k-space Filtering
  get KSpaceFiltering(): any {
    const element = this.dataset['00189064'];
    return (element?.Value.length === 1)
      ? this.dataset['00189064']?.Value[0]
      : this.dataset['00189064']?.Value;
  }

  get '00189064'(): Element {
    return this.dataset['00189064'];
  }

  // Time Domain Filtering
  get TimeDomainFiltering(): any {
    const element = this.dataset['00189065'];
    return (element?.Value.length === 1)
      ? this.dataset['00189065']?.Value[0]
      : this.dataset['00189065']?.Value;
  }

  get '00189065'(): Element {
    return this.dataset['00189065'];
  }

  // Number of Zero Fills
  get NumberOfZeroFills(): any {
    const element = this.dataset['00189066'];
    return (element?.Value.length === 1)
      ? this.dataset['00189066']?.Value[0]
      : this.dataset['00189066']?.Value;
  }

  get '00189066'(): Element {
    return this.dataset['00189066'];
  }

  // Baseline Correction
  get BaselineCorrection(): any {
    const element = this.dataset['00189067'];
    return (element?.Value.length === 1)
      ? this.dataset['00189067']?.Value[0]
      : this.dataset['00189067']?.Value;
  }

  get '00189067'(): Element {
    return this.dataset['00189067'];
  }

  // Parallel Reduction Factor In-plane
  get ParallelReductionFactorInPlane(): any {
    const element = this.dataset['00189069'];
    return (element?.Value.length === 1)
      ? this.dataset['00189069']?.Value[0]
      : this.dataset['00189069']?.Value;
  }

  get '00189069'(): Element {
    return this.dataset['00189069'];
  }

  // Cardiac R-R Interval Specified
  get CardiacRRIntervalSpecified(): any {
    const element = this.dataset['00189070'];
    return (element?.Value.length === 1)
      ? this.dataset['00189070']?.Value[0]
      : this.dataset['00189070']?.Value;
  }

  get '00189070'(): Element {
    return this.dataset['00189070'];
  }

  // Acquisition Duration
  get AcquisitionDuration(): any {
    const element = this.dataset['00189073'];
    return (element?.Value.length === 1)
      ? this.dataset['00189073']?.Value[0]
      : this.dataset['00189073']?.Value;
  }

  get '00189073'(): Element {
    return this.dataset['00189073'];
  }

  // Frame Acquisition DateTime
  get FrameAcquisitionDateTime(): any {
    const element = this.dataset['00189074'];
    return (element?.Value.length === 1)
      ? this.dataset['00189074']?.Value[0]
      : this.dataset['00189074']?.Value;
  }

  get '00189074'(): Element {
    return this.dataset['00189074'];
  }

  // Diffusion Directionality
  get DiffusionDirectionality(): any {
    const element = this.dataset['00189075'];
    return (element?.Value.length === 1)
      ? this.dataset['00189075']?.Value[0]
      : this.dataset['00189075']?.Value;
  }

  get '00189075'(): Element {
    return this.dataset['00189075'];
  }

  // Diffusion Gradient Direction Sequence
  get DiffusionGradientDirectionSequence(): any {
    const element = this.dataset['00189076'];
    return (element?.Value.length === 1)
      ? this.dataset['00189076']?.Value[0]
      : this.dataset['00189076']?.Value;
  }

  get '00189076'(): Element {
    return this.dataset['00189076'];
  }

  // Parallel Acquisition
  get ParallelAcquisition(): any {
    const element = this.dataset['00189077'];
    return (element?.Value.length === 1)
      ? this.dataset['00189077']?.Value[0]
      : this.dataset['00189077']?.Value;
  }

  get '00189077'(): Element {
    return this.dataset['00189077'];
  }

  // Parallel Acquisition Technique
  get ParallelAcquisitionTechnique(): any {
    const element = this.dataset['00189078'];
    return (element?.Value.length === 1)
      ? this.dataset['00189078']?.Value[0]
      : this.dataset['00189078']?.Value;
  }

  get '00189078'(): Element {
    return this.dataset['00189078'];
  }

  // Inversion Times
  get InversionTimes(): any {
    const element = this.dataset['00189079'];
    return (element?.Value.length === 1)
      ? this.dataset['00189079']?.Value[0]
      : this.dataset['00189079']?.Value;
  }

  get '00189079'(): Element {
    return this.dataset['00189079'];
  }

  // Metabolite Map Description
  get MetaboliteMapDescription(): any {
    const element = this.dataset['00189080'];
    return (element?.Value.length === 1)
      ? this.dataset['00189080']?.Value[0]
      : this.dataset['00189080']?.Value;
  }

  get '00189080'(): Element {
    return this.dataset['00189080'];
  }

  // Partial Fourier
  get PartialFourier(): any {
    const element = this.dataset['00189081'];
    return (element?.Value.length === 1)
      ? this.dataset['00189081']?.Value[0]
      : this.dataset['00189081']?.Value;
  }

  get '00189081'(): Element {
    return this.dataset['00189081'];
  }

  // Effective Echo Time
  get EffectiveEchoTime(): any {
    const element = this.dataset['00189082'];
    return (element?.Value.length === 1)
      ? this.dataset['00189082']?.Value[0]
      : this.dataset['00189082']?.Value;
  }

  get '00189082'(): Element {
    return this.dataset['00189082'];
  }

  // Metabolite Map Code Sequence
  get MetaboliteMapCodeSequence(): any {
    const element = this.dataset['00189083'];
    return (element?.Value.length === 1)
      ? this.dataset['00189083']?.Value[0]
      : this.dataset['00189083']?.Value;
  }

  get '00189083'(): Element {
    return this.dataset['00189083'];
  }

  // Chemical Shift Sequence
  get ChemicalShiftSequence(): any {
    const element = this.dataset['00189084'];
    return (element?.Value.length === 1)
      ? this.dataset['00189084']?.Value[0]
      : this.dataset['00189084']?.Value;
  }

  get '00189084'(): Element {
    return this.dataset['00189084'];
  }

  // Cardiac Signal Source
  get CardiacSignalSource(): any {
    const element = this.dataset['00189085'];
    return (element?.Value.length === 1)
      ? this.dataset['00189085']?.Value[0]
      : this.dataset['00189085']?.Value;
  }

  get '00189085'(): Element {
    return this.dataset['00189085'];
  }

  // Diffusion b-value
  get DiffusionBValue(): any {
    const element = this.dataset['00189087'];
    return (element?.Value.length === 1)
      ? this.dataset['00189087']?.Value[0]
      : this.dataset['00189087']?.Value;
  }

  get '00189087'(): Element {
    return this.dataset['00189087'];
  }

  // Diffusion Gradient Orientation
  get DiffusionGradientOrientation(): any {
    const element = this.dataset['00189089'];
    return (element?.Value.length === 1)
      ? this.dataset['00189089']?.Value[0]
      : this.dataset['00189089']?.Value;
  }

  get '00189089'(): Element {
    return this.dataset['00189089'];
  }

  // Velocity Encoding Direction
  get VelocityEncodingDirection(): any {
    const element = this.dataset['00189090'];
    return (element?.Value.length === 1)
      ? this.dataset['00189090']?.Value[0]
      : this.dataset['00189090']?.Value;
  }

  get '00189090'(): Element {
    return this.dataset['00189090'];
  }

  // Velocity Encoding Minimum Value
  get VelocityEncodingMinimumValue(): any {
    const element = this.dataset['00189091'];
    return (element?.Value.length === 1)
      ? this.dataset['00189091']?.Value[0]
      : this.dataset['00189091']?.Value;
  }

  get '00189091'(): Element {
    return this.dataset['00189091'];
  }

  // Velocity Encoding Acquisition Sequence
  get VelocityEncodingAcquisitionSequence(): any {
    const element = this.dataset['00189092'];
    return (element?.Value.length === 1)
      ? this.dataset['00189092']?.Value[0]
      : this.dataset['00189092']?.Value;
  }

  get '00189092'(): Element {
    return this.dataset['00189092'];
  }

  // Number of k-Space Trajectories
  get NumberOfKSpaceTrajectories(): any {
    const element = this.dataset['00189093'];
    return (element?.Value.length === 1)
      ? this.dataset['00189093']?.Value[0]
      : this.dataset['00189093']?.Value;
  }

  get '00189093'(): Element {
    return this.dataset['00189093'];
  }

  // Coverage of k-Space
  get CoverageOfKSpace(): any {
    const element = this.dataset['00189094'];
    return (element?.Value.length === 1)
      ? this.dataset['00189094']?.Value[0]
      : this.dataset['00189094']?.Value;
  }

  get '00189094'(): Element {
    return this.dataset['00189094'];
  }

  // Spectroscopy Acquisition Phase Rows
  get SpectroscopyAcquisitionPhaseRows(): any {
    const element = this.dataset['00189095'];
    return (element?.Value.length === 1)
      ? this.dataset['00189095']?.Value[0]
      : this.dataset['00189095']?.Value;
  }

  get '00189095'(): Element {
    return this.dataset['00189095'];
  }

  // Parallel Reduction Factor In-plane (Retired)
  get ParallelReductionFactorInPlaneRetired(): any {
    const element = this.dataset['00189096'];
    return (element?.Value.length === 1)
      ? this.dataset['00189096']?.Value[0]
      : this.dataset['00189096']?.Value;
  }

  get '00189096'(): Element {
    return this.dataset['00189096'];
  }

  // Transmitter Frequency
  get TransmitterFrequency(): any {
    const element = this.dataset['00189098'];
    return (element?.Value.length === 1)
      ? this.dataset['00189098']?.Value[0]
      : this.dataset['00189098']?.Value;
  }

  get '00189098'(): Element {
    return this.dataset['00189098'];
  }

  // Resonant Nucleus
  get ResonantNucleus(): any {
    const element = this.dataset['00189100'];
    return (element?.Value.length === 1)
      ? this.dataset['00189100']?.Value[0]
      : this.dataset['00189100']?.Value;
  }

  get '00189100'(): Element {
    return this.dataset['00189100'];
  }

  // Frequency Correction
  get FrequencyCorrection(): any {
    const element = this.dataset['00189101'];
    return (element?.Value.length === 1)
      ? this.dataset['00189101']?.Value[0]
      : this.dataset['00189101']?.Value;
  }

  get '00189101'(): Element {
    return this.dataset['00189101'];
  }

  // MR Spectroscopy FOV/Geometry Sequence
  get MRSpectroscopyFOVGeometrySequence(): any {
    const element = this.dataset['00189103'];
    return (element?.Value.length === 1)
      ? this.dataset['00189103']?.Value[0]
      : this.dataset['00189103']?.Value;
  }

  get '00189103'(): Element {
    return this.dataset['00189103'];
  }

  // Slab Thickness
  get SlabThickness(): any {
    const element = this.dataset['00189104'];
    return (element?.Value.length === 1)
      ? this.dataset['00189104']?.Value[0]
      : this.dataset['00189104']?.Value;
  }

  get '00189104'(): Element {
    return this.dataset['00189104'];
  }

  // Slab Orientation
  get SlabOrientation(): any {
    const element = this.dataset['00189105'];
    return (element?.Value.length === 1)
      ? this.dataset['00189105']?.Value[0]
      : this.dataset['00189105']?.Value;
  }

  get '00189105'(): Element {
    return this.dataset['00189105'];
  }

  // Mid Slab Position
  get MidSlabPosition(): any {
    const element = this.dataset['00189106'];
    return (element?.Value.length === 1)
      ? this.dataset['00189106']?.Value[0]
      : this.dataset['00189106']?.Value;
  }

  get '00189106'(): Element {
    return this.dataset['00189106'];
  }

  // MR Spatial Saturation Sequence
  get MRSpatialSaturationSequence(): any {
    const element = this.dataset['00189107'];
    return (element?.Value.length === 1)
      ? this.dataset['00189107']?.Value[0]
      : this.dataset['00189107']?.Value;
  }

  get '00189107'(): Element {
    return this.dataset['00189107'];
  }

  // MR Timing and Related Parameters Sequence
  get MRTimingAndRelatedParametersSequence(): any {
    const element = this.dataset['00189112'];
    return (element?.Value.length === 1)
      ? this.dataset['00189112']?.Value[0]
      : this.dataset['00189112']?.Value;
  }

  get '00189112'(): Element {
    return this.dataset['00189112'];
  }

  // MR Echo Sequence
  get MREchoSequence(): any {
    const element = this.dataset['00189114'];
    return (element?.Value.length === 1)
      ? this.dataset['00189114']?.Value[0]
      : this.dataset['00189114']?.Value;
  }

  get '00189114'(): Element {
    return this.dataset['00189114'];
  }

  // MR Modifier Sequence
  get MRModifierSequence(): any {
    const element = this.dataset['00189115'];
    return (element?.Value.length === 1)
      ? this.dataset['00189115']?.Value[0]
      : this.dataset['00189115']?.Value;
  }

  get '00189115'(): Element {
    return this.dataset['00189115'];
  }

  // MR Diffusion Sequence
  get MRDiffusionSequence(): any {
    const element = this.dataset['00189117'];
    return (element?.Value.length === 1)
      ? this.dataset['00189117']?.Value[0]
      : this.dataset['00189117']?.Value;
  }

  get '00189117'(): Element {
    return this.dataset['00189117'];
  }

  // Cardiac Synchronization Sequence
  get CardiacSynchronizationSequence(): any {
    const element = this.dataset['00189118'];
    return (element?.Value.length === 1)
      ? this.dataset['00189118']?.Value[0]
      : this.dataset['00189118']?.Value;
  }

  get '00189118'(): Element {
    return this.dataset['00189118'];
  }

  // MR Averages Sequence
  get MRAveragesSequence(): any {
    const element = this.dataset['00189119'];
    return (element?.Value.length === 1)
      ? this.dataset['00189119']?.Value[0]
      : this.dataset['00189119']?.Value;
  }

  get '00189119'(): Element {
    return this.dataset['00189119'];
  }

  // MR FOV/Geometry Sequence
  get MRFOVGeometrySequence(): any {
    const element = this.dataset['00189125'];
    return (element?.Value.length === 1)
      ? this.dataset['00189125']?.Value[0]
      : this.dataset['00189125']?.Value;
  }

  get '00189125'(): Element {
    return this.dataset['00189125'];
  }

  // Volume Localization Sequence
  get VolumeLocalizationSequence(): any {
    const element = this.dataset['00189126'];
    return (element?.Value.length === 1)
      ? this.dataset['00189126']?.Value[0]
      : this.dataset['00189126']?.Value;
  }

  get '00189126'(): Element {
    return this.dataset['00189126'];
  }

  // Spectroscopy Acquisition Data Columns
  get SpectroscopyAcquisitionDataColumns(): any {
    const element = this.dataset['00189127'];
    return (element?.Value.length === 1)
      ? this.dataset['00189127']?.Value[0]
      : this.dataset['00189127']?.Value;
  }

  get '00189127'(): Element {
    return this.dataset['00189127'];
  }

  // Diffusion Anisotropy Type
  get DiffusionAnisotropyType(): any {
    const element = this.dataset['00189147'];
    return (element?.Value.length === 1)
      ? this.dataset['00189147']?.Value[0]
      : this.dataset['00189147']?.Value;
  }

  get '00189147'(): Element {
    return this.dataset['00189147'];
  }

  // Frame Reference DateTime
  get FrameReferenceDateTime(): any {
    const element = this.dataset['00189151'];
    return (element?.Value.length === 1)
      ? this.dataset['00189151']?.Value[0]
      : this.dataset['00189151']?.Value;
  }

  get '00189151'(): Element {
    return this.dataset['00189151'];
  }

  // MR Metabolite Map Sequence
  get MRMetaboliteMapSequence(): any {
    const element = this.dataset['00189152'];
    return (element?.Value.length === 1)
      ? this.dataset['00189152']?.Value[0]
      : this.dataset['00189152']?.Value;
  }

  get '00189152'(): Element {
    return this.dataset['00189152'];
  }

  // Parallel Reduction Factor out-of-plane
  get ParallelReductionFactorOutOfPlane(): any {
    const element = this.dataset['00189155'];
    return (element?.Value.length === 1)
      ? this.dataset['00189155']?.Value[0]
      : this.dataset['00189155']?.Value;
  }

  get '00189155'(): Element {
    return this.dataset['00189155'];
  }

  // Spectroscopy Acquisition Out-of-plane Phase Steps
  get SpectroscopyAcquisitionOutOfPlanePhaseSteps(): any {
    const element = this.dataset['00189159'];
    return (element?.Value.length === 1)
      ? this.dataset['00189159']?.Value[0]
      : this.dataset['00189159']?.Value;
  }

  get '00189159'(): Element {
    return this.dataset['00189159'];
  }

  // Bulk Motion Status
  get BulkMotionStatus(): any {
    const element = this.dataset['00189166'];
    return (element?.Value.length === 1)
      ? this.dataset['00189166']?.Value[0]
      : this.dataset['00189166']?.Value;
  }

  get '00189166'(): Element {
    return this.dataset['00189166'];
  }

  // Parallel Reduction Factor Second In-plane
  get ParallelReductionFactorSecondInPlane(): any {
    const element = this.dataset['00189168'];
    return (element?.Value.length === 1)
      ? this.dataset['00189168']?.Value[0]
      : this.dataset['00189168']?.Value;
  }

  get '00189168'(): Element {
    return this.dataset['00189168'];
  }

  // Cardiac Beat Rejection Technique
  get CardiacBeatRejectionTechnique(): any {
    const element = this.dataset['00189169'];
    return (element?.Value.length === 1)
      ? this.dataset['00189169']?.Value[0]
      : this.dataset['00189169']?.Value;
  }

  get '00189169'(): Element {
    return this.dataset['00189169'];
  }

  // Respiratory Motion Compensation Technique
  get RespiratoryMotionCompensationTechnique(): any {
    const element = this.dataset['00189170'];
    return (element?.Value.length === 1)
      ? this.dataset['00189170']?.Value[0]
      : this.dataset['00189170']?.Value;
  }

  get '00189170'(): Element {
    return this.dataset['00189170'];
  }

  // Respiratory Signal Source
  get RespiratorySignalSource(): any {
    const element = this.dataset['00189171'];
    return (element?.Value.length === 1)
      ? this.dataset['00189171']?.Value[0]
      : this.dataset['00189171']?.Value;
  }

  get '00189171'(): Element {
    return this.dataset['00189171'];
  }

  // Bulk Motion Compensation Technique
  get BulkMotionCompensationTechnique(): any {
    const element = this.dataset['00189172'];
    return (element?.Value.length === 1)
      ? this.dataset['00189172']?.Value[0]
      : this.dataset['00189172']?.Value;
  }

  get '00189172'(): Element {
    return this.dataset['00189172'];
  }

  // Bulk Motion Signal Source
  get BulkMotionSignalSource(): any {
    const element = this.dataset['00189173'];
    return (element?.Value.length === 1)
      ? this.dataset['00189173']?.Value[0]
      : this.dataset['00189173']?.Value;
  }

  get '00189173'(): Element {
    return this.dataset['00189173'];
  }

  // Applicable Safety Standard Agency
  get ApplicableSafetyStandardAgency(): any {
    const element = this.dataset['00189174'];
    return (element?.Value.length === 1)
      ? this.dataset['00189174']?.Value[0]
      : this.dataset['00189174']?.Value;
  }

  get '00189174'(): Element {
    return this.dataset['00189174'];
  }

  // Applicable Safety Standard Description
  get ApplicableSafetyStandardDescription(): any {
    const element = this.dataset['00189175'];
    return (element?.Value.length === 1)
      ? this.dataset['00189175']?.Value[0]
      : this.dataset['00189175']?.Value;
  }

  get '00189175'(): Element {
    return this.dataset['00189175'];
  }

  // Operating Mode Sequence
  get OperatingModeSequence(): any {
    const element = this.dataset['00189176'];
    return (element?.Value.length === 1)
      ? this.dataset['00189176']?.Value[0]
      : this.dataset['00189176']?.Value;
  }

  get '00189176'(): Element {
    return this.dataset['00189176'];
  }

  // Operating Mode Type
  get OperatingModeType(): any {
    const element = this.dataset['00189177'];
    return (element?.Value.length === 1)
      ? this.dataset['00189177']?.Value[0]
      : this.dataset['00189177']?.Value;
  }

  get '00189177'(): Element {
    return this.dataset['00189177'];
  }

  // Operating Mode
  get OperatingMode(): any {
    const element = this.dataset['00189178'];
    return (element?.Value.length === 1)
      ? this.dataset['00189178']?.Value[0]
      : this.dataset['00189178']?.Value;
  }

  get '00189178'(): Element {
    return this.dataset['00189178'];
  }

  // Specific Absorption Rate Definition
  get SpecificAbsorptionRateDefinition(): any {
    const element = this.dataset['00189179'];
    return (element?.Value.length === 1)
      ? this.dataset['00189179']?.Value[0]
      : this.dataset['00189179']?.Value;
  }

  get '00189179'(): Element {
    return this.dataset['00189179'];
  }

  // Gradient Output Type
  get GradientOutputType(): any {
    const element = this.dataset['00189180'];
    return (element?.Value.length === 1)
      ? this.dataset['00189180']?.Value[0]
      : this.dataset['00189180']?.Value;
  }

  get '00189180'(): Element {
    return this.dataset['00189180'];
  }

  // Specific Absorption Rate Value
  get SpecificAbsorptionRateValue(): any {
    const element = this.dataset['00189181'];
    return (element?.Value.length === 1)
      ? this.dataset['00189181']?.Value[0]
      : this.dataset['00189181']?.Value;
  }

  get '00189181'(): Element {
    return this.dataset['00189181'];
  }

  // Gradient Output
  get GradientOutput(): any {
    const element = this.dataset['00189182'];
    return (element?.Value.length === 1)
      ? this.dataset['00189182']?.Value[0]
      : this.dataset['00189182']?.Value;
  }

  get '00189182'(): Element {
    return this.dataset['00189182'];
  }

  // Flow Compensation Direction
  get FlowCompensationDirection(): any {
    const element = this.dataset['00189183'];
    return (element?.Value.length === 1)
      ? this.dataset['00189183']?.Value[0]
      : this.dataset['00189183']?.Value;
  }

  get '00189183'(): Element {
    return this.dataset['00189183'];
  }

  // Tagging Delay
  get TaggingDelay(): any {
    const element = this.dataset['00189184'];
    return (element?.Value.length === 1)
      ? this.dataset['00189184']?.Value[0]
      : this.dataset['00189184']?.Value;
  }

  get '00189184'(): Element {
    return this.dataset['00189184'];
  }

  // Respiratory Motion Compensation Technique Description
  get RespiratoryMotionCompensationTechniqueDescription(): any {
    const element = this.dataset['00189185'];
    return (element?.Value.length === 1)
      ? this.dataset['00189185']?.Value[0]
      : this.dataset['00189185']?.Value;
  }

  get '00189185'(): Element {
    return this.dataset['00189185'];
  }

  // Respiratory Signal Source ID
  get RespiratorySignalSourceID(): any {
    const element = this.dataset['00189186'];
    return (element?.Value.length === 1)
      ? this.dataset['00189186']?.Value[0]
      : this.dataset['00189186']?.Value;
  }

  get '00189186'(): Element {
    return this.dataset['00189186'];
  }

  // Chemical Shift Minimum Integration Limit in Hz
  get ChemicalShiftMinimumIntegrationLimitInHz(): any {
    const element = this.dataset['00189195'];
    return (element?.Value.length === 1)
      ? this.dataset['00189195']?.Value[0]
      : this.dataset['00189195']?.Value;
  }

  get '00189195'(): Element {
    return this.dataset['00189195'];
  }

  // Chemical Shift Maximum Integration Limit in Hz
  get ChemicalShiftMaximumIntegrationLimitInHz(): any {
    const element = this.dataset['00189196'];
    return (element?.Value.length === 1)
      ? this.dataset['00189196']?.Value[0]
      : this.dataset['00189196']?.Value;
  }

  get '00189196'(): Element {
    return this.dataset['00189196'];
  }

  // MR Velocity Encoding Sequence
  get MRVelocityEncodingSequence(): any {
    const element = this.dataset['00189197'];
    return (element?.Value.length === 1)
      ? this.dataset['00189197']?.Value[0]
      : this.dataset['00189197']?.Value;
  }

  get '00189197'(): Element {
    return this.dataset['00189197'];
  }

  // First Order Phase Correction
  get FirstOrderPhaseCorrection(): any {
    const element = this.dataset['00189198'];
    return (element?.Value.length === 1)
      ? this.dataset['00189198']?.Value[0]
      : this.dataset['00189198']?.Value;
  }

  get '00189198'(): Element {
    return this.dataset['00189198'];
  }

  // Water Referenced Phase Correction
  get WaterReferencedPhaseCorrection(): any {
    const element = this.dataset['00189199'];
    return (element?.Value.length === 1)
      ? this.dataset['00189199']?.Value[0]
      : this.dataset['00189199']?.Value;
  }

  get '00189199'(): Element {
    return this.dataset['00189199'];
  }

  // MR Spectroscopy Acquisition Type
  get MRSpectroscopyAcquisitionType(): any {
    const element = this.dataset['00189200'];
    return (element?.Value.length === 1)
      ? this.dataset['00189200']?.Value[0]
      : this.dataset['00189200']?.Value;
  }

  get '00189200'(): Element {
    return this.dataset['00189200'];
  }

  // Respiratory Cycle Position
  get RespiratoryCyclePosition(): any {
    const element = this.dataset['00189214'];
    return (element?.Value.length === 1)
      ? this.dataset['00189214']?.Value[0]
      : this.dataset['00189214']?.Value;
  }

  get '00189214'(): Element {
    return this.dataset['00189214'];
  }

  // Velocity Encoding Maximum Value
  get VelocityEncodingMaximumValue(): any {
    const element = this.dataset['00189217'];
    return (element?.Value.length === 1)
      ? this.dataset['00189217']?.Value[0]
      : this.dataset['00189217']?.Value;
  }

  get '00189217'(): Element {
    return this.dataset['00189217'];
  }

  // Tag Spacing Second Dimension
  get TagSpacingSecondDimension(): any {
    const element = this.dataset['00189218'];
    return (element?.Value.length === 1)
      ? this.dataset['00189218']?.Value[0]
      : this.dataset['00189218']?.Value;
  }

  get '00189218'(): Element {
    return this.dataset['00189218'];
  }

  // Tag Angle Second Axis
  get TagAngleSecondAxis(): any {
    const element = this.dataset['00189219'];
    return (element?.Value.length === 1)
      ? this.dataset['00189219']?.Value[0]
      : this.dataset['00189219']?.Value;
  }

  get '00189219'(): Element {
    return this.dataset['00189219'];
  }

  // Frame Acquisition Duration
  get FrameAcquisitionDuration(): any {
    const element = this.dataset['00189220'];
    return (element?.Value.length === 1)
      ? this.dataset['00189220']?.Value[0]
      : this.dataset['00189220']?.Value;
  }

  get '00189220'(): Element {
    return this.dataset['00189220'];
  }

  // MR Image Frame Type Sequence
  get MRImageFrameTypeSequence(): any {
    const element = this.dataset['00189226'];
    return (element?.Value.length === 1)
      ? this.dataset['00189226']?.Value[0]
      : this.dataset['00189226']?.Value;
  }

  get '00189226'(): Element {
    return this.dataset['00189226'];
  }

  // MR Spectroscopy Frame Type Sequence
  get MRSpectroscopyFrameTypeSequence(): any {
    const element = this.dataset['00189227'];
    return (element?.Value.length === 1)
      ? this.dataset['00189227']?.Value[0]
      : this.dataset['00189227']?.Value;
  }

  get '00189227'(): Element {
    return this.dataset['00189227'];
  }

  // MR Acquisition Phase Encoding Steps in-plane
  get MRAcquisitionPhaseEncodingStepsInPlane(): any {
    const element = this.dataset['00189231'];
    return (element?.Value.length === 1)
      ? this.dataset['00189231']?.Value[0]
      : this.dataset['00189231']?.Value;
  }

  get '00189231'(): Element {
    return this.dataset['00189231'];
  }

  // MR Acquisition Phase Encoding Steps out-of-plane
  get MRAcquisitionPhaseEncodingStepsOutOfPlane(): any {
    const element = this.dataset['00189232'];
    return (element?.Value.length === 1)
      ? this.dataset['00189232']?.Value[0]
      : this.dataset['00189232']?.Value;
  }

  get '00189232'(): Element {
    return this.dataset['00189232'];
  }

  // Spectroscopy Acquisition Phase Columns
  get SpectroscopyAcquisitionPhaseColumns(): any {
    const element = this.dataset['00189234'];
    return (element?.Value.length === 1)
      ? this.dataset['00189234']?.Value[0]
      : this.dataset['00189234']?.Value;
  }

  get '00189234'(): Element {
    return this.dataset['00189234'];
  }

  // Cardiac Cycle Position
  get CardiacCyclePosition(): any {
    const element = this.dataset['00189236'];
    return (element?.Value.length === 1)
      ? this.dataset['00189236']?.Value[0]
      : this.dataset['00189236']?.Value;
  }

  get '00189236'(): Element {
    return this.dataset['00189236'];
  }

  // Specific Absorption Rate Sequence
  get SpecificAbsorptionRateSequence(): any {
    const element = this.dataset['00189239'];
    return (element?.Value.length === 1)
      ? this.dataset['00189239']?.Value[0]
      : this.dataset['00189239']?.Value;
  }

  get '00189239'(): Element {
    return this.dataset['00189239'];
  }

  // RF Echo Train Length
  get RFEchoTrainLength(): any {
    const element = this.dataset['00189240'];
    return (element?.Value.length === 1)
      ? this.dataset['00189240']?.Value[0]
      : this.dataset['00189240']?.Value;
  }

  get '00189240'(): Element {
    return this.dataset['00189240'];
  }

  // Gradient Echo Train Length
  get GradientEchoTrainLength(): any {
    const element = this.dataset['00189241'];
    return (element?.Value.length === 1)
      ? this.dataset['00189241']?.Value[0]
      : this.dataset['00189241']?.Value;
  }

  get '00189241'(): Element {
    return this.dataset['00189241'];
  }

  // Arterial Spin Labeling Contrast
  get ArterialSpinLabelingContrast(): any {
    const element = this.dataset['00189250'];
    return (element?.Value.length === 1)
      ? this.dataset['00189250']?.Value[0]
      : this.dataset['00189250']?.Value;
  }

  get '00189250'(): Element {
    return this.dataset['00189250'];
  }

  // MR Arterial Spin Labeling Sequence
  get MRArterialSpinLabelingSequence(): any {
    const element = this.dataset['00189251'];
    return (element?.Value.length === 1)
      ? this.dataset['00189251']?.Value[0]
      : this.dataset['00189251']?.Value;
  }

  get '00189251'(): Element {
    return this.dataset['00189251'];
  }

  // ASL Technique Description
  get ASLTechniqueDescription(): any {
    const element = this.dataset['00189252'];
    return (element?.Value.length === 1)
      ? this.dataset['00189252']?.Value[0]
      : this.dataset['00189252']?.Value;
  }

  get '00189252'(): Element {
    return this.dataset['00189252'];
  }

  // ASL Slab Number
  get ASLSlabNumber(): any {
    const element = this.dataset['00189253'];
    return (element?.Value.length === 1)
      ? this.dataset['00189253']?.Value[0]
      : this.dataset['00189253']?.Value;
  }

  get '00189253'(): Element {
    return this.dataset['00189253'];
  }

  // ASL Slab Thickness
  get ASLSlabThickness(): any {
    const element = this.dataset['00189254'];
    return (element?.Value.length === 1)
      ? this.dataset['00189254']?.Value[0]
      : this.dataset['00189254']?.Value;
  }

  get '00189254'(): Element {
    return this.dataset['00189254'];
  }

  // ASL Slab Orientation
  get ASLSlabOrientation(): any {
    const element = this.dataset['00189255'];
    return (element?.Value.length === 1)
      ? this.dataset['00189255']?.Value[0]
      : this.dataset['00189255']?.Value;
  }

  get '00189255'(): Element {
    return this.dataset['00189255'];
  }

  // ASL Mid Slab Position
  get ASLMidSlabPosition(): any {
    const element = this.dataset['00189256'];
    return (element?.Value.length === 1)
      ? this.dataset['00189256']?.Value[0]
      : this.dataset['00189256']?.Value;
  }

  get '00189256'(): Element {
    return this.dataset['00189256'];
  }

  // ASL Context
  get ASLContext(): any {
    const element = this.dataset['00189257'];
    return (element?.Value.length === 1)
      ? this.dataset['00189257']?.Value[0]
      : this.dataset['00189257']?.Value;
  }

  get '00189257'(): Element {
    return this.dataset['00189257'];
  }

  // ASL Pulse Train Duration
  get ASLPulseTrainDuration(): any {
    const element = this.dataset['00189258'];
    return (element?.Value.length === 1)
      ? this.dataset['00189258']?.Value[0]
      : this.dataset['00189258']?.Value;
  }

  get '00189258'(): Element {
    return this.dataset['00189258'];
  }

  // ASL Crusher Flag
  get ASLCrusherFlag(): any {
    const element = this.dataset['00189259'];
    return (element?.Value.length === 1)
      ? this.dataset['00189259']?.Value[0]
      : this.dataset['00189259']?.Value;
  }

  get '00189259'(): Element {
    return this.dataset['00189259'];
  }

  // ASL Crusher Flow Limit
  get ASLCrusherFlowLimit(): any {
    const element = this.dataset['0018925A'];
    return (element?.Value.length === 1)
      ? this.dataset['0018925A']?.Value[0]
      : this.dataset['0018925A']?.Value;
  }

  get '0018925A'(): Element {
    return this.dataset['0018925A'];
  }

  // ASL Crusher Description
  get ASLCrusherDescription(): any {
    const element = this.dataset['0018925B'];
    return (element?.Value.length === 1)
      ? this.dataset['0018925B']?.Value[0]
      : this.dataset['0018925B']?.Value;
  }

  get '0018925B'(): Element {
    return this.dataset['0018925B'];
  }

  // ASL Bolus Cut-off Flag
  get ASLBolusCutoffFlag(): any {
    const element = this.dataset['0018925C'];
    return (element?.Value.length === 1)
      ? this.dataset['0018925C']?.Value[0]
      : this.dataset['0018925C']?.Value;
  }

  get '0018925C'(): Element {
    return this.dataset['0018925C'];
  }

  // ASL Bolus Cut-off Timing Sequence
  get ASLBolusCutoffTimingSequence(): any {
    const element = this.dataset['0018925D'];
    return (element?.Value.length === 1)
      ? this.dataset['0018925D']?.Value[0]
      : this.dataset['0018925D']?.Value;
  }

  get '0018925D'(): Element {
    return this.dataset['0018925D'];
  }

  // ASL Bolus Cut-off Technique
  get ASLBolusCutoffTechnique(): any {
    const element = this.dataset['0018925E'];
    return (element?.Value.length === 1)
      ? this.dataset['0018925E']?.Value[0]
      : this.dataset['0018925E']?.Value;
  }

  get '0018925E'(): Element {
    return this.dataset['0018925E'];
  }

  // ASL Bolus Cut-off Delay Time
  get ASLBolusCutoffDelayTime(): any {
    const element = this.dataset['0018925F'];
    return (element?.Value.length === 1)
      ? this.dataset['0018925F']?.Value[0]
      : this.dataset['0018925F']?.Value;
  }

  get '0018925F'(): Element {
    return this.dataset['0018925F'];
  }

  // ASL Slab Sequence
  get ASLSlabSequence(): any {
    const element = this.dataset['00189260'];
    return (element?.Value.length === 1)
      ? this.dataset['00189260']?.Value[0]
      : this.dataset['00189260']?.Value;
  }

  get '00189260'(): Element {
    return this.dataset['00189260'];
  }

  // Chemical Shift Minimum Integration Limit in ppm
  get ChemicalShiftMinimumIntegrationLimitInppm(): any {
    const element = this.dataset['00189295'];
    return (element?.Value.length === 1)
      ? this.dataset['00189295']?.Value[0]
      : this.dataset['00189295']?.Value;
  }

  get '00189295'(): Element {
    return this.dataset['00189295'];
  }

  // Chemical Shift Maximum Integration Limit in ppm
  get ChemicalShiftMaximumIntegrationLimitInppm(): any {
    const element = this.dataset['00189296'];
    return (element?.Value.length === 1)
      ? this.dataset['00189296']?.Value[0]
      : this.dataset['00189296']?.Value;
  }

  get '00189296'(): Element {
    return this.dataset['00189296'];
  }

  // Water Reference Acquisition
  get WaterReferenceAcquisition(): any {
    const element = this.dataset['00189297'];
    return (element?.Value.length === 1)
      ? this.dataset['00189297']?.Value[0]
      : this.dataset['00189297']?.Value;
  }

  get '00189297'(): Element {
    return this.dataset['00189297'];
  }

  // Echo Peak Position
  get EchoPeakPosition(): any {
    const element = this.dataset['00189298'];
    return (element?.Value.length === 1)
      ? this.dataset['00189298']?.Value[0]
      : this.dataset['00189298']?.Value;
  }

  get '00189298'(): Element {
    return this.dataset['00189298'];
  }

  // CT Acquisition Type Sequence
  get CTAcquisitionTypeSequence(): any {
    const element = this.dataset['00189301'];
    return (element?.Value.length === 1)
      ? this.dataset['00189301']?.Value[0]
      : this.dataset['00189301']?.Value;
  }

  get '00189301'(): Element {
    return this.dataset['00189301'];
  }

  // Acquisition Type
  get AcquisitionType(): any {
    const element = this.dataset['00189302'];
    return (element?.Value.length === 1)
      ? this.dataset['00189302']?.Value[0]
      : this.dataset['00189302']?.Value;
  }

  get '00189302'(): Element {
    return this.dataset['00189302'];
  }

  // Tube Angle
  get TubeAngle(): any {
    const element = this.dataset['00189303'];
    return (element?.Value.length === 1)
      ? this.dataset['00189303']?.Value[0]
      : this.dataset['00189303']?.Value;
  }

  get '00189303'(): Element {
    return this.dataset['00189303'];
  }

  // CT Acquisition Details Sequence
  get CTAcquisitionDetailsSequence(): any {
    const element = this.dataset['00189304'];
    return (element?.Value.length === 1)
      ? this.dataset['00189304']?.Value[0]
      : this.dataset['00189304']?.Value;
  }

  get '00189304'(): Element {
    return this.dataset['00189304'];
  }

  // Revolution Time
  get RevolutionTime(): any {
    const element = this.dataset['00189305'];
    return (element?.Value.length === 1)
      ? this.dataset['00189305']?.Value[0]
      : this.dataset['00189305']?.Value;
  }

  get '00189305'(): Element {
    return this.dataset['00189305'];
  }

  // Single Collimation Width
  get SingleCollimationWidth(): any {
    const element = this.dataset['00189306'];
    return (element?.Value.length === 1)
      ? this.dataset['00189306']?.Value[0]
      : this.dataset['00189306']?.Value;
  }

  get '00189306'(): Element {
    return this.dataset['00189306'];
  }

  // Total Collimation Width
  get TotalCollimationWidth(): any {
    const element = this.dataset['00189307'];
    return (element?.Value.length === 1)
      ? this.dataset['00189307']?.Value[0]
      : this.dataset['00189307']?.Value;
  }

  get '00189307'(): Element {
    return this.dataset['00189307'];
  }

  // CT Table Dynamics Sequence
  get CTTableDynamicsSequence(): any {
    const element = this.dataset['00189308'];
    return (element?.Value.length === 1)
      ? this.dataset['00189308']?.Value[0]
      : this.dataset['00189308']?.Value;
  }

  get '00189308'(): Element {
    return this.dataset['00189308'];
  }

  // Table Speed
  get TableSpeed(): any {
    const element = this.dataset['00189309'];
    return (element?.Value.length === 1)
      ? this.dataset['00189309']?.Value[0]
      : this.dataset['00189309']?.Value;
  }

  get '00189309'(): Element {
    return this.dataset['00189309'];
  }

  // Table Feed per Rotation
  get TableFeedPerRotation(): any {
    const element = this.dataset['00189310'];
    return (element?.Value.length === 1)
      ? this.dataset['00189310']?.Value[0]
      : this.dataset['00189310']?.Value;
  }

  get '00189310'(): Element {
    return this.dataset['00189310'];
  }

  // Spiral Pitch Factor
  get SpiralPitchFactor(): any {
    const element = this.dataset['00189311'];
    return (element?.Value.length === 1)
      ? this.dataset['00189311']?.Value[0]
      : this.dataset['00189311']?.Value;
  }

  get '00189311'(): Element {
    return this.dataset['00189311'];
  }

  // CT Geometry Sequence
  get CTGeometrySequence(): any {
    const element = this.dataset['00189312'];
    return (element?.Value.length === 1)
      ? this.dataset['00189312']?.Value[0]
      : this.dataset['00189312']?.Value;
  }

  get '00189312'(): Element {
    return this.dataset['00189312'];
  }

  // Data Collection Center (Patient)
  get DataCollectionCenterPatient(): any {
    const element = this.dataset['00189313'];
    return (element?.Value.length === 1)
      ? this.dataset['00189313']?.Value[0]
      : this.dataset['00189313']?.Value;
  }

  get '00189313'(): Element {
    return this.dataset['00189313'];
  }

  // CT Reconstruction Sequence
  get CTReconstructionSequence(): any {
    const element = this.dataset['00189314'];
    return (element?.Value.length === 1)
      ? this.dataset['00189314']?.Value[0]
      : this.dataset['00189314']?.Value;
  }

  get '00189314'(): Element {
    return this.dataset['00189314'];
  }

  // Reconstruction Algorithm
  get ReconstructionAlgorithm(): any {
    const element = this.dataset['00189315'];
    return (element?.Value.length === 1)
      ? this.dataset['00189315']?.Value[0]
      : this.dataset['00189315']?.Value;
  }

  get '00189315'(): Element {
    return this.dataset['00189315'];
  }

  // Convolution Kernel Group
  get ConvolutionKernelGroup(): any {
    const element = this.dataset['00189316'];
    return (element?.Value.length === 1)
      ? this.dataset['00189316']?.Value[0]
      : this.dataset['00189316']?.Value;
  }

  get '00189316'(): Element {
    return this.dataset['00189316'];
  }

  // Reconstruction Field of View
  get ReconstructionFieldOfView(): any {
    const element = this.dataset['00189317'];
    return (element?.Value.length === 1)
      ? this.dataset['00189317']?.Value[0]
      : this.dataset['00189317']?.Value;
  }

  get '00189317'(): Element {
    return this.dataset['00189317'];
  }

  // Reconstruction Target Center (Patient)
  get ReconstructionTargetCenterPatient(): any {
    const element = this.dataset['00189318'];
    return (element?.Value.length === 1)
      ? this.dataset['00189318']?.Value[0]
      : this.dataset['00189318']?.Value;
  }

  get '00189318'(): Element {
    return this.dataset['00189318'];
  }

  // Reconstruction Angle
  get ReconstructionAngle(): any {
    const element = this.dataset['00189319'];
    return (element?.Value.length === 1)
      ? this.dataset['00189319']?.Value[0]
      : this.dataset['00189319']?.Value;
  }

  get '00189319'(): Element {
    return this.dataset['00189319'];
  }

  // Image Filter
  get ImageFilter(): any {
    const element = this.dataset['00189320'];
    return (element?.Value.length === 1)
      ? this.dataset['00189320']?.Value[0]
      : this.dataset['00189320']?.Value;
  }

  get '00189320'(): Element {
    return this.dataset['00189320'];
  }

  // CT Exposure Sequence
  get CTExposureSequence(): any {
    const element = this.dataset['00189321'];
    return (element?.Value.length === 1)
      ? this.dataset['00189321']?.Value[0]
      : this.dataset['00189321']?.Value;
  }

  get '00189321'(): Element {
    return this.dataset['00189321'];
  }

  // Reconstruction Pixel Spacing
  get ReconstructionPixelSpacing(): any {
    const element = this.dataset['00189322'];
    return (element?.Value.length === 1)
      ? this.dataset['00189322']?.Value[0]
      : this.dataset['00189322']?.Value;
  }

  get '00189322'(): Element {
    return this.dataset['00189322'];
  }

  // Exposure Modulation Type
  get ExposureModulationType(): any {
    const element = this.dataset['00189323'];
    return (element?.Value.length === 1)
      ? this.dataset['00189323']?.Value[0]
      : this.dataset['00189323']?.Value;
  }

  get '00189323'(): Element {
    return this.dataset['00189323'];
  }

  // Estimated Dose Saving
  get EstimatedDoseSaving(): any {
    const element = this.dataset['00189324'];
    return (element?.Value.length === 1)
      ? this.dataset['00189324']?.Value[0]
      : this.dataset['00189324']?.Value;
  }

  get '00189324'(): Element {
    return this.dataset['00189324'];
  }

  // CT X-Ray Details Sequence
  get CTXRayDetailsSequence(): any {
    const element = this.dataset['00189325'];
    return (element?.Value.length === 1)
      ? this.dataset['00189325']?.Value[0]
      : this.dataset['00189325']?.Value;
  }

  get '00189325'(): Element {
    return this.dataset['00189325'];
  }

  // CT Position Sequence
  get CTPositionSequence(): any {
    const element = this.dataset['00189326'];
    return (element?.Value.length === 1)
      ? this.dataset['00189326']?.Value[0]
      : this.dataset['00189326']?.Value;
  }

  get '00189326'(): Element {
    return this.dataset['00189326'];
  }

  // Table Position
  get TablePosition(): any {
    const element = this.dataset['00189327'];
    return (element?.Value.length === 1)
      ? this.dataset['00189327']?.Value[0]
      : this.dataset['00189327']?.Value;
  }

  get '00189327'(): Element {
    return this.dataset['00189327'];
  }

  // Exposure Time in ms
  get ExposureTimeInms(): any {
    const element = this.dataset['00189328'];
    return (element?.Value.length === 1)
      ? this.dataset['00189328']?.Value[0]
      : this.dataset['00189328']?.Value;
  }

  get '00189328'(): Element {
    return this.dataset['00189328'];
  }

  // CT Image Frame Type Sequence
  get CTImageFrameTypeSequence(): any {
    const element = this.dataset['00189329'];
    return (element?.Value.length === 1)
      ? this.dataset['00189329']?.Value[0]
      : this.dataset['00189329']?.Value;
  }

  get '00189329'(): Element {
    return this.dataset['00189329'];
  }

  // X-Ray Tube Current in mA
  get XRayTubeCurrentInmA(): any {
    const element = this.dataset['00189330'];
    return (element?.Value.length === 1)
      ? this.dataset['00189330']?.Value[0]
      : this.dataset['00189330']?.Value;
  }

  get '00189330'(): Element {
    return this.dataset['00189330'];
  }

  // Exposure in mAs
  get ExposureInmAs(): any {
    const element = this.dataset['00189332'];
    return (element?.Value.length === 1)
      ? this.dataset['00189332']?.Value[0]
      : this.dataset['00189332']?.Value;
  }

  get '00189332'(): Element {
    return this.dataset['00189332'];
  }

  // Constant Volume Flag
  get ConstantVolumeFlag(): any {
    const element = this.dataset['00189333'];
    return (element?.Value.length === 1)
      ? this.dataset['00189333']?.Value[0]
      : this.dataset['00189333']?.Value;
  }

  get '00189333'(): Element {
    return this.dataset['00189333'];
  }

  // Fluoroscopy Flag
  get FluoroscopyFlag(): any {
    const element = this.dataset['00189334'];
    return (element?.Value.length === 1)
      ? this.dataset['00189334']?.Value[0]
      : this.dataset['00189334']?.Value;
  }

  get '00189334'(): Element {
    return this.dataset['00189334'];
  }

  // Distance Source to Data Collection Center
  get DistanceSourceToDataCollectionCenter(): any {
    const element = this.dataset['00189335'];
    return (element?.Value.length === 1)
      ? this.dataset['00189335']?.Value[0]
      : this.dataset['00189335']?.Value;
  }

  get '00189335'(): Element {
    return this.dataset['00189335'];
  }

  // Contrast/Bolus Agent Number
  get ContrastBolusAgentNumber(): any {
    const element = this.dataset['00189337'];
    return (element?.Value.length === 1)
      ? this.dataset['00189337']?.Value[0]
      : this.dataset['00189337']?.Value;
  }

  get '00189337'(): Element {
    return this.dataset['00189337'];
  }

  // Contrast/Bolus Ingredient Code Sequence
  get ContrastBolusIngredientCodeSequence(): any {
    const element = this.dataset['00189338'];
    return (element?.Value.length === 1)
      ? this.dataset['00189338']?.Value[0]
      : this.dataset['00189338']?.Value;
  }

  get '00189338'(): Element {
    return this.dataset['00189338'];
  }

  // Contrast Administration Profile Sequence
  get ContrastAdministrationProfileSequence(): any {
    const element = this.dataset['00189340'];
    return (element?.Value.length === 1)
      ? this.dataset['00189340']?.Value[0]
      : this.dataset['00189340']?.Value;
  }

  get '00189340'(): Element {
    return this.dataset['00189340'];
  }

  // Contrast/Bolus Usage Sequence
  get ContrastBolusUsageSequence(): any {
    const element = this.dataset['00189341'];
    return (element?.Value.length === 1)
      ? this.dataset['00189341']?.Value[0]
      : this.dataset['00189341']?.Value;
  }

  get '00189341'(): Element {
    return this.dataset['00189341'];
  }

  // Contrast/Bolus Agent Administered
  get ContrastBolusAgentAdministered(): any {
    const element = this.dataset['00189342'];
    return (element?.Value.length === 1)
      ? this.dataset['00189342']?.Value[0]
      : this.dataset['00189342']?.Value;
  }

  get '00189342'(): Element {
    return this.dataset['00189342'];
  }

  // Contrast/Bolus Agent Detected
  get ContrastBolusAgentDetected(): any {
    const element = this.dataset['00189343'];
    return (element?.Value.length === 1)
      ? this.dataset['00189343']?.Value[0]
      : this.dataset['00189343']?.Value;
  }

  get '00189343'(): Element {
    return this.dataset['00189343'];
  }

  // Contrast/Bolus Agent Phase
  get ContrastBolusAgentPhase(): any {
    const element = this.dataset['00189344'];
    return (element?.Value.length === 1)
      ? this.dataset['00189344']?.Value[0]
      : this.dataset['00189344']?.Value;
  }

  get '00189344'(): Element {
    return this.dataset['00189344'];
  }

  // CTDIvol
  get CTDIvol(): any {
    const element = this.dataset['00189345'];
    return (element?.Value.length === 1)
      ? this.dataset['00189345']?.Value[0]
      : this.dataset['00189345']?.Value;
  }

  get '00189345'(): Element {
    return this.dataset['00189345'];
  }

  // CTDI Phantom Type Code Sequence
  get CTDIPhantomTypeCodeSequence(): any {
    const element = this.dataset['00189346'];
    return (element?.Value.length === 1)
      ? this.dataset['00189346']?.Value[0]
      : this.dataset['00189346']?.Value;
  }

  get '00189346'(): Element {
    return this.dataset['00189346'];
  }

  // Calcium Scoring Mass Factor Patient
  get CalciumScoringMassFactorPatient(): any {
    const element = this.dataset['00189351'];
    return (element?.Value.length === 1)
      ? this.dataset['00189351']?.Value[0]
      : this.dataset['00189351']?.Value;
  }

  get '00189351'(): Element {
    return this.dataset['00189351'];
  }

  // Calcium Scoring Mass Factor Device
  get CalciumScoringMassFactorDevice(): any {
    const element = this.dataset['00189352'];
    return (element?.Value.length === 1)
      ? this.dataset['00189352']?.Value[0]
      : this.dataset['00189352']?.Value;
  }

  get '00189352'(): Element {
    return this.dataset['00189352'];
  }

  // Energy Weighting Factor
  get EnergyWeightingFactor(): any {
    const element = this.dataset['00189353'];
    return (element?.Value.length === 1)
      ? this.dataset['00189353']?.Value[0]
      : this.dataset['00189353']?.Value;
  }

  get '00189353'(): Element {
    return this.dataset['00189353'];
  }

  // CT Additional X-Ray Source Sequence
  get CTAdditionalXRaySourceSequence(): any {
    const element = this.dataset['00189360'];
    return (element?.Value.length === 1)
      ? this.dataset['00189360']?.Value[0]
      : this.dataset['00189360']?.Value;
  }

  get '00189360'(): Element {
    return this.dataset['00189360'];
  }

  // Projection Pixel Calibration Sequence
  get ProjectionPixelCalibrationSequence(): any {
    const element = this.dataset['00189401'];
    return (element?.Value.length === 1)
      ? this.dataset['00189401']?.Value[0]
      : this.dataset['00189401']?.Value;
  }

  get '00189401'(): Element {
    return this.dataset['00189401'];
  }

  // Distance Source to Isocenter
  get DistanceSourceToIsocenter(): any {
    const element = this.dataset['00189402'];
    return (element?.Value.length === 1)
      ? this.dataset['00189402']?.Value[0]
      : this.dataset['00189402']?.Value;
  }

  get '00189402'(): Element {
    return this.dataset['00189402'];
  }

  // Distance Object to Table Top
  get DistanceObjectToTableTop(): any {
    const element = this.dataset['00189403'];
    return (element?.Value.length === 1)
      ? this.dataset['00189403']?.Value[0]
      : this.dataset['00189403']?.Value;
  }

  get '00189403'(): Element {
    return this.dataset['00189403'];
  }

  // Object Pixel Spacing in Center of Beam
  get ObjectPixelSpacingInCenterOfBeam(): any {
    const element = this.dataset['00189404'];
    return (element?.Value.length === 1)
      ? this.dataset['00189404']?.Value[0]
      : this.dataset['00189404']?.Value;
  }

  get '00189404'(): Element {
    return this.dataset['00189404'];
  }

  // Positioner Position Sequence
  get PositionerPositionSequence(): any {
    const element = this.dataset['00189405'];
    return (element?.Value.length === 1)
      ? this.dataset['00189405']?.Value[0]
      : this.dataset['00189405']?.Value;
  }

  get '00189405'(): Element {
    return this.dataset['00189405'];
  }

  // Table Position Sequence
  get TablePositionSequence(): any {
    const element = this.dataset['00189406'];
    return (element?.Value.length === 1)
      ? this.dataset['00189406']?.Value[0]
      : this.dataset['00189406']?.Value;
  }

  get '00189406'(): Element {
    return this.dataset['00189406'];
  }

  // Collimator Shape Sequence
  get CollimatorShapeSequence(): any {
    const element = this.dataset['00189407'];
    return (element?.Value.length === 1)
      ? this.dataset['00189407']?.Value[0]
      : this.dataset['00189407']?.Value;
  }

  get '00189407'(): Element {
    return this.dataset['00189407'];
  }

  // Planes in Acquisition
  get PlanesInAcquisition(): any {
    const element = this.dataset['00189410'];
    return (element?.Value.length === 1)
      ? this.dataset['00189410']?.Value[0]
      : this.dataset['00189410']?.Value;
  }

  get '00189410'(): Element {
    return this.dataset['00189410'];
  }

  // XA/XRF Frame Characteristics Sequence
  get XAXRFFrameCharacteristicsSequence(): any {
    const element = this.dataset['00189412'];
    return (element?.Value.length === 1)
      ? this.dataset['00189412']?.Value[0]
      : this.dataset['00189412']?.Value;
  }

  get '00189412'(): Element {
    return this.dataset['00189412'];
  }

  // Frame Acquisition Sequence
  get FrameAcquisitionSequence(): any {
    const element = this.dataset['00189417'];
    return (element?.Value.length === 1)
      ? this.dataset['00189417']?.Value[0]
      : this.dataset['00189417']?.Value;
  }

  get '00189417'(): Element {
    return this.dataset['00189417'];
  }

  // X-Ray Receptor Type
  get XRayReceptorType(): any {
    const element = this.dataset['00189420'];
    return (element?.Value.length === 1)
      ? this.dataset['00189420']?.Value[0]
      : this.dataset['00189420']?.Value;
  }

  get '00189420'(): Element {
    return this.dataset['00189420'];
  }

  // Acquisition Protocol Name
  get AcquisitionProtocolName(): any {
    const element = this.dataset['00189423'];
    return (element?.Value.length === 1)
      ? this.dataset['00189423']?.Value[0]
      : this.dataset['00189423']?.Value;
  }

  get '00189423'(): Element {
    return this.dataset['00189423'];
  }

  // Acquisition Protocol Description
  get AcquisitionProtocolDescription(): any {
    const element = this.dataset['00189424'];
    return (element?.Value.length === 1)
      ? this.dataset['00189424']?.Value[0]
      : this.dataset['00189424']?.Value;
  }

  get '00189424'(): Element {
    return this.dataset['00189424'];
  }

  // Contrast/Bolus Ingredient Opaque
  get ContrastBolusIngredientOpaque(): any {
    const element = this.dataset['00189425'];
    return (element?.Value.length === 1)
      ? this.dataset['00189425']?.Value[0]
      : this.dataset['00189425']?.Value;
  }

  get '00189425'(): Element {
    return this.dataset['00189425'];
  }

  // Distance Receptor Plane to Detector Housing
  get DistanceReceptorPlaneToDetectorHousing(): any {
    const element = this.dataset['00189426'];
    return (element?.Value.length === 1)
      ? this.dataset['00189426']?.Value[0]
      : this.dataset['00189426']?.Value;
  }

  get '00189426'(): Element {
    return this.dataset['00189426'];
  }

  // Intensifier Active Shape
  get IntensifierActiveShape(): any {
    const element = this.dataset['00189427'];
    return (element?.Value.length === 1)
      ? this.dataset['00189427']?.Value[0]
      : this.dataset['00189427']?.Value;
  }

  get '00189427'(): Element {
    return this.dataset['00189427'];
  }

  // Intensifier Active Dimension(s)
  get IntensifierActiveDimensions(): any {
    const element = this.dataset['00189428'];
    return (element?.Value.length === 1)
      ? this.dataset['00189428']?.Value[0]
      : this.dataset['00189428']?.Value;
  }

  get '00189428'(): Element {
    return this.dataset['00189428'];
  }

  // Physical Detector Size
  get PhysicalDetectorSize(): any {
    const element = this.dataset['00189429'];
    return (element?.Value.length === 1)
      ? this.dataset['00189429']?.Value[0]
      : this.dataset['00189429']?.Value;
  }

  get '00189429'(): Element {
    return this.dataset['00189429'];
  }

  // Position of Isocenter Projection
  get PositionOfIsocenterProjection(): any {
    const element = this.dataset['00189430'];
    return (element?.Value.length === 1)
      ? this.dataset['00189430']?.Value[0]
      : this.dataset['00189430']?.Value;
  }

  get '00189430'(): Element {
    return this.dataset['00189430'];
  }

  // Field of View Sequence
  get FieldOfViewSequence(): any {
    const element = this.dataset['00189432'];
    return (element?.Value.length === 1)
      ? this.dataset['00189432']?.Value[0]
      : this.dataset['00189432']?.Value;
  }

  get '00189432'(): Element {
    return this.dataset['00189432'];
  }

  // Field of View Description
  get FieldOfViewDescription(): any {
    const element = this.dataset['00189433'];
    return (element?.Value.length === 1)
      ? this.dataset['00189433']?.Value[0]
      : this.dataset['00189433']?.Value;
  }

  get '00189433'(): Element {
    return this.dataset['00189433'];
  }

  // Exposure Control Sensing Regions Sequence
  get ExposureControlSensingRegionsSequence(): any {
    const element = this.dataset['00189434'];
    return (element?.Value.length === 1)
      ? this.dataset['00189434']?.Value[0]
      : this.dataset['00189434']?.Value;
  }

  get '00189434'(): Element {
    return this.dataset['00189434'];
  }

  // Exposure Control Sensing Region Shape
  get ExposureControlSensingRegionShape(): any {
    const element = this.dataset['00189435'];
    return (element?.Value.length === 1)
      ? this.dataset['00189435']?.Value[0]
      : this.dataset['00189435']?.Value;
  }

  get '00189435'(): Element {
    return this.dataset['00189435'];
  }

  // Exposure Control Sensing Region Left Vertical Edge
  get ExposureControlSensingRegionLeftVerticalEdge(): any {
    const element = this.dataset['00189436'];
    return (element?.Value.length === 1)
      ? this.dataset['00189436']?.Value[0]
      : this.dataset['00189436']?.Value;
  }

  get '00189436'(): Element {
    return this.dataset['00189436'];
  }

  // Exposure Control Sensing Region Right Vertical Edge
  get ExposureControlSensingRegionRightVerticalEdge(): any {
    const element = this.dataset['00189437'];
    return (element?.Value.length === 1)
      ? this.dataset['00189437']?.Value[0]
      : this.dataset['00189437']?.Value;
  }

  get '00189437'(): Element {
    return this.dataset['00189437'];
  }

  // Exposure Control Sensing Region Upper Horizontal Edge
  get ExposureControlSensingRegionUpperHorizontalEdge(): any {
    const element = this.dataset['00189438'];
    return (element?.Value.length === 1)
      ? this.dataset['00189438']?.Value[0]
      : this.dataset['00189438']?.Value;
  }

  get '00189438'(): Element {
    return this.dataset['00189438'];
  }

  // Exposure Control Sensing Region Lower Horizontal Edge
  get ExposureControlSensingRegionLowerHorizontalEdge(): any {
    const element = this.dataset['00189439'];
    return (element?.Value.length === 1)
      ? this.dataset['00189439']?.Value[0]
      : this.dataset['00189439']?.Value;
  }

  get '00189439'(): Element {
    return this.dataset['00189439'];
  }

  // Center of Circular Exposure Control Sensing Region
  get CenterOfCircularExposureControlSensingRegion(): any {
    const element = this.dataset['00189440'];
    return (element?.Value.length === 1)
      ? this.dataset['00189440']?.Value[0]
      : this.dataset['00189440']?.Value;
  }

  get '00189440'(): Element {
    return this.dataset['00189440'];
  }

  // Radius of Circular Exposure Control Sensing Region
  get RadiusOfCircularExposureControlSensingRegion(): any {
    const element = this.dataset['00189441'];
    return (element?.Value.length === 1)
      ? this.dataset['00189441']?.Value[0]
      : this.dataset['00189441']?.Value;
  }

  get '00189441'(): Element {
    return this.dataset['00189441'];
  }

  // Vertices of the Polygonal Exposure Control Sensing Region
  get VerticesOfThePolygonalExposureControlSensingRegion(): any {
    const element = this.dataset['00189442'];
    return (element?.Value.length === 1)
      ? this.dataset['00189442']?.Value[0]
      : this.dataset['00189442']?.Value;
  }

  get '00189442'(): Element {
    return this.dataset['00189442'];
  }

  // Column Angulation (Patient)
  get ColumnAngulationPatient(): any {
    const element = this.dataset['00189447'];
    return (element?.Value.length === 1)
      ? this.dataset['00189447']?.Value[0]
      : this.dataset['00189447']?.Value;
  }

  get '00189447'(): Element {
    return this.dataset['00189447'];
  }

  // Beam Angle
  get BeamAngle(): any {
    const element = this.dataset['00189449'];
    return (element?.Value.length === 1)
      ? this.dataset['00189449']?.Value[0]
      : this.dataset['00189449']?.Value;
  }

  get '00189449'(): Element {
    return this.dataset['00189449'];
  }

  // Frame Detector Parameters Sequence
  get FrameDetectorParametersSequence(): any {
    const element = this.dataset['00189451'];
    return (element?.Value.length === 1)
      ? this.dataset['00189451']?.Value[0]
      : this.dataset['00189451']?.Value;
  }

  get '00189451'(): Element {
    return this.dataset['00189451'];
  }

  // Calculated Anatomy Thickness
  get CalculatedAnatomyThickness(): any {
    const element = this.dataset['00189452'];
    return (element?.Value.length === 1)
      ? this.dataset['00189452']?.Value[0]
      : this.dataset['00189452']?.Value;
  }

  get '00189452'(): Element {
    return this.dataset['00189452'];
  }

  // Calibration Sequence
  get CalibrationSequence(): any {
    const element = this.dataset['00189455'];
    return (element?.Value.length === 1)
      ? this.dataset['00189455']?.Value[0]
      : this.dataset['00189455']?.Value;
  }

  get '00189455'(): Element {
    return this.dataset['00189455'];
  }

  // Object Thickness Sequence
  get ObjectThicknessSequence(): any {
    const element = this.dataset['00189456'];
    return (element?.Value.length === 1)
      ? this.dataset['00189456']?.Value[0]
      : this.dataset['00189456']?.Value;
  }

  get '00189456'(): Element {
    return this.dataset['00189456'];
  }

  // Plane Identification
  get PlaneIdentification(): any {
    const element = this.dataset['00189457'];
    return (element?.Value.length === 1)
      ? this.dataset['00189457']?.Value[0]
      : this.dataset['00189457']?.Value;
  }

  get '00189457'(): Element {
    return this.dataset['00189457'];
  }

  // Field of View Dimension(s) in Float
  get FieldOfViewDimensionsInFloat(): any {
    const element = this.dataset['00189461'];
    return (element?.Value.length === 1)
      ? this.dataset['00189461']?.Value[0]
      : this.dataset['00189461']?.Value;
  }

  get '00189461'(): Element {
    return this.dataset['00189461'];
  }

  // Isocenter Reference System Sequence
  get IsocenterReferenceSystemSequence(): any {
    const element = this.dataset['00189462'];
    return (element?.Value.length === 1)
      ? this.dataset['00189462']?.Value[0]
      : this.dataset['00189462']?.Value;
  }

  get '00189462'(): Element {
    return this.dataset['00189462'];
  }

  // Positioner Isocenter Primary Angle
  get PositionerIsocenterPrimaryAngle(): any {
    const element = this.dataset['00189463'];
    return (element?.Value.length === 1)
      ? this.dataset['00189463']?.Value[0]
      : this.dataset['00189463']?.Value;
  }

  get '00189463'(): Element {
    return this.dataset['00189463'];
  }

  // Positioner Isocenter Secondary Angle
  get PositionerIsocenterSecondaryAngle(): any {
    const element = this.dataset['00189464'];
    return (element?.Value.length === 1)
      ? this.dataset['00189464']?.Value[0]
      : this.dataset['00189464']?.Value;
  }

  get '00189464'(): Element {
    return this.dataset['00189464'];
  }

  // Positioner Isocenter Detector Rotation Angle
  get PositionerIsocenterDetectorRotationAngle(): any {
    const element = this.dataset['00189465'];
    return (element?.Value.length === 1)
      ? this.dataset['00189465']?.Value[0]
      : this.dataset['00189465']?.Value;
  }

  get '00189465'(): Element {
    return this.dataset['00189465'];
  }

  // Table X Position to Isocenter
  get TableXPositionToIsocenter(): any {
    const element = this.dataset['00189466'];
    return (element?.Value.length === 1)
      ? this.dataset['00189466']?.Value[0]
      : this.dataset['00189466']?.Value;
  }

  get '00189466'(): Element {
    return this.dataset['00189466'];
  }

  // Table Y Position to Isocenter
  get TableYPositionToIsocenter(): any {
    const element = this.dataset['00189467'];
    return (element?.Value.length === 1)
      ? this.dataset['00189467']?.Value[0]
      : this.dataset['00189467']?.Value;
  }

  get '00189467'(): Element {
    return this.dataset['00189467'];
  }

  // Table Z Position to Isocenter
  get TableZPositionToIsocenter(): any {
    const element = this.dataset['00189468'];
    return (element?.Value.length === 1)
      ? this.dataset['00189468']?.Value[0]
      : this.dataset['00189468']?.Value;
  }

  get '00189468'(): Element {
    return this.dataset['00189468'];
  }

  // Table Horizontal Rotation Angle
  get TableHorizontalRotationAngle(): any {
    const element = this.dataset['00189469'];
    return (element?.Value.length === 1)
      ? this.dataset['00189469']?.Value[0]
      : this.dataset['00189469']?.Value;
  }

  get '00189469'(): Element {
    return this.dataset['00189469'];
  }

  // Table Head Tilt Angle
  get TableHeadTiltAngle(): any {
    const element = this.dataset['00189470'];
    return (element?.Value.length === 1)
      ? this.dataset['00189470']?.Value[0]
      : this.dataset['00189470']?.Value;
  }

  get '00189470'(): Element {
    return this.dataset['00189470'];
  }

  // Table Cradle Tilt Angle
  get TableCradleTiltAngle(): any {
    const element = this.dataset['00189471'];
    return (element?.Value.length === 1)
      ? this.dataset['00189471']?.Value[0]
      : this.dataset['00189471']?.Value;
  }

  get '00189471'(): Element {
    return this.dataset['00189471'];
  }

  // Frame Display Shutter Sequence
  get FrameDisplayShutterSequence(): any {
    const element = this.dataset['00189472'];
    return (element?.Value.length === 1)
      ? this.dataset['00189472']?.Value[0]
      : this.dataset['00189472']?.Value;
  }

  get '00189472'(): Element {
    return this.dataset['00189472'];
  }

  // Acquired Image Area Dose Product
  get AcquiredImageAreaDoseProduct(): any {
    const element = this.dataset['00189473'];
    return (element?.Value.length === 1)
      ? this.dataset['00189473']?.Value[0]
      : this.dataset['00189473']?.Value;
  }

  get '00189473'(): Element {
    return this.dataset['00189473'];
  }

  // C-arm Positioner Tabletop Relationship
  get CArmPositionerTabletopRelationship(): any {
    const element = this.dataset['00189474'];
    return (element?.Value.length === 1)
      ? this.dataset['00189474']?.Value[0]
      : this.dataset['00189474']?.Value;
  }

  get '00189474'(): Element {
    return this.dataset['00189474'];
  }

  // X-Ray Geometry Sequence
  get XRayGeometrySequence(): any {
    const element = this.dataset['00189476'];
    return (element?.Value.length === 1)
      ? this.dataset['00189476']?.Value[0]
      : this.dataset['00189476']?.Value;
  }

  get '00189476'(): Element {
    return this.dataset['00189476'];
  }

  // Irradiation Event Identification Sequence
  get IrradiationEventIdentificationSequence(): any {
    const element = this.dataset['00189477'];
    return (element?.Value.length === 1)
      ? this.dataset['00189477']?.Value[0]
      : this.dataset['00189477']?.Value;
  }

  get '00189477'(): Element {
    return this.dataset['00189477'];
  }

  // X-Ray 3D Frame Type Sequence
  get XRay3DFrameTypeSequence(): any {
    const element = this.dataset['00189504'];
    return (element?.Value.length === 1)
      ? this.dataset['00189504']?.Value[0]
      : this.dataset['00189504']?.Value;
  }

  get '00189504'(): Element {
    return this.dataset['00189504'];
  }

  // Contributing Sources Sequence
  get ContributingSourcesSequence(): any {
    const element = this.dataset['00189506'];
    return (element?.Value.length === 1)
      ? this.dataset['00189506']?.Value[0]
      : this.dataset['00189506']?.Value;
  }

  get '00189506'(): Element {
    return this.dataset['00189506'];
  }

  // X-Ray 3D Acquisition Sequence
  get XRay3DAcquisitionSequence(): any {
    const element = this.dataset['00189507'];
    return (element?.Value.length === 1)
      ? this.dataset['00189507']?.Value[0]
      : this.dataset['00189507']?.Value;
  }

  get '00189507'(): Element {
    return this.dataset['00189507'];
  }

  // Primary Positioner Scan Arc
  get PrimaryPositionerScanArc(): any {
    const element = this.dataset['00189508'];
    return (element?.Value.length === 1)
      ? this.dataset['00189508']?.Value[0]
      : this.dataset['00189508']?.Value;
  }

  get '00189508'(): Element {
    return this.dataset['00189508'];
  }

  // Secondary Positioner Scan Arc
  get SecondaryPositionerScanArc(): any {
    const element = this.dataset['00189509'];
    return (element?.Value.length === 1)
      ? this.dataset['00189509']?.Value[0]
      : this.dataset['00189509']?.Value;
  }

  get '00189509'(): Element {
    return this.dataset['00189509'];
  }

  // Primary Positioner Scan Start Angle
  get PrimaryPositionerScanStartAngle(): any {
    const element = this.dataset['00189510'];
    return (element?.Value.length === 1)
      ? this.dataset['00189510']?.Value[0]
      : this.dataset['00189510']?.Value;
  }

  get '00189510'(): Element {
    return this.dataset['00189510'];
  }

  // Secondary Positioner Scan Start Angle
  get SecondaryPositionerScanStartAngle(): any {
    const element = this.dataset['00189511'];
    return (element?.Value.length === 1)
      ? this.dataset['00189511']?.Value[0]
      : this.dataset['00189511']?.Value;
  }

  get '00189511'(): Element {
    return this.dataset['00189511'];
  }

  // Primary Positioner Increment
  get PrimaryPositionerIncrement(): any {
    const element = this.dataset['00189514'];
    return (element?.Value.length === 1)
      ? this.dataset['00189514']?.Value[0]
      : this.dataset['00189514']?.Value;
  }

  get '00189514'(): Element {
    return this.dataset['00189514'];
  }

  // Secondary Positioner Increment
  get SecondaryPositionerIncrement(): any {
    const element = this.dataset['00189515'];
    return (element?.Value.length === 1)
      ? this.dataset['00189515']?.Value[0]
      : this.dataset['00189515']?.Value;
  }

  get '00189515'(): Element {
    return this.dataset['00189515'];
  }

  // Start Acquisition DateTime
  get StartAcquisitionDateTime(): any {
    const element = this.dataset['00189516'];
    return (element?.Value.length === 1)
      ? this.dataset['00189516']?.Value[0]
      : this.dataset['00189516']?.Value;
  }

  get '00189516'(): Element {
    return this.dataset['00189516'];
  }

  // End Acquisition DateTime
  get EndAcquisitionDateTime(): any {
    const element = this.dataset['00189517'];
    return (element?.Value.length === 1)
      ? this.dataset['00189517']?.Value[0]
      : this.dataset['00189517']?.Value;
  }

  get '00189517'(): Element {
    return this.dataset['00189517'];
  }

  // Primary Positioner Increment Sign
  get PrimaryPositionerIncrementSign(): any {
    const element = this.dataset['00189518'];
    return (element?.Value.length === 1)
      ? this.dataset['00189518']?.Value[0]
      : this.dataset['00189518']?.Value;
  }

  get '00189518'(): Element {
    return this.dataset['00189518'];
  }

  // Secondary Positioner Increment Sign
  get SecondaryPositionerIncrementSign(): any {
    const element = this.dataset['00189519'];
    return (element?.Value.length === 1)
      ? this.dataset['00189519']?.Value[0]
      : this.dataset['00189519']?.Value;
  }

  get '00189519'(): Element {
    return this.dataset['00189519'];
  }

  // Application Name
  get ApplicationName(): any {
    const element = this.dataset['00189524'];
    return (element?.Value.length === 1)
      ? this.dataset['00189524']?.Value[0]
      : this.dataset['00189524']?.Value;
  }

  get '00189524'(): Element {
    return this.dataset['00189524'];
  }

  // Application Version
  get ApplicationVersion(): any {
    const element = this.dataset['00189525'];
    return (element?.Value.length === 1)
      ? this.dataset['00189525']?.Value[0]
      : this.dataset['00189525']?.Value;
  }

  get '00189525'(): Element {
    return this.dataset['00189525'];
  }

  // Application Manufacturer
  get ApplicationManufacturer(): any {
    const element = this.dataset['00189526'];
    return (element?.Value.length === 1)
      ? this.dataset['00189526']?.Value[0]
      : this.dataset['00189526']?.Value;
  }

  get '00189526'(): Element {
    return this.dataset['00189526'];
  }

  // Algorithm Type
  get AlgorithmType(): any {
    const element = this.dataset['00189527'];
    return (element?.Value.length === 1)
      ? this.dataset['00189527']?.Value[0]
      : this.dataset['00189527']?.Value;
  }

  get '00189527'(): Element {
    return this.dataset['00189527'];
  }

  // Algorithm Description
  get AlgorithmDescription(): any {
    const element = this.dataset['00189528'];
    return (element?.Value.length === 1)
      ? this.dataset['00189528']?.Value[0]
      : this.dataset['00189528']?.Value;
  }

  get '00189528'(): Element {
    return this.dataset['00189528'];
  }

  // X-Ray 3D Reconstruction Sequence
  get XRay3DReconstructionSequence(): any {
    const element = this.dataset['00189530'];
    return (element?.Value.length === 1)
      ? this.dataset['00189530']?.Value[0]
      : this.dataset['00189530']?.Value;
  }

  get '00189530'(): Element {
    return this.dataset['00189530'];
  }

  // Reconstruction Description
  get ReconstructionDescription(): any {
    const element = this.dataset['00189531'];
    return (element?.Value.length === 1)
      ? this.dataset['00189531']?.Value[0]
      : this.dataset['00189531']?.Value;
  }

  get '00189531'(): Element {
    return this.dataset['00189531'];
  }

  // Per Projection Acquisition Sequence
  get PerProjectionAcquisitionSequence(): any {
    const element = this.dataset['00189538'];
    return (element?.Value.length === 1)
      ? this.dataset['00189538']?.Value[0]
      : this.dataset['00189538']?.Value;
  }

  get '00189538'(): Element {
    return this.dataset['00189538'];
  }

  // Detector Position Sequence
  get DetectorPositionSequence(): any {
    const element = this.dataset['00189541'];
    return (element?.Value.length === 1)
      ? this.dataset['00189541']?.Value[0]
      : this.dataset['00189541']?.Value;
  }

  get '00189541'(): Element {
    return this.dataset['00189541'];
  }

  // X-Ray Acquisition Dose Sequence
  get XRayAcquisitionDoseSequence(): any {
    const element = this.dataset['00189542'];
    return (element?.Value.length === 1)
      ? this.dataset['00189542']?.Value[0]
      : this.dataset['00189542']?.Value;
  }

  get '00189542'(): Element {
    return this.dataset['00189542'];
  }

  // X-Ray Source Isocenter Primary Angle
  get XRaySourceIsocenterPrimaryAngle(): any {
    const element = this.dataset['00189543'];
    return (element?.Value.length === 1)
      ? this.dataset['00189543']?.Value[0]
      : this.dataset['00189543']?.Value;
  }

  get '00189543'(): Element {
    return this.dataset['00189543'];
  }

  // X-Ray Source Isocenter Secondary Angle
  get XRaySourceIsocenterSecondaryAngle(): any {
    const element = this.dataset['00189544'];
    return (element?.Value.length === 1)
      ? this.dataset['00189544']?.Value[0]
      : this.dataset['00189544']?.Value;
  }

  get '00189544'(): Element {
    return this.dataset['00189544'];
  }

  // Breast Support Isocenter Primary Angle
  get BreastSupportIsocenterPrimaryAngle(): any {
    const element = this.dataset['00189545'];
    return (element?.Value.length === 1)
      ? this.dataset['00189545']?.Value[0]
      : this.dataset['00189545']?.Value;
  }

  get '00189545'(): Element {
    return this.dataset['00189545'];
  }

  // Breast Support Isocenter Secondary Angle
  get BreastSupportIsocenterSecondaryAngle(): any {
    const element = this.dataset['00189546'];
    return (element?.Value.length === 1)
      ? this.dataset['00189546']?.Value[0]
      : this.dataset['00189546']?.Value;
  }

  get '00189546'(): Element {
    return this.dataset['00189546'];
  }

  // Breast Support X Position to Isocenter
  get BreastSupportXPositionToIsocenter(): any {
    const element = this.dataset['00189547'];
    return (element?.Value.length === 1)
      ? this.dataset['00189547']?.Value[0]
      : this.dataset['00189547']?.Value;
  }

  get '00189547'(): Element {
    return this.dataset['00189547'];
  }

  // Breast Support Y Position to Isocenter
  get BreastSupportYPositionToIsocenter(): any {
    const element = this.dataset['00189548'];
    return (element?.Value.length === 1)
      ? this.dataset['00189548']?.Value[0]
      : this.dataset['00189548']?.Value;
  }

  get '00189548'(): Element {
    return this.dataset['00189548'];
  }

  // Breast Support Z Position to Isocenter
  get BreastSupportZPositionToIsocenter(): any {
    const element = this.dataset['00189549'];
    return (element?.Value.length === 1)
      ? this.dataset['00189549']?.Value[0]
      : this.dataset['00189549']?.Value;
  }

  get '00189549'(): Element {
    return this.dataset['00189549'];
  }

  // Detector Isocenter Primary Angle
  get DetectorIsocenterPrimaryAngle(): any {
    const element = this.dataset['00189550'];
    return (element?.Value.length === 1)
      ? this.dataset['00189550']?.Value[0]
      : this.dataset['00189550']?.Value;
  }

  get '00189550'(): Element {
    return this.dataset['00189550'];
  }

  // Detector Isocenter Secondary Angle
  get DetectorIsocenterSecondaryAngle(): any {
    const element = this.dataset['00189551'];
    return (element?.Value.length === 1)
      ? this.dataset['00189551']?.Value[0]
      : this.dataset['00189551']?.Value;
  }

  get '00189551'(): Element {
    return this.dataset['00189551'];
  }

  // Detector X Position to Isocenter
  get DetectorXPositionToIsocenter(): any {
    const element = this.dataset['00189552'];
    return (element?.Value.length === 1)
      ? this.dataset['00189552']?.Value[0]
      : this.dataset['00189552']?.Value;
  }

  get '00189552'(): Element {
    return this.dataset['00189552'];
  }

  // Detector Y Position to Isocenter
  get DetectorYPositionToIsocenter(): any {
    const element = this.dataset['00189553'];
    return (element?.Value.length === 1)
      ? this.dataset['00189553']?.Value[0]
      : this.dataset['00189553']?.Value;
  }

  get '00189553'(): Element {
    return this.dataset['00189553'];
  }

  // Detector Z Position to Isocenter
  get DetectorZPositionToIsocenter(): any {
    const element = this.dataset['00189554'];
    return (element?.Value.length === 1)
      ? this.dataset['00189554']?.Value[0]
      : this.dataset['00189554']?.Value;
  }

  get '00189554'(): Element {
    return this.dataset['00189554'];
  }

  // X-Ray Grid Sequence
  get XRayGridSequence(): any {
    const element = this.dataset['00189555'];
    return (element?.Value.length === 1)
      ? this.dataset['00189555']?.Value[0]
      : this.dataset['00189555']?.Value;
  }

  get '00189555'(): Element {
    return this.dataset['00189555'];
  }

  // X-Ray Filter Sequence
  get XRayFilterSequence(): any {
    const element = this.dataset['00189556'];
    return (element?.Value.length === 1)
      ? this.dataset['00189556']?.Value[0]
      : this.dataset['00189556']?.Value;
  }

  get '00189556'(): Element {
    return this.dataset['00189556'];
  }

  // Detector Active Area TLHC Position
  get DetectorActiveAreaTLHCPosition(): any {
    const element = this.dataset['00189557'];
    return (element?.Value.length === 1)
      ? this.dataset['00189557']?.Value[0]
      : this.dataset['00189557']?.Value;
  }

  get '00189557'(): Element {
    return this.dataset['00189557'];
  }

  // Detector Active Area Orientation
  get DetectorActiveAreaOrientation(): any {
    const element = this.dataset['00189558'];
    return (element?.Value.length === 1)
      ? this.dataset['00189558']?.Value[0]
      : this.dataset['00189558']?.Value;
  }

  get '00189558'(): Element {
    return this.dataset['00189558'];
  }

  // Positioner Primary Angle Direction
  get PositionerPrimaryAngleDirection(): any {
    const element = this.dataset['00189559'];
    return (element?.Value.length === 1)
      ? this.dataset['00189559']?.Value[0]
      : this.dataset['00189559']?.Value;
  }

  get '00189559'(): Element {
    return this.dataset['00189559'];
  }

  // Diffusion b-matrix Sequence
  get DiffusionBMatrixSequence(): any {
    const element = this.dataset['00189601'];
    return (element?.Value.length === 1)
      ? this.dataset['00189601']?.Value[0]
      : this.dataset['00189601']?.Value;
  }

  get '00189601'(): Element {
    return this.dataset['00189601'];
  }

  // Diffusion b-value XX
  get DiffusionBValueXX(): any {
    const element = this.dataset['00189602'];
    return (element?.Value.length === 1)
      ? this.dataset['00189602']?.Value[0]
      : this.dataset['00189602']?.Value;
  }

  get '00189602'(): Element {
    return this.dataset['00189602'];
  }

  // Diffusion b-value XY
  get DiffusionBValueXY(): any {
    const element = this.dataset['00189603'];
    return (element?.Value.length === 1)
      ? this.dataset['00189603']?.Value[0]
      : this.dataset['00189603']?.Value;
  }

  get '00189603'(): Element {
    return this.dataset['00189603'];
  }

  // Diffusion b-value XZ
  get DiffusionBValueXZ(): any {
    const element = this.dataset['00189604'];
    return (element?.Value.length === 1)
      ? this.dataset['00189604']?.Value[0]
      : this.dataset['00189604']?.Value;
  }

  get '00189604'(): Element {
    return this.dataset['00189604'];
  }

  // Diffusion b-value YY
  get DiffusionBValueYY(): any {
    const element = this.dataset['00189605'];
    return (element?.Value.length === 1)
      ? this.dataset['00189605']?.Value[0]
      : this.dataset['00189605']?.Value;
  }

  get '00189605'(): Element {
    return this.dataset['00189605'];
  }

  // Diffusion b-value YZ
  get DiffusionBValueYZ(): any {
    const element = this.dataset['00189606'];
    return (element?.Value.length === 1)
      ? this.dataset['00189606']?.Value[0]
      : this.dataset['00189606']?.Value;
  }

  get '00189606'(): Element {
    return this.dataset['00189606'];
  }

  // Diffusion b-value ZZ
  get DiffusionBValueZZ(): any {
    const element = this.dataset['00189607'];
    return (element?.Value.length === 1)
      ? this.dataset['00189607']?.Value[0]
      : this.dataset['00189607']?.Value;
  }

  get '00189607'(): Element {
    return this.dataset['00189607'];
  }

  // Decay Correction DateTime
  get DecayCorrectionDateTime(): any {
    const element = this.dataset['00189701'];
    return (element?.Value.length === 1)
      ? this.dataset['00189701']?.Value[0]
      : this.dataset['00189701']?.Value;
  }

  get '00189701'(): Element {
    return this.dataset['00189701'];
  }

  // Start Density Threshold
  get StartDensityThreshold(): any {
    const element = this.dataset['00189715'];
    return (element?.Value.length === 1)
      ? this.dataset['00189715']?.Value[0]
      : this.dataset['00189715']?.Value;
  }

  get '00189715'(): Element {
    return this.dataset['00189715'];
  }

  // Start Relative Density Difference Threshold
  get StartRelativeDensityDifferenceThreshold(): any {
    const element = this.dataset['00189716'];
    return (element?.Value.length === 1)
      ? this.dataset['00189716']?.Value[0]
      : this.dataset['00189716']?.Value;
  }

  get '00189716'(): Element {
    return this.dataset['00189716'];
  }

  // Start Cardiac Trigger Count Threshold
  get StartCardiacTriggerCountThreshold(): any {
    const element = this.dataset['00189717'];
    return (element?.Value.length === 1)
      ? this.dataset['00189717']?.Value[0]
      : this.dataset['00189717']?.Value;
  }

  get '00189717'(): Element {
    return this.dataset['00189717'];
  }

  // Start Respiratory Trigger Count Threshold
  get StartRespiratoryTriggerCountThreshold(): any {
    const element = this.dataset['00189718'];
    return (element?.Value.length === 1)
      ? this.dataset['00189718']?.Value[0]
      : this.dataset['00189718']?.Value;
  }

  get '00189718'(): Element {
    return this.dataset['00189718'];
  }

  // Termination Counts Threshold
  get TerminationCountsThreshold(): any {
    const element = this.dataset['00189719'];
    return (element?.Value.length === 1)
      ? this.dataset['00189719']?.Value[0]
      : this.dataset['00189719']?.Value;
  }

  get '00189719'(): Element {
    return this.dataset['00189719'];
  }

  // Termination Density Threshold
  get TerminationDensityThreshold(): any {
    const element = this.dataset['00189720'];
    return (element?.Value.length === 1)
      ? this.dataset['00189720']?.Value[0]
      : this.dataset['00189720']?.Value;
  }

  get '00189720'(): Element {
    return this.dataset['00189720'];
  }

  // Termination Relative Density Threshold
  get TerminationRelativeDensityThreshold(): any {
    const element = this.dataset['00189721'];
    return (element?.Value.length === 1)
      ? this.dataset['00189721']?.Value[0]
      : this.dataset['00189721']?.Value;
  }

  get '00189721'(): Element {
    return this.dataset['00189721'];
  }

  // Termination Time Threshold
  get TerminationTimeThreshold(): any {
    const element = this.dataset['00189722'];
    return (element?.Value.length === 1)
      ? this.dataset['00189722']?.Value[0]
      : this.dataset['00189722']?.Value;
  }

  get '00189722'(): Element {
    return this.dataset['00189722'];
  }

  // Termination Cardiac Trigger Count Threshold
  get TerminationCardiacTriggerCountThreshold(): any {
    const element = this.dataset['00189723'];
    return (element?.Value.length === 1)
      ? this.dataset['00189723']?.Value[0]
      : this.dataset['00189723']?.Value;
  }

  get '00189723'(): Element {
    return this.dataset['00189723'];
  }

  // Termination Respiratory Trigger Count Threshold
  get TerminationRespiratoryTriggerCountThreshold(): any {
    const element = this.dataset['00189724'];
    return (element?.Value.length === 1)
      ? this.dataset['00189724']?.Value[0]
      : this.dataset['00189724']?.Value;
  }

  get '00189724'(): Element {
    return this.dataset['00189724'];
  }

  // Detector Geometry
  get DetectorGeometry(): any {
    const element = this.dataset['00189725'];
    return (element?.Value.length === 1)
      ? this.dataset['00189725']?.Value[0]
      : this.dataset['00189725']?.Value;
  }

  get '00189725'(): Element {
    return this.dataset['00189725'];
  }

  // Transverse Detector Separation
  get TransverseDetectorSeparation(): any {
    const element = this.dataset['00189726'];
    return (element?.Value.length === 1)
      ? this.dataset['00189726']?.Value[0]
      : this.dataset['00189726']?.Value;
  }

  get '00189726'(): Element {
    return this.dataset['00189726'];
  }

  // Axial Detector Dimension
  get AxialDetectorDimension(): any {
    const element = this.dataset['00189727'];
    return (element?.Value.length === 1)
      ? this.dataset['00189727']?.Value[0]
      : this.dataset['00189727']?.Value;
  }

  get '00189727'(): Element {
    return this.dataset['00189727'];
  }

  // Radiopharmaceutical Agent Number
  get RadiopharmaceuticalAgentNumber(): any {
    const element = this.dataset['00189729'];
    return (element?.Value.length === 1)
      ? this.dataset['00189729']?.Value[0]
      : this.dataset['00189729']?.Value;
  }

  get '00189729'(): Element {
    return this.dataset['00189729'];
  }

  // PET Frame Acquisition Sequence
  get PETFrameAcquisitionSequence(): any {
    const element = this.dataset['00189732'];
    return (element?.Value.length === 1)
      ? this.dataset['00189732']?.Value[0]
      : this.dataset['00189732']?.Value;
  }

  get '00189732'(): Element {
    return this.dataset['00189732'];
  }

  // PET Detector Motion Details Sequence
  get PETDetectorMotionDetailsSequence(): any {
    const element = this.dataset['00189733'];
    return (element?.Value.length === 1)
      ? this.dataset['00189733']?.Value[0]
      : this.dataset['00189733']?.Value;
  }

  get '00189733'(): Element {
    return this.dataset['00189733'];
  }

  // PET Table Dynamics Sequence
  get PETTableDynamicsSequence(): any {
    const element = this.dataset['00189734'];
    return (element?.Value.length === 1)
      ? this.dataset['00189734']?.Value[0]
      : this.dataset['00189734']?.Value;
  }

  get '00189734'(): Element {
    return this.dataset['00189734'];
  }

  // PET Position Sequence
  get PETPositionSequence(): any {
    const element = this.dataset['00189735'];
    return (element?.Value.length === 1)
      ? this.dataset['00189735']?.Value[0]
      : this.dataset['00189735']?.Value;
  }

  get '00189735'(): Element {
    return this.dataset['00189735'];
  }

  // PET Frame Correction Factors Sequence
  get PETFrameCorrectionFactorsSequence(): any {
    const element = this.dataset['00189736'];
    return (element?.Value.length === 1)
      ? this.dataset['00189736']?.Value[0]
      : this.dataset['00189736']?.Value;
  }

  get '00189736'(): Element {
    return this.dataset['00189736'];
  }

  // Radiopharmaceutical Usage Sequence
  get RadiopharmaceuticalUsageSequence(): any {
    const element = this.dataset['00189737'];
    return (element?.Value.length === 1)
      ? this.dataset['00189737']?.Value[0]
      : this.dataset['00189737']?.Value;
  }

  get '00189737'(): Element {
    return this.dataset['00189737'];
  }

  // Attenuation Correction Source
  get AttenuationCorrectionSource(): any {
    const element = this.dataset['00189738'];
    return (element?.Value.length === 1)
      ? this.dataset['00189738']?.Value[0]
      : this.dataset['00189738']?.Value;
  }

  get '00189738'(): Element {
    return this.dataset['00189738'];
  }

  // Number of Iterations
  get NumberOfIterations(): any {
    const element = this.dataset['00189739'];
    return (element?.Value.length === 1)
      ? this.dataset['00189739']?.Value[0]
      : this.dataset['00189739']?.Value;
  }

  get '00189739'(): Element {
    return this.dataset['00189739'];
  }

  // Number of Subsets
  get NumberOfSubsets(): any {
    const element = this.dataset['00189740'];
    return (element?.Value.length === 1)
      ? this.dataset['00189740']?.Value[0]
      : this.dataset['00189740']?.Value;
  }

  get '00189740'(): Element {
    return this.dataset['00189740'];
  }

  // PET Reconstruction Sequence
  get PETReconstructionSequence(): any {
    const element = this.dataset['00189749'];
    return (element?.Value.length === 1)
      ? this.dataset['00189749']?.Value[0]
      : this.dataset['00189749']?.Value;
  }

  get '00189749'(): Element {
    return this.dataset['00189749'];
  }

  // PET Frame Type Sequence
  get PETFrameTypeSequence(): any {
    const element = this.dataset['00189751'];
    return (element?.Value.length === 1)
      ? this.dataset['00189751']?.Value[0]
      : this.dataset['00189751']?.Value;
  }

  get '00189751'(): Element {
    return this.dataset['00189751'];
  }

  // Time of Flight Information Used
  get TimeOfFlightInformationUsed(): any {
    const element = this.dataset['00189755'];
    return (element?.Value.length === 1)
      ? this.dataset['00189755']?.Value[0]
      : this.dataset['00189755']?.Value;
  }

  get '00189755'(): Element {
    return this.dataset['00189755'];
  }

  // Reconstruction Type
  get ReconstructionType(): any {
    const element = this.dataset['00189756'];
    return (element?.Value.length === 1)
      ? this.dataset['00189756']?.Value[0]
      : this.dataset['00189756']?.Value;
  }

  get '00189756'(): Element {
    return this.dataset['00189756'];
  }

  // Decay Corrected
  get DecayCorrected(): any {
    const element = this.dataset['00189758'];
    return (element?.Value.length === 1)
      ? this.dataset['00189758']?.Value[0]
      : this.dataset['00189758']?.Value;
  }

  get '00189758'(): Element {
    return this.dataset['00189758'];
  }

  // Attenuation Corrected
  get AttenuationCorrected(): any {
    const element = this.dataset['00189759'];
    return (element?.Value.length === 1)
      ? this.dataset['00189759']?.Value[0]
      : this.dataset['00189759']?.Value;
  }

  get '00189759'(): Element {
    return this.dataset['00189759'];
  }

  // Scatter Corrected
  get ScatterCorrected(): any {
    const element = this.dataset['00189760'];
    return (element?.Value.length === 1)
      ? this.dataset['00189760']?.Value[0]
      : this.dataset['00189760']?.Value;
  }

  get '00189760'(): Element {
    return this.dataset['00189760'];
  }

  // Dead Time Corrected
  get DeadTimeCorrected(): any {
    const element = this.dataset['00189761'];
    return (element?.Value.length === 1)
      ? this.dataset['00189761']?.Value[0]
      : this.dataset['00189761']?.Value;
  }

  get '00189761'(): Element {
    return this.dataset['00189761'];
  }

  // Gantry Motion Corrected
  get GantryMotionCorrected(): any {
    const element = this.dataset['00189762'];
    return (element?.Value.length === 1)
      ? this.dataset['00189762']?.Value[0]
      : this.dataset['00189762']?.Value;
  }

  get '00189762'(): Element {
    return this.dataset['00189762'];
  }

  // Patient Motion Corrected
  get PatientMotionCorrected(): any {
    const element = this.dataset['00189763'];
    return (element?.Value.length === 1)
      ? this.dataset['00189763']?.Value[0]
      : this.dataset['00189763']?.Value;
  }

  get '00189763'(): Element {
    return this.dataset['00189763'];
  }

  // Count Loss Normalization Corrected
  get CountLossNormalizationCorrected(): any {
    const element = this.dataset['00189764'];
    return (element?.Value.length === 1)
      ? this.dataset['00189764']?.Value[0]
      : this.dataset['00189764']?.Value;
  }

  get '00189764'(): Element {
    return this.dataset['00189764'];
  }

  // Randoms Corrected
  get RandomsCorrected(): any {
    const element = this.dataset['00189765'];
    return (element?.Value.length === 1)
      ? this.dataset['00189765']?.Value[0]
      : this.dataset['00189765']?.Value;
  }

  get '00189765'(): Element {
    return this.dataset['00189765'];
  }

  // Non-uniform Radial Sampling Corrected
  get NonUniformRadialSamplingCorrected(): any {
    const element = this.dataset['00189766'];
    return (element?.Value.length === 1)
      ? this.dataset['00189766']?.Value[0]
      : this.dataset['00189766']?.Value;
  }

  get '00189766'(): Element {
    return this.dataset['00189766'];
  }

  // Sensitivity Calibrated
  get SensitivityCalibrated(): any {
    const element = this.dataset['00189767'];
    return (element?.Value.length === 1)
      ? this.dataset['00189767']?.Value[0]
      : this.dataset['00189767']?.Value;
  }

  get '00189767'(): Element {
    return this.dataset['00189767'];
  }

  // Detector Normalization Correction
  get DetectorNormalizationCorrection(): any {
    const element = this.dataset['00189768'];
    return (element?.Value.length === 1)
      ? this.dataset['00189768']?.Value[0]
      : this.dataset['00189768']?.Value;
  }

  get '00189768'(): Element {
    return this.dataset['00189768'];
  }

  // Iterative Reconstruction Method
  get IterativeReconstructionMethod(): any {
    const element = this.dataset['00189769'];
    return (element?.Value.length === 1)
      ? this.dataset['00189769']?.Value[0]
      : this.dataset['00189769']?.Value;
  }

  get '00189769'(): Element {
    return this.dataset['00189769'];
  }

  // Attenuation Correction Temporal Relationship
  get AttenuationCorrectionTemporalRelationship(): any {
    const element = this.dataset['00189770'];
    return (element?.Value.length === 1)
      ? this.dataset['00189770']?.Value[0]
      : this.dataset['00189770']?.Value;
  }

  get '00189770'(): Element {
    return this.dataset['00189770'];
  }

  // Patient Physiological State Sequence
  get PatientPhysiologicalStateSequence(): any {
    const element = this.dataset['00189771'];
    return (element?.Value.length === 1)
      ? this.dataset['00189771']?.Value[0]
      : this.dataset['00189771']?.Value;
  }

  get '00189771'(): Element {
    return this.dataset['00189771'];
  }

  // Patient Physiological State Code Sequence
  get PatientPhysiologicalStateCodeSequence(): any {
    const element = this.dataset['00189772'];
    return (element?.Value.length === 1)
      ? this.dataset['00189772']?.Value[0]
      : this.dataset['00189772']?.Value;
  }

  get '00189772'(): Element {
    return this.dataset['00189772'];
  }

  // Depth(s) of Focus
  get DepthsOfFocus(): any {
    const element = this.dataset['00189801'];
    return (element?.Value.length === 1)
      ? this.dataset['00189801']?.Value[0]
      : this.dataset['00189801']?.Value;
  }

  get '00189801'(): Element {
    return this.dataset['00189801'];
  }

  // Excluded Intervals Sequence
  get ExcludedIntervalsSequence(): any {
    const element = this.dataset['00189803'];
    return (element?.Value.length === 1)
      ? this.dataset['00189803']?.Value[0]
      : this.dataset['00189803']?.Value;
  }

  get '00189803'(): Element {
    return this.dataset['00189803'];
  }

  // Exclusion Start DateTime
  get ExclusionStartDateTime(): any {
    const element = this.dataset['00189804'];
    return (element?.Value.length === 1)
      ? this.dataset['00189804']?.Value[0]
      : this.dataset['00189804']?.Value;
  }

  get '00189804'(): Element {
    return this.dataset['00189804'];
  }

  // Exclusion Duration
  get ExclusionDuration(): any {
    const element = this.dataset['00189805'];
    return (element?.Value.length === 1)
      ? this.dataset['00189805']?.Value[0]
      : this.dataset['00189805']?.Value;
  }

  get '00189805'(): Element {
    return this.dataset['00189805'];
  }

  // US Image Description Sequence
  get USImageDescriptionSequence(): any {
    const element = this.dataset['00189806'];
    return (element?.Value.length === 1)
      ? this.dataset['00189806']?.Value[0]
      : this.dataset['00189806']?.Value;
  }

  get '00189806'(): Element {
    return this.dataset['00189806'];
  }

  // Image Data Type Sequence
  get ImageDataTypeSequence(): any {
    const element = this.dataset['00189807'];
    return (element?.Value.length === 1)
      ? this.dataset['00189807']?.Value[0]
      : this.dataset['00189807']?.Value;
  }

  get '00189807'(): Element {
    return this.dataset['00189807'];
  }

  // Data Type
  get DataType(): any {
    const element = this.dataset['00189808'];
    return (element?.Value.length === 1)
      ? this.dataset['00189808']?.Value[0]
      : this.dataset['00189808']?.Value;
  }

  get '00189808'(): Element {
    return this.dataset['00189808'];
  }

  // Transducer Scan Pattern Code Sequence
  get TransducerScanPatternCodeSequence(): any {
    const element = this.dataset['00189809'];
    return (element?.Value.length === 1)
      ? this.dataset['00189809']?.Value[0]
      : this.dataset['00189809']?.Value;
  }

  get '00189809'(): Element {
    return this.dataset['00189809'];
  }

  // Aliased Data Type
  get AliasedDataType(): any {
    const element = this.dataset['0018980B'];
    return (element?.Value.length === 1)
      ? this.dataset['0018980B']?.Value[0]
      : this.dataset['0018980B']?.Value;
  }

  get '0018980B'(): Element {
    return this.dataset['0018980B'];
  }

  // Position Measuring Device Used
  get PositionMeasuringDeviceUsed(): any {
    const element = this.dataset['0018980C'];
    return (element?.Value.length === 1)
      ? this.dataset['0018980C']?.Value[0]
      : this.dataset['0018980C']?.Value;
  }

  get '0018980C'(): Element {
    return this.dataset['0018980C'];
  }

  // Transducer Geometry Code Sequence
  get TransducerGeometryCodeSequence(): any {
    const element = this.dataset['0018980D'];
    return (element?.Value.length === 1)
      ? this.dataset['0018980D']?.Value[0]
      : this.dataset['0018980D']?.Value;
  }

  get '0018980D'(): Element {
    return this.dataset['0018980D'];
  }

  // Transducer Beam Steering Code Sequence
  get TransducerBeamSteeringCodeSequence(): any {
    const element = this.dataset['0018980E'];
    return (element?.Value.length === 1)
      ? this.dataset['0018980E']?.Value[0]
      : this.dataset['0018980E']?.Value;
  }

  get '0018980E'(): Element {
    return this.dataset['0018980E'];
  }

  // Transducer Application Code Sequence
  get TransducerApplicationCodeSequence(): any {
    const element = this.dataset['0018980F'];
    return (element?.Value.length === 1)
      ? this.dataset['0018980F']?.Value[0]
      : this.dataset['0018980F']?.Value;
  }

  get '0018980F'(): Element {
    return this.dataset['0018980F'];
  }

  // Zero Velocity Pixel Value
  get ZeroVelocityPixelValue(): any {
    const element = this.dataset['00189810'];
    return (element?.Value.length === 1)
      ? this.dataset['00189810']?.Value[0]
      : this.dataset['00189810']?.Value;
  }

  get '00189810'(): Element {
    return this.dataset['00189810'];
  }

  // Contributing Equipment Sequence
  get ContributingEquipmentSequence(): any {
    const element = this.dataset['0018A001'];
    return (element?.Value.length === 1)
      ? this.dataset['0018A001']?.Value[0]
      : this.dataset['0018A001']?.Value;
  }

  get '0018A001'(): Element {
    return this.dataset['0018A001'];
  }

  // Contribution DateTime
  get ContributionDateTime(): any {
    const element = this.dataset['0018A002'];
    return (element?.Value.length === 1)
      ? this.dataset['0018A002']?.Value[0]
      : this.dataset['0018A002']?.Value;
  }

  get '0018A002'(): Element {
    return this.dataset['0018A002'];
  }

  // Contribution Description
  get ContributionDescription(): any {
    const element = this.dataset['0018A003'];
    return (element?.Value.length === 1)
      ? this.dataset['0018A003']?.Value[0]
      : this.dataset['0018A003']?.Value;
  }

  get '0018A003'(): Element {
    return this.dataset['0018A003'];
  }

  // Study Instance UID
  get StudyInstanceUID(): any {
    const element = this.dataset['0020000D'];
    return (element?.Value.length === 1)
      ? this.dataset['0020000D']?.Value[0]
      : this.dataset['0020000D']?.Value;
  }

  get '0020000D'(): Element {
    return this.dataset['0020000D'];
  }

  // Series Instance UID
  get SeriesInstanceUID(): any {
    const element = this.dataset['0020000E'];
    return (element?.Value.length === 1)
      ? this.dataset['0020000E']?.Value[0]
      : this.dataset['0020000E']?.Value;
  }

  get '0020000E'(): Element {
    return this.dataset['0020000E'];
  }

  // Study ID
  get StudyID(): any {
    const element = this.dataset['00200010'];
    return (element?.Value.length === 1)
      ? this.dataset['00200010']?.Value[0]
      : this.dataset['00200010']?.Value;
  }

  get '00200010'(): Element {
    return this.dataset['00200010'];
  }

  // Series Number
  get SeriesNumber(): any {
    const element = this.dataset['00200011'];
    return (element?.Value.length === 1)
      ? this.dataset['00200011']?.Value[0]
      : this.dataset['00200011']?.Value;
  }

  get '00200011'(): Element {
    return this.dataset['00200011'];
  }

  // Acquisition Number
  get AcquisitionNumber(): any {
    const element = this.dataset['00200012'];
    return (element?.Value.length === 1)
      ? this.dataset['00200012']?.Value[0]
      : this.dataset['00200012']?.Value;
  }

  get '00200012'(): Element {
    return this.dataset['00200012'];
  }

  // Instance Number
  get InstanceNumber(): any {
    const element = this.dataset['00200013'];
    return (element?.Value.length === 1)
      ? this.dataset['00200013']?.Value[0]
      : this.dataset['00200013']?.Value;
  }

  get '00200013'(): Element {
    return this.dataset['00200013'];
  }

  // Isotope Number
  get IsotopeNumber(): any {
    const element = this.dataset['00200014'];
    return (element?.Value.length === 1)
      ? this.dataset['00200014']?.Value[0]
      : this.dataset['00200014']?.Value;
  }

  get '00200014'(): Element {
    return this.dataset['00200014'];
  }

  // Phase Number
  get PhaseNumber(): any {
    const element = this.dataset['00200015'];
    return (element?.Value.length === 1)
      ? this.dataset['00200015']?.Value[0]
      : this.dataset['00200015']?.Value;
  }

  get '00200015'(): Element {
    return this.dataset['00200015'];
  }

  // Interval Number
  get IntervalNumber(): any {
    const element = this.dataset['00200016'];
    return (element?.Value.length === 1)
      ? this.dataset['00200016']?.Value[0]
      : this.dataset['00200016']?.Value;
  }

  get '00200016'(): Element {
    return this.dataset['00200016'];
  }

  // Time Slot Number
  get TimeSlotNumber(): any {
    const element = this.dataset['00200017'];
    return (element?.Value.length === 1)
      ? this.dataset['00200017']?.Value[0]
      : this.dataset['00200017']?.Value;
  }

  get '00200017'(): Element {
    return this.dataset['00200017'];
  }

  // Angle Number
  get AngleNumber(): any {
    const element = this.dataset['00200018'];
    return (element?.Value.length === 1)
      ? this.dataset['00200018']?.Value[0]
      : this.dataset['00200018']?.Value;
  }

  get '00200018'(): Element {
    return this.dataset['00200018'];
  }

  // Item Number
  get ItemNumber(): any {
    const element = this.dataset['00200019'];
    return (element?.Value.length === 1)
      ? this.dataset['00200019']?.Value[0]
      : this.dataset['00200019']?.Value;
  }

  get '00200019'(): Element {
    return this.dataset['00200019'];
  }

  // Patient Orientation
  get PatientOrientation(): any {
    const element = this.dataset['00200020'];
    return (element?.Value.length === 1)
      ? this.dataset['00200020']?.Value[0]
      : this.dataset['00200020']?.Value;
  }

  get '00200020'(): Element {
    return this.dataset['00200020'];
  }

  // Overlay Number
  get OverlayNumber(): any {
    const element = this.dataset['00200022'];
    return (element?.Value.length === 1)
      ? this.dataset['00200022']?.Value[0]
      : this.dataset['00200022']?.Value;
  }

  get '00200022'(): Element {
    return this.dataset['00200022'];
  }

  // Curve Number
  get CurveNumber(): any {
    const element = this.dataset['00200024'];
    return (element?.Value.length === 1)
      ? this.dataset['00200024']?.Value[0]
      : this.dataset['00200024']?.Value;
  }

  get '00200024'(): Element {
    return this.dataset['00200024'];
  }

  // LUT Number
  get LUTNumber(): any {
    const element = this.dataset['00200026'];
    return (element?.Value.length === 1)
      ? this.dataset['00200026']?.Value[0]
      : this.dataset['00200026']?.Value;
  }

  get '00200026'(): Element {
    return this.dataset['00200026'];
  }

  // Image Position
  get ImagePosition(): any {
    const element = this.dataset['00200030'];
    return (element?.Value.length === 1)
      ? this.dataset['00200030']?.Value[0]
      : this.dataset['00200030']?.Value;
  }

  get '00200030'(): Element {
    return this.dataset['00200030'];
  }

  // Image Position (Patient)
  get ImagePositionPatient(): any {
    const element = this.dataset['00200032'];
    return (element?.Value.length === 1)
      ? this.dataset['00200032']?.Value[0]
      : this.dataset['00200032']?.Value;
  }

  get '00200032'(): Element {
    return this.dataset['00200032'];
  }

  // Image Orientation
  get ImageOrientation(): any {
    const element = this.dataset['00200035'];
    return (element?.Value.length === 1)
      ? this.dataset['00200035']?.Value[0]
      : this.dataset['00200035']?.Value;
  }

  get '00200035'(): Element {
    return this.dataset['00200035'];
  }

  // Image Orientation (Patient)
  get ImageOrientationPatient(): any {
    const element = this.dataset['00200037'];
    return (element?.Value.length === 1)
      ? this.dataset['00200037']?.Value[0]
      : this.dataset['00200037']?.Value;
  }

  get '00200037'(): Element {
    return this.dataset['00200037'];
  }

  // Location
  get Location(): any {
    const element = this.dataset['00200050'];
    return (element?.Value.length === 1)
      ? this.dataset['00200050']?.Value[0]
      : this.dataset['00200050']?.Value;
  }

  get '00200050'(): Element {
    return this.dataset['00200050'];
  }

  // Frame of Reference UID
  get FrameOfReferenceUID(): any {
    const element = this.dataset['00200052'];
    return (element?.Value.length === 1)
      ? this.dataset['00200052']?.Value[0]
      : this.dataset['00200052']?.Value;
  }

  get '00200052'(): Element {
    return this.dataset['00200052'];
  }

  // Laterality
  get Laterality(): any {
    const element = this.dataset['00200060'];
    return (element?.Value.length === 1)
      ? this.dataset['00200060']?.Value[0]
      : this.dataset['00200060']?.Value;
  }

  get '00200060'(): Element {
    return this.dataset['00200060'];
  }

  // Image Laterality
  get ImageLaterality(): any {
    const element = this.dataset['00200062'];
    return (element?.Value.length === 1)
      ? this.dataset['00200062']?.Value[0]
      : this.dataset['00200062']?.Value;
  }

  get '00200062'(): Element {
    return this.dataset['00200062'];
  }

  // Image Geometry Type
  get ImageGeometryType(): any {
    const element = this.dataset['00200070'];
    return (element?.Value.length === 1)
      ? this.dataset['00200070']?.Value[0]
      : this.dataset['00200070']?.Value;
  }

  get '00200070'(): Element {
    return this.dataset['00200070'];
  }

  // Masking Image
  get MaskingImage(): any {
    const element = this.dataset['00200080'];
    return (element?.Value.length === 1)
      ? this.dataset['00200080']?.Value[0]
      : this.dataset['00200080']?.Value;
  }

  get '00200080'(): Element {
    return this.dataset['00200080'];
  }

  // Report Number
  get ReportNumber(): any {
    const element = this.dataset['002000AA'];
    return (element?.Value.length === 1)
      ? this.dataset['002000AA']?.Value[0]
      : this.dataset['002000AA']?.Value;
  }

  get '002000AA'(): Element {
    return this.dataset['002000AA'];
  }

  // Temporal Position Identifier
  get TemporalPositionIdentifier(): any {
    const element = this.dataset['00200100'];
    return (element?.Value.length === 1)
      ? this.dataset['00200100']?.Value[0]
      : this.dataset['00200100']?.Value;
  }

  get '00200100'(): Element {
    return this.dataset['00200100'];
  }

  // Number of Temporal Positions
  get NumberOfTemporalPositions(): any {
    const element = this.dataset['00200105'];
    return (element?.Value.length === 1)
      ? this.dataset['00200105']?.Value[0]
      : this.dataset['00200105']?.Value;
  }

  get '00200105'(): Element {
    return this.dataset['00200105'];
  }

  // Temporal Resolution
  get TemporalResolution(): any {
    const element = this.dataset['00200110'];
    return (element?.Value.length === 1)
      ? this.dataset['00200110']?.Value[0]
      : this.dataset['00200110']?.Value;
  }

  get '00200110'(): Element {
    return this.dataset['00200110'];
  }

  // Synchronization Frame of Reference UID
  get SynchronizationFrameOfReferenceUID(): any {
    const element = this.dataset['00200200'];
    return (element?.Value.length === 1)
      ? this.dataset['00200200']?.Value[0]
      : this.dataset['00200200']?.Value;
  }

  get '00200200'(): Element {
    return this.dataset['00200200'];
  }

  // SOP Instance UID of Concatenation Source
  get SOPInstanceUIDOfConcatenationSource(): any {
    const element = this.dataset['00200242'];
    return (element?.Value.length === 1)
      ? this.dataset['00200242']?.Value[0]
      : this.dataset['00200242']?.Value;
  }

  get '00200242'(): Element {
    return this.dataset['00200242'];
  }

  // Series in Study
  get SeriesInStudy(): any {
    const element = this.dataset['00201000'];
    return (element?.Value.length === 1)
      ? this.dataset['00201000']?.Value[0]
      : this.dataset['00201000']?.Value;
  }

  get '00201000'(): Element {
    return this.dataset['00201000'];
  }

  // Acquisitions in Series
  get AcquisitionsInSeries(): any {
    const element = this.dataset['00201001'];
    return (element?.Value.length === 1)
      ? this.dataset['00201001']?.Value[0]
      : this.dataset['00201001']?.Value;
  }

  get '00201001'(): Element {
    return this.dataset['00201001'];
  }

  // Images in Acquisition
  get ImagesInAcquisition(): any {
    const element = this.dataset['00201002'];
    return (element?.Value.length === 1)
      ? this.dataset['00201002']?.Value[0]
      : this.dataset['00201002']?.Value;
  }

  get '00201002'(): Element {
    return this.dataset['00201002'];
  }

  // Images in Series
  get ImagesInSeries(): any {
    const element = this.dataset['00201003'];
    return (element?.Value.length === 1)
      ? this.dataset['00201003']?.Value[0]
      : this.dataset['00201003']?.Value;
  }

  get '00201003'(): Element {
    return this.dataset['00201003'];
  }

  // Acquisitions in Study
  get AcquisitionsInStudy(): any {
    const element = this.dataset['00201004'];
    return (element?.Value.length === 1)
      ? this.dataset['00201004']?.Value[0]
      : this.dataset['00201004']?.Value;
  }

  get '00201004'(): Element {
    return this.dataset['00201004'];
  }

  // Images in Study
  get ImagesInStudy(): any {
    const element = this.dataset['00201005'];
    return (element?.Value.length === 1)
      ? this.dataset['00201005']?.Value[0]
      : this.dataset['00201005']?.Value;
  }

  get '00201005'(): Element {
    return this.dataset['00201005'];
  }

  // Reference
  get Reference(): any {
    const element = this.dataset['00201020'];
    return (element?.Value.length === 1)
      ? this.dataset['00201020']?.Value[0]
      : this.dataset['00201020']?.Value;
  }

  get '00201020'(): Element {
    return this.dataset['00201020'];
  }

  // Position Reference Indicator
  get PositionReferenceIndicator(): any {
    const element = this.dataset['00201040'];
    return (element?.Value.length === 1)
      ? this.dataset['00201040']?.Value[0]
      : this.dataset['00201040']?.Value;
  }

  get '00201040'(): Element {
    return this.dataset['00201040'];
  }

  // Slice Location
  get SliceLocation(): any {
    const element = this.dataset['00201041'];
    return (element?.Value.length === 1)
      ? this.dataset['00201041']?.Value[0]
      : this.dataset['00201041']?.Value;
  }

  get '00201041'(): Element {
    return this.dataset['00201041'];
  }

  // Other Study Numbers
  get OtherStudyNumbers(): any {
    const element = this.dataset['00201070'];
    return (element?.Value.length === 1)
      ? this.dataset['00201070']?.Value[0]
      : this.dataset['00201070']?.Value;
  }

  get '00201070'(): Element {
    return this.dataset['00201070'];
  }

  // Number of Patient Related Studies
  get NumberOfPatientRelatedStudies(): any {
    const element = this.dataset['00201200'];
    return (element?.Value.length === 1)
      ? this.dataset['00201200']?.Value[0]
      : this.dataset['00201200']?.Value;
  }

  get '00201200'(): Element {
    return this.dataset['00201200'];
  }

  // Number of Patient Related Series
  get NumberOfPatientRelatedSeries(): any {
    const element = this.dataset['00201202'];
    return (element?.Value.length === 1)
      ? this.dataset['00201202']?.Value[0]
      : this.dataset['00201202']?.Value;
  }

  get '00201202'(): Element {
    return this.dataset['00201202'];
  }

  // Number of Patient Related Instances
  get NumberOfPatientRelatedInstances(): any {
    const element = this.dataset['00201204'];
    return (element?.Value.length === 1)
      ? this.dataset['00201204']?.Value[0]
      : this.dataset['00201204']?.Value;
  }

  get '00201204'(): Element {
    return this.dataset['00201204'];
  }

  // Number of Study Related Series
  get NumberOfStudyRelatedSeries(): any {
    const element = this.dataset['00201206'];
    return (element?.Value.length === 1)
      ? this.dataset['00201206']?.Value[0]
      : this.dataset['00201206']?.Value;
  }

  get '00201206'(): Element {
    return this.dataset['00201206'];
  }

  // Number of Study Related Instances
  get NumberOfStudyRelatedInstances(): any {
    const element = this.dataset['00201208'];
    return (element?.Value.length === 1)
      ? this.dataset['00201208']?.Value[0]
      : this.dataset['00201208']?.Value;
  }

  get '00201208'(): Element {
    return this.dataset['00201208'];
  }

  // Number of Series Related Instances
  get NumberOfSeriesRelatedInstances(): any {
    const element = this.dataset['00201209'];
    return (element?.Value.length === 1)
      ? this.dataset['00201209']?.Value[0]
      : this.dataset['00201209']?.Value;
  }

  get '00201209'(): Element {
    return this.dataset['00201209'];
  }

  // Source Image IDs
  get SourceImageIDs(): any {
    const element = this.dataset['002031xx'];
    return (element?.Value.length === 1)
      ? this.dataset['002031xx']?.Value[0]
      : this.dataset['002031xx']?.Value;
  }

  get '002031xx'(): Element {
    return this.dataset['002031xx'];
  }

  // Modifying Device ID
  get ModifyingDeviceID(): any {
    const element = this.dataset['00203401'];
    return (element?.Value.length === 1)
      ? this.dataset['00203401']?.Value[0]
      : this.dataset['00203401']?.Value;
  }

  get '00203401'(): Element {
    return this.dataset['00203401'];
  }

  // Modified Image ID
  get ModifiedImageID(): any {
    const element = this.dataset['00203402'];
    return (element?.Value.length === 1)
      ? this.dataset['00203402']?.Value[0]
      : this.dataset['00203402']?.Value;
  }

  get '00203402'(): Element {
    return this.dataset['00203402'];
  }

  // Modified Image Date
  get ModifiedImageDate(): any {
    const element = this.dataset['00203403'];
    return (element?.Value.length === 1)
      ? this.dataset['00203403']?.Value[0]
      : this.dataset['00203403']?.Value;
  }

  get '00203403'(): Element {
    return this.dataset['00203403'];
  }

  // Modifying Device Manufacturer
  get ModifyingDeviceManufacturer(): any {
    const element = this.dataset['00203404'];
    return (element?.Value.length === 1)
      ? this.dataset['00203404']?.Value[0]
      : this.dataset['00203404']?.Value;
  }

  get '00203404'(): Element {
    return this.dataset['00203404'];
  }

  // Modified Image Time
  get ModifiedImageTime(): any {
    const element = this.dataset['00203405'];
    return (element?.Value.length === 1)
      ? this.dataset['00203405']?.Value[0]
      : this.dataset['00203405']?.Value;
  }

  get '00203405'(): Element {
    return this.dataset['00203405'];
  }

  // Modified Image Description
  get ModifiedImageDescription(): any {
    const element = this.dataset['00203406'];
    return (element?.Value.length === 1)
      ? this.dataset['00203406']?.Value[0]
      : this.dataset['00203406']?.Value;
  }

  get '00203406'(): Element {
    return this.dataset['00203406'];
  }

  // Image Comments
  get ImageComments(): any {
    const element = this.dataset['00204000'];
    return (element?.Value.length === 1)
      ? this.dataset['00204000']?.Value[0]
      : this.dataset['00204000']?.Value;
  }

  get '00204000'(): Element {
    return this.dataset['00204000'];
  }

  // Original Image Identification
  get OriginalImageIdentification(): any {
    const element = this.dataset['00205000'];
    return (element?.Value.length === 1)
      ? this.dataset['00205000']?.Value[0]
      : this.dataset['00205000']?.Value;
  }

  get '00205000'(): Element {
    return this.dataset['00205000'];
  }

  // Original Image Identification Nomenclature
  get OriginalImageIdentificationNomenclature(): any {
    const element = this.dataset['00205002'];
    return (element?.Value.length === 1)
      ? this.dataset['00205002']?.Value[0]
      : this.dataset['00205002']?.Value;
  }

  get '00205002'(): Element {
    return this.dataset['00205002'];
  }

  // Stack ID
  get StackID(): any {
    const element = this.dataset['00209056'];
    return (element?.Value.length === 1)
      ? this.dataset['00209056']?.Value[0]
      : this.dataset['00209056']?.Value;
  }

  get '00209056'(): Element {
    return this.dataset['00209056'];
  }

  // In-Stack Position Number
  get InStackPositionNumber(): any {
    const element = this.dataset['00209057'];
    return (element?.Value.length === 1)
      ? this.dataset['00209057']?.Value[0]
      : this.dataset['00209057']?.Value;
  }

  get '00209057'(): Element {
    return this.dataset['00209057'];
  }

  // Frame Anatomy Sequence
  get FrameAnatomySequence(): any {
    const element = this.dataset['00209071'];
    return (element?.Value.length === 1)
      ? this.dataset['00209071']?.Value[0]
      : this.dataset['00209071']?.Value;
  }

  get '00209071'(): Element {
    return this.dataset['00209071'];
  }

  // Frame Laterality
  get FrameLaterality(): any {
    const element = this.dataset['00209072'];
    return (element?.Value.length === 1)
      ? this.dataset['00209072']?.Value[0]
      : this.dataset['00209072']?.Value;
  }

  get '00209072'(): Element {
    return this.dataset['00209072'];
  }

  // Frame Content Sequence
  get FrameContentSequence(): any {
    const element = this.dataset['00209111'];
    return (element?.Value.length === 1)
      ? this.dataset['00209111']?.Value[0]
      : this.dataset['00209111']?.Value;
  }

  get '00209111'(): Element {
    return this.dataset['00209111'];
  }

  // Plane Position Sequence
  get PlanePositionSequence(): any {
    const element = this.dataset['00209113'];
    return (element?.Value.length === 1)
      ? this.dataset['00209113']?.Value[0]
      : this.dataset['00209113']?.Value;
  }

  get '00209113'(): Element {
    return this.dataset['00209113'];
  }

  // Plane Orientation Sequence
  get PlaneOrientationSequence(): any {
    const element = this.dataset['00209116'];
    return (element?.Value.length === 1)
      ? this.dataset['00209116']?.Value[0]
      : this.dataset['00209116']?.Value;
  }

  get '00209116'(): Element {
    return this.dataset['00209116'];
  }

  // Temporal Position Index
  get TemporalPositionIndex(): any {
    const element = this.dataset['00209128'];
    return (element?.Value.length === 1)
      ? this.dataset['00209128']?.Value[0]
      : this.dataset['00209128']?.Value;
  }

  get '00209128'(): Element {
    return this.dataset['00209128'];
  }

  // Nominal Cardiac Trigger Delay Time
  get NominalCardiacTriggerDelayTime(): any {
    const element = this.dataset['00209153'];
    return (element?.Value.length === 1)
      ? this.dataset['00209153']?.Value[0]
      : this.dataset['00209153']?.Value;
  }

  get '00209153'(): Element {
    return this.dataset['00209153'];
  }

  // Nominal Cardiac Trigger Time Prior To R-Peak
  get NominalCardiacTriggerTimePriorToRPeak(): any {
    const element = this.dataset['00209154'];
    return (element?.Value.length === 1)
      ? this.dataset['00209154']?.Value[0]
      : this.dataset['00209154']?.Value;
  }

  get '00209154'(): Element {
    return this.dataset['00209154'];
  }

  // Actual Cardiac Trigger Time Prior To R-Peak
  get ActualCardiacTriggerTimePriorToRPeak(): any {
    const element = this.dataset['00209155'];
    return (element?.Value.length === 1)
      ? this.dataset['00209155']?.Value[0]
      : this.dataset['00209155']?.Value;
  }

  get '00209155'(): Element {
    return this.dataset['00209155'];
  }

  // Frame Acquisition Number
  get FrameAcquisitionNumber(): any {
    const element = this.dataset['00209156'];
    return (element?.Value.length === 1)
      ? this.dataset['00209156']?.Value[0]
      : this.dataset['00209156']?.Value;
  }

  get '00209156'(): Element {
    return this.dataset['00209156'];
  }

  // Dimension Index Values
  get DimensionIndexValues(): any {
    const element = this.dataset['00209157'];
    return (element?.Value.length === 1)
      ? this.dataset['00209157']?.Value[0]
      : this.dataset['00209157']?.Value;
  }

  get '00209157'(): Element {
    return this.dataset['00209157'];
  }

  // Frame Comments
  get FrameComments(): any {
    const element = this.dataset['00209158'];
    return (element?.Value.length === 1)
      ? this.dataset['00209158']?.Value[0]
      : this.dataset['00209158']?.Value;
  }

  get '00209158'(): Element {
    return this.dataset['00209158'];
  }

  // Concatenation UID
  get ConcatenationUID(): any {
    const element = this.dataset['00209161'];
    return (element?.Value.length === 1)
      ? this.dataset['00209161']?.Value[0]
      : this.dataset['00209161']?.Value;
  }

  get '00209161'(): Element {
    return this.dataset['00209161'];
  }

  // In-concatenation Number
  get InConcatenationNumber(): any {
    const element = this.dataset['00209162'];
    return (element?.Value.length === 1)
      ? this.dataset['00209162']?.Value[0]
      : this.dataset['00209162']?.Value;
  }

  get '00209162'(): Element {
    return this.dataset['00209162'];
  }

  // In-concatenation Total Number
  get InConcatenationTotalNumber(): any {
    const element = this.dataset['00209163'];
    return (element?.Value.length === 1)
      ? this.dataset['00209163']?.Value[0]
      : this.dataset['00209163']?.Value;
  }

  get '00209163'(): Element {
    return this.dataset['00209163'];
  }

  // Dimension Organization UID
  get DimensionOrganizationUID(): any {
    const element = this.dataset['00209164'];
    return (element?.Value.length === 1)
      ? this.dataset['00209164']?.Value[0]
      : this.dataset['00209164']?.Value;
  }

  get '00209164'(): Element {
    return this.dataset['00209164'];
  }

  // Dimension Index Pointer
  get DimensionIndexPointer(): any {
    const element = this.dataset['00209165'];
    return (element?.Value.length === 1)
      ? this.dataset['00209165']?.Value[0]
      : this.dataset['00209165']?.Value;
  }

  get '00209165'(): Element {
    return this.dataset['00209165'];
  }

  // Functional Group Pointer
  get FunctionalGroupPointer(): any {
    const element = this.dataset['00209167'];
    return (element?.Value.length === 1)
      ? this.dataset['00209167']?.Value[0]
      : this.dataset['00209167']?.Value;
  }

  get '00209167'(): Element {
    return this.dataset['00209167'];
  }

  // Unassigned Shared Converted Attributes Sequence
  get UnassignedSharedConvertedAttributesSequence(): any {
    const element = this.dataset['00209170'];
    return (element?.Value.length === 1)
      ? this.dataset['00209170']?.Value[0]
      : this.dataset['00209170']?.Value;
  }

  get '00209170'(): Element {
    return this.dataset['00209170'];
  }

  // Unassigned Per-Frame Converted Attributes Sequence
  get UnassignedPerFrameConvertedAttributesSequence(): any {
    const element = this.dataset['00209171'];
    return (element?.Value.length === 1)
      ? this.dataset['00209171']?.Value[0]
      : this.dataset['00209171']?.Value;
  }

  get '00209171'(): Element {
    return this.dataset['00209171'];
  }

  // Conversion Source Attributes Sequence
  get ConversionSourceAttributesSequence(): any {
    const element = this.dataset['00209172'];
    return (element?.Value.length === 1)
      ? this.dataset['00209172']?.Value[0]
      : this.dataset['00209172']?.Value;
  }

  get '00209172'(): Element {
    return this.dataset['00209172'];
  }

  // Dimension Index Private Creator
  get DimensionIndexPrivateCreator(): any {
    const element = this.dataset['00209213'];
    return (element?.Value.length === 1)
      ? this.dataset['00209213']?.Value[0]
      : this.dataset['00209213']?.Value;
  }

  get '00209213'(): Element {
    return this.dataset['00209213'];
  }

  // Dimension Organization Sequence
  get DimensionOrganizationSequence(): any {
    const element = this.dataset['00209221'];
    return (element?.Value.length === 1)
      ? this.dataset['00209221']?.Value[0]
      : this.dataset['00209221']?.Value;
  }

  get '00209221'(): Element {
    return this.dataset['00209221'];
  }

  // Dimension Index Sequence
  get DimensionIndexSequence(): any {
    const element = this.dataset['00209222'];
    return (element?.Value.length === 1)
      ? this.dataset['00209222']?.Value[0]
      : this.dataset['00209222']?.Value;
  }

  get '00209222'(): Element {
    return this.dataset['00209222'];
  }

  // Concatenation Frame Offset Number
  get ConcatenationFrameOffsetNumber(): any {
    const element = this.dataset['00209228'];
    return (element?.Value.length === 1)
      ? this.dataset['00209228']?.Value[0]
      : this.dataset['00209228']?.Value;
  }

  get '00209228'(): Element {
    return this.dataset['00209228'];
  }

  // Functional Group Private Creator
  get FunctionalGroupPrivateCreator(): any {
    const element = this.dataset['00209238'];
    return (element?.Value.length === 1)
      ? this.dataset['00209238']?.Value[0]
      : this.dataset['00209238']?.Value;
  }

  get '00209238'(): Element {
    return this.dataset['00209238'];
  }

  // Nominal Percentage of Cardiac Phase
  get NominalPercentageOfCardiacPhase(): any {
    const element = this.dataset['00209241'];
    return (element?.Value.length === 1)
      ? this.dataset['00209241']?.Value[0]
      : this.dataset['00209241']?.Value;
  }

  get '00209241'(): Element {
    return this.dataset['00209241'];
  }

  // Nominal Percentage of Respiratory Phase
  get NominalPercentageOfRespiratoryPhase(): any {
    const element = this.dataset['00209245'];
    return (element?.Value.length === 1)
      ? this.dataset['00209245']?.Value[0]
      : this.dataset['00209245']?.Value;
  }

  get '00209245'(): Element {
    return this.dataset['00209245'];
  }

  // Starting Respiratory Amplitude
  get StartingRespiratoryAmplitude(): any {
    const element = this.dataset['00209246'];
    return (element?.Value.length === 1)
      ? this.dataset['00209246']?.Value[0]
      : this.dataset['00209246']?.Value;
  }

  get '00209246'(): Element {
    return this.dataset['00209246'];
  }

  // Starting Respiratory Phase
  get StartingRespiratoryPhase(): any {
    const element = this.dataset['00209247'];
    return (element?.Value.length === 1)
      ? this.dataset['00209247']?.Value[0]
      : this.dataset['00209247']?.Value;
  }

  get '00209247'(): Element {
    return this.dataset['00209247'];
  }

  // Ending Respiratory Amplitude
  get EndingRespiratoryAmplitude(): any {
    const element = this.dataset['00209248'];
    return (element?.Value.length === 1)
      ? this.dataset['00209248']?.Value[0]
      : this.dataset['00209248']?.Value;
  }

  get '00209248'(): Element {
    return this.dataset['00209248'];
  }

  // Ending Respiratory Phase
  get EndingRespiratoryPhase(): any {
    const element = this.dataset['00209249'];
    return (element?.Value.length === 1)
      ? this.dataset['00209249']?.Value[0]
      : this.dataset['00209249']?.Value;
  }

  get '00209249'(): Element {
    return this.dataset['00209249'];
  }

  // Respiratory Trigger Type
  get RespiratoryTriggerType(): any {
    const element = this.dataset['00209250'];
    return (element?.Value.length === 1)
      ? this.dataset['00209250']?.Value[0]
      : this.dataset['00209250']?.Value;
  }

  get '00209250'(): Element {
    return this.dataset['00209250'];
  }

  // R-R Interval Time Nominal
  get RRIntervalTimeNominal(): any {
    const element = this.dataset['00209251'];
    return (element?.Value.length === 1)
      ? this.dataset['00209251']?.Value[0]
      : this.dataset['00209251']?.Value;
  }

  get '00209251'(): Element {
    return this.dataset['00209251'];
  }

  // Actual Cardiac Trigger Delay Time
  get ActualCardiacTriggerDelayTime(): any {
    const element = this.dataset['00209252'];
    return (element?.Value.length === 1)
      ? this.dataset['00209252']?.Value[0]
      : this.dataset['00209252']?.Value;
  }

  get '00209252'(): Element {
    return this.dataset['00209252'];
  }

  // Respiratory Synchronization Sequence
  get RespiratorySynchronizationSequence(): any {
    const element = this.dataset['00209253'];
    return (element?.Value.length === 1)
      ? this.dataset['00209253']?.Value[0]
      : this.dataset['00209253']?.Value;
  }

  get '00209253'(): Element {
    return this.dataset['00209253'];
  }

  // Respiratory Interval Time
  get RespiratoryIntervalTime(): any {
    const element = this.dataset['00209254'];
    return (element?.Value.length === 1)
      ? this.dataset['00209254']?.Value[0]
      : this.dataset['00209254']?.Value;
  }

  get '00209254'(): Element {
    return this.dataset['00209254'];
  }

  // Nominal Respiratory Trigger Delay Time
  get NominalRespiratoryTriggerDelayTime(): any {
    const element = this.dataset['00209255'];
    return (element?.Value.length === 1)
      ? this.dataset['00209255']?.Value[0]
      : this.dataset['00209255']?.Value;
  }

  get '00209255'(): Element {
    return this.dataset['00209255'];
  }

  // Respiratory Trigger Delay Threshold
  get RespiratoryTriggerDelayThreshold(): any {
    const element = this.dataset['00209256'];
    return (element?.Value.length === 1)
      ? this.dataset['00209256']?.Value[0]
      : this.dataset['00209256']?.Value;
  }

  get '00209256'(): Element {
    return this.dataset['00209256'];
  }

  // Actual Respiratory Trigger Delay Time
  get ActualRespiratoryTriggerDelayTime(): any {
    const element = this.dataset['00209257'];
    return (element?.Value.length === 1)
      ? this.dataset['00209257']?.Value[0]
      : this.dataset['00209257']?.Value;
  }

  get '00209257'(): Element {
    return this.dataset['00209257'];
  }

  // Image Position (Volume)
  get ImagePositionVolume(): any {
    const element = this.dataset['00209301'];
    return (element?.Value.length === 1)
      ? this.dataset['00209301']?.Value[0]
      : this.dataset['00209301']?.Value;
  }

  get '00209301'(): Element {
    return this.dataset['00209301'];
  }

  // Image Orientation (Volume)
  get ImageOrientationVolume(): any {
    const element = this.dataset['00209302'];
    return (element?.Value.length === 1)
      ? this.dataset['00209302']?.Value[0]
      : this.dataset['00209302']?.Value;
  }

  get '00209302'(): Element {
    return this.dataset['00209302'];
  }

  // Ultrasound Acquisition Geometry
  get UltrasoundAcquisitionGeometry(): any {
    const element = this.dataset['00209307'];
    return (element?.Value.length === 1)
      ? this.dataset['00209307']?.Value[0]
      : this.dataset['00209307']?.Value;
  }

  get '00209307'(): Element {
    return this.dataset['00209307'];
  }

  // Apex Position
  get ApexPosition(): any {
    const element = this.dataset['00209308'];
    return (element?.Value.length === 1)
      ? this.dataset['00209308']?.Value[0]
      : this.dataset['00209308']?.Value;
  }

  get '00209308'(): Element {
    return this.dataset['00209308'];
  }

  // Volume to Transducer Mapping Matrix
  get VolumeToTransducerMappingMatrix(): any {
    const element = this.dataset['00209309'];
    return (element?.Value.length === 1)
      ? this.dataset['00209309']?.Value[0]
      : this.dataset['00209309']?.Value;
  }

  get '00209309'(): Element {
    return this.dataset['00209309'];
  }

  // Volume to Table Mapping Matrix
  get VolumeToTableMappingMatrix(): any {
    const element = this.dataset['0020930A'];
    return (element?.Value.length === 1)
      ? this.dataset['0020930A']?.Value[0]
      : this.dataset['0020930A']?.Value;
  }

  get '0020930A'(): Element {
    return this.dataset['0020930A'];
  }

  // Volume to Transducer Relationship
  get VolumeToTransducerRelationship(): any {
    const element = this.dataset['0020930B'];
    return (element?.Value.length === 1)
      ? this.dataset['0020930B']?.Value[0]
      : this.dataset['0020930B']?.Value;
  }

  get '0020930B'(): Element {
    return this.dataset['0020930B'];
  }

  // Patient Frame of Reference Source
  get PatientFrameOfReferenceSource(): any {
    const element = this.dataset['0020930C'];
    return (element?.Value.length === 1)
      ? this.dataset['0020930C']?.Value[0]
      : this.dataset['0020930C']?.Value;
  }

  get '0020930C'(): Element {
    return this.dataset['0020930C'];
  }

  // Temporal Position Time Offset
  get TemporalPositionTimeOffset(): any {
    const element = this.dataset['0020930D'];
    return (element?.Value.length === 1)
      ? this.dataset['0020930D']?.Value[0]
      : this.dataset['0020930D']?.Value;
  }

  get '0020930D'(): Element {
    return this.dataset['0020930D'];
  }

  // Plane Position (Volume) Sequence
  get PlanePositionVolumeSequence(): any {
    const element = this.dataset['0020930E'];
    return (element?.Value.length === 1)
      ? this.dataset['0020930E']?.Value[0]
      : this.dataset['0020930E']?.Value;
  }

  get '0020930E'(): Element {
    return this.dataset['0020930E'];
  }

  // Plane Orientation (Volume) Sequence
  get PlaneOrientationVolumeSequence(): any {
    const element = this.dataset['0020930F'];
    return (element?.Value.length === 1)
      ? this.dataset['0020930F']?.Value[0]
      : this.dataset['0020930F']?.Value;
  }

  get '0020930F'(): Element {
    return this.dataset['0020930F'];
  }

  // Temporal Position Sequence
  get TemporalPositionSequence(): any {
    const element = this.dataset['00209310'];
    return (element?.Value.length === 1)
      ? this.dataset['00209310']?.Value[0]
      : this.dataset['00209310']?.Value;
  }

  get '00209310'(): Element {
    return this.dataset['00209310'];
  }

  // Dimension Organization Type
  get DimensionOrganizationType(): any {
    const element = this.dataset['00209311'];
    return (element?.Value.length === 1)
      ? this.dataset['00209311']?.Value[0]
      : this.dataset['00209311']?.Value;
  }

  get '00209311'(): Element {
    return this.dataset['00209311'];
  }

  // Volume Frame of Reference UID
  get VolumeFrameOfReferenceUID(): any {
    const element = this.dataset['00209312'];
    return (element?.Value.length === 1)
      ? this.dataset['00209312']?.Value[0]
      : this.dataset['00209312']?.Value;
  }

  get '00209312'(): Element {
    return this.dataset['00209312'];
  }

  // Table Frame of Reference UID
  get TableFrameOfReferenceUID(): any {
    const element = this.dataset['00209313'];
    return (element?.Value.length === 1)
      ? this.dataset['00209313']?.Value[0]
      : this.dataset['00209313']?.Value;
  }

  get '00209313'(): Element {
    return this.dataset['00209313'];
  }

  // Dimension Description Label
  get DimensionDescriptionLabel(): any {
    const element = this.dataset['00209421'];
    return (element?.Value.length === 1)
      ? this.dataset['00209421']?.Value[0]
      : this.dataset['00209421']?.Value;
  }

  get '00209421'(): Element {
    return this.dataset['00209421'];
  }

  // Patient Orientation in Frame Sequence
  get PatientOrientationInFrameSequence(): any {
    const element = this.dataset['00209450'];
    return (element?.Value.length === 1)
      ? this.dataset['00209450']?.Value[0]
      : this.dataset['00209450']?.Value;
  }

  get '00209450'(): Element {
    return this.dataset['00209450'];
  }

  // Frame Label
  get FrameLabel(): any {
    const element = this.dataset['00209453'];
    return (element?.Value.length === 1)
      ? this.dataset['00209453']?.Value[0]
      : this.dataset['00209453']?.Value;
  }

  get '00209453'(): Element {
    return this.dataset['00209453'];
  }

  // Acquisition Index
  get AcquisitionIndex(): any {
    const element = this.dataset['00209518'];
    return (element?.Value.length === 1)
      ? this.dataset['00209518']?.Value[0]
      : this.dataset['00209518']?.Value;
  }

  get '00209518'(): Element {
    return this.dataset['00209518'];
  }

  // Contributing SOP Instances Reference Sequence
  get ContributingSOPInstancesReferenceSequence(): any {
    const element = this.dataset['00209529'];
    return (element?.Value.length === 1)
      ? this.dataset['00209529']?.Value[0]
      : this.dataset['00209529']?.Value;
  }

  get '00209529'(): Element {
    return this.dataset['00209529'];
  }

  // Reconstruction Index
  get ReconstructionIndex(): any {
    const element = this.dataset['00209536'];
    return (element?.Value.length === 1)
      ? this.dataset['00209536']?.Value[0]
      : this.dataset['00209536']?.Value;
  }

  get '00209536'(): Element {
    return this.dataset['00209536'];
  }

  // Light Path Filter Pass-Through Wavelength
  get LightPathFilterPassThroughWavelength(): any {
    const element = this.dataset['00220001'];
    return (element?.Value.length === 1)
      ? this.dataset['00220001']?.Value[0]
      : this.dataset['00220001']?.Value;
  }

  get '00220001'(): Element {
    return this.dataset['00220001'];
  }

  // Light Path Filter Pass Band
  get LightPathFilterPassBand(): any {
    const element = this.dataset['00220002'];
    return (element?.Value.length === 1)
      ? this.dataset['00220002']?.Value[0]
      : this.dataset['00220002']?.Value;
  }

  get '00220002'(): Element {
    return this.dataset['00220002'];
  }

  // Image Path Filter Pass-Through Wavelength
  get ImagePathFilterPassThroughWavelength(): any {
    const element = this.dataset['00220003'];
    return (element?.Value.length === 1)
      ? this.dataset['00220003']?.Value[0]
      : this.dataset['00220003']?.Value;
  }

  get '00220003'(): Element {
    return this.dataset['00220003'];
  }

  // Image Path Filter Pass Band
  get ImagePathFilterPassBand(): any {
    const element = this.dataset['00220004'];
    return (element?.Value.length === 1)
      ? this.dataset['00220004']?.Value[0]
      : this.dataset['00220004']?.Value;
  }

  get '00220004'(): Element {
    return this.dataset['00220004'];
  }

  // Patient Eye Movement Commanded
  get PatientEyeMovementCommanded(): any {
    const element = this.dataset['00220005'];
    return (element?.Value.length === 1)
      ? this.dataset['00220005']?.Value[0]
      : this.dataset['00220005']?.Value;
  }

  get '00220005'(): Element {
    return this.dataset['00220005'];
  }

  // Patient Eye Movement Command Code Sequence
  get PatientEyeMovementCommandCodeSequence(): any {
    const element = this.dataset['00220006'];
    return (element?.Value.length === 1)
      ? this.dataset['00220006']?.Value[0]
      : this.dataset['00220006']?.Value;
  }

  get '00220006'(): Element {
    return this.dataset['00220006'];
  }

  // Spherical Lens Power
  get SphericalLensPower(): any {
    const element = this.dataset['00220007'];
    return (element?.Value.length === 1)
      ? this.dataset['00220007']?.Value[0]
      : this.dataset['00220007']?.Value;
  }

  get '00220007'(): Element {
    return this.dataset['00220007'];
  }

  // Cylinder Lens Power
  get CylinderLensPower(): any {
    const element = this.dataset['00220008'];
    return (element?.Value.length === 1)
      ? this.dataset['00220008']?.Value[0]
      : this.dataset['00220008']?.Value;
  }

  get '00220008'(): Element {
    return this.dataset['00220008'];
  }

  // Cylinder Axis
  get CylinderAxis(): any {
    const element = this.dataset['00220009'];
    return (element?.Value.length === 1)
      ? this.dataset['00220009']?.Value[0]
      : this.dataset['00220009']?.Value;
  }

  get '00220009'(): Element {
    return this.dataset['00220009'];
  }

  // Emmetropic Magnification
  get EmmetropicMagnification(): any {
    const element = this.dataset['0022000A'];
    return (element?.Value.length === 1)
      ? this.dataset['0022000A']?.Value[0]
      : this.dataset['0022000A']?.Value;
  }

  get '0022000A'(): Element {
    return this.dataset['0022000A'];
  }

  // Intra Ocular Pressure
  get IntraOcularPressure(): any {
    const element = this.dataset['0022000B'];
    return (element?.Value.length === 1)
      ? this.dataset['0022000B']?.Value[0]
      : this.dataset['0022000B']?.Value;
  }

  get '0022000B'(): Element {
    return this.dataset['0022000B'];
  }

  // Horizontal Field of View
  get HorizontalFieldOfView(): any {
    const element = this.dataset['0022000C'];
    return (element?.Value.length === 1)
      ? this.dataset['0022000C']?.Value[0]
      : this.dataset['0022000C']?.Value;
  }

  get '0022000C'(): Element {
    return this.dataset['0022000C'];
  }

  // Pupil Dilated
  get PupilDilated(): any {
    const element = this.dataset['0022000D'];
    return (element?.Value.length === 1)
      ? this.dataset['0022000D']?.Value[0]
      : this.dataset['0022000D']?.Value;
  }

  get '0022000D'(): Element {
    return this.dataset['0022000D'];
  }

  // Degree of Dilation
  get DegreeOfDilation(): any {
    const element = this.dataset['0022000E'];
    return (element?.Value.length === 1)
      ? this.dataset['0022000E']?.Value[0]
      : this.dataset['0022000E']?.Value;
  }

  get '0022000E'(): Element {
    return this.dataset['0022000E'];
  }

  // Stereo Baseline Angle
  get StereoBaselineAngle(): any {
    const element = this.dataset['00220010'];
    return (element?.Value.length === 1)
      ? this.dataset['00220010']?.Value[0]
      : this.dataset['00220010']?.Value;
  }

  get '00220010'(): Element {
    return this.dataset['00220010'];
  }

  // Stereo Baseline Displacement
  get StereoBaselineDisplacement(): any {
    const element = this.dataset['00220011'];
    return (element?.Value.length === 1)
      ? this.dataset['00220011']?.Value[0]
      : this.dataset['00220011']?.Value;
  }

  get '00220011'(): Element {
    return this.dataset['00220011'];
  }

  // Stereo Horizontal Pixel Offset
  get StereoHorizontalPixelOffset(): any {
    const element = this.dataset['00220012'];
    return (element?.Value.length === 1)
      ? this.dataset['00220012']?.Value[0]
      : this.dataset['00220012']?.Value;
  }

  get '00220012'(): Element {
    return this.dataset['00220012'];
  }

  // Stereo Vertical Pixel Offset
  get StereoVerticalPixelOffset(): any {
    const element = this.dataset['00220013'];
    return (element?.Value.length === 1)
      ? this.dataset['00220013']?.Value[0]
      : this.dataset['00220013']?.Value;
  }

  get '00220013'(): Element {
    return this.dataset['00220013'];
  }

  // Stereo Rotation
  get StereoRotation(): any {
    const element = this.dataset['00220014'];
    return (element?.Value.length === 1)
      ? this.dataset['00220014']?.Value[0]
      : this.dataset['00220014']?.Value;
  }

  get '00220014'(): Element {
    return this.dataset['00220014'];
  }

  // Acquisition Device Type Code Sequence
  get AcquisitionDeviceTypeCodeSequence(): any {
    const element = this.dataset['00220015'];
    return (element?.Value.length === 1)
      ? this.dataset['00220015']?.Value[0]
      : this.dataset['00220015']?.Value;
  }

  get '00220015'(): Element {
    return this.dataset['00220015'];
  }

  // Illumination Type Code Sequence
  get IlluminationTypeCodeSequence(): any {
    const element = this.dataset['00220016'];
    return (element?.Value.length === 1)
      ? this.dataset['00220016']?.Value[0]
      : this.dataset['00220016']?.Value;
  }

  get '00220016'(): Element {
    return this.dataset['00220016'];
  }

  // Light Path Filter Type Stack Code Sequence
  get LightPathFilterTypeStackCodeSequence(): any {
    const element = this.dataset['00220017'];
    return (element?.Value.length === 1)
      ? this.dataset['00220017']?.Value[0]
      : this.dataset['00220017']?.Value;
  }

  get '00220017'(): Element {
    return this.dataset['00220017'];
  }

  // Image Path Filter Type Stack Code Sequence
  get ImagePathFilterTypeStackCodeSequence(): any {
    const element = this.dataset['00220018'];
    return (element?.Value.length === 1)
      ? this.dataset['00220018']?.Value[0]
      : this.dataset['00220018']?.Value;
  }

  get '00220018'(): Element {
    return this.dataset['00220018'];
  }

  // Lenses Code Sequence
  get LensesCodeSequence(): any {
    const element = this.dataset['00220019'];
    return (element?.Value.length === 1)
      ? this.dataset['00220019']?.Value[0]
      : this.dataset['00220019']?.Value;
  }

  get '00220019'(): Element {
    return this.dataset['00220019'];
  }

  // Channel Description Code Sequence
  get ChannelDescriptionCodeSequence(): any {
    const element = this.dataset['0022001A'];
    return (element?.Value.length === 1)
      ? this.dataset['0022001A']?.Value[0]
      : this.dataset['0022001A']?.Value;
  }

  get '0022001A'(): Element {
    return this.dataset['0022001A'];
  }

  // Refractive State Sequence
  get RefractiveStateSequence(): any {
    const element = this.dataset['0022001B'];
    return (element?.Value.length === 1)
      ? this.dataset['0022001B']?.Value[0]
      : this.dataset['0022001B']?.Value;
  }

  get '0022001B'(): Element {
    return this.dataset['0022001B'];
  }

  // Mydriatic Agent Code Sequence
  get MydriaticAgentCodeSequence(): any {
    const element = this.dataset['0022001C'];
    return (element?.Value.length === 1)
      ? this.dataset['0022001C']?.Value[0]
      : this.dataset['0022001C']?.Value;
  }

  get '0022001C'(): Element {
    return this.dataset['0022001C'];
  }

  // Relative Image Position Code Sequence
  get RelativeImagePositionCodeSequence(): any {
    const element = this.dataset['0022001D'];
    return (element?.Value.length === 1)
      ? this.dataset['0022001D']?.Value[0]
      : this.dataset['0022001D']?.Value;
  }

  get '0022001D'(): Element {
    return this.dataset['0022001D'];
  }

  // Camera Angle of View
  get CameraAngleOfView(): any {
    const element = this.dataset['0022001E'];
    return (element?.Value.length === 1)
      ? this.dataset['0022001E']?.Value[0]
      : this.dataset['0022001E']?.Value;
  }

  get '0022001E'(): Element {
    return this.dataset['0022001E'];
  }

  // Stereo Pairs Sequence
  get StereoPairsSequence(): any {
    const element = this.dataset['00220020'];
    return (element?.Value.length === 1)
      ? this.dataset['00220020']?.Value[0]
      : this.dataset['00220020']?.Value;
  }

  get '00220020'(): Element {
    return this.dataset['00220020'];
  }

  // Left Image Sequence
  get LeftImageSequence(): any {
    const element = this.dataset['00220021'];
    return (element?.Value.length === 1)
      ? this.dataset['00220021']?.Value[0]
      : this.dataset['00220021']?.Value;
  }

  get '00220021'(): Element {
    return this.dataset['00220021'];
  }

  // Right Image Sequence
  get RightImageSequence(): any {
    const element = this.dataset['00220022'];
    return (element?.Value.length === 1)
      ? this.dataset['00220022']?.Value[0]
      : this.dataset['00220022']?.Value;
  }

  get '00220022'(): Element {
    return this.dataset['00220022'];
  }

  // Axial Length of the Eye
  get AxialLengthOfTheEye(): any {
    const element = this.dataset['00220030'];
    return (element?.Value.length === 1)
      ? this.dataset['00220030']?.Value[0]
      : this.dataset['00220030']?.Value;
  }

  get '00220030'(): Element {
    return this.dataset['00220030'];
  }

  // Ophthalmic Frame Location Sequence
  get OphthalmicFrameLocationSequence(): any {
    const element = this.dataset['00220031'];
    return (element?.Value.length === 1)
      ? this.dataset['00220031']?.Value[0]
      : this.dataset['00220031']?.Value;
  }

  get '00220031'(): Element {
    return this.dataset['00220031'];
  }

  // Reference Coordinates
  get ReferenceCoordinates(): any {
    const element = this.dataset['00220032'];
    return (element?.Value.length === 1)
      ? this.dataset['00220032']?.Value[0]
      : this.dataset['00220032']?.Value;
  }

  get '00220032'(): Element {
    return this.dataset['00220032'];
  }

  // Depth Spatial Resolution
  get DepthSpatialResolution(): any {
    const element = this.dataset['00220035'];
    return (element?.Value.length === 1)
      ? this.dataset['00220035']?.Value[0]
      : this.dataset['00220035']?.Value;
  }

  get '00220035'(): Element {
    return this.dataset['00220035'];
  }

  // Maximum Depth Distortion
  get MaximumDepthDistortion(): any {
    const element = this.dataset['00220036'];
    return (element?.Value.length === 1)
      ? this.dataset['00220036']?.Value[0]
      : this.dataset['00220036']?.Value;
  }

  get '00220036'(): Element {
    return this.dataset['00220036'];
  }

  // Along-scan Spatial Resolution
  get AlongScanSpatialResolution(): any {
    const element = this.dataset['00220037'];
    return (element?.Value.length === 1)
      ? this.dataset['00220037']?.Value[0]
      : this.dataset['00220037']?.Value;
  }

  get '00220037'(): Element {
    return this.dataset['00220037'];
  }

  // Maximum Along-scan Distortion
  get MaximumAlongScanDistortion(): any {
    const element = this.dataset['00220038'];
    return (element?.Value.length === 1)
      ? this.dataset['00220038']?.Value[0]
      : this.dataset['00220038']?.Value;
  }

  get '00220038'(): Element {
    return this.dataset['00220038'];
  }

  // Ophthalmic Image Orientation
  get OphthalmicImageOrientation(): any {
    const element = this.dataset['00220039'];
    return (element?.Value.length === 1)
      ? this.dataset['00220039']?.Value[0]
      : this.dataset['00220039']?.Value;
  }

  get '00220039'(): Element {
    return this.dataset['00220039'];
  }

  // Depth of Transverse Image
  get DepthOfTransverseImage(): any {
    const element = this.dataset['00220041'];
    return (element?.Value.length === 1)
      ? this.dataset['00220041']?.Value[0]
      : this.dataset['00220041']?.Value;
  }

  get '00220041'(): Element {
    return this.dataset['00220041'];
  }

  // Mydriatic Agent Concentration Units Sequence
  get MydriaticAgentConcentrationUnitsSequence(): any {
    const element = this.dataset['00220042'];
    return (element?.Value.length === 1)
      ? this.dataset['00220042']?.Value[0]
      : this.dataset['00220042']?.Value;
  }

  get '00220042'(): Element {
    return this.dataset['00220042'];
  }

  // Across-scan Spatial Resolution
  get AcrossScanSpatialResolution(): any {
    const element = this.dataset['00220048'];
    return (element?.Value.length === 1)
      ? this.dataset['00220048']?.Value[0]
      : this.dataset['00220048']?.Value;
  }

  get '00220048'(): Element {
    return this.dataset['00220048'];
  }

  // Maximum Across-scan Distortion
  get MaximumAcrossScanDistortion(): any {
    const element = this.dataset['00220049'];
    return (element?.Value.length === 1)
      ? this.dataset['00220049']?.Value[0]
      : this.dataset['00220049']?.Value;
  }

  get '00220049'(): Element {
    return this.dataset['00220049'];
  }

  // Mydriatic Agent Concentration
  get MydriaticAgentConcentration(): any {
    const element = this.dataset['0022004E'];
    return (element?.Value.length === 1)
      ? this.dataset['0022004E']?.Value[0]
      : this.dataset['0022004E']?.Value;
  }

  get '0022004E'(): Element {
    return this.dataset['0022004E'];
  }

  // Illumination Wave Length
  get IlluminationWaveLength(): any {
    const element = this.dataset['00220055'];
    return (element?.Value.length === 1)
      ? this.dataset['00220055']?.Value[0]
      : this.dataset['00220055']?.Value;
  }

  get '00220055'(): Element {
    return this.dataset['00220055'];
  }

  // Illumination Power
  get IlluminationPower(): any {
    const element = this.dataset['00220056'];
    return (element?.Value.length === 1)
      ? this.dataset['00220056']?.Value[0]
      : this.dataset['00220056']?.Value;
  }

  get '00220056'(): Element {
    return this.dataset['00220056'];
  }

  // Illumination Bandwidth
  get IlluminationBandwidth(): any {
    const element = this.dataset['00220057'];
    return (element?.Value.length === 1)
      ? this.dataset['00220057']?.Value[0]
      : this.dataset['00220057']?.Value;
  }

  get '00220057'(): Element {
    return this.dataset['00220057'];
  }

  // Mydriatic Agent Sequence
  get MydriaticAgentSequence(): any {
    const element = this.dataset['00220058'];
    return (element?.Value.length === 1)
      ? this.dataset['00220058']?.Value[0]
      : this.dataset['00220058']?.Value;
  }

  get '00220058'(): Element {
    return this.dataset['00220058'];
  }

  // Ophthalmic Axial Measurements Right Eye Sequence
  get OphthalmicAxialMeasurementsRightEyeSequence(): any {
    const element = this.dataset['00221007'];
    return (element?.Value.length === 1)
      ? this.dataset['00221007']?.Value[0]
      : this.dataset['00221007']?.Value;
  }

  get '00221007'(): Element {
    return this.dataset['00221007'];
  }

  // Ophthalmic Axial Measurements Left Eye Sequence
  get OphthalmicAxialMeasurementsLeftEyeSequence(): any {
    const element = this.dataset['00221008'];
    return (element?.Value.length === 1)
      ? this.dataset['00221008']?.Value[0]
      : this.dataset['00221008']?.Value;
  }

  get '00221008'(): Element {
    return this.dataset['00221008'];
  }

  // Ophthalmic Axial Measurements Device Type
  get OphthalmicAxialMeasurementsDeviceType(): any {
    const element = this.dataset['00221009'];
    return (element?.Value.length === 1)
      ? this.dataset['00221009']?.Value[0]
      : this.dataset['00221009']?.Value;
  }

  get '00221009'(): Element {
    return this.dataset['00221009'];
  }

  // Ophthalmic Axial Length Measurements Type
  get OphthalmicAxialLengthMeasurementsType(): any {
    const element = this.dataset['00221010'];
    return (element?.Value.length === 1)
      ? this.dataset['00221010']?.Value[0]
      : this.dataset['00221010']?.Value;
  }

  get '00221010'(): Element {
    return this.dataset['00221010'];
  }

  // Ophthalmic Axial Length Sequence
  get OphthalmicAxialLengthSequence(): any {
    const element = this.dataset['00221012'];
    return (element?.Value.length === 1)
      ? this.dataset['00221012']?.Value[0]
      : this.dataset['00221012']?.Value;
  }

  get '00221012'(): Element {
    return this.dataset['00221012'];
  }

  // Ophthalmic Axial Length
  get OphthalmicAxialLength(): any {
    const element = this.dataset['00221019'];
    return (element?.Value.length === 1)
      ? this.dataset['00221019']?.Value[0]
      : this.dataset['00221019']?.Value;
  }

  get '00221019'(): Element {
    return this.dataset['00221019'];
  }

  // Lens Status Code Sequence
  get LensStatusCodeSequence(): any {
    const element = this.dataset['00221024'];
    return (element?.Value.length === 1)
      ? this.dataset['00221024']?.Value[0]
      : this.dataset['00221024']?.Value;
  }

  get '00221024'(): Element {
    return this.dataset['00221024'];
  }

  // Vitreous Status Code Sequence
  get VitreousStatusCodeSequence(): any {
    const element = this.dataset['00221025'];
    return (element?.Value.length === 1)
      ? this.dataset['00221025']?.Value[0]
      : this.dataset['00221025']?.Value;
  }

  get '00221025'(): Element {
    return this.dataset['00221025'];
  }

  // IOL Formula Code Sequence
  get IOLFormulaCodeSequence(): any {
    const element = this.dataset['00221028'];
    return (element?.Value.length === 1)
      ? this.dataset['00221028']?.Value[0]
      : this.dataset['00221028']?.Value;
  }

  get '00221028'(): Element {
    return this.dataset['00221028'];
  }

  // IOL Formula Detail
  get IOLFormulaDetail(): any {
    const element = this.dataset['00221029'];
    return (element?.Value.length === 1)
      ? this.dataset['00221029']?.Value[0]
      : this.dataset['00221029']?.Value;
  }

  get '00221029'(): Element {
    return this.dataset['00221029'];
  }

  // Keratometer Index
  get KeratometerIndex(): any {
    const element = this.dataset['00221033'];
    return (element?.Value.length === 1)
      ? this.dataset['00221033']?.Value[0]
      : this.dataset['00221033']?.Value;
  }

  get '00221033'(): Element {
    return this.dataset['00221033'];
  }

  // Source of Ophthalmic Axial Length Code Sequence
  get SourceOfOphthalmicAxialLengthCodeSequence(): any {
    const element = this.dataset['00221035'];
    return (element?.Value.length === 1)
      ? this.dataset['00221035']?.Value[0]
      : this.dataset['00221035']?.Value;
  }

  get '00221035'(): Element {
    return this.dataset['00221035'];
  }

  // Target Refraction
  get TargetRefraction(): any {
    const element = this.dataset['00221037'];
    return (element?.Value.length === 1)
      ? this.dataset['00221037']?.Value[0]
      : this.dataset['00221037']?.Value;
  }

  get '00221037'(): Element {
    return this.dataset['00221037'];
  }

  // Refractive Procedure Occurred
  get RefractiveProcedureOccurred(): any {
    const element = this.dataset['00221039'];
    return (element?.Value.length === 1)
      ? this.dataset['00221039']?.Value[0]
      : this.dataset['00221039']?.Value;
  }

  get '00221039'(): Element {
    return this.dataset['00221039'];
  }

  // Refractive Surgery Type Code Sequence
  get RefractiveSurgeryTypeCodeSequence(): any {
    const element = this.dataset['00221040'];
    return (element?.Value.length === 1)
      ? this.dataset['00221040']?.Value[0]
      : this.dataset['00221040']?.Value;
  }

  get '00221040'(): Element {
    return this.dataset['00221040'];
  }

  // Ophthalmic Ultrasound Method Code Sequence
  get OphthalmicUltrasoundMethodCodeSequence(): any {
    const element = this.dataset['00221044'];
    return (element?.Value.length === 1)
      ? this.dataset['00221044']?.Value[0]
      : this.dataset['00221044']?.Value;
  }

  get '00221044'(): Element {
    return this.dataset['00221044'];
  }

  // Ophthalmic Axial Length Measurements Sequence
  get OphthalmicAxialLengthMeasurementsSequence(): any {
    const element = this.dataset['00221050'];
    return (element?.Value.length === 1)
      ? this.dataset['00221050']?.Value[0]
      : this.dataset['00221050']?.Value;
  }

  get '00221050'(): Element {
    return this.dataset['00221050'];
  }

  // IOL Power
  get IOLPower(): any {
    const element = this.dataset['00221053'];
    return (element?.Value.length === 1)
      ? this.dataset['00221053']?.Value[0]
      : this.dataset['00221053']?.Value;
  }

  get '00221053'(): Element {
    return this.dataset['00221053'];
  }

  // Predicted Refractive Error
  get PredictedRefractiveError(): any {
    const element = this.dataset['00221054'];
    return (element?.Value.length === 1)
      ? this.dataset['00221054']?.Value[0]
      : this.dataset['00221054']?.Value;
  }

  get '00221054'(): Element {
    return this.dataset['00221054'];
  }

  // Ophthalmic Axial Length Velocity
  get OphthalmicAxialLengthVelocity(): any {
    const element = this.dataset['00221059'];
    return (element?.Value.length === 1)
      ? this.dataset['00221059']?.Value[0]
      : this.dataset['00221059']?.Value;
  }

  get '00221059'(): Element {
    return this.dataset['00221059'];
  }

  // Lens Status Description
  get LensStatusDescription(): any {
    const element = this.dataset['00221065'];
    return (element?.Value.length === 1)
      ? this.dataset['00221065']?.Value[0]
      : this.dataset['00221065']?.Value;
  }

  get '00221065'(): Element {
    return this.dataset['00221065'];
  }

  // Vitreous Status Description
  get VitreousStatusDescription(): any {
    const element = this.dataset['00221066'];
    return (element?.Value.length === 1)
      ? this.dataset['00221066']?.Value[0]
      : this.dataset['00221066']?.Value;
  }

  get '00221066'(): Element {
    return this.dataset['00221066'];
  }

  // IOL Power Sequence
  get IOLPowerSequence(): any {
    const element = this.dataset['00221090'];
    return (element?.Value.length === 1)
      ? this.dataset['00221090']?.Value[0]
      : this.dataset['00221090']?.Value;
  }

  get '00221090'(): Element {
    return this.dataset['00221090'];
  }

  // Lens Constant Sequence
  get LensConstantSequence(): any {
    const element = this.dataset['00221092'];
    return (element?.Value.length === 1)
      ? this.dataset['00221092']?.Value[0]
      : this.dataset['00221092']?.Value;
  }

  get '00221092'(): Element {
    return this.dataset['00221092'];
  }

  // IOL Manufacturer
  get IOLManufacturer(): any {
    const element = this.dataset['00221093'];
    return (element?.Value.length === 1)
      ? this.dataset['00221093']?.Value[0]
      : this.dataset['00221093']?.Value;
  }

  get '00221093'(): Element {
    return this.dataset['00221093'];
  }

  // Lens Constant Description
  get LensConstantDescription(): any {
    const element = this.dataset['00221094'];
    return (element?.Value.length === 1)
      ? this.dataset['00221094']?.Value[0]
      : this.dataset['00221094']?.Value;
  }

  get '00221094'(): Element {
    return this.dataset['00221094'];
  }

  // Implant Name
  get ImplantName(): any {
    const element = this.dataset['00221095'];
    return (element?.Value.length === 1)
      ? this.dataset['00221095']?.Value[0]
      : this.dataset['00221095']?.Value;
  }

  get '00221095'(): Element {
    return this.dataset['00221095'];
  }

  // Keratometry Measurement Type Code Sequence
  get KeratometryMeasurementTypeCodeSequence(): any {
    const element = this.dataset['00221096'];
    return (element?.Value.length === 1)
      ? this.dataset['00221096']?.Value[0]
      : this.dataset['00221096']?.Value;
  }

  get '00221096'(): Element {
    return this.dataset['00221096'];
  }

  // Implant Part Number
  get ImplantPartNumber(): any {
    const element = this.dataset['00221097'];
    return (element?.Value.length === 1)
      ? this.dataset['00221097']?.Value[0]
      : this.dataset['00221097']?.Value;
  }

  get '00221097'(): Element {
    return this.dataset['00221097'];
  }

  // Referenced Ophthalmic Axial Measurements Sequence
  get ReferencedOphthalmicAxialMeasurementsSequence(): any {
    const element = this.dataset['00221100'];
    return (element?.Value.length === 1)
      ? this.dataset['00221100']?.Value[0]
      : this.dataset['00221100']?.Value;
  }

  get '00221100'(): Element {
    return this.dataset['00221100'];
  }

  // Ophthalmic Axial Length Measurements Segment Name Code Sequence
  get OphthalmicAxialLengthMeasurementsSegmentNameCodeSequence(): any {
    const element = this.dataset['00221101'];
    return (element?.Value.length === 1)
      ? this.dataset['00221101']?.Value[0]
      : this.dataset['00221101']?.Value;
  }

  get '00221101'(): Element {
    return this.dataset['00221101'];
  }

  // Refractive Error Before Refractive Surgery Code Sequence
  get RefractiveErrorBeforeRefractiveSurgeryCodeSequence(): any {
    const element = this.dataset['00221103'];
    return (element?.Value.length === 1)
      ? this.dataset['00221103']?.Value[0]
      : this.dataset['00221103']?.Value;
  }

  get '00221103'(): Element {
    return this.dataset['00221103'];
  }

  // IOL Power For Exact Emmetropia
  get IOLPowerForExactEmmetropia(): any {
    const element = this.dataset['00221121'];
    return (element?.Value.length === 1)
      ? this.dataset['00221121']?.Value[0]
      : this.dataset['00221121']?.Value;
  }

  get '00221121'(): Element {
    return this.dataset['00221121'];
  }

  // IOL Power For Exact Target Refraction
  get IOLPowerForExactTargetRefraction(): any {
    const element = this.dataset['00221122'];
    return (element?.Value.length === 1)
      ? this.dataset['00221122']?.Value[0]
      : this.dataset['00221122']?.Value;
  }

  get '00221122'(): Element {
    return this.dataset['00221122'];
  }

  // Anterior Chamber Depth Definition Code Sequence
  get AnteriorChamberDepthDefinitionCodeSequence(): any {
    const element = this.dataset['00221125'];
    return (element?.Value.length === 1)
      ? this.dataset['00221125']?.Value[0]
      : this.dataset['00221125']?.Value;
  }

  get '00221125'(): Element {
    return this.dataset['00221125'];
  }

  // Lens Thickness Sequence
  get LensThicknessSequence(): any {
    const element = this.dataset['00221127'];
    return (element?.Value.length === 1)
      ? this.dataset['00221127']?.Value[0]
      : this.dataset['00221127']?.Value;
  }

  get '00221127'(): Element {
    return this.dataset['00221127'];
  }

  // Anterior Chamber Depth Sequence
  get AnteriorChamberDepthSequence(): any {
    const element = this.dataset['00221128'];
    return (element?.Value.length === 1)
      ? this.dataset['00221128']?.Value[0]
      : this.dataset['00221128']?.Value;
  }

  get '00221128'(): Element {
    return this.dataset['00221128'];
  }

  // Lens Thickness
  get LensThickness(): any {
    const element = this.dataset['00221130'];
    return (element?.Value.length === 1)
      ? this.dataset['00221130']?.Value[0]
      : this.dataset['00221130']?.Value;
  }

  get '00221130'(): Element {
    return this.dataset['00221130'];
  }

  // Anterior Chamber Depth
  get AnteriorChamberDepth(): any {
    const element = this.dataset['00221131'];
    return (element?.Value.length === 1)
      ? this.dataset['00221131']?.Value[0]
      : this.dataset['00221131']?.Value;
  }

  get '00221131'(): Element {
    return this.dataset['00221131'];
  }

  // Source of Lens Thickness Data Code Sequence
  get SourceOfLensThicknessDataCodeSequence(): any {
    const element = this.dataset['00221132'];
    return (element?.Value.length === 1)
      ? this.dataset['00221132']?.Value[0]
      : this.dataset['00221132']?.Value;
  }

  get '00221132'(): Element {
    return this.dataset['00221132'];
  }

  // Source of Anterior Chamber Depth Data Code Sequence
  get SourceOfAnteriorChamberDepthDataCodeSequence(): any {
    const element = this.dataset['00221133'];
    return (element?.Value.length === 1)
      ? this.dataset['00221133']?.Value[0]
      : this.dataset['00221133']?.Value;
  }

  get '00221133'(): Element {
    return this.dataset['00221133'];
  }

  // Source of Refractive Measurements Sequence
  get SourceOfRefractiveMeasurementsSequence(): any {
    const element = this.dataset['00221134'];
    return (element?.Value.length === 1)
      ? this.dataset['00221134']?.Value[0]
      : this.dataset['00221134']?.Value;
  }

  get '00221134'(): Element {
    return this.dataset['00221134'];
  }

  // Source of Refractive Measurements Code Sequence
  get SourceOfRefractiveMeasurementsCodeSequence(): any {
    const element = this.dataset['00221135'];
    return (element?.Value.length === 1)
      ? this.dataset['00221135']?.Value[0]
      : this.dataset['00221135']?.Value;
  }

  get '00221135'(): Element {
    return this.dataset['00221135'];
  }

  // Ophthalmic Axial Length Measurement Modified
  get OphthalmicAxialLengthMeasurementModified(): any {
    const element = this.dataset['00221140'];
    return (element?.Value.length === 1)
      ? this.dataset['00221140']?.Value[0]
      : this.dataset['00221140']?.Value;
  }

  get '00221140'(): Element {
    return this.dataset['00221140'];
  }

  // Ophthalmic Axial Length Data Source Code Sequence
  get OphthalmicAxialLengthDataSourceCodeSequence(): any {
    const element = this.dataset['00221150'];
    return (element?.Value.length === 1)
      ? this.dataset['00221150']?.Value[0]
      : this.dataset['00221150']?.Value;
  }

  get '00221150'(): Element {
    return this.dataset['00221150'];
  }

  // Ophthalmic Axial Length Acquisition Method Code Sequence
  get OphthalmicAxialLengthAcquisitionMethodCodeSequence(): any {
    const element = this.dataset['00221153'];
    return (element?.Value.length === 1)
      ? this.dataset['00221153']?.Value[0]
      : this.dataset['00221153']?.Value;
  }

  get '00221153'(): Element {
    return this.dataset['00221153'];
  }

  // Signal to Noise Ratio
  get SignalToNoiseRatio(): any {
    const element = this.dataset['00221155'];
    return (element?.Value.length === 1)
      ? this.dataset['00221155']?.Value[0]
      : this.dataset['00221155']?.Value;
  }

  get '00221155'(): Element {
    return this.dataset['00221155'];
  }

  // Ophthalmic Axial Length Data Source Description
  get OphthalmicAxialLengthDataSourceDescription(): any {
    const element = this.dataset['00221159'];
    return (element?.Value.length === 1)
      ? this.dataset['00221159']?.Value[0]
      : this.dataset['00221159']?.Value;
  }

  get '00221159'(): Element {
    return this.dataset['00221159'];
  }

  // Ophthalmic Axial Length Measurements Total Length Sequence
  get OphthalmicAxialLengthMeasurementsTotalLengthSequence(): any {
    const element = this.dataset['00221210'];
    return (element?.Value.length === 1)
      ? this.dataset['00221210']?.Value[0]
      : this.dataset['00221210']?.Value;
  }

  get '00221210'(): Element {
    return this.dataset['00221210'];
  }

  // Ophthalmic Axial Length Measurements Segmental Length Sequence
  get OphthalmicAxialLengthMeasurementsSegmentalLengthSequence(): any {
    const element = this.dataset['00221211'];
    return (element?.Value.length === 1)
      ? this.dataset['00221211']?.Value[0]
      : this.dataset['00221211']?.Value;
  }

  get '00221211'(): Element {
    return this.dataset['00221211'];
  }

  // Ophthalmic Axial Length Measurements Length Summation Sequence
  get OphthalmicAxialLengthMeasurementsLengthSummationSequence(): any {
    const element = this.dataset['00221212'];
    return (element?.Value.length === 1)
      ? this.dataset['00221212']?.Value[0]
      : this.dataset['00221212']?.Value;
  }

  get '00221212'(): Element {
    return this.dataset['00221212'];
  }

  // Ultrasound Ophthalmic Axial Length Measurements Sequence
  get UltrasoundOphthalmicAxialLengthMeasurementsSequence(): any {
    const element = this.dataset['00221220'];
    return (element?.Value.length === 1)
      ? this.dataset['00221220']?.Value[0]
      : this.dataset['00221220']?.Value;
  }

  get '00221220'(): Element {
    return this.dataset['00221220'];
  }

  // Optical Ophthalmic Axial Length Measurements Sequence
  get OpticalOphthalmicAxialLengthMeasurementsSequence(): any {
    const element = this.dataset['00221225'];
    return (element?.Value.length === 1)
      ? this.dataset['00221225']?.Value[0]
      : this.dataset['00221225']?.Value;
  }

  get '00221225'(): Element {
    return this.dataset['00221225'];
  }

  // Ultrasound Selected Ophthalmic Axial Length Sequence
  get UltrasoundSelectedOphthalmicAxialLengthSequence(): any {
    const element = this.dataset['00221230'];
    return (element?.Value.length === 1)
      ? this.dataset['00221230']?.Value[0]
      : this.dataset['00221230']?.Value;
  }

  get '00221230'(): Element {
    return this.dataset['00221230'];
  }

  // Ophthalmic Axial Length Selection Method Code Sequence
  get OphthalmicAxialLengthSelectionMethodCodeSequence(): any {
    const element = this.dataset['00221250'];
    return (element?.Value.length === 1)
      ? this.dataset['00221250']?.Value[0]
      : this.dataset['00221250']?.Value;
  }

  get '00221250'(): Element {
    return this.dataset['00221250'];
  }

  // Optical Selected Ophthalmic Axial Length Sequence
  get OpticalSelectedOphthalmicAxialLengthSequence(): any {
    const element = this.dataset['00221255'];
    return (element?.Value.length === 1)
      ? this.dataset['00221255']?.Value[0]
      : this.dataset['00221255']?.Value;
  }

  get '00221255'(): Element {
    return this.dataset['00221255'];
  }

  // Selected Segmental Ophthalmic Axial Length Sequence
  get SelectedSegmentalOphthalmicAxialLengthSequence(): any {
    const element = this.dataset['00221257'];
    return (element?.Value.length === 1)
      ? this.dataset['00221257']?.Value[0]
      : this.dataset['00221257']?.Value;
  }

  get '00221257'(): Element {
    return this.dataset['00221257'];
  }

  // Selected Total Ophthalmic Axial Length Sequence
  get SelectedTotalOphthalmicAxialLengthSequence(): any {
    const element = this.dataset['00221260'];
    return (element?.Value.length === 1)
      ? this.dataset['00221260']?.Value[0]
      : this.dataset['00221260']?.Value;
  }

  get '00221260'(): Element {
    return this.dataset['00221260'];
  }

  // Ophthalmic Axial Length Quality Metric Sequence
  get OphthalmicAxialLengthQualityMetricSequence(): any {
    const element = this.dataset['00221262'];
    return (element?.Value.length === 1)
      ? this.dataset['00221262']?.Value[0]
      : this.dataset['00221262']?.Value;
  }

  get '00221262'(): Element {
    return this.dataset['00221262'];
  }

  // Ophthalmic Axial Length Quality Metric Type Code Sequence
  get OphthalmicAxialLengthQualityMetricTypeCodeSequence(): any {
    const element = this.dataset['00221265'];
    return (element?.Value.length === 1)
      ? this.dataset['00221265']?.Value[0]
      : this.dataset['00221265']?.Value;
  }

  get '00221265'(): Element {
    return this.dataset['00221265'];
  }

  // Ophthalmic Axial Length Quality Metric Type Description
  get OphthalmicAxialLengthQualityMetricTypeDescription(): any {
    const element = this.dataset['00221273'];
    return (element?.Value.length === 1)
      ? this.dataset['00221273']?.Value[0]
      : this.dataset['00221273']?.Value;
  }

  get '00221273'(): Element {
    return this.dataset['00221273'];
  }

  // Intraocular Lens Calculations Right Eye Sequence
  get IntraocularLensCalculationsRightEyeSequence(): any {
    const element = this.dataset['00221300'];
    return (element?.Value.length === 1)
      ? this.dataset['00221300']?.Value[0]
      : this.dataset['00221300']?.Value;
  }

  get '00221300'(): Element {
    return this.dataset['00221300'];
  }

  // Intraocular Lens Calculations Left Eye Sequence
  get IntraocularLensCalculationsLeftEyeSequence(): any {
    const element = this.dataset['00221310'];
    return (element?.Value.length === 1)
      ? this.dataset['00221310']?.Value[0]
      : this.dataset['00221310']?.Value;
  }

  get '00221310'(): Element {
    return this.dataset['00221310'];
  }

  // Referenced Ophthalmic Axial Length Measurement QC Image Sequence
  get ReferencedOphthalmicAxialLengthMeasurementQCImageSequence(): any {
    const element = this.dataset['00221330'];
    return (element?.Value.length === 1)
      ? this.dataset['00221330']?.Value[0]
      : this.dataset['00221330']?.Value;
  }

  get '00221330'(): Element {
    return this.dataset['00221330'];
  }

  // Ophthalmic Mapping Device Type
  get OphthalmicMappingDeviceType(): any {
    const element = this.dataset['00221415'];
    return (element?.Value.length === 1)
      ? this.dataset['00221415']?.Value[0]
      : this.dataset['00221415']?.Value;
  }

  get '00221415'(): Element {
    return this.dataset['00221415'];
  }

  // Acquisition Method Code Sequence
  get AcquisitionMethodCodeSequence(): any {
    const element = this.dataset['00221420'];
    return (element?.Value.length === 1)
      ? this.dataset['00221420']?.Value[0]
      : this.dataset['00221420']?.Value;
  }

  get '00221420'(): Element {
    return this.dataset['00221420'];
  }

  // Acquisition Method Algorithm Sequence
  get AcquisitionMethodAlgorithmSequence(): any {
    const element = this.dataset['00221423'];
    return (element?.Value.length === 1)
      ? this.dataset['00221423']?.Value[0]
      : this.dataset['00221423']?.Value;
  }

  get '00221423'(): Element {
    return this.dataset['00221423'];
  }

  // Ophthalmic Thickness Map Type Code Sequence
  get OphthalmicThicknessMapTypeCodeSequence(): any {
    const element = this.dataset['00221436'];
    return (element?.Value.length === 1)
      ? this.dataset['00221436']?.Value[0]
      : this.dataset['00221436']?.Value;
  }

  get '00221436'(): Element {
    return this.dataset['00221436'];
  }

  // Ophthalmic Thickness Mapping Normals Sequence
  get OphthalmicThicknessMappingNormalsSequence(): any {
    const element = this.dataset['00221443'];
    return (element?.Value.length === 1)
      ? this.dataset['00221443']?.Value[0]
      : this.dataset['00221443']?.Value;
  }

  get '00221443'(): Element {
    return this.dataset['00221443'];
  }

  // Retinal Thickness Definition Code Sequence
  get RetinalThicknessDefinitionCodeSequence(): any {
    const element = this.dataset['00221445'];
    return (element?.Value.length === 1)
      ? this.dataset['00221445']?.Value[0]
      : this.dataset['00221445']?.Value;
  }

  get '00221445'(): Element {
    return this.dataset['00221445'];
  }

  // Pixel Value Mapping to Coded Concept Sequence
  get PixelValueMappingToCodedConceptSequence(): any {
    const element = this.dataset['00221450'];
    return (element?.Value.length === 1)
      ? this.dataset['00221450']?.Value[0]
      : this.dataset['00221450']?.Value;
  }

  get '00221450'(): Element {
    return this.dataset['00221450'];
  }

  // Mapped Pixel Value
  get MappedPixelValue(): any {
    const element = this.dataset['00221452'];
    return (element?.Value.length === 1)
      ? this.dataset['00221452']?.Value[0]
      : this.dataset['00221452']?.Value;
  }

  get '00221452'(): Element {
    return this.dataset['00221452'];
  }

  // Pixel Value Mapping Explanation
  get PixelValueMappingExplanation(): any {
    const element = this.dataset['00221454'];
    return (element?.Value.length === 1)
      ? this.dataset['00221454']?.Value[0]
      : this.dataset['00221454']?.Value;
  }

  get '00221454'(): Element {
    return this.dataset['00221454'];
  }

  // Ophthalmic Thickness Map Quality Threshold Sequence
  get OphthalmicThicknessMapQualityThresholdSequence(): any {
    const element = this.dataset['00221458'];
    return (element?.Value.length === 1)
      ? this.dataset['00221458']?.Value[0]
      : this.dataset['00221458']?.Value;
  }

  get '00221458'(): Element {
    return this.dataset['00221458'];
  }

  // Ophthalmic Thickness Map Threshold Quality Rating
  get OphthalmicThicknessMapThresholdQualityRating(): any {
    const element = this.dataset['00221460'];
    return (element?.Value.length === 1)
      ? this.dataset['00221460']?.Value[0]
      : this.dataset['00221460']?.Value;
  }

  get '00221460'(): Element {
    return this.dataset['00221460'];
  }

  // Anatomic Structure Reference Point
  get AnatomicStructureReferencePoint(): any {
    const element = this.dataset['00221463'];
    return (element?.Value.length === 1)
      ? this.dataset['00221463']?.Value[0]
      : this.dataset['00221463']?.Value;
  }

  get '00221463'(): Element {
    return this.dataset['00221463'];
  }

  // Registration to Localizer Sequence
  get RegistrationToLocalizerSequence(): any {
    const element = this.dataset['00221465'];
    return (element?.Value.length === 1)
      ? this.dataset['00221465']?.Value[0]
      : this.dataset['00221465']?.Value;
  }

  get '00221465'(): Element {
    return this.dataset['00221465'];
  }

  // Registered Localizer Units
  get RegisteredLocalizerUnits(): any {
    const element = this.dataset['00221466'];
    return (element?.Value.length === 1)
      ? this.dataset['00221466']?.Value[0]
      : this.dataset['00221466']?.Value;
  }

  get '00221466'(): Element {
    return this.dataset['00221466'];
  }

  // Registered Localizer Top Left Hand Corner
  get RegisteredLocalizerTopLeftHandCorner(): any {
    const element = this.dataset['00221467'];
    return (element?.Value.length === 1)
      ? this.dataset['00221467']?.Value[0]
      : this.dataset['00221467']?.Value;
  }

  get '00221467'(): Element {
    return this.dataset['00221467'];
  }

  // Registered Localizer Bottom Right Hand Corner
  get RegisteredLocalizerBottomRightHandCorner(): any {
    const element = this.dataset['00221468'];
    return (element?.Value.length === 1)
      ? this.dataset['00221468']?.Value[0]
      : this.dataset['00221468']?.Value;
  }

  get '00221468'(): Element {
    return this.dataset['00221468'];
  }

  // Ophthalmic Thickness Map Quality Rating Sequence
  get OphthalmicThicknessMapQualityRatingSequence(): any {
    const element = this.dataset['00221470'];
    return (element?.Value.length === 1)
      ? this.dataset['00221470']?.Value[0]
      : this.dataset['00221470']?.Value;
  }

  get '00221470'(): Element {
    return this.dataset['00221470'];
  }

  // Relevant OPT Attributes Sequence
  get RelevantOPTAttributesSequence(): any {
    const element = this.dataset['00221472'];
    return (element?.Value.length === 1)
      ? this.dataset['00221472']?.Value[0]
      : this.dataset['00221472']?.Value;
  }

  get '00221472'(): Element {
    return this.dataset['00221472'];
  }

  // Visual Field Horizontal Extent
  get VisualFieldHorizontalExtent(): any {
    const element = this.dataset['00240010'];
    return (element?.Value.length === 1)
      ? this.dataset['00240010']?.Value[0]
      : this.dataset['00240010']?.Value;
  }

  get '00240010'(): Element {
    return this.dataset['00240010'];
  }

  // Visual Field Vertical Extent
  get VisualFieldVerticalExtent(): any {
    const element = this.dataset['00240011'];
    return (element?.Value.length === 1)
      ? this.dataset['00240011']?.Value[0]
      : this.dataset['00240011']?.Value;
  }

  get '00240011'(): Element {
    return this.dataset['00240011'];
  }

  // Visual Field Shape
  get VisualFieldShape(): any {
    const element = this.dataset['00240012'];
    return (element?.Value.length === 1)
      ? this.dataset['00240012']?.Value[0]
      : this.dataset['00240012']?.Value;
  }

  get '00240012'(): Element {
    return this.dataset['00240012'];
  }

  // Screening Test Mode Code Sequence
  get ScreeningTestModeCodeSequence(): any {
    const element = this.dataset['00240016'];
    return (element?.Value.length === 1)
      ? this.dataset['00240016']?.Value[0]
      : this.dataset['00240016']?.Value;
  }

  get '00240016'(): Element {
    return this.dataset['00240016'];
  }

  // Maximum Stimulus Luminance
  get MaximumStimulusLuminance(): any {
    const element = this.dataset['00240018'];
    return (element?.Value.length === 1)
      ? this.dataset['00240018']?.Value[0]
      : this.dataset['00240018']?.Value;
  }

  get '00240018'(): Element {
    return this.dataset['00240018'];
  }

  // Background Luminance
  get BackgroundLuminance(): any {
    const element = this.dataset['00240020'];
    return (element?.Value.length === 1)
      ? this.dataset['00240020']?.Value[0]
      : this.dataset['00240020']?.Value;
  }

  get '00240020'(): Element {
    return this.dataset['00240020'];
  }

  // Stimulus Color Code Sequence
  get StimulusColorCodeSequence(): any {
    const element = this.dataset['00240021'];
    return (element?.Value.length === 1)
      ? this.dataset['00240021']?.Value[0]
      : this.dataset['00240021']?.Value;
  }

  get '00240021'(): Element {
    return this.dataset['00240021'];
  }

  // Background Illumination Color Code Sequence
  get BackgroundIlluminationColorCodeSequence(): any {
    const element = this.dataset['00240024'];
    return (element?.Value.length === 1)
      ? this.dataset['00240024']?.Value[0]
      : this.dataset['00240024']?.Value;
  }

  get '00240024'(): Element {
    return this.dataset['00240024'];
  }

  // Stimulus Area
  get StimulusArea(): any {
    const element = this.dataset['00240025'];
    return (element?.Value.length === 1)
      ? this.dataset['00240025']?.Value[0]
      : this.dataset['00240025']?.Value;
  }

  get '00240025'(): Element {
    return this.dataset['00240025'];
  }

  // Stimulus Presentation Time
  get StimulusPresentationTime(): any {
    const element = this.dataset['00240028'];
    return (element?.Value.length === 1)
      ? this.dataset['00240028']?.Value[0]
      : this.dataset['00240028']?.Value;
  }

  get '00240028'(): Element {
    return this.dataset['00240028'];
  }

  // Fixation Sequence
  get FixationSequence(): any {
    const element = this.dataset['00240032'];
    return (element?.Value.length === 1)
      ? this.dataset['00240032']?.Value[0]
      : this.dataset['00240032']?.Value;
  }

  get '00240032'(): Element {
    return this.dataset['00240032'];
  }

  // Fixation Monitoring Code Sequence
  get FixationMonitoringCodeSequence(): any {
    const element = this.dataset['00240033'];
    return (element?.Value.length === 1)
      ? this.dataset['00240033']?.Value[0]
      : this.dataset['00240033']?.Value;
  }

  get '00240033'(): Element {
    return this.dataset['00240033'];
  }

  // Visual Field Catch Trial Sequence
  get VisualFieldCatchTrialSequence(): any {
    const element = this.dataset['00240034'];
    return (element?.Value.length === 1)
      ? this.dataset['00240034']?.Value[0]
      : this.dataset['00240034']?.Value;
  }

  get '00240034'(): Element {
    return this.dataset['00240034'];
  }

  // Fixation Checked Quantity
  get FixationCheckedQuantity(): any {
    const element = this.dataset['00240035'];
    return (element?.Value.length === 1)
      ? this.dataset['00240035']?.Value[0]
      : this.dataset['00240035']?.Value;
  }

  get '00240035'(): Element {
    return this.dataset['00240035'];
  }

  // Patient Not Properly Fixated Quantity
  get PatientNotProperlyFixatedQuantity(): any {
    const element = this.dataset['00240036'];
    return (element?.Value.length === 1)
      ? this.dataset['00240036']?.Value[0]
      : this.dataset['00240036']?.Value;
  }

  get '00240036'(): Element {
    return this.dataset['00240036'];
  }

  // Presented Visual Stimuli Data Flag
  get PresentedVisualStimuliDataFlag(): any {
    const element = this.dataset['00240037'];
    return (element?.Value.length === 1)
      ? this.dataset['00240037']?.Value[0]
      : this.dataset['00240037']?.Value;
  }

  get '00240037'(): Element {
    return this.dataset['00240037'];
  }

  // Number of Visual Stimuli
  get NumberOfVisualStimuli(): any {
    const element = this.dataset['00240038'];
    return (element?.Value.length === 1)
      ? this.dataset['00240038']?.Value[0]
      : this.dataset['00240038']?.Value;
  }

  get '00240038'(): Element {
    return this.dataset['00240038'];
  }

  // Excessive Fixation Losses Data Flag
  get ExcessiveFixationLossesDataFlag(): any {
    const element = this.dataset['00240039'];
    return (element?.Value.length === 1)
      ? this.dataset['00240039']?.Value[0]
      : this.dataset['00240039']?.Value;
  }

  get '00240039'(): Element {
    return this.dataset['00240039'];
  }

  // Excessive Fixation Losses
  get ExcessiveFixationLosses(): any {
    const element = this.dataset['00240040'];
    return (element?.Value.length === 1)
      ? this.dataset['00240040']?.Value[0]
      : this.dataset['00240040']?.Value;
  }

  get '00240040'(): Element {
    return this.dataset['00240040'];
  }

  // Stimuli Retesting Quantity
  get StimuliRetestingQuantity(): any {
    const element = this.dataset['00240042'];
    return (element?.Value.length === 1)
      ? this.dataset['00240042']?.Value[0]
      : this.dataset['00240042']?.Value;
  }

  get '00240042'(): Element {
    return this.dataset['00240042'];
  }

  // Comments on Patient's Performance of Visual Field
  get CommentsOnPatientPerformanceOfVisualField(): any {
    const element = this.dataset['00240044'];
    return (element?.Value.length === 1)
      ? this.dataset['00240044']?.Value[0]
      : this.dataset['00240044']?.Value;
  }

  get '00240044'(): Element {
    return this.dataset['00240044'];
  }

  // False Negatives Estimate Flag
  get FalseNegativesEstimateFlag(): any {
    const element = this.dataset['00240045'];
    return (element?.Value.length === 1)
      ? this.dataset['00240045']?.Value[0]
      : this.dataset['00240045']?.Value;
  }

  get '00240045'(): Element {
    return this.dataset['00240045'];
  }

  // False Negatives Estimate
  get FalseNegativesEstimate(): any {
    const element = this.dataset['00240046'];
    return (element?.Value.length === 1)
      ? this.dataset['00240046']?.Value[0]
      : this.dataset['00240046']?.Value;
  }

  get '00240046'(): Element {
    return this.dataset['00240046'];
  }

  // Negative Catch Trials Quantity
  get NegativeCatchTrialsQuantity(): any {
    const element = this.dataset['00240048'];
    return (element?.Value.length === 1)
      ? this.dataset['00240048']?.Value[0]
      : this.dataset['00240048']?.Value;
  }

  get '00240048'(): Element {
    return this.dataset['00240048'];
  }

  // False Negatives Quantity
  get FalseNegativesQuantity(): any {
    const element = this.dataset['00240050'];
    return (element?.Value.length === 1)
      ? this.dataset['00240050']?.Value[0]
      : this.dataset['00240050']?.Value;
  }

  get '00240050'(): Element {
    return this.dataset['00240050'];
  }

  // Excessive False Negatives Data Flag
  get ExcessiveFalseNegativesDataFlag(): any {
    const element = this.dataset['00240051'];
    return (element?.Value.length === 1)
      ? this.dataset['00240051']?.Value[0]
      : this.dataset['00240051']?.Value;
  }

  get '00240051'(): Element {
    return this.dataset['00240051'];
  }

  // Excessive False Negatives
  get ExcessiveFalseNegatives(): any {
    const element = this.dataset['00240052'];
    return (element?.Value.length === 1)
      ? this.dataset['00240052']?.Value[0]
      : this.dataset['00240052']?.Value;
  }

  get '00240052'(): Element {
    return this.dataset['00240052'];
  }

  // False Positives Estimate Flag
  get FalsePositivesEstimateFlag(): any {
    const element = this.dataset['00240053'];
    return (element?.Value.length === 1)
      ? this.dataset['00240053']?.Value[0]
      : this.dataset['00240053']?.Value;
  }

  get '00240053'(): Element {
    return this.dataset['00240053'];
  }

  // False Positives Estimate
  get FalsePositivesEstimate(): any {
    const element = this.dataset['00240054'];
    return (element?.Value.length === 1)
      ? this.dataset['00240054']?.Value[0]
      : this.dataset['00240054']?.Value;
  }

  get '00240054'(): Element {
    return this.dataset['00240054'];
  }

  // Catch Trials Data Flag
  get CatchTrialsDataFlag(): any {
    const element = this.dataset['00240055'];
    return (element?.Value.length === 1)
      ? this.dataset['00240055']?.Value[0]
      : this.dataset['00240055']?.Value;
  }

  get '00240055'(): Element {
    return this.dataset['00240055'];
  }

  // Positive Catch Trials Quantity
  get PositiveCatchTrialsQuantity(): any {
    const element = this.dataset['00240056'];
    return (element?.Value.length === 1)
      ? this.dataset['00240056']?.Value[0]
      : this.dataset['00240056']?.Value;
  }

  get '00240056'(): Element {
    return this.dataset['00240056'];
  }

  // Test Point Normals Data Flag
  get TestPointNormalsDataFlag(): any {
    const element = this.dataset['00240057'];
    return (element?.Value.length === 1)
      ? this.dataset['00240057']?.Value[0]
      : this.dataset['00240057']?.Value;
  }

  get '00240057'(): Element {
    return this.dataset['00240057'];
  }

  // Test Point Normals Sequence
  get TestPointNormalsSequence(): any {
    const element = this.dataset['00240058'];
    return (element?.Value.length === 1)
      ? this.dataset['00240058']?.Value[0]
      : this.dataset['00240058']?.Value;
  }

  get '00240058'(): Element {
    return this.dataset['00240058'];
  }

  // Global Deviation Probability Normals Flag
  get GlobalDeviationProbabilityNormalsFlag(): any {
    const element = this.dataset['00240059'];
    return (element?.Value.length === 1)
      ? this.dataset['00240059']?.Value[0]
      : this.dataset['00240059']?.Value;
  }

  get '00240059'(): Element {
    return this.dataset['00240059'];
  }

  // False Positives Quantity
  get FalsePositivesQuantity(): any {
    const element = this.dataset['00240060'];
    return (element?.Value.length === 1)
      ? this.dataset['00240060']?.Value[0]
      : this.dataset['00240060']?.Value;
  }

  get '00240060'(): Element {
    return this.dataset['00240060'];
  }

  // Excessive False Positives Data Flag
  get ExcessiveFalsePositivesDataFlag(): any {
    const element = this.dataset['00240061'];
    return (element?.Value.length === 1)
      ? this.dataset['00240061']?.Value[0]
      : this.dataset['00240061']?.Value;
  }

  get '00240061'(): Element {
    return this.dataset['00240061'];
  }

  // Excessive False Positives
  get ExcessiveFalsePositives(): any {
    const element = this.dataset['00240062'];
    return (element?.Value.length === 1)
      ? this.dataset['00240062']?.Value[0]
      : this.dataset['00240062']?.Value;
  }

  get '00240062'(): Element {
    return this.dataset['00240062'];
  }

  // Visual Field Test Normals Flag
  get VisualFieldTestNormalsFlag(): any {
    const element = this.dataset['00240063'];
    return (element?.Value.length === 1)
      ? this.dataset['00240063']?.Value[0]
      : this.dataset['00240063']?.Value;
  }

  get '00240063'(): Element {
    return this.dataset['00240063'];
  }

  // Results Normals Sequence
  get ResultsNormalsSequence(): any {
    const element = this.dataset['00240064'];
    return (element?.Value.length === 1)
      ? this.dataset['00240064']?.Value[0]
      : this.dataset['00240064']?.Value;
  }

  get '00240064'(): Element {
    return this.dataset['00240064'];
  }

  // Age Corrected Sensitivity Deviation Algorithm Sequence
  get AgeCorrectedSensitivityDeviationAlgorithmSequence(): any {
    const element = this.dataset['00240065'];
    return (element?.Value.length === 1)
      ? this.dataset['00240065']?.Value[0]
      : this.dataset['00240065']?.Value;
  }

  get '00240065'(): Element {
    return this.dataset['00240065'];
  }

  // Global Deviation From Normal
  get GlobalDeviationFromNormal(): any {
    const element = this.dataset['00240066'];
    return (element?.Value.length === 1)
      ? this.dataset['00240066']?.Value[0]
      : this.dataset['00240066']?.Value;
  }

  get '00240066'(): Element {
    return this.dataset['00240066'];
  }

  // Generalized Defect Sensitivity Deviation Algorithm Sequence
  get GeneralizedDefectSensitivityDeviationAlgorithmSequence(): any {
    const element = this.dataset['00240067'];
    return (element?.Value.length === 1)
      ? this.dataset['00240067']?.Value[0]
      : this.dataset['00240067']?.Value;
  }

  get '00240067'(): Element {
    return this.dataset['00240067'];
  }

  // Localized Deviation From Normal
  get LocalizedDeviationFromNormal(): any {
    const element = this.dataset['00240068'];
    return (element?.Value.length === 1)
      ? this.dataset['00240068']?.Value[0]
      : this.dataset['00240068']?.Value;
  }

  get '00240068'(): Element {
    return this.dataset['00240068'];
  }

  // Patient Reliability Indicator
  get PatientReliabilityIndicator(): any {
    const element = this.dataset['00240069'];
    return (element?.Value.length === 1)
      ? this.dataset['00240069']?.Value[0]
      : this.dataset['00240069']?.Value;
  }

  get '00240069'(): Element {
    return this.dataset['00240069'];
  }

  // Visual Field Mean Sensitivity
  get VisualFieldMeanSensitivity(): any {
    const element = this.dataset['00240070'];
    return (element?.Value.length === 1)
      ? this.dataset['00240070']?.Value[0]
      : this.dataset['00240070']?.Value;
  }

  get '00240070'(): Element {
    return this.dataset['00240070'];
  }

  // Global Deviation Probability
  get GlobalDeviationProbability(): any {
    const element = this.dataset['00240071'];
    return (element?.Value.length === 1)
      ? this.dataset['00240071']?.Value[0]
      : this.dataset['00240071']?.Value;
  }

  get '00240071'(): Element {
    return this.dataset['00240071'];
  }

  // Local Deviation Probability Normals Flag
  get LocalDeviationProbabilityNormalsFlag(): any {
    const element = this.dataset['00240072'];
    return (element?.Value.length === 1)
      ? this.dataset['00240072']?.Value[0]
      : this.dataset['00240072']?.Value;
  }

  get '00240072'(): Element {
    return this.dataset['00240072'];
  }

  // Localized Deviation Probability
  get LocalizedDeviationProbability(): any {
    const element = this.dataset['00240073'];
    return (element?.Value.length === 1)
      ? this.dataset['00240073']?.Value[0]
      : this.dataset['00240073']?.Value;
  }

  get '00240073'(): Element {
    return this.dataset['00240073'];
  }

  // Short Term Fluctuation Calculated
  get ShortTermFluctuationCalculated(): any {
    const element = this.dataset['00240074'];
    return (element?.Value.length === 1)
      ? this.dataset['00240074']?.Value[0]
      : this.dataset['00240074']?.Value;
  }

  get '00240074'(): Element {
    return this.dataset['00240074'];
  }

  // Short Term Fluctuation
  get ShortTermFluctuation(): any {
    const element = this.dataset['00240075'];
    return (element?.Value.length === 1)
      ? this.dataset['00240075']?.Value[0]
      : this.dataset['00240075']?.Value;
  }

  get '00240075'(): Element {
    return this.dataset['00240075'];
  }

  // Short Term Fluctuation Probability Calculated
  get ShortTermFluctuationProbabilityCalculated(): any {
    const element = this.dataset['00240076'];
    return (element?.Value.length === 1)
      ? this.dataset['00240076']?.Value[0]
      : this.dataset['00240076']?.Value;
  }

  get '00240076'(): Element {
    return this.dataset['00240076'];
  }

  // Short Term Fluctuation Probability
  get ShortTermFluctuationProbability(): any {
    const element = this.dataset['00240077'];
    return (element?.Value.length === 1)
      ? this.dataset['00240077']?.Value[0]
      : this.dataset['00240077']?.Value;
  }

  get '00240077'(): Element {
    return this.dataset['00240077'];
  }

  // Corrected Localized Deviation From Normal Calculated
  get CorrectedLocalizedDeviationFromNormalCalculated(): any {
    const element = this.dataset['00240078'];
    return (element?.Value.length === 1)
      ? this.dataset['00240078']?.Value[0]
      : this.dataset['00240078']?.Value;
  }

  get '00240078'(): Element {
    return this.dataset['00240078'];
  }

  // Corrected Localized Deviation From Normal
  get CorrectedLocalizedDeviationFromNormal(): any {
    const element = this.dataset['00240079'];
    return (element?.Value.length === 1)
      ? this.dataset['00240079']?.Value[0]
      : this.dataset['00240079']?.Value;
  }

  get '00240079'(): Element {
    return this.dataset['00240079'];
  }

  // Corrected Localized Deviation From Normal Probability Calculated
  get CorrectedLocalizedDeviationFromNormalProbabilityCalculated(): any {
    const element = this.dataset['00240080'];
    return (element?.Value.length === 1)
      ? this.dataset['00240080']?.Value[0]
      : this.dataset['00240080']?.Value;
  }

  get '00240080'(): Element {
    return this.dataset['00240080'];
  }

  // Corrected Localized Deviation From Normal Probability
  get CorrectedLocalizedDeviationFromNormalProbability(): any {
    const element = this.dataset['00240081'];
    return (element?.Value.length === 1)
      ? this.dataset['00240081']?.Value[0]
      : this.dataset['00240081']?.Value;
  }

  get '00240081'(): Element {
    return this.dataset['00240081'];
  }

  // Global Deviation Probability Sequence
  get GlobalDeviationProbabilitySequence(): any {
    const element = this.dataset['00240083'];
    return (element?.Value.length === 1)
      ? this.dataset['00240083']?.Value[0]
      : this.dataset['00240083']?.Value;
  }

  get '00240083'(): Element {
    return this.dataset['00240083'];
  }

  // Localized Deviation Probability Sequence
  get LocalizedDeviationProbabilitySequence(): any {
    const element = this.dataset['00240085'];
    return (element?.Value.length === 1)
      ? this.dataset['00240085']?.Value[0]
      : this.dataset['00240085']?.Value;
  }

  get '00240085'(): Element {
    return this.dataset['00240085'];
  }

  // Foveal Sensitivity Measured
  get FovealSensitivityMeasured(): any {
    const element = this.dataset['00240086'];
    return (element?.Value.length === 1)
      ? this.dataset['00240086']?.Value[0]
      : this.dataset['00240086']?.Value;
  }

  get '00240086'(): Element {
    return this.dataset['00240086'];
  }

  // Foveal Sensitivity
  get FovealSensitivity(): any {
    const element = this.dataset['00240087'];
    return (element?.Value.length === 1)
      ? this.dataset['00240087']?.Value[0]
      : this.dataset['00240087']?.Value;
  }

  get '00240087'(): Element {
    return this.dataset['00240087'];
  }

  // Visual Field Test Duration
  get VisualFieldTestDuration(): any {
    const element = this.dataset['00240088'];
    return (element?.Value.length === 1)
      ? this.dataset['00240088']?.Value[0]
      : this.dataset['00240088']?.Value;
  }

  get '00240088'(): Element {
    return this.dataset['00240088'];
  }

  // Visual Field Test Point Sequence
  get VisualFieldTestPointSequence(): any {
    const element = this.dataset['00240089'];
    return (element?.Value.length === 1)
      ? this.dataset['00240089']?.Value[0]
      : this.dataset['00240089']?.Value;
  }

  get '00240089'(): Element {
    return this.dataset['00240089'];
  }

  // Visual Field Test Point X-Coordinate
  get VisualFieldTestPointXCoordinate(): any {
    const element = this.dataset['00240090'];
    return (element?.Value.length === 1)
      ? this.dataset['00240090']?.Value[0]
      : this.dataset['00240090']?.Value;
  }

  get '00240090'(): Element {
    return this.dataset['00240090'];
  }

  // Visual Field Test Point Y-Coordinate
  get VisualFieldTestPointYCoordinate(): any {
    const element = this.dataset['00240091'];
    return (element?.Value.length === 1)
      ? this.dataset['00240091']?.Value[0]
      : this.dataset['00240091']?.Value;
  }

  get '00240091'(): Element {
    return this.dataset['00240091'];
  }

  // Age Corrected Sensitivity Deviation Value
  get AgeCorrectedSensitivityDeviationValue(): any {
    const element = this.dataset['00240092'];
    return (element?.Value.length === 1)
      ? this.dataset['00240092']?.Value[0]
      : this.dataset['00240092']?.Value;
  }

  get '00240092'(): Element {
    return this.dataset['00240092'];
  }

  // Stimulus Results
  get StimulusResults(): any {
    const element = this.dataset['00240093'];
    return (element?.Value.length === 1)
      ? this.dataset['00240093']?.Value[0]
      : this.dataset['00240093']?.Value;
  }

  get '00240093'(): Element {
    return this.dataset['00240093'];
  }

  // Sensitivity Value
  get SensitivityValue(): any {
    const element = this.dataset['00240094'];
    return (element?.Value.length === 1)
      ? this.dataset['00240094']?.Value[0]
      : this.dataset['00240094']?.Value;
  }

  get '00240094'(): Element {
    return this.dataset['00240094'];
  }

  // Retest Stimulus Seen
  get RetestStimulusSeen(): any {
    const element = this.dataset['00240095'];
    return (element?.Value.length === 1)
      ? this.dataset['00240095']?.Value[0]
      : this.dataset['00240095']?.Value;
  }

  get '00240095'(): Element {
    return this.dataset['00240095'];
  }

  // Retest Sensitivity Value
  get RetestSensitivityValue(): any {
    const element = this.dataset['00240096'];
    return (element?.Value.length === 1)
      ? this.dataset['00240096']?.Value[0]
      : this.dataset['00240096']?.Value;
  }

  get '00240096'(): Element {
    return this.dataset['00240096'];
  }

  // Visual Field Test Point Normals Sequence
  get VisualFieldTestPointNormalsSequence(): any {
    const element = this.dataset['00240097'];
    return (element?.Value.length === 1)
      ? this.dataset['00240097']?.Value[0]
      : this.dataset['00240097']?.Value;
  }

  get '00240097'(): Element {
    return this.dataset['00240097'];
  }

  // Quantified Defect
  get QuantifiedDefect(): any {
    const element = this.dataset['00240098'];
    return (element?.Value.length === 1)
      ? this.dataset['00240098']?.Value[0]
      : this.dataset['00240098']?.Value;
  }

  get '00240098'(): Element {
    return this.dataset['00240098'];
  }

  // Age Corrected Sensitivity Deviation Probability Value
  get AgeCorrectedSensitivityDeviationProbabilityValue(): any {
    const element = this.dataset['00240100'];
    return (element?.Value.length === 1)
      ? this.dataset['00240100']?.Value[0]
      : this.dataset['00240100']?.Value;
  }

  get '00240100'(): Element {
    return this.dataset['00240100'];
  }

  // Generalized Defect Corrected Sensitivity Deviation Flag
  get GeneralizedDefectCorrectedSensitivityDeviationFlag(): any {
    const element = this.dataset['00240102'];
    return (element?.Value.length === 1)
      ? this.dataset['00240102']?.Value[0]
      : this.dataset['00240102']?.Value;
  }

  get '00240102'(): Element {
    return this.dataset['00240102'];
  }

  // Generalized Defect Corrected Sensitivity Deviation Value
  get GeneralizedDefectCorrectedSensitivityDeviationValue(): any {
    const element = this.dataset['00240103'];
    return (element?.Value.length === 1)
      ? this.dataset['00240103']?.Value[0]
      : this.dataset['00240103']?.Value;
  }

  get '00240103'(): Element {
    return this.dataset['00240103'];
  }

  // Generalized Defect Corrected Sensitivity Deviation Probability Value
  get GeneralizedDefectCorrectedSensitivityDeviationProbabilityValue(): any {
    const element = this.dataset['00240104'];
    return (element?.Value.length === 1)
      ? this.dataset['00240104']?.Value[0]
      : this.dataset['00240104']?.Value;
  }

  get '00240104'(): Element {
    return this.dataset['00240104'];
  }

  // Minimum Sensitivity Value
  get MinimumSensitivityValue(): any {
    const element = this.dataset['00240105'];
    return (element?.Value.length === 1)
      ? this.dataset['00240105']?.Value[0]
      : this.dataset['00240105']?.Value;
  }

  get '00240105'(): Element {
    return this.dataset['00240105'];
  }

  // Blind Spot Localized
  get BlindSpotLocalized(): any {
    const element = this.dataset['00240106'];
    return (element?.Value.length === 1)
      ? this.dataset['00240106']?.Value[0]
      : this.dataset['00240106']?.Value;
  }

  get '00240106'(): Element {
    return this.dataset['00240106'];
  }

  // Blind Spot X-Coordinate
  get BlindSpotXCoordinate(): any {
    const element = this.dataset['00240107'];
    return (element?.Value.length === 1)
      ? this.dataset['00240107']?.Value[0]
      : this.dataset['00240107']?.Value;
  }

  get '00240107'(): Element {
    return this.dataset['00240107'];
  }

  // Blind Spot Y-Coordinate
  get BlindSpotYCoordinate(): any {
    const element = this.dataset['00240108'];
    return (element?.Value.length === 1)
      ? this.dataset['00240108']?.Value[0]
      : this.dataset['00240108']?.Value;
  }

  get '00240108'(): Element {
    return this.dataset['00240108'];
  }

  // Visual Acuity Measurement Sequence
  get VisualAcuityMeasurementSequence(): any {
    const element = this.dataset['00240110'];
    return (element?.Value.length === 1)
      ? this.dataset['00240110']?.Value[0]
      : this.dataset['00240110']?.Value;
  }

  get '00240110'(): Element {
    return this.dataset['00240110'];
  }

  // Refractive Parameters Used on Patient Sequence
  get RefractiveParametersUsedOnPatientSequence(): any {
    const element = this.dataset['00240112'];
    return (element?.Value.length === 1)
      ? this.dataset['00240112']?.Value[0]
      : this.dataset['00240112']?.Value;
  }

  get '00240112'(): Element {
    return this.dataset['00240112'];
  }

  // Measurement Laterality
  get MeasurementLaterality(): any {
    const element = this.dataset['00240113'];
    return (element?.Value.length === 1)
      ? this.dataset['00240113']?.Value[0]
      : this.dataset['00240113']?.Value;
  }

  get '00240113'(): Element {
    return this.dataset['00240113'];
  }

  // Ophthalmic Patient Clinical Information Left Eye Sequence
  get OphthalmicPatientClinicalInformationLeftEyeSequence(): any {
    const element = this.dataset['00240114'];
    return (element?.Value.length === 1)
      ? this.dataset['00240114']?.Value[0]
      : this.dataset['00240114']?.Value;
  }

  get '00240114'(): Element {
    return this.dataset['00240114'];
  }

  // Ophthalmic Patient Clinical Information Right Eye Sequence
  get OphthalmicPatientClinicalInformationRightEyeSequence(): any {
    const element = this.dataset['00240115'];
    return (element?.Value.length === 1)
      ? this.dataset['00240115']?.Value[0]
      : this.dataset['00240115']?.Value;
  }

  get '00240115'(): Element {
    return this.dataset['00240115'];
  }

  // Foveal Point Normative Data Flag
  get FovealPointNormativeDataFlag(): any {
    const element = this.dataset['00240117'];
    return (element?.Value.length === 1)
      ? this.dataset['00240117']?.Value[0]
      : this.dataset['00240117']?.Value;
  }

  get '00240117'(): Element {
    return this.dataset['00240117'];
  }

  // Foveal Point Probability Value
  get FovealPointProbabilityValue(): any {
    const element = this.dataset['00240118'];
    return (element?.Value.length === 1)
      ? this.dataset['00240118']?.Value[0]
      : this.dataset['00240118']?.Value;
  }

  get '00240118'(): Element {
    return this.dataset['00240118'];
  }

  // Screening Baseline Measured
  get ScreeningBaselineMeasured(): any {
    const element = this.dataset['00240120'];
    return (element?.Value.length === 1)
      ? this.dataset['00240120']?.Value[0]
      : this.dataset['00240120']?.Value;
  }

  get '00240120'(): Element {
    return this.dataset['00240120'];
  }

  // Screening Baseline Measured Sequence
  get ScreeningBaselineMeasuredSequence(): any {
    const element = this.dataset['00240122'];
    return (element?.Value.length === 1)
      ? this.dataset['00240122']?.Value[0]
      : this.dataset['00240122']?.Value;
  }

  get '00240122'(): Element {
    return this.dataset['00240122'];
  }

  // Screening Baseline Type
  get ScreeningBaselineType(): any {
    const element = this.dataset['00240124'];
    return (element?.Value.length === 1)
      ? this.dataset['00240124']?.Value[0]
      : this.dataset['00240124']?.Value;
  }

  get '00240124'(): Element {
    return this.dataset['00240124'];
  }

  // Screening Baseline Value
  get ScreeningBaselineValue(): any {
    const element = this.dataset['00240126'];
    return (element?.Value.length === 1)
      ? this.dataset['00240126']?.Value[0]
      : this.dataset['00240126']?.Value;
  }

  get '00240126'(): Element {
    return this.dataset['00240126'];
  }

  // Algorithm Source
  get AlgorithmSource(): any {
    const element = this.dataset['00240202'];
    return (element?.Value.length === 1)
      ? this.dataset['00240202']?.Value[0]
      : this.dataset['00240202']?.Value;
  }

  get '00240202'(): Element {
    return this.dataset['00240202'];
  }

  // Data Set Name
  get DataSetName(): any {
    const element = this.dataset['00240306'];
    return (element?.Value.length === 1)
      ? this.dataset['00240306']?.Value[0]
      : this.dataset['00240306']?.Value;
  }

  get '00240306'(): Element {
    return this.dataset['00240306'];
  }

  // Data Set Version
  get DataSetVersion(): any {
    const element = this.dataset['00240307'];
    return (element?.Value.length === 1)
      ? this.dataset['00240307']?.Value[0]
      : this.dataset['00240307']?.Value;
  }

  get '00240307'(): Element {
    return this.dataset['00240307'];
  }

  // Data Set Source
  get DataSetSource(): any {
    const element = this.dataset['00240308'];
    return (element?.Value.length === 1)
      ? this.dataset['00240308']?.Value[0]
      : this.dataset['00240308']?.Value;
  }

  get '00240308'(): Element {
    return this.dataset['00240308'];
  }

  // Data Set Description
  get DataSetDescription(): any {
    const element = this.dataset['00240309'];
    return (element?.Value.length === 1)
      ? this.dataset['00240309']?.Value[0]
      : this.dataset['00240309']?.Value;
  }

  get '00240309'(): Element {
    return this.dataset['00240309'];
  }

  // Visual Field Test Reliability Global Index Sequence
  get VisualFieldTestReliabilityGlobalIndexSequence(): any {
    const element = this.dataset['00240317'];
    return (element?.Value.length === 1)
      ? this.dataset['00240317']?.Value[0]
      : this.dataset['00240317']?.Value;
  }

  get '00240317'(): Element {
    return this.dataset['00240317'];
  }

  // Visual Field Global Results Index Sequence
  get VisualFieldGlobalResultsIndexSequence(): any {
    const element = this.dataset['00240320'];
    return (element?.Value.length === 1)
      ? this.dataset['00240320']?.Value[0]
      : this.dataset['00240320']?.Value;
  }

  get '00240320'(): Element {
    return this.dataset['00240320'];
  }

  // Data Observation Sequence
  get DataObservationSequence(): any {
    const element = this.dataset['00240325'];
    return (element?.Value.length === 1)
      ? this.dataset['00240325']?.Value[0]
      : this.dataset['00240325']?.Value;
  }

  get '00240325'(): Element {
    return this.dataset['00240325'];
  }

  // Index Normals Flag
  get IndexNormalsFlag(): any {
    const element = this.dataset['00240338'];
    return (element?.Value.length === 1)
      ? this.dataset['00240338']?.Value[0]
      : this.dataset['00240338']?.Value;
  }

  get '00240338'(): Element {
    return this.dataset['00240338'];
  }

  // Index Probability
  get IndexProbability(): any {
    const element = this.dataset['00240341'];
    return (element?.Value.length === 1)
      ? this.dataset['00240341']?.Value[0]
      : this.dataset['00240341']?.Value;
  }

  get '00240341'(): Element {
    return this.dataset['00240341'];
  }

  // Index Probability Sequence
  get IndexProbabilitySequence(): any {
    const element = this.dataset['00240344'];
    return (element?.Value.length === 1)
      ? this.dataset['00240344']?.Value[0]
      : this.dataset['00240344']?.Value;
  }

  get '00240344'(): Element {
    return this.dataset['00240344'];
  }

  // Samples per Pixel
  get SamplesPerPixel(): any {
    const element = this.dataset['00280002'];
    return (element?.Value.length === 1)
      ? this.dataset['00280002']?.Value[0]
      : this.dataset['00280002']?.Value;
  }

  get '00280002'(): Element {
    return this.dataset['00280002'];
  }

  // Samples per Pixel Used
  get SamplesPerPixelUsed(): any {
    const element = this.dataset['00280003'];
    return (element?.Value.length === 1)
      ? this.dataset['00280003']?.Value[0]
      : this.dataset['00280003']?.Value;
  }

  get '00280003'(): Element {
    return this.dataset['00280003'];
  }

  // Photometric Interpretation
  get PhotometricInterpretation(): any {
    const element = this.dataset['00280004'];
    return (element?.Value.length === 1)
      ? this.dataset['00280004']?.Value[0]
      : this.dataset['00280004']?.Value;
  }

  get '00280004'(): Element {
    return this.dataset['00280004'];
  }

  // Image Dimensions
  get ImageDimensions(): any {
    const element = this.dataset['00280005'];
    return (element?.Value.length === 1)
      ? this.dataset['00280005']?.Value[0]
      : this.dataset['00280005']?.Value;
  }

  get '00280005'(): Element {
    return this.dataset['00280005'];
  }

  // Planar Configuration
  get PlanarConfiguration(): any {
    const element = this.dataset['00280006'];
    return (element?.Value.length === 1)
      ? this.dataset['00280006']?.Value[0]
      : this.dataset['00280006']?.Value;
  }

  get '00280006'(): Element {
    return this.dataset['00280006'];
  }

  // Number of Frames
  get NumberOfFrames(): any {
    const element = this.dataset['00280008'];
    return (element?.Value.length === 1)
      ? this.dataset['00280008']?.Value[0]
      : this.dataset['00280008']?.Value;
  }

  get '00280008'(): Element {
    return this.dataset['00280008'];
  }

  // Frame Increment Pointer
  get FrameIncrementPointer(): any {
    const element = this.dataset['00280009'];
    return (element?.Value.length === 1)
      ? this.dataset['00280009']?.Value[0]
      : this.dataset['00280009']?.Value;
  }

  get '00280009'(): Element {
    return this.dataset['00280009'];
  }

  // Frame Dimension Pointer
  get FrameDimensionPointer(): any {
    const element = this.dataset['0028000A'];
    return (element?.Value.length === 1)
      ? this.dataset['0028000A']?.Value[0]
      : this.dataset['0028000A']?.Value;
  }

  get '0028000A'(): Element {
    return this.dataset['0028000A'];
  }

  // Rows
  get Rows(): any {
    const element = this.dataset['00280010'];
    return (element?.Value.length === 1)
      ? this.dataset['00280010']?.Value[0]
      : this.dataset['00280010']?.Value;
  }

  get '00280010'(): Element {
    return this.dataset['00280010'];
  }

  // Columns
  get Columns(): any {
    const element = this.dataset['00280011'];
    return (element?.Value.length === 1)
      ? this.dataset['00280011']?.Value[0]
      : this.dataset['00280011']?.Value;
  }

  get '00280011'(): Element {
    return this.dataset['00280011'];
  }

  // Planes
  get Planes(): any {
    const element = this.dataset['00280012'];
    return (element?.Value.length === 1)
      ? this.dataset['00280012']?.Value[0]
      : this.dataset['00280012']?.Value;
  }

  get '00280012'(): Element {
    return this.dataset['00280012'];
  }

  // Ultrasound Color Data Present
  get UltrasoundColorDataPresent(): any {
    const element = this.dataset['00280014'];
    return (element?.Value.length === 1)
      ? this.dataset['00280014']?.Value[0]
      : this.dataset['00280014']?.Value;
  }

  get '00280014'(): Element {
    return this.dataset['00280014'];
  }

  // Pixel Spacing
  get PixelSpacing(): any {
    const element = this.dataset['00280030'];
    return (element?.Value.length === 1)
      ? this.dataset['00280030']?.Value[0]
      : this.dataset['00280030']?.Value;
  }

  get '00280030'(): Element {
    return this.dataset['00280030'];
  }

  // Zoom Factor
  get ZoomFactor(): any {
    const element = this.dataset['00280031'];
    return (element?.Value.length === 1)
      ? this.dataset['00280031']?.Value[0]
      : this.dataset['00280031']?.Value;
  }

  get '00280031'(): Element {
    return this.dataset['00280031'];
  }

  // Zoom Center
  get ZoomCenter(): any {
    const element = this.dataset['00280032'];
    return (element?.Value.length === 1)
      ? this.dataset['00280032']?.Value[0]
      : this.dataset['00280032']?.Value;
  }

  get '00280032'(): Element {
    return this.dataset['00280032'];
  }

  // Pixel Aspect Ratio
  get PixelAspectRatio(): any {
    const element = this.dataset['00280034'];
    return (element?.Value.length === 1)
      ? this.dataset['00280034']?.Value[0]
      : this.dataset['00280034']?.Value;
  }

  get '00280034'(): Element {
    return this.dataset['00280034'];
  }

  // Image Format
  get ImageFormat(): any {
    const element = this.dataset['00280040'];
    return (element?.Value.length === 1)
      ? this.dataset['00280040']?.Value[0]
      : this.dataset['00280040']?.Value;
  }

  get '00280040'(): Element {
    return this.dataset['00280040'];
  }

  // Manipulated Image
  get ManipulatedImage(): any {
    const element = this.dataset['00280050'];
    return (element?.Value.length === 1)
      ? this.dataset['00280050']?.Value[0]
      : this.dataset['00280050']?.Value;
  }

  get '00280050'(): Element {
    return this.dataset['00280050'];
  }

  // Corrected Image
  get CorrectedImage(): any {
    const element = this.dataset['00280051'];
    return (element?.Value.length === 1)
      ? this.dataset['00280051']?.Value[0]
      : this.dataset['00280051']?.Value;
  }

  get '00280051'(): Element {
    return this.dataset['00280051'];
  }

  // Compression Recognition Code
  get CompressionRecognitionCode(): any {
    const element = this.dataset['0028005F'];
    return (element?.Value.length === 1)
      ? this.dataset['0028005F']?.Value[0]
      : this.dataset['0028005F']?.Value;
  }

  get '0028005F'(): Element {
    return this.dataset['0028005F'];
  }

  // Compression Code
  get CompressionCode(): any {
    const element = this.dataset['00280060'];
    return (element?.Value.length === 1)
      ? this.dataset['00280060']?.Value[0]
      : this.dataset['00280060']?.Value;
  }

  get '00280060'(): Element {
    return this.dataset['00280060'];
  }

  // Compression Originator
  get CompressionOriginator(): any {
    const element = this.dataset['00280061'];
    return (element?.Value.length === 1)
      ? this.dataset['00280061']?.Value[0]
      : this.dataset['00280061']?.Value;
  }

  get '00280061'(): Element {
    return this.dataset['00280061'];
  }

  // Compression Label
  get CompressionLabel(): any {
    const element = this.dataset['00280062'];
    return (element?.Value.length === 1)
      ? this.dataset['00280062']?.Value[0]
      : this.dataset['00280062']?.Value;
  }

  get '00280062'(): Element {
    return this.dataset['00280062'];
  }

  // Compression Description
  get CompressionDescription(): any {
    const element = this.dataset['00280063'];
    return (element?.Value.length === 1)
      ? this.dataset['00280063']?.Value[0]
      : this.dataset['00280063']?.Value;
  }

  get '00280063'(): Element {
    return this.dataset['00280063'];
  }

  // Compression Sequence
  get CompressionSequence(): any {
    const element = this.dataset['00280065'];
    return (element?.Value.length === 1)
      ? this.dataset['00280065']?.Value[0]
      : this.dataset['00280065']?.Value;
  }

  get '00280065'(): Element {
    return this.dataset['00280065'];
  }

  // Compression Step Pointers
  get CompressionStepPointers(): any {
    const element = this.dataset['00280066'];
    return (element?.Value.length === 1)
      ? this.dataset['00280066']?.Value[0]
      : this.dataset['00280066']?.Value;
  }

  get '00280066'(): Element {
    return this.dataset['00280066'];
  }

  // Repeat Interval
  get RepeatInterval(): any {
    const element = this.dataset['00280068'];
    return (element?.Value.length === 1)
      ? this.dataset['00280068']?.Value[0]
      : this.dataset['00280068']?.Value;
  }

  get '00280068'(): Element {
    return this.dataset['00280068'];
  }

  // Bits Grouped
  get BitsGrouped(): any {
    const element = this.dataset['00280069'];
    return (element?.Value.length === 1)
      ? this.dataset['00280069']?.Value[0]
      : this.dataset['00280069']?.Value;
  }

  get '00280069'(): Element {
    return this.dataset['00280069'];
  }

  // Perimeter Table
  get PerimeterTable(): any {
    const element = this.dataset['00280070'];
    return (element?.Value.length === 1)
      ? this.dataset['00280070']?.Value[0]
      : this.dataset['00280070']?.Value;
  }

  get '00280070'(): Element {
    return this.dataset['00280070'];
  }

  // Perimeter Value
  get PerimeterValue(): any {
    const element = this.dataset['00280071'];
    return (element?.Value.length === 1)
      ? this.dataset['00280071']?.Value[0]
      : this.dataset['00280071']?.Value;
  }

  get '00280071'(): Element {
    return this.dataset['00280071'];
  }

  // Predictor Rows
  get PredictorRows(): any {
    const element = this.dataset['00280080'];
    return (element?.Value.length === 1)
      ? this.dataset['00280080']?.Value[0]
      : this.dataset['00280080']?.Value;
  }

  get '00280080'(): Element {
    return this.dataset['00280080'];
  }

  // Predictor Columns
  get PredictorColumns(): any {
    const element = this.dataset['00280081'];
    return (element?.Value.length === 1)
      ? this.dataset['00280081']?.Value[0]
      : this.dataset['00280081']?.Value;
  }

  get '00280081'(): Element {
    return this.dataset['00280081'];
  }

  // Predictor Constants
  get PredictorConstants(): any {
    const element = this.dataset['00280082'];
    return (element?.Value.length === 1)
      ? this.dataset['00280082']?.Value[0]
      : this.dataset['00280082']?.Value;
  }

  get '00280082'(): Element {
    return this.dataset['00280082'];
  }

  // Blocked Pixels
  get BlockedPixels(): any {
    const element = this.dataset['00280090'];
    return (element?.Value.length === 1)
      ? this.dataset['00280090']?.Value[0]
      : this.dataset['00280090']?.Value;
  }

  get '00280090'(): Element {
    return this.dataset['00280090'];
  }

  // Block Rows
  get BlockRows(): any {
    const element = this.dataset['00280091'];
    return (element?.Value.length === 1)
      ? this.dataset['00280091']?.Value[0]
      : this.dataset['00280091']?.Value;
  }

  get '00280091'(): Element {
    return this.dataset['00280091'];
  }

  // Block Columns
  get BlockColumns(): any {
    const element = this.dataset['00280092'];
    return (element?.Value.length === 1)
      ? this.dataset['00280092']?.Value[0]
      : this.dataset['00280092']?.Value;
  }

  get '00280092'(): Element {
    return this.dataset['00280092'];
  }

  // Row Overlap
  get RowOverlap(): any {
    const element = this.dataset['00280093'];
    return (element?.Value.length === 1)
      ? this.dataset['00280093']?.Value[0]
      : this.dataset['00280093']?.Value;
  }

  get '00280093'(): Element {
    return this.dataset['00280093'];
  }

  // Column Overlap
  get ColumnOverlap(): any {
    const element = this.dataset['00280094'];
    return (element?.Value.length === 1)
      ? this.dataset['00280094']?.Value[0]
      : this.dataset['00280094']?.Value;
  }

  get '00280094'(): Element {
    return this.dataset['00280094'];
  }

  // Bits Allocated
  get BitsAllocated(): any {
    const element = this.dataset['00280100'];
    return (element?.Value.length === 1)
      ? this.dataset['00280100']?.Value[0]
      : this.dataset['00280100']?.Value;
  }

  get '00280100'(): Element {
    return this.dataset['00280100'];
  }

  // Bits Stored
  get BitsStored(): any {
    const element = this.dataset['00280101'];
    return (element?.Value.length === 1)
      ? this.dataset['00280101']?.Value[0]
      : this.dataset['00280101']?.Value;
  }

  get '00280101'(): Element {
    return this.dataset['00280101'];
  }

  // High Bit
  get HighBit(): any {
    const element = this.dataset['00280102'];
    return (element?.Value.length === 1)
      ? this.dataset['00280102']?.Value[0]
      : this.dataset['00280102']?.Value;
  }

  get '00280102'(): Element {
    return this.dataset['00280102'];
  }

  // Pixel Representation
  get PixelRepresentation(): any {
    const element = this.dataset['00280103'];
    return (element?.Value.length === 1)
      ? this.dataset['00280103']?.Value[0]
      : this.dataset['00280103']?.Value;
  }

  get '00280103'(): Element {
    return this.dataset['00280103'];
  }

  // Smallest Valid Pixel Value
  get SmallestValidPixelValue(): any {
    const element = this.dataset['00280104'];
    return (element?.Value.length === 1)
      ? this.dataset['00280104']?.Value[0]
      : this.dataset['00280104']?.Value;
  }

  get '00280104'(): Element {
    return this.dataset['00280104'];
  }

  // Largest Valid Pixel Value
  get LargestValidPixelValue(): any {
    const element = this.dataset['00280105'];
    return (element?.Value.length === 1)
      ? this.dataset['00280105']?.Value[0]
      : this.dataset['00280105']?.Value;
  }

  get '00280105'(): Element {
    return this.dataset['00280105'];
  }

  // Smallest Image Pixel Value
  get SmallestImagePixelValue(): any {
    const element = this.dataset['00280106'];
    return (element?.Value.length === 1)
      ? this.dataset['00280106']?.Value[0]
      : this.dataset['00280106']?.Value;
  }

  get '00280106'(): Element {
    return this.dataset['00280106'];
  }

  // Largest Image Pixel Value
  get LargestImagePixelValue(): any {
    const element = this.dataset['00280107'];
    return (element?.Value.length === 1)
      ? this.dataset['00280107']?.Value[0]
      : this.dataset['00280107']?.Value;
  }

  get '00280107'(): Element {
    return this.dataset['00280107'];
  }

  // Smallest Pixel Value in Series
  get SmallestPixelValueInSeries(): any {
    const element = this.dataset['00280108'];
    return (element?.Value.length === 1)
      ? this.dataset['00280108']?.Value[0]
      : this.dataset['00280108']?.Value;
  }

  get '00280108'(): Element {
    return this.dataset['00280108'];
  }

  // Largest Pixel Value in Series
  get LargestPixelValueInSeries(): any {
    const element = this.dataset['00280109'];
    return (element?.Value.length === 1)
      ? this.dataset['00280109']?.Value[0]
      : this.dataset['00280109']?.Value;
  }

  get '00280109'(): Element {
    return this.dataset['00280109'];
  }

  // Smallest Image Pixel Value in Plane
  get SmallestImagePixelValueInPlane(): any {
    const element = this.dataset['00280110'];
    return (element?.Value.length === 1)
      ? this.dataset['00280110']?.Value[0]
      : this.dataset['00280110']?.Value;
  }

  get '00280110'(): Element {
    return this.dataset['00280110'];
  }

  // Largest Image Pixel Value in Plane
  get LargestImagePixelValueInPlane(): any {
    const element = this.dataset['00280111'];
    return (element?.Value.length === 1)
      ? this.dataset['00280111']?.Value[0]
      : this.dataset['00280111']?.Value;
  }

  get '00280111'(): Element {
    return this.dataset['00280111'];
  }

  // Pixel Padding Value
  get PixelPaddingValue(): any {
    const element = this.dataset['00280120'];
    return (element?.Value.length === 1)
      ? this.dataset['00280120']?.Value[0]
      : this.dataset['00280120']?.Value;
  }

  get '00280120'(): Element {
    return this.dataset['00280120'];
  }

  // Pixel Padding Range Limit
  get PixelPaddingRangeLimit(): any {
    const element = this.dataset['00280121'];
    return (element?.Value.length === 1)
      ? this.dataset['00280121']?.Value[0]
      : this.dataset['00280121']?.Value;
  }

  get '00280121'(): Element {
    return this.dataset['00280121'];
  }

  // Image Location
  get ImageLocation(): any {
    const element = this.dataset['00280200'];
    return (element?.Value.length === 1)
      ? this.dataset['00280200']?.Value[0]
      : this.dataset['00280200']?.Value;
  }

  get '00280200'(): Element {
    return this.dataset['00280200'];
  }

  // Quality Control Image
  get QualityControlImage(): any {
    const element = this.dataset['00280300'];
    return (element?.Value.length === 1)
      ? this.dataset['00280300']?.Value[0]
      : this.dataset['00280300']?.Value;
  }

  get '00280300'(): Element {
    return this.dataset['00280300'];
  }

  // Burned In Annotation
  get BurnedInAnnotation(): any {
    const element = this.dataset['00280301'];
    return (element?.Value.length === 1)
      ? this.dataset['00280301']?.Value[0]
      : this.dataset['00280301']?.Value;
  }

  get '00280301'(): Element {
    return this.dataset['00280301'];
  }

  // Recognizable Visual Features
  get RecognizableVisualFeatures(): any {
    const element = this.dataset['00280302'];
    return (element?.Value.length === 1)
      ? this.dataset['00280302']?.Value[0]
      : this.dataset['00280302']?.Value;
  }

  get '00280302'(): Element {
    return this.dataset['00280302'];
  }

  // Longitudinal Temporal Information Modified
  get LongitudinalTemporalInformationModified(): any {
    const element = this.dataset['00280303'];
    return (element?.Value.length === 1)
      ? this.dataset['00280303']?.Value[0]
      : this.dataset['00280303']?.Value;
  }

  get '00280303'(): Element {
    return this.dataset['00280303'];
  }

  // Referenced Color Palette Instance UID
  get ReferencedColorPaletteInstanceUID(): any {
    const element = this.dataset['00280304'];
    return (element?.Value.length === 1)
      ? this.dataset['00280304']?.Value[0]
      : this.dataset['00280304']?.Value;
  }

  get '00280304'(): Element {
    return this.dataset['00280304'];
  }

  // Transform Label
  get TransformLabel(): any {
    const element = this.dataset['00280400'];
    return (element?.Value.length === 1)
      ? this.dataset['00280400']?.Value[0]
      : this.dataset['00280400']?.Value;
  }

  get '00280400'(): Element {
    return this.dataset['00280400'];
  }

  // Transform Version Number
  get TransformVersionNumber(): any {
    const element = this.dataset['00280401'];
    return (element?.Value.length === 1)
      ? this.dataset['00280401']?.Value[0]
      : this.dataset['00280401']?.Value;
  }

  get '00280401'(): Element {
    return this.dataset['00280401'];
  }

  // Number of Transform Steps
  get NumberOfTransformSteps(): any {
    const element = this.dataset['00280402'];
    return (element?.Value.length === 1)
      ? this.dataset['00280402']?.Value[0]
      : this.dataset['00280402']?.Value;
  }

  get '00280402'(): Element {
    return this.dataset['00280402'];
  }

  // Sequence of Compressed Data
  get SequenceOfCompressedData(): any {
    const element = this.dataset['00280403'];
    return (element?.Value.length === 1)
      ? this.dataset['00280403']?.Value[0]
      : this.dataset['00280403']?.Value;
  }

  get '00280403'(): Element {
    return this.dataset['00280403'];
  }

  // Details of Coefficients
  get DetailsOfCoefficients(): any {
    const element = this.dataset['00280404'];
    return (element?.Value.length === 1)
      ? this.dataset['00280404']?.Value[0]
      : this.dataset['00280404']?.Value;
  }

  get '00280404'(): Element {
    return this.dataset['00280404'];
  }

  // Rows For Nth Order Coefficients
  get RowsForNthOrderCoefficients(): any {
    const element = this.dataset['002804x0'];
    return (element?.Value.length === 1)
      ? this.dataset['002804x0']?.Value[0]
      : this.dataset['002804x0']?.Value;
  }

  get '002804x0'(): Element {
    return this.dataset['002804x0'];
  }

  // Columns For Nth Order Coefficients
  get ColumnsForNthOrderCoefficients(): any {
    const element = this.dataset['002804x1'];
    return (element?.Value.length === 1)
      ? this.dataset['002804x1']?.Value[0]
      : this.dataset['002804x1']?.Value;
  }

  get '002804x1'(): Element {
    return this.dataset['002804x1'];
  }

  // Coefficient Coding
  get CoefficientCoding(): any {
    const element = this.dataset['002804x2'];
    return (element?.Value.length === 1)
      ? this.dataset['002804x2']?.Value[0]
      : this.dataset['002804x2']?.Value;
  }

  get '002804x2'(): Element {
    return this.dataset['002804x2'];
  }

  // Coefficient Coding Pointers
  get CoefficientCodingPointers(): any {
    const element = this.dataset['002804x3'];
    return (element?.Value.length === 1)
      ? this.dataset['002804x3']?.Value[0]
      : this.dataset['002804x3']?.Value;
  }

  get '002804x3'(): Element {
    return this.dataset['002804x3'];
  }

  // DCT Label
  get DCTLabel(): any {
    const element = this.dataset['00280700'];
    return (element?.Value.length === 1)
      ? this.dataset['00280700']?.Value[0]
      : this.dataset['00280700']?.Value;
  }

  get '00280700'(): Element {
    return this.dataset['00280700'];
  }

  // Data Block Description
  get DataBlockDescription(): any {
    const element = this.dataset['00280701'];
    return (element?.Value.length === 1)
      ? this.dataset['00280701']?.Value[0]
      : this.dataset['00280701']?.Value;
  }

  get '00280701'(): Element {
    return this.dataset['00280701'];
  }

  // Data Block
  get DataBlock(): any {
    const element = this.dataset['00280702'];
    return (element?.Value.length === 1)
      ? this.dataset['00280702']?.Value[0]
      : this.dataset['00280702']?.Value;
  }

  get '00280702'(): Element {
    return this.dataset['00280702'];
  }

  // Normalization Factor Format
  get NormalizationFactorFormat(): any {
    const element = this.dataset['00280710'];
    return (element?.Value.length === 1)
      ? this.dataset['00280710']?.Value[0]
      : this.dataset['00280710']?.Value;
  }

  get '00280710'(): Element {
    return this.dataset['00280710'];
  }

  // Zonal Map Number Format
  get ZonalMapNumberFormat(): any {
    const element = this.dataset['00280720'];
    return (element?.Value.length === 1)
      ? this.dataset['00280720']?.Value[0]
      : this.dataset['00280720']?.Value;
  }

  get '00280720'(): Element {
    return this.dataset['00280720'];
  }

  // Zonal Map Location
  get ZonalMapLocation(): any {
    const element = this.dataset['00280721'];
    return (element?.Value.length === 1)
      ? this.dataset['00280721']?.Value[0]
      : this.dataset['00280721']?.Value;
  }

  get '00280721'(): Element {
    return this.dataset['00280721'];
  }

  // Zonal Map Format
  get ZonalMapFormat(): any {
    const element = this.dataset['00280722'];
    return (element?.Value.length === 1)
      ? this.dataset['00280722']?.Value[0]
      : this.dataset['00280722']?.Value;
  }

  get '00280722'(): Element {
    return this.dataset['00280722'];
  }

  // Adaptive Map Format
  get AdaptiveMapFormat(): any {
    const element = this.dataset['00280730'];
    return (element?.Value.length === 1)
      ? this.dataset['00280730']?.Value[0]
      : this.dataset['00280730']?.Value;
  }

  get '00280730'(): Element {
    return this.dataset['00280730'];
  }

  // Code Number Format
  get CodeNumberFormat(): any {
    const element = this.dataset['00280740'];
    return (element?.Value.length === 1)
      ? this.dataset['00280740']?.Value[0]
      : this.dataset['00280740']?.Value;
  }

  get '00280740'(): Element {
    return this.dataset['00280740'];
  }

  // Code Label
  get CodeLabel(): any {
    const element = this.dataset['002808x0'];
    return (element?.Value.length === 1)
      ? this.dataset['002808x0']?.Value[0]
      : this.dataset['002808x0']?.Value;
  }

  get '002808x0'(): Element {
    return this.dataset['002808x0'];
  }

  // Number of Tables
  get NumberOfTables(): any {
    const element = this.dataset['002808x2'];
    return (element?.Value.length === 1)
      ? this.dataset['002808x2']?.Value[0]
      : this.dataset['002808x2']?.Value;
  }

  get '002808x2'(): Element {
    return this.dataset['002808x2'];
  }

  // Code Table Location
  get CodeTableLocation(): any {
    const element = this.dataset['002808x3'];
    return (element?.Value.length === 1)
      ? this.dataset['002808x3']?.Value[0]
      : this.dataset['002808x3']?.Value;
  }

  get '002808x3'(): Element {
    return this.dataset['002808x3'];
  }

  // Bits For Code Word
  get BitsForCodeWord(): any {
    const element = this.dataset['002808x4'];
    return (element?.Value.length === 1)
      ? this.dataset['002808x4']?.Value[0]
      : this.dataset['002808x4']?.Value;
  }

  get '002808x4'(): Element {
    return this.dataset['002808x4'];
  }

  // Image Data Location
  get ImageDataLocation(): any {
    const element = this.dataset['002808x8'];
    return (element?.Value.length === 1)
      ? this.dataset['002808x8']?.Value[0]
      : this.dataset['002808x8']?.Value;
  }

  get '002808x8'(): Element {
    return this.dataset['002808x8'];
  }

  // Pixel Spacing Calibration Type
  get PixelSpacingCalibrationType(): any {
    const element = this.dataset['00280A02'];
    return (element?.Value.length === 1)
      ? this.dataset['00280A02']?.Value[0]
      : this.dataset['00280A02']?.Value;
  }

  get '00280A02'(): Element {
    return this.dataset['00280A02'];
  }

  // Pixel Spacing Calibration Description
  get PixelSpacingCalibrationDescription(): any {
    const element = this.dataset['00280A04'];
    return (element?.Value.length === 1)
      ? this.dataset['00280A04']?.Value[0]
      : this.dataset['00280A04']?.Value;
  }

  get '00280A04'(): Element {
    return this.dataset['00280A04'];
  }

  // Pixel Intensity Relationship
  get PixelIntensityRelationship(): any {
    const element = this.dataset['00281040'];
    return (element?.Value.length === 1)
      ? this.dataset['00281040']?.Value[0]
      : this.dataset['00281040']?.Value;
  }

  get '00281040'(): Element {
    return this.dataset['00281040'];
  }

  // Pixel Intensity Relationship Sign
  get PixelIntensityRelationshipSign(): any {
    const element = this.dataset['00281041'];
    return (element?.Value.length === 1)
      ? this.dataset['00281041']?.Value[0]
      : this.dataset['00281041']?.Value;
  }

  get '00281041'(): Element {
    return this.dataset['00281041'];
  }

  // Window Center
  get WindowCenter(): any {
    const element = this.dataset['00281050'];
    return (element?.Value.length === 1)
      ? this.dataset['00281050']?.Value[0]
      : this.dataset['00281050']?.Value;
  }

  get '00281050'(): Element {
    return this.dataset['00281050'];
  }

  // Window Width
  get WindowWidth(): any {
    const element = this.dataset['00281051'];
    return (element?.Value.length === 1)
      ? this.dataset['00281051']?.Value[0]
      : this.dataset['00281051']?.Value;
  }

  get '00281051'(): Element {
    return this.dataset['00281051'];
  }

  // Rescale Intercept
  get RescaleIntercept(): any {
    const element = this.dataset['00281052'];
    return (element?.Value.length === 1)
      ? this.dataset['00281052']?.Value[0]
      : this.dataset['00281052']?.Value;
  }

  get '00281052'(): Element {
    return this.dataset['00281052'];
  }

  // Rescale Slope
  get RescaleSlope(): any {
    const element = this.dataset['00281053'];
    return (element?.Value.length === 1)
      ? this.dataset['00281053']?.Value[0]
      : this.dataset['00281053']?.Value;
  }

  get '00281053'(): Element {
    return this.dataset['00281053'];
  }

  // Rescale Type
  get RescaleType(): any {
    const element = this.dataset['00281054'];
    return (element?.Value.length === 1)
      ? this.dataset['00281054']?.Value[0]
      : this.dataset['00281054']?.Value;
  }

  get '00281054'(): Element {
    return this.dataset['00281054'];
  }

  // Window Center & Width Explanation
  get WindowCenterWidthExplanation(): any {
    const element = this.dataset['00281055'];
    return (element?.Value.length === 1)
      ? this.dataset['00281055']?.Value[0]
      : this.dataset['00281055']?.Value;
  }

  get '00281055'(): Element {
    return this.dataset['00281055'];
  }

  // VOI LUT Function
  get VOILUTFunction(): any {
    const element = this.dataset['00281056'];
    return (element?.Value.length === 1)
      ? this.dataset['00281056']?.Value[0]
      : this.dataset['00281056']?.Value;
  }

  get '00281056'(): Element {
    return this.dataset['00281056'];
  }

  // Gray Scale
  get GrayScale(): any {
    const element = this.dataset['00281080'];
    return (element?.Value.length === 1)
      ? this.dataset['00281080']?.Value[0]
      : this.dataset['00281080']?.Value;
  }

  get '00281080'(): Element {
    return this.dataset['00281080'];
  }

  // Recommended Viewing Mode
  get RecommendedViewingMode(): any {
    const element = this.dataset['00281090'];
    return (element?.Value.length === 1)
      ? this.dataset['00281090']?.Value[0]
      : this.dataset['00281090']?.Value;
  }

  get '00281090'(): Element {
    return this.dataset['00281090'];
  }

  // Gray Lookup Table Descriptor
  get GrayLookupTableDescriptor(): any {
    const element = this.dataset['00281100'];
    return (element?.Value.length === 1)
      ? this.dataset['00281100']?.Value[0]
      : this.dataset['00281100']?.Value;
  }

  get '00281100'(): Element {
    return this.dataset['00281100'];
  }

  // Red Palette Color Lookup Table Descriptor
  get RedPaletteColorLookupTableDescriptor(): any {
    const element = this.dataset['00281101'];
    return (element?.Value.length === 1)
      ? this.dataset['00281101']?.Value[0]
      : this.dataset['00281101']?.Value;
  }

  get '00281101'(): Element {
    return this.dataset['00281101'];
  }

  // Green Palette Color Lookup Table Descriptor
  get GreenPaletteColorLookupTableDescriptor(): any {
    const element = this.dataset['00281102'];
    return (element?.Value.length === 1)
      ? this.dataset['00281102']?.Value[0]
      : this.dataset['00281102']?.Value;
  }

  get '00281102'(): Element {
    return this.dataset['00281102'];
  }

  // Blue Palette Color Lookup Table Descriptor
  get BluePaletteColorLookupTableDescriptor(): any {
    const element = this.dataset['00281103'];
    return (element?.Value.length === 1)
      ? this.dataset['00281103']?.Value[0]
      : this.dataset['00281103']?.Value;
  }

  get '00281103'(): Element {
    return this.dataset['00281103'];
  }

  // Alpha Palette Color Lookup Table Descriptor
  get AlphaPaletteColorLookupTableDescriptor(): any {
    const element = this.dataset['00281104'];
    return (element?.Value.length === 1)
      ? this.dataset['00281104']?.Value[0]
      : this.dataset['00281104']?.Value;
  }

  get '00281104'(): Element {
    return this.dataset['00281104'];
  }

  // Large Red Palette Color Lookup Table Descriptor
  get LargeRedPaletteColorLookupTableDescriptor(): any {
    const element = this.dataset['00281111'];
    return (element?.Value.length === 1)
      ? this.dataset['00281111']?.Value[0]
      : this.dataset['00281111']?.Value;
  }

  get '00281111'(): Element {
    return this.dataset['00281111'];
  }

  // Large Green Palette Color Lookup Table Descriptor
  get LargeGreenPaletteColorLookupTableDescriptor(): any {
    const element = this.dataset['00281112'];
    return (element?.Value.length === 1)
      ? this.dataset['00281112']?.Value[0]
      : this.dataset['00281112']?.Value;
  }

  get '00281112'(): Element {
    return this.dataset['00281112'];
  }

  // Large Blue Palette Color Lookup Table Descriptor
  get LargeBluePaletteColorLookupTableDescriptor(): any {
    const element = this.dataset['00281113'];
    return (element?.Value.length === 1)
      ? this.dataset['00281113']?.Value[0]
      : this.dataset['00281113']?.Value;
  }

  get '00281113'(): Element {
    return this.dataset['00281113'];
  }

  // Palette Color Lookup Table UID
  get PaletteColorLookupTableUID(): any {
    const element = this.dataset['00281199'];
    return (element?.Value.length === 1)
      ? this.dataset['00281199']?.Value[0]
      : this.dataset['00281199']?.Value;
  }

  get '00281199'(): Element {
    return this.dataset['00281199'];
  }

  // Gray Lookup Table Data
  get GrayLookupTableData(): any {
    const element = this.dataset['00281200'];
    return (element?.Value.length === 1)
      ? this.dataset['00281200']?.Value[0]
      : this.dataset['00281200']?.Value;
  }

  get '00281200'(): Element {
    return this.dataset['00281200'];
  }

  // Red Palette Color Lookup Table Data
  get RedPaletteColorLookupTableData(): any {
    const element = this.dataset['00281201'];
    return (element?.Value.length === 1)
      ? this.dataset['00281201']?.Value[0]
      : this.dataset['00281201']?.Value;
  }

  get '00281201'(): Element {
    return this.dataset['00281201'];
  }

  // Green Palette Color Lookup Table Data
  get GreenPaletteColorLookupTableData(): any {
    const element = this.dataset['00281202'];
    return (element?.Value.length === 1)
      ? this.dataset['00281202']?.Value[0]
      : this.dataset['00281202']?.Value;
  }

  get '00281202'(): Element {
    return this.dataset['00281202'];
  }

  // Blue Palette Color Lookup Table Data
  get BluePaletteColorLookupTableData(): any {
    const element = this.dataset['00281203'];
    return (element?.Value.length === 1)
      ? this.dataset['00281203']?.Value[0]
      : this.dataset['00281203']?.Value;
  }

  get '00281203'(): Element {
    return this.dataset['00281203'];
  }

  // Alpha Palette Color Lookup Table Data
  get AlphaPaletteColorLookupTableData(): any {
    const element = this.dataset['00281204'];
    return (element?.Value.length === 1)
      ? this.dataset['00281204']?.Value[0]
      : this.dataset['00281204']?.Value;
  }

  get '00281204'(): Element {
    return this.dataset['00281204'];
  }

  // Large Red Palette Color Lookup Table Data
  get LargeRedPaletteColorLookupTableData(): any {
    const element = this.dataset['00281211'];
    return (element?.Value.length === 1)
      ? this.dataset['00281211']?.Value[0]
      : this.dataset['00281211']?.Value;
  }

  get '00281211'(): Element {
    return this.dataset['00281211'];
  }

  // Large Green Palette Color Lookup Table Data
  get LargeGreenPaletteColorLookupTableData(): any {
    const element = this.dataset['00281212'];
    return (element?.Value.length === 1)
      ? this.dataset['00281212']?.Value[0]
      : this.dataset['00281212']?.Value;
  }

  get '00281212'(): Element {
    return this.dataset['00281212'];
  }

  // Large Blue Palette Color Lookup Table Data
  get LargeBluePaletteColorLookupTableData(): any {
    const element = this.dataset['00281213'];
    return (element?.Value.length === 1)
      ? this.dataset['00281213']?.Value[0]
      : this.dataset['00281213']?.Value;
  }

  get '00281213'(): Element {
    return this.dataset['00281213'];
  }

  // Large Palette Color Lookup Table UID
  get LargePaletteColorLookupTableUID(): any {
    const element = this.dataset['00281214'];
    return (element?.Value.length === 1)
      ? this.dataset['00281214']?.Value[0]
      : this.dataset['00281214']?.Value;
  }

  get '00281214'(): Element {
    return this.dataset['00281214'];
  }

  // Segmented Red Palette Color Lookup Table Data
  get SegmentedRedPaletteColorLookupTableData(): any {
    const element = this.dataset['00281221'];
    return (element?.Value.length === 1)
      ? this.dataset['00281221']?.Value[0]
      : this.dataset['00281221']?.Value;
  }

  get '00281221'(): Element {
    return this.dataset['00281221'];
  }

  // Segmented Green Palette Color Lookup Table Data
  get SegmentedGreenPaletteColorLookupTableData(): any {
    const element = this.dataset['00281222'];
    return (element?.Value.length === 1)
      ? this.dataset['00281222']?.Value[0]
      : this.dataset['00281222']?.Value;
  }

  get '00281222'(): Element {
    return this.dataset['00281222'];
  }

  // Segmented Blue Palette Color Lookup Table Data
  get SegmentedBluePaletteColorLookupTableData(): any {
    const element = this.dataset['00281223'];
    return (element?.Value.length === 1)
      ? this.dataset['00281223']?.Value[0]
      : this.dataset['00281223']?.Value;
  }

  get '00281223'(): Element {
    return this.dataset['00281223'];
  }

  // Breast Implant Present
  get BreastImplantPresent(): any {
    const element = this.dataset['00281300'];
    return (element?.Value.length === 1)
      ? this.dataset['00281300']?.Value[0]
      : this.dataset['00281300']?.Value;
  }

  get '00281300'(): Element {
    return this.dataset['00281300'];
  }

  // Partial View
  get PartialView(): any {
    const element = this.dataset['00281350'];
    return (element?.Value.length === 1)
      ? this.dataset['00281350']?.Value[0]
      : this.dataset['00281350']?.Value;
  }

  get '00281350'(): Element {
    return this.dataset['00281350'];
  }

  // Partial View Description
  get PartialViewDescription(): any {
    const element = this.dataset['00281351'];
    return (element?.Value.length === 1)
      ? this.dataset['00281351']?.Value[0]
      : this.dataset['00281351']?.Value;
  }

  get '00281351'(): Element {
    return this.dataset['00281351'];
  }

  // Partial View Code Sequence
  get PartialViewCodeSequence(): any {
    const element = this.dataset['00281352'];
    return (element?.Value.length === 1)
      ? this.dataset['00281352']?.Value[0]
      : this.dataset['00281352']?.Value;
  }

  get '00281352'(): Element {
    return this.dataset['00281352'];
  }

  // Spatial Locations Preserved
  get SpatialLocationsPreserved(): any {
    const element = this.dataset['0028135A'];
    return (element?.Value.length === 1)
      ? this.dataset['0028135A']?.Value[0]
      : this.dataset['0028135A']?.Value;
  }

  get '0028135A'(): Element {
    return this.dataset['0028135A'];
  }

  // Data Frame Assignment Sequence
  get DataFrameAssignmentSequence(): any {
    const element = this.dataset['00281401'];
    return (element?.Value.length === 1)
      ? this.dataset['00281401']?.Value[0]
      : this.dataset['00281401']?.Value;
  }

  get '00281401'(): Element {
    return this.dataset['00281401'];
  }

  // Data Path Assignment
  get DataPathAssignment(): any {
    const element = this.dataset['00281402'];
    return (element?.Value.length === 1)
      ? this.dataset['00281402']?.Value[0]
      : this.dataset['00281402']?.Value;
  }

  get '00281402'(): Element {
    return this.dataset['00281402'];
  }

  // Bits Mapped to Color Lookup Table
  get BitsMappedToColorLookupTable(): any {
    const element = this.dataset['00281403'];
    return (element?.Value.length === 1)
      ? this.dataset['00281403']?.Value[0]
      : this.dataset['00281403']?.Value;
  }

  get '00281403'(): Element {
    return this.dataset['00281403'];
  }

  // Blending LUT 1 Sequence
  get BlendingLUT1Sequence(): any {
    const element = this.dataset['00281404'];
    return (element?.Value.length === 1)
      ? this.dataset['00281404']?.Value[0]
      : this.dataset['00281404']?.Value;
  }

  get '00281404'(): Element {
    return this.dataset['00281404'];
  }

  // Blending LUT 1 Transfer Function
  get BlendingLUT1TransferFunction(): any {
    const element = this.dataset['00281405'];
    return (element?.Value.length === 1)
      ? this.dataset['00281405']?.Value[0]
      : this.dataset['00281405']?.Value;
  }

  get '00281405'(): Element {
    return this.dataset['00281405'];
  }

  // Blending Weight Constant
  get BlendingWeightConstant(): any {
    const element = this.dataset['00281406'];
    return (element?.Value.length === 1)
      ? this.dataset['00281406']?.Value[0]
      : this.dataset['00281406']?.Value;
  }

  get '00281406'(): Element {
    return this.dataset['00281406'];
  }

  // Blending Lookup Table Descriptor
  get BlendingLookupTableDescriptor(): any {
    const element = this.dataset['00281407'];
    return (element?.Value.length === 1)
      ? this.dataset['00281407']?.Value[0]
      : this.dataset['00281407']?.Value;
  }

  get '00281407'(): Element {
    return this.dataset['00281407'];
  }

  // Blending Lookup Table Data
  get BlendingLookupTableData(): any {
    const element = this.dataset['00281408'];
    return (element?.Value.length === 1)
      ? this.dataset['00281408']?.Value[0]
      : this.dataset['00281408']?.Value;
  }

  get '00281408'(): Element {
    return this.dataset['00281408'];
  }

  // Enhanced Palette Color Lookup Table Sequence
  get EnhancedPaletteColorLookupTableSequence(): any {
    const element = this.dataset['0028140B'];
    return (element?.Value.length === 1)
      ? this.dataset['0028140B']?.Value[0]
      : this.dataset['0028140B']?.Value;
  }

  get '0028140B'(): Element {
    return this.dataset['0028140B'];
  }

  // Blending LUT 2 Sequence
  get BlendingLUT2Sequence(): any {
    const element = this.dataset['0028140C'];
    return (element?.Value.length === 1)
      ? this.dataset['0028140C']?.Value[0]
      : this.dataset['0028140C']?.Value;
  }

  get '0028140C'(): Element {
    return this.dataset['0028140C'];
  }

  // Blending LUT 2 Transfer Function
  get BlendingLUT2TransferFunction(): any {
    const element = this.dataset['0028140D'];
    return (element?.Value.length === 1)
      ? this.dataset['0028140D']?.Value[0]
      : this.dataset['0028140D']?.Value;
  }

  get '0028140D'(): Element {
    return this.dataset['0028140D'];
  }

  // Data Path ID
  get DataPathID(): any {
    const element = this.dataset['0028140E'];
    return (element?.Value.length === 1)
      ? this.dataset['0028140E']?.Value[0]
      : this.dataset['0028140E']?.Value;
  }

  get '0028140E'(): Element {
    return this.dataset['0028140E'];
  }

  // RGB LUT Transfer Function
  get RGBLUTTransferFunction(): any {
    const element = this.dataset['0028140F'];
    return (element?.Value.length === 1)
      ? this.dataset['0028140F']?.Value[0]
      : this.dataset['0028140F']?.Value;
  }

  get '0028140F'(): Element {
    return this.dataset['0028140F'];
  }

  // Alpha LUT Transfer Function
  get AlphaLUTTransferFunction(): any {
    const element = this.dataset['00281410'];
    return (element?.Value.length === 1)
      ? this.dataset['00281410']?.Value[0]
      : this.dataset['00281410']?.Value;
  }

  get '00281410'(): Element {
    return this.dataset['00281410'];
  }

  // ICC Profile
  get ICCProfile(): any {
    const element = this.dataset['00282000'];
    return (element?.Value.length === 1)
      ? this.dataset['00282000']?.Value[0]
      : this.dataset['00282000']?.Value;
  }

  get '00282000'(): Element {
    return this.dataset['00282000'];
  }

  // Lossy Image Compression
  get LossyImageCompression(): any {
    const element = this.dataset['00282110'];
    return (element?.Value.length === 1)
      ? this.dataset['00282110']?.Value[0]
      : this.dataset['00282110']?.Value;
  }

  get '00282110'(): Element {
    return this.dataset['00282110'];
  }

  // Lossy Image Compression Ratio
  get LossyImageCompressionRatio(): any {
    const element = this.dataset['00282112'];
    return (element?.Value.length === 1)
      ? this.dataset['00282112']?.Value[0]
      : this.dataset['00282112']?.Value;
  }

  get '00282112'(): Element {
    return this.dataset['00282112'];
  }

  // Lossy Image Compression Method
  get LossyImageCompressionMethod(): any {
    const element = this.dataset['00282114'];
    return (element?.Value.length === 1)
      ? this.dataset['00282114']?.Value[0]
      : this.dataset['00282114']?.Value;
  }

  get '00282114'(): Element {
    return this.dataset['00282114'];
  }

  // Modality LUT Sequence
  get ModalityLUTSequence(): any {
    const element = this.dataset['00283000'];
    return (element?.Value.length === 1)
      ? this.dataset['00283000']?.Value[0]
      : this.dataset['00283000']?.Value;
  }

  get '00283000'(): Element {
    return this.dataset['00283000'];
  }

  // LUT Descriptor
  get LUTDescriptor(): any {
    const element = this.dataset['00283002'];
    return (element?.Value.length === 1)
      ? this.dataset['00283002']?.Value[0]
      : this.dataset['00283002']?.Value;
  }

  get '00283002'(): Element {
    return this.dataset['00283002'];
  }

  // LUT Explanation
  get LUTExplanation(): any {
    const element = this.dataset['00283003'];
    return (element?.Value.length === 1)
      ? this.dataset['00283003']?.Value[0]
      : this.dataset['00283003']?.Value;
  }

  get '00283003'(): Element {
    return this.dataset['00283003'];
  }

  // Modality LUT Type
  get ModalityLUTType(): any {
    const element = this.dataset['00283004'];
    return (element?.Value.length === 1)
      ? this.dataset['00283004']?.Value[0]
      : this.dataset['00283004']?.Value;
  }

  get '00283004'(): Element {
    return this.dataset['00283004'];
  }

  // LUT Data
  get LUTData(): any {
    const element = this.dataset['00283006'];
    return (element?.Value.length === 1)
      ? this.dataset['00283006']?.Value[0]
      : this.dataset['00283006']?.Value;
  }

  get '00283006'(): Element {
    return this.dataset['00283006'];
  }

  // VOI LUT Sequence
  get VOILUTSequence(): any {
    const element = this.dataset['00283010'];
    return (element?.Value.length === 1)
      ? this.dataset['00283010']?.Value[0]
      : this.dataset['00283010']?.Value;
  }

  get '00283010'(): Element {
    return this.dataset['00283010'];
  }

  // Softcopy VOI LUT Sequence
  get SoftcopyVOILUTSequence(): any {
    const element = this.dataset['00283110'];
    return (element?.Value.length === 1)
      ? this.dataset['00283110']?.Value[0]
      : this.dataset['00283110']?.Value;
  }

  get '00283110'(): Element {
    return this.dataset['00283110'];
  }

  // Image Presentation Comments
  get ImagePresentationComments(): any {
    const element = this.dataset['00284000'];
    return (element?.Value.length === 1)
      ? this.dataset['00284000']?.Value[0]
      : this.dataset['00284000']?.Value;
  }

  get '00284000'(): Element {
    return this.dataset['00284000'];
  }

  // Bi-Plane Acquisition Sequence
  get BiPlaneAcquisitionSequence(): any {
    const element = this.dataset['00285000'];
    return (element?.Value.length === 1)
      ? this.dataset['00285000']?.Value[0]
      : this.dataset['00285000']?.Value;
  }

  get '00285000'(): Element {
    return this.dataset['00285000'];
  }

  // Representative Frame Number
  get RepresentativeFrameNumber(): any {
    const element = this.dataset['00286010'];
    return (element?.Value.length === 1)
      ? this.dataset['00286010']?.Value[0]
      : this.dataset['00286010']?.Value;
  }

  get '00286010'(): Element {
    return this.dataset['00286010'];
  }

  // Frame Numbers of Interest (FOI)
  get FrameNumbersOfInterest(): any {
    const element = this.dataset['00286020'];
    return (element?.Value.length === 1)
      ? this.dataset['00286020']?.Value[0]
      : this.dataset['00286020']?.Value;
  }

  get '00286020'(): Element {
    return this.dataset['00286020'];
  }

  // Frame of Interest Description
  get FrameOfInterestDescription(): any {
    const element = this.dataset['00286022'];
    return (element?.Value.length === 1)
      ? this.dataset['00286022']?.Value[0]
      : this.dataset['00286022']?.Value;
  }

  get '00286022'(): Element {
    return this.dataset['00286022'];
  }

  // Frame of Interest Type
  get FrameOfInterestType(): any {
    const element = this.dataset['00286023'];
    return (element?.Value.length === 1)
      ? this.dataset['00286023']?.Value[0]
      : this.dataset['00286023']?.Value;
  }

  get '00286023'(): Element {
    return this.dataset['00286023'];
  }

  // Mask Pointer(s)
  get MaskPointers(): any {
    const element = this.dataset['00286030'];
    return (element?.Value.length === 1)
      ? this.dataset['00286030']?.Value[0]
      : this.dataset['00286030']?.Value;
  }

  get '00286030'(): Element {
    return this.dataset['00286030'];
  }

  // R Wave Pointer
  get RWavePointer(): any {
    const element = this.dataset['00286040'];
    return (element?.Value.length === 1)
      ? this.dataset['00286040']?.Value[0]
      : this.dataset['00286040']?.Value;
  }

  get '00286040'(): Element {
    return this.dataset['00286040'];
  }

  // Mask Subtraction Sequence
  get MaskSubtractionSequence(): any {
    const element = this.dataset['00286100'];
    return (element?.Value.length === 1)
      ? this.dataset['00286100']?.Value[0]
      : this.dataset['00286100']?.Value;
  }

  get '00286100'(): Element {
    return this.dataset['00286100'];
  }

  // Mask Operation
  get MaskOperation(): any {
    const element = this.dataset['00286101'];
    return (element?.Value.length === 1)
      ? this.dataset['00286101']?.Value[0]
      : this.dataset['00286101']?.Value;
  }

  get '00286101'(): Element {
    return this.dataset['00286101'];
  }

  // Applicable Frame Range
  get ApplicableFrameRange(): any {
    const element = this.dataset['00286102'];
    return (element?.Value.length === 1)
      ? this.dataset['00286102']?.Value[0]
      : this.dataset['00286102']?.Value;
  }

  get '00286102'(): Element {
    return this.dataset['00286102'];
  }

  // Mask Frame Numbers
  get MaskFrameNumbers(): any {
    const element = this.dataset['00286110'];
    return (element?.Value.length === 1)
      ? this.dataset['00286110']?.Value[0]
      : this.dataset['00286110']?.Value;
  }

  get '00286110'(): Element {
    return this.dataset['00286110'];
  }

  // Contrast Frame Averaging
  get ContrastFrameAveraging(): any {
    const element = this.dataset['00286112'];
    return (element?.Value.length === 1)
      ? this.dataset['00286112']?.Value[0]
      : this.dataset['00286112']?.Value;
  }

  get '00286112'(): Element {
    return this.dataset['00286112'];
  }

  // Mask Sub-pixel Shift
  get MaskSubPixelShift(): any {
    const element = this.dataset['00286114'];
    return (element?.Value.length === 1)
      ? this.dataset['00286114']?.Value[0]
      : this.dataset['00286114']?.Value;
  }

  get '00286114'(): Element {
    return this.dataset['00286114'];
  }

  // TID Offset
  get TIDOffset(): any {
    const element = this.dataset['00286120'];
    return (element?.Value.length === 1)
      ? this.dataset['00286120']?.Value[0]
      : this.dataset['00286120']?.Value;
  }

  get '00286120'(): Element {
    return this.dataset['00286120'];
  }

  // Mask Operation Explanation
  get MaskOperationExplanation(): any {
    const element = this.dataset['00286190'];
    return (element?.Value.length === 1)
      ? this.dataset['00286190']?.Value[0]
      : this.dataset['00286190']?.Value;
  }

  get '00286190'(): Element {
    return this.dataset['00286190'];
  }

  // Equipment Administrator Sequence
  get EquipmentAdministratorSequence(): any {
    const element = this.dataset['00287000'];
    return (element?.Value.length === 1)
      ? this.dataset['00287000']?.Value[0]
      : this.dataset['00287000']?.Value;
  }

  get '00287000'(): Element {
    return this.dataset['00287000'];
  }

  // Number of Display Subsystems
  get NumberOfDisplaySubsystems(): any {
    const element = this.dataset['00287001'];
    return (element?.Value.length === 1)
      ? this.dataset['00287001']?.Value[0]
      : this.dataset['00287001']?.Value;
  }

  get '00287001'(): Element {
    return this.dataset['00287001'];
  }

  // Current Configuration ID
  get CurrentConfigurationID(): any {
    const element = this.dataset['00287002'];
    return (element?.Value.length === 1)
      ? this.dataset['00287002']?.Value[0]
      : this.dataset['00287002']?.Value;
  }

  get '00287002'(): Element {
    return this.dataset['00287002'];
  }

  // Display Subsystem ID
  get DisplaySubsystemID(): any {
    const element = this.dataset['00287003'];
    return (element?.Value.length === 1)
      ? this.dataset['00287003']?.Value[0]
      : this.dataset['00287003']?.Value;
  }

  get '00287003'(): Element {
    return this.dataset['00287003'];
  }

  // Display Subsystem Name
  get DisplaySubsystemName(): any {
    const element = this.dataset['00287004'];
    return (element?.Value.length === 1)
      ? this.dataset['00287004']?.Value[0]
      : this.dataset['00287004']?.Value;
  }

  get '00287004'(): Element {
    return this.dataset['00287004'];
  }

  // Display Subsystem Description
  get DisplaySubsystemDescription(): any {
    const element = this.dataset['00287005'];
    return (element?.Value.length === 1)
      ? this.dataset['00287005']?.Value[0]
      : this.dataset['00287005']?.Value;
  }

  get '00287005'(): Element {
    return this.dataset['00287005'];
  }

  // System Status
  get SystemStatus(): any {
    const element = this.dataset['00287006'];
    return (element?.Value.length === 1)
      ? this.dataset['00287006']?.Value[0]
      : this.dataset['00287006']?.Value;
  }

  get '00287006'(): Element {
    return this.dataset['00287006'];
  }

  // System Status Comment
  get SystemStatusComment(): any {
    const element = this.dataset['00287007'];
    return (element?.Value.length === 1)
      ? this.dataset['00287007']?.Value[0]
      : this.dataset['00287007']?.Value;
  }

  get '00287007'(): Element {
    return this.dataset['00287007'];
  }

  // Target Luminance Characteristics Sequence
  get TargetLuminanceCharacteristicsSequence(): any {
    const element = this.dataset['00287008'];
    return (element?.Value.length === 1)
      ? this.dataset['00287008']?.Value[0]
      : this.dataset['00287008']?.Value;
  }

  get '00287008'(): Element {
    return this.dataset['00287008'];
  }

  // Luminance Characteristics ID
  get LuminanceCharacteristicsID(): any {
    const element = this.dataset['00287009'];
    return (element?.Value.length === 1)
      ? this.dataset['00287009']?.Value[0]
      : this.dataset['00287009']?.Value;
  }

  get '00287009'(): Element {
    return this.dataset['00287009'];
  }

  // Display Subsystem Configuration Sequence
  get DisplaySubsystemConfigurationSequence(): any {
    const element = this.dataset['0028700A'];
    return (element?.Value.length === 1)
      ? this.dataset['0028700A']?.Value[0]
      : this.dataset['0028700A']?.Value;
  }

  get '0028700A'(): Element {
    return this.dataset['0028700A'];
  }

  // Configuration ID
  get ConfigurationID(): any {
    const element = this.dataset['0028700B'];
    return (element?.Value.length === 1)
      ? this.dataset['0028700B']?.Value[0]
      : this.dataset['0028700B']?.Value;
  }

  get '0028700B'(): Element {
    return this.dataset['0028700B'];
  }

  // Configuration Name
  get ConfigurationName(): any {
    const element = this.dataset['0028700C'];
    return (element?.Value.length === 1)
      ? this.dataset['0028700C']?.Value[0]
      : this.dataset['0028700C']?.Value;
  }

  get '0028700C'(): Element {
    return this.dataset['0028700C'];
  }

  // Configuration Description
  get ConfigurationDescription(): any {
    const element = this.dataset['0028700D'];
    return (element?.Value.length === 1)
      ? this.dataset['0028700D']?.Value[0]
      : this.dataset['0028700D']?.Value;
  }

  get '0028700D'(): Element {
    return this.dataset['0028700D'];
  }

  // Referenced Target Luminance Characteristics ID
  get ReferencedTargetLuminanceCharacteristicsID(): any {
    const element = this.dataset['0028700E'];
    return (element?.Value.length === 1)
      ? this.dataset['0028700E']?.Value[0]
      : this.dataset['0028700E']?.Value;
  }

  get '0028700E'(): Element {
    return this.dataset['0028700E'];
  }

  // QA Results Sequence
  get QAResultsSequence(): any {
    const element = this.dataset['0028700F'];
    return (element?.Value.length === 1)
      ? this.dataset['0028700F']?.Value[0]
      : this.dataset['0028700F']?.Value;
  }

  get '0028700F'(): Element {
    return this.dataset['0028700F'];
  }

  // Display Subsystem QA Results Sequence
  get DisplaySubsystemQAResultsSequence(): any {
    const element = this.dataset['00287010'];
    return (element?.Value.length === 1)
      ? this.dataset['00287010']?.Value[0]
      : this.dataset['00287010']?.Value;
  }

  get '00287010'(): Element {
    return this.dataset['00287010'];
  }

  // Configuration QA Results Sequence
  get ConfigurationQAResultsSequence(): any {
    const element = this.dataset['00287011'];
    return (element?.Value.length === 1)
      ? this.dataset['00287011']?.Value[0]
      : this.dataset['00287011']?.Value;
  }

  get '00287011'(): Element {
    return this.dataset['00287011'];
  }

  // Measurement Equipment Sequence
  get MeasurementEquipmentSequence(): any {
    const element = this.dataset['00287012'];
    return (element?.Value.length === 1)
      ? this.dataset['00287012']?.Value[0]
      : this.dataset['00287012']?.Value;
  }

  get '00287012'(): Element {
    return this.dataset['00287012'];
  }

  // Measurement Functions
  get MeasurementFunctions(): any {
    const element = this.dataset['00287013'];
    return (element?.Value.length === 1)
      ? this.dataset['00287013']?.Value[0]
      : this.dataset['00287013']?.Value;
  }

  get '00287013'(): Element {
    return this.dataset['00287013'];
  }

  // Measurement Equipment Type
  get MeasurementEquipmentType(): any {
    const element = this.dataset['00287014'];
    return (element?.Value.length === 1)
      ? this.dataset['00287014']?.Value[0]
      : this.dataset['00287014']?.Value;
  }

  get '00287014'(): Element {
    return this.dataset['00287014'];
  }

  // Visual Evaluation Result Sequence
  get VisualEvaluationResultSequence(): any {
    const element = this.dataset['00287015'];
    return (element?.Value.length === 1)
      ? this.dataset['00287015']?.Value[0]
      : this.dataset['00287015']?.Value;
  }

  get '00287015'(): Element {
    return this.dataset['00287015'];
  }

  // Display Calibration Result Sequence
  get DisplayCalibrationResultSequence(): any {
    const element = this.dataset['00287016'];
    return (element?.Value.length === 1)
      ? this.dataset['00287016']?.Value[0]
      : this.dataset['00287016']?.Value;
  }

  get '00287016'(): Element {
    return this.dataset['00287016'];
  }

  // DDL Value
  get DDLValue(): any {
    const element = this.dataset['00287017'];
    return (element?.Value.length === 1)
      ? this.dataset['00287017']?.Value[0]
      : this.dataset['00287017']?.Value;
  }

  get '00287017'(): Element {
    return this.dataset['00287017'];
  }

  // CIExy White Point
  get CIExyWhitePoint(): any {
    const element = this.dataset['00287018'];
    return (element?.Value.length === 1)
      ? this.dataset['00287018']?.Value[0]
      : this.dataset['00287018']?.Value;
  }

  get '00287018'(): Element {
    return this.dataset['00287018'];
  }

  // Display Function Type
  get DisplayFunctionType(): any {
    const element = this.dataset['00287019'];
    return (element?.Value.length === 1)
      ? this.dataset['00287019']?.Value[0]
      : this.dataset['00287019']?.Value;
  }

  get '00287019'(): Element {
    return this.dataset['00287019'];
  }

  // Gamma Value
  get GammaValue(): any {
    const element = this.dataset['0028701A'];
    return (element?.Value.length === 1)
      ? this.dataset['0028701A']?.Value[0]
      : this.dataset['0028701A']?.Value;
  }

  get '0028701A'(): Element {
    return this.dataset['0028701A'];
  }

  // Number of Luminance Points
  get NumberOfLuminancePoints(): any {
    const element = this.dataset['0028701B'];
    return (element?.Value.length === 1)
      ? this.dataset['0028701B']?.Value[0]
      : this.dataset['0028701B']?.Value;
  }

  get '0028701B'(): Element {
    return this.dataset['0028701B'];
  }

  // Luminance Response Sequence
  get LuminanceResponseSequence(): any {
    const element = this.dataset['0028701C'];
    return (element?.Value.length === 1)
      ? this.dataset['0028701C']?.Value[0]
      : this.dataset['0028701C']?.Value;
  }

  get '0028701C'(): Element {
    return this.dataset['0028701C'];
  }

  // Target Minimum Luminance
  get TargetMinimumLuminance(): any {
    const element = this.dataset['0028701D'];
    return (element?.Value.length === 1)
      ? this.dataset['0028701D']?.Value[0]
      : this.dataset['0028701D']?.Value;
  }

  get '0028701D'(): Element {
    return this.dataset['0028701D'];
  }

  // Target Maximum Luminance
  get TargetMaximumLuminance(): any {
    const element = this.dataset['0028701E'];
    return (element?.Value.length === 1)
      ? this.dataset['0028701E']?.Value[0]
      : this.dataset['0028701E']?.Value;
  }

  get '0028701E'(): Element {
    return this.dataset['0028701E'];
  }

  // Luminance Value
  get LuminanceValue(): any {
    const element = this.dataset['0028701F'];
    return (element?.Value.length === 1)
      ? this.dataset['0028701F']?.Value[0]
      : this.dataset['0028701F']?.Value;
  }

  get '0028701F'(): Element {
    return this.dataset['0028701F'];
  }

  // Luminance Response Description
  get LuminanceResponseDescription(): any {
    const element = this.dataset['00287020'];
    return (element?.Value.length === 1)
      ? this.dataset['00287020']?.Value[0]
      : this.dataset['00287020']?.Value;
  }

  get '00287020'(): Element {
    return this.dataset['00287020'];
  }

  // White Point Flag
  get WhitePointFlag(): any {
    const element = this.dataset['00287021'];
    return (element?.Value.length === 1)
      ? this.dataset['00287021']?.Value[0]
      : this.dataset['00287021']?.Value;
  }

  get '00287021'(): Element {
    return this.dataset['00287021'];
  }

  // Display Device Type Code Sequence
  get DisplayDeviceTypeCodeSequence(): any {
    const element = this.dataset['00287022'];
    return (element?.Value.length === 1)
      ? this.dataset['00287022']?.Value[0]
      : this.dataset['00287022']?.Value;
  }

  get '00287022'(): Element {
    return this.dataset['00287022'];
  }

  // Display Subsystem Sequence
  get DisplaySubsystemSequence(): any {
    const element = this.dataset['00287023'];
    return (element?.Value.length === 1)
      ? this.dataset['00287023']?.Value[0]
      : this.dataset['00287023']?.Value;
  }

  get '00287023'(): Element {
    return this.dataset['00287023'];
  }

  // Luminance Result Sequence
  get LuminanceResultSequence(): any {
    const element = this.dataset['00287024'];
    return (element?.Value.length === 1)
      ? this.dataset['00287024']?.Value[0]
      : this.dataset['00287024']?.Value;
  }

  get '00287024'(): Element {
    return this.dataset['00287024'];
  }

  // Ambient Light Value Source
  get AmbientLightValueSource(): any {
    const element = this.dataset['00287025'];
    return (element?.Value.length === 1)
      ? this.dataset['00287025']?.Value[0]
      : this.dataset['00287025']?.Value;
  }

  get '00287025'(): Element {
    return this.dataset['00287025'];
  }

  // Measured Characteristics
  get MeasuredCharacteristics(): any {
    const element = this.dataset['00287026'];
    return (element?.Value.length === 1)
      ? this.dataset['00287026']?.Value[0]
      : this.dataset['00287026']?.Value;
  }

  get '00287026'(): Element {
    return this.dataset['00287026'];
  }

  // Luminance Uniformity Result Sequence
  get LuminanceUniformityResultSequence(): any {
    const element = this.dataset['00287027'];
    return (element?.Value.length === 1)
      ? this.dataset['00287027']?.Value[0]
      : this.dataset['00287027']?.Value;
  }

  get '00287027'(): Element {
    return this.dataset['00287027'];
  }

  // Visual Evaluation Test Sequence
  get VisualEvaluationTestSequence(): any {
    const element = this.dataset['00287028'];
    return (element?.Value.length === 1)
      ? this.dataset['00287028']?.Value[0]
      : this.dataset['00287028']?.Value;
  }

  get '00287028'(): Element {
    return this.dataset['00287028'];
  }

  // Test Result
  get TestResult(): any {
    const element = this.dataset['00287029'];
    return (element?.Value.length === 1)
      ? this.dataset['00287029']?.Value[0]
      : this.dataset['00287029']?.Value;
  }

  get '00287029'(): Element {
    return this.dataset['00287029'];
  }

  // Test Result Comment
  get TestResultComment(): any {
    const element = this.dataset['0028702A'];
    return (element?.Value.length === 1)
      ? this.dataset['0028702A']?.Value[0]
      : this.dataset['0028702A']?.Value;
  }

  get '0028702A'(): Element {
    return this.dataset['0028702A'];
  }

  // Test Image Validation
  get TestImageValidation(): any {
    const element = this.dataset['0028702B'];
    return (element?.Value.length === 1)
      ? this.dataset['0028702B']?.Value[0]
      : this.dataset['0028702B']?.Value;
  }

  get '0028702B'(): Element {
    return this.dataset['0028702B'];
  }

  // Test Pattern Code Sequence
  get TestPatternCodeSequence(): any {
    const element = this.dataset['0028702C'];
    return (element?.Value.length === 1)
      ? this.dataset['0028702C']?.Value[0]
      : this.dataset['0028702C']?.Value;
  }

  get '0028702C'(): Element {
    return this.dataset['0028702C'];
  }

  // Measurement Pattern Code Sequence
  get MeasurementPatternCodeSequence(): any {
    const element = this.dataset['0028702D'];
    return (element?.Value.length === 1)
      ? this.dataset['0028702D']?.Value[0]
      : this.dataset['0028702D']?.Value;
  }

  get '0028702D'(): Element {
    return this.dataset['0028702D'];
  }

  // Visual Evaluation Method Code Sequence
  get VisualEvaluationMethodCodeSequence(): any {
    const element = this.dataset['0028702E'];
    return (element?.Value.length === 1)
      ? this.dataset['0028702E']?.Value[0]
      : this.dataset['0028702E']?.Value;
  }

  get '0028702E'(): Element {
    return this.dataset['0028702E'];
  }

  // Pixel Data Provider URL
  get PixelDataProviderURL(): any {
    const element = this.dataset['00287FE0'];
    return (element?.Value.length === 1)
      ? this.dataset['00287FE0']?.Value[0]
      : this.dataset['00287FE0']?.Value;
  }

  get '00287FE0'(): Element {
    return this.dataset['00287FE0'];
  }

  // Data Point Rows
  get DataPointRows(): any {
    const element = this.dataset['00289001'];
    return (element?.Value.length === 1)
      ? this.dataset['00289001']?.Value[0]
      : this.dataset['00289001']?.Value;
  }

  get '00289001'(): Element {
    return this.dataset['00289001'];
  }

  // Data Point Columns
  get DataPointColumns(): any {
    const element = this.dataset['00289002'];
    return (element?.Value.length === 1)
      ? this.dataset['00289002']?.Value[0]
      : this.dataset['00289002']?.Value;
  }

  get '00289002'(): Element {
    return this.dataset['00289002'];
  }

  // Signal Domain Columns
  get SignalDomainColumns(): any {
    const element = this.dataset['00289003'];
    return (element?.Value.length === 1)
      ? this.dataset['00289003']?.Value[0]
      : this.dataset['00289003']?.Value;
  }

  get '00289003'(): Element {
    return this.dataset['00289003'];
  }

  // Largest Monochrome Pixel Value
  get LargestMonochromePixelValue(): any {
    const element = this.dataset['00289099'];
    return (element?.Value.length === 1)
      ? this.dataset['00289099']?.Value[0]
      : this.dataset['00289099']?.Value;
  }

  get '00289099'(): Element {
    return this.dataset['00289099'];
  }

  // Data Representation
  get DataRepresentation(): any {
    const element = this.dataset['00289108'];
    return (element?.Value.length === 1)
      ? this.dataset['00289108']?.Value[0]
      : this.dataset['00289108']?.Value;
  }

  get '00289108'(): Element {
    return this.dataset['00289108'];
  }

  // Pixel Measures Sequence
  get PixelMeasuresSequence(): any {
    const element = this.dataset['00289110'];
    return (element?.Value.length === 1)
      ? this.dataset['00289110']?.Value[0]
      : this.dataset['00289110']?.Value;
  }

  get '00289110'(): Element {
    return this.dataset['00289110'];
  }

  // Frame VOI LUT Sequence
  get FrameVOILUTSequence(): any {
    const element = this.dataset['00289132'];
    return (element?.Value.length === 1)
      ? this.dataset['00289132']?.Value[0]
      : this.dataset['00289132']?.Value;
  }

  get '00289132'(): Element {
    return this.dataset['00289132'];
  }

  // Pixel Value Transformation Sequence
  get PixelValueTransformationSequence(): any {
    const element = this.dataset['00289145'];
    return (element?.Value.length === 1)
      ? this.dataset['00289145']?.Value[0]
      : this.dataset['00289145']?.Value;
  }

  get '00289145'(): Element {
    return this.dataset['00289145'];
  }

  // Signal Domain Rows
  get SignalDomainRows(): any {
    const element = this.dataset['00289235'];
    return (element?.Value.length === 1)
      ? this.dataset['00289235']?.Value[0]
      : this.dataset['00289235']?.Value;
  }

  get '00289235'(): Element {
    return this.dataset['00289235'];
  }

  // Display Filter Percentage
  get DisplayFilterPercentage(): any {
    const element = this.dataset['00289411'];
    return (element?.Value.length === 1)
      ? this.dataset['00289411']?.Value[0]
      : this.dataset['00289411']?.Value;
  }

  get '00289411'(): Element {
    return this.dataset['00289411'];
  }

  // Frame Pixel Shift Sequence
  get FramePixelShiftSequence(): any {
    const element = this.dataset['00289415'];
    return (element?.Value.length === 1)
      ? this.dataset['00289415']?.Value[0]
      : this.dataset['00289415']?.Value;
  }

  get '00289415'(): Element {
    return this.dataset['00289415'];
  }

  // Subtraction Item ID
  get SubtractionItemID(): any {
    const element = this.dataset['00289416'];
    return (element?.Value.length === 1)
      ? this.dataset['00289416']?.Value[0]
      : this.dataset['00289416']?.Value;
  }

  get '00289416'(): Element {
    return this.dataset['00289416'];
  }

  // Pixel Intensity Relationship LUT Sequence
  get PixelIntensityRelationshipLUTSequence(): any {
    const element = this.dataset['00289422'];
    return (element?.Value.length === 1)
      ? this.dataset['00289422']?.Value[0]
      : this.dataset['00289422']?.Value;
  }

  get '00289422'(): Element {
    return this.dataset['00289422'];
  }

  // Frame Pixel Data Properties Sequence
  get FramePixelDataPropertiesSequence(): any {
    const element = this.dataset['00289443'];
    return (element?.Value.length === 1)
      ? this.dataset['00289443']?.Value[0]
      : this.dataset['00289443']?.Value;
  }

  get '00289443'(): Element {
    return this.dataset['00289443'];
  }

  // Geometrical Properties
  get GeometricalProperties(): any {
    const element = this.dataset['00289444'];
    return (element?.Value.length === 1)
      ? this.dataset['00289444']?.Value[0]
      : this.dataset['00289444']?.Value;
  }

  get '00289444'(): Element {
    return this.dataset['00289444'];
  }

  // Geometric Maximum Distortion
  get GeometricMaximumDistortion(): any {
    const element = this.dataset['00289445'];
    return (element?.Value.length === 1)
      ? this.dataset['00289445']?.Value[0]
      : this.dataset['00289445']?.Value;
  }

  get '00289445'(): Element {
    return this.dataset['00289445'];
  }

  // Image Processing Applied
  get ImageProcessingApplied(): any {
    const element = this.dataset['00289446'];
    return (element?.Value.length === 1)
      ? this.dataset['00289446']?.Value[0]
      : this.dataset['00289446']?.Value;
  }

  get '00289446'(): Element {
    return this.dataset['00289446'];
  }

  // Mask Selection Mode
  get MaskSelectionMode(): any {
    const element = this.dataset['00289454'];
    return (element?.Value.length === 1)
      ? this.dataset['00289454']?.Value[0]
      : this.dataset['00289454']?.Value;
  }

  get '00289454'(): Element {
    return this.dataset['00289454'];
  }

  // LUT Function
  get LUTFunction(): any {
    const element = this.dataset['00289474'];
    return (element?.Value.length === 1)
      ? this.dataset['00289474']?.Value[0]
      : this.dataset['00289474']?.Value;
  }

  get '00289474'(): Element {
    return this.dataset['00289474'];
  }

  // Mask Visibility Percentage
  get MaskVisibilityPercentage(): any {
    const element = this.dataset['00289478'];
    return (element?.Value.length === 1)
      ? this.dataset['00289478']?.Value[0]
      : this.dataset['00289478']?.Value;
  }

  get '00289478'(): Element {
    return this.dataset['00289478'];
  }

  // Pixel Shift Sequence
  get PixelShiftSequence(): any {
    const element = this.dataset['00289501'];
    return (element?.Value.length === 1)
      ? this.dataset['00289501']?.Value[0]
      : this.dataset['00289501']?.Value;
  }

  get '00289501'(): Element {
    return this.dataset['00289501'];
  }

  // Region Pixel Shift Sequence
  get RegionPixelShiftSequence(): any {
    const element = this.dataset['00289502'];
    return (element?.Value.length === 1)
      ? this.dataset['00289502']?.Value[0]
      : this.dataset['00289502']?.Value;
  }

  get '00289502'(): Element {
    return this.dataset['00289502'];
  }

  // Vertices of the Region
  get VerticesOfTheRegion(): any {
    const element = this.dataset['00289503'];
    return (element?.Value.length === 1)
      ? this.dataset['00289503']?.Value[0]
      : this.dataset['00289503']?.Value;
  }

  get '00289503'(): Element {
    return this.dataset['00289503'];
  }

  // Multi-frame Presentation Sequence
  get MultiFramePresentationSequence(): any {
    const element = this.dataset['00289505'];
    return (element?.Value.length === 1)
      ? this.dataset['00289505']?.Value[0]
      : this.dataset['00289505']?.Value;
  }

  get '00289505'(): Element {
    return this.dataset['00289505'];
  }

  // Pixel Shift Frame Range
  get PixelShiftFrameRange(): any {
    const element = this.dataset['00289506'];
    return (element?.Value.length === 1)
      ? this.dataset['00289506']?.Value[0]
      : this.dataset['00289506']?.Value;
  }

  get '00289506'(): Element {
    return this.dataset['00289506'];
  }

  // LUT Frame Range
  get LUTFrameRange(): any {
    const element = this.dataset['00289507'];
    return (element?.Value.length === 1)
      ? this.dataset['00289507']?.Value[0]
      : this.dataset['00289507']?.Value;
  }

  get '00289507'(): Element {
    return this.dataset['00289507'];
  }

  // Image to Equipment Mapping Matrix
  get ImageToEquipmentMappingMatrix(): any {
    const element = this.dataset['00289520'];
    return (element?.Value.length === 1)
      ? this.dataset['00289520']?.Value[0]
      : this.dataset['00289520']?.Value;
  }

  get '00289520'(): Element {
    return this.dataset['00289520'];
  }

  // Equipment Coordinate System Identification
  get EquipmentCoordinateSystemIdentification(): any {
    const element = this.dataset['00289537'];
    return (element?.Value.length === 1)
      ? this.dataset['00289537']?.Value[0]
      : this.dataset['00289537']?.Value;
  }

  get '00289537'(): Element {
    return this.dataset['00289537'];
  }

  // Study Status ID
  get StudyStatusID(): any {
    const element = this.dataset['0032000A'];
    return (element?.Value.length === 1)
      ? this.dataset['0032000A']?.Value[0]
      : this.dataset['0032000A']?.Value;
  }

  get '0032000A'(): Element {
    return this.dataset['0032000A'];
  }

  // Study Priority ID
  get StudyPriorityID(): any {
    const element = this.dataset['0032000C'];
    return (element?.Value.length === 1)
      ? this.dataset['0032000C']?.Value[0]
      : this.dataset['0032000C']?.Value;
  }

  get '0032000C'(): Element {
    return this.dataset['0032000C'];
  }

  // Study ID Issuer
  get StudyIDIssuer(): any {
    const element = this.dataset['00320012'];
    return (element?.Value.length === 1)
      ? this.dataset['00320012']?.Value[0]
      : this.dataset['00320012']?.Value;
  }

  get '00320012'(): Element {
    return this.dataset['00320012'];
  }

  // Study Verified Date
  get StudyVerifiedDate(): any {
    const element = this.dataset['00320032'];
    return (element?.Value.length === 1)
      ? this.dataset['00320032']?.Value[0]
      : this.dataset['00320032']?.Value;
  }

  get '00320032'(): Element {
    return this.dataset['00320032'];
  }

  // Study Verified Time
  get StudyVerifiedTime(): any {
    const element = this.dataset['00320033'];
    return (element?.Value.length === 1)
      ? this.dataset['00320033']?.Value[0]
      : this.dataset['00320033']?.Value;
  }

  get '00320033'(): Element {
    return this.dataset['00320033'];
  }

  // Study Read Date
  get StudyReadDate(): any {
    const element = this.dataset['00320034'];
    return (element?.Value.length === 1)
      ? this.dataset['00320034']?.Value[0]
      : this.dataset['00320034']?.Value;
  }

  get '00320034'(): Element {
    return this.dataset['00320034'];
  }

  // Study Read Time
  get StudyReadTime(): any {
    const element = this.dataset['00320035'];
    return (element?.Value.length === 1)
      ? this.dataset['00320035']?.Value[0]
      : this.dataset['00320035']?.Value;
  }

  get '00320035'(): Element {
    return this.dataset['00320035'];
  }

  // Scheduled Study Start Date
  get ScheduledStudyStartDate(): any {
    const element = this.dataset['00321000'];
    return (element?.Value.length === 1)
      ? this.dataset['00321000']?.Value[0]
      : this.dataset['00321000']?.Value;
  }

  get '00321000'(): Element {
    return this.dataset['00321000'];
  }

  // Scheduled Study Start Time
  get ScheduledStudyStartTime(): any {
    const element = this.dataset['00321001'];
    return (element?.Value.length === 1)
      ? this.dataset['00321001']?.Value[0]
      : this.dataset['00321001']?.Value;
  }

  get '00321001'(): Element {
    return this.dataset['00321001'];
  }

  // Scheduled Study Stop Date
  get ScheduledStudyStopDate(): any {
    const element = this.dataset['00321010'];
    return (element?.Value.length === 1)
      ? this.dataset['00321010']?.Value[0]
      : this.dataset['00321010']?.Value;
  }

  get '00321010'(): Element {
    return this.dataset['00321010'];
  }

  // Scheduled Study Stop Time
  get ScheduledStudyStopTime(): any {
    const element = this.dataset['00321011'];
    return (element?.Value.length === 1)
      ? this.dataset['00321011']?.Value[0]
      : this.dataset['00321011']?.Value;
  }

  get '00321011'(): Element {
    return this.dataset['00321011'];
  }

  // Scheduled Study Location
  get ScheduledStudyLocation(): any {
    const element = this.dataset['00321020'];
    return (element?.Value.length === 1)
      ? this.dataset['00321020']?.Value[0]
      : this.dataset['00321020']?.Value;
  }

  get '00321020'(): Element {
    return this.dataset['00321020'];
  }

  // Scheduled Study Location AE Title
  get ScheduledStudyLocationAETitle(): any {
    const element = this.dataset['00321021'];
    return (element?.Value.length === 1)
      ? this.dataset['00321021']?.Value[0]
      : this.dataset['00321021']?.Value;
  }

  get '00321021'(): Element {
    return this.dataset['00321021'];
  }

  // Reason for Study
  get ReasonForStudy(): any {
    const element = this.dataset['00321030'];
    return (element?.Value.length === 1)
      ? this.dataset['00321030']?.Value[0]
      : this.dataset['00321030']?.Value;
  }

  get '00321030'(): Element {
    return this.dataset['00321030'];
  }

  // Requesting Physician Identification Sequence
  get RequestingPhysicianIdentificationSequence(): any {
    const element = this.dataset['00321031'];
    return (element?.Value.length === 1)
      ? this.dataset['00321031']?.Value[0]
      : this.dataset['00321031']?.Value;
  }

  get '00321031'(): Element {
    return this.dataset['00321031'];
  }

  // Requesting Physician
  get RequestingPhysician(): any {
    const element = this.dataset['00321032'];
    return (element?.Value.length === 1)
      ? this.dataset['00321032']?.Value[0]
      : this.dataset['00321032']?.Value;
  }

  get '00321032'(): Element {
    return this.dataset['00321032'];
  }

  // Requesting Service
  get RequestingService(): any {
    const element = this.dataset['00321033'];
    return (element?.Value.length === 1)
      ? this.dataset['00321033']?.Value[0]
      : this.dataset['00321033']?.Value;
  }

  get '00321033'(): Element {
    return this.dataset['00321033'];
  }

  // Requesting Service Code Sequence
  get RequestingServiceCodeSequence(): any {
    const element = this.dataset['00321034'];
    return (element?.Value.length === 1)
      ? this.dataset['00321034']?.Value[0]
      : this.dataset['00321034']?.Value;
  }

  get '00321034'(): Element {
    return this.dataset['00321034'];
  }

  // Study Arrival Date
  get StudyArrivalDate(): any {
    const element = this.dataset['00321040'];
    return (element?.Value.length === 1)
      ? this.dataset['00321040']?.Value[0]
      : this.dataset['00321040']?.Value;
  }

  get '00321040'(): Element {
    return this.dataset['00321040'];
  }

  // Study Arrival Time
  get StudyArrivalTime(): any {
    const element = this.dataset['00321041'];
    return (element?.Value.length === 1)
      ? this.dataset['00321041']?.Value[0]
      : this.dataset['00321041']?.Value;
  }

  get '00321041'(): Element {
    return this.dataset['00321041'];
  }

  // Study Completion Date
  get StudyCompletionDate(): any {
    const element = this.dataset['00321050'];
    return (element?.Value.length === 1)
      ? this.dataset['00321050']?.Value[0]
      : this.dataset['00321050']?.Value;
  }

  get '00321050'(): Element {
    return this.dataset['00321050'];
  }

  // Study Completion Time
  get StudyCompletionTime(): any {
    const element = this.dataset['00321051'];
    return (element?.Value.length === 1)
      ? this.dataset['00321051']?.Value[0]
      : this.dataset['00321051']?.Value;
  }

  get '00321051'(): Element {
    return this.dataset['00321051'];
  }

  // Study Component Status ID
  get StudyComponentStatusID(): any {
    const element = this.dataset['00321055'];
    return (element?.Value.length === 1)
      ? this.dataset['00321055']?.Value[0]
      : this.dataset['00321055']?.Value;
  }

  get '00321055'(): Element {
    return this.dataset['00321055'];
  }

  // Requested Procedure Description
  get RequestedProcedureDescription(): any {
    const element = this.dataset['00321060'];
    return (element?.Value.length === 1)
      ? this.dataset['00321060']?.Value[0]
      : this.dataset['00321060']?.Value;
  }

  get '00321060'(): Element {
    return this.dataset['00321060'];
  }

  // Requested Procedure Code Sequence
  get RequestedProcedureCodeSequence(): any {
    const element = this.dataset['00321064'];
    return (element?.Value.length === 1)
      ? this.dataset['00321064']?.Value[0]
      : this.dataset['00321064']?.Value;
  }

  get '00321064'(): Element {
    return this.dataset['00321064'];
  }

  // Requested Contrast Agent
  get RequestedContrastAgent(): any {
    const element = this.dataset['00321070'];
    return (element?.Value.length === 1)
      ? this.dataset['00321070']?.Value[0]
      : this.dataset['00321070']?.Value;
  }

  get '00321070'(): Element {
    return this.dataset['00321070'];
  }

  // Study Comments
  get StudyComments(): any {
    const element = this.dataset['00324000'];
    return (element?.Value.length === 1)
      ? this.dataset['00324000']?.Value[0]
      : this.dataset['00324000']?.Value;
  }

  get '00324000'(): Element {
    return this.dataset['00324000'];
  }

  // Referenced Patient Alias Sequence
  get ReferencedPatientAliasSequence(): any {
    const element = this.dataset['00380004'];
    return (element?.Value.length === 1)
      ? this.dataset['00380004']?.Value[0]
      : this.dataset['00380004']?.Value;
  }

  get '00380004'(): Element {
    return this.dataset['00380004'];
  }

  // Visit Status ID
  get VisitStatusID(): any {
    const element = this.dataset['00380008'];
    return (element?.Value.length === 1)
      ? this.dataset['00380008']?.Value[0]
      : this.dataset['00380008']?.Value;
  }

  get '00380008'(): Element {
    return this.dataset['00380008'];
  }

  // Admission ID
  get AdmissionID(): any {
    const element = this.dataset['00380010'];
    return (element?.Value.length === 1)
      ? this.dataset['00380010']?.Value[0]
      : this.dataset['00380010']?.Value;
  }

  get '00380010'(): Element {
    return this.dataset['00380010'];
  }

  // Issuer of Admission ID
  get IssuerOfAdmissionID(): any {
    const element = this.dataset['00380011'];
    return (element?.Value.length === 1)
      ? this.dataset['00380011']?.Value[0]
      : this.dataset['00380011']?.Value;
  }

  get '00380011'(): Element {
    return this.dataset['00380011'];
  }

  // Issuer of Admission ID Sequence
  get IssuerOfAdmissionIDSequence(): any {
    const element = this.dataset['00380014'];
    return (element?.Value.length === 1)
      ? this.dataset['00380014']?.Value[0]
      : this.dataset['00380014']?.Value;
  }

  get '00380014'(): Element {
    return this.dataset['00380014'];
  }

  // Route of Admissions
  get RouteOfAdmissions(): any {
    const element = this.dataset['00380016'];
    return (element?.Value.length === 1)
      ? this.dataset['00380016']?.Value[0]
      : this.dataset['00380016']?.Value;
  }

  get '00380016'(): Element {
    return this.dataset['00380016'];
  }

  // Scheduled Admission Date
  get ScheduledAdmissionDate(): any {
    const element = this.dataset['0038001A'];
    return (element?.Value.length === 1)
      ? this.dataset['0038001A']?.Value[0]
      : this.dataset['0038001A']?.Value;
  }

  get '0038001A'(): Element {
    return this.dataset['0038001A'];
  }

  // Scheduled Admission Time
  get ScheduledAdmissionTime(): any {
    const element = this.dataset['0038001B'];
    return (element?.Value.length === 1)
      ? this.dataset['0038001B']?.Value[0]
      : this.dataset['0038001B']?.Value;
  }

  get '0038001B'(): Element {
    return this.dataset['0038001B'];
  }

  // Scheduled Discharge Date
  get ScheduledDischargeDate(): any {
    const element = this.dataset['0038001C'];
    return (element?.Value.length === 1)
      ? this.dataset['0038001C']?.Value[0]
      : this.dataset['0038001C']?.Value;
  }

  get '0038001C'(): Element {
    return this.dataset['0038001C'];
  }

  // Scheduled Discharge Time
  get ScheduledDischargeTime(): any {
    const element = this.dataset['0038001D'];
    return (element?.Value.length === 1)
      ? this.dataset['0038001D']?.Value[0]
      : this.dataset['0038001D']?.Value;
  }

  get '0038001D'(): Element {
    return this.dataset['0038001D'];
  }

  // Scheduled Patient Institution Residence
  get ScheduledPatientInstitutionResidence(): any {
    const element = this.dataset['0038001E'];
    return (element?.Value.length === 1)
      ? this.dataset['0038001E']?.Value[0]
      : this.dataset['0038001E']?.Value;
  }

  get '0038001E'(): Element {
    return this.dataset['0038001E'];
  }

  // Admitting Date
  get AdmittingDate(): any {
    const element = this.dataset['00380020'];
    return (element?.Value.length === 1)
      ? this.dataset['00380020']?.Value[0]
      : this.dataset['00380020']?.Value;
  }

  get '00380020'(): Element {
    return this.dataset['00380020'];
  }

  // Admitting Time
  get AdmittingTime(): any {
    const element = this.dataset['00380021'];
    return (element?.Value.length === 1)
      ? this.dataset['00380021']?.Value[0]
      : this.dataset['00380021']?.Value;
  }

  get '00380021'(): Element {
    return this.dataset['00380021'];
  }

  // Discharge Date
  get DischargeDate(): any {
    const element = this.dataset['00380030'];
    return (element?.Value.length === 1)
      ? this.dataset['00380030']?.Value[0]
      : this.dataset['00380030']?.Value;
  }

  get '00380030'(): Element {
    return this.dataset['00380030'];
  }

  // Discharge Time
  get DischargeTime(): any {
    const element = this.dataset['00380032'];
    return (element?.Value.length === 1)
      ? this.dataset['00380032']?.Value[0]
      : this.dataset['00380032']?.Value;
  }

  get '00380032'(): Element {
    return this.dataset['00380032'];
  }

  // Discharge Diagnosis Description
  get DischargeDiagnosisDescription(): any {
    const element = this.dataset['00380040'];
    return (element?.Value.length === 1)
      ? this.dataset['00380040']?.Value[0]
      : this.dataset['00380040']?.Value;
  }

  get '00380040'(): Element {
    return this.dataset['00380040'];
  }

  // Discharge Diagnosis Code Sequence
  get DischargeDiagnosisCodeSequence(): any {
    const element = this.dataset['00380044'];
    return (element?.Value.length === 1)
      ? this.dataset['00380044']?.Value[0]
      : this.dataset['00380044']?.Value;
  }

  get '00380044'(): Element {
    return this.dataset['00380044'];
  }

  // Special Needs
  get SpecialNeeds(): any {
    const element = this.dataset['00380050'];
    return (element?.Value.length === 1)
      ? this.dataset['00380050']?.Value[0]
      : this.dataset['00380050']?.Value;
  }

  get '00380050'(): Element {
    return this.dataset['00380050'];
  }

  // Service Episode ID
  get ServiceEpisodeID(): any {
    const element = this.dataset['00380060'];
    return (element?.Value.length === 1)
      ? this.dataset['00380060']?.Value[0]
      : this.dataset['00380060']?.Value;
  }

  get '00380060'(): Element {
    return this.dataset['00380060'];
  }

  // Issuer of Service Episode ID
  get IssuerOfServiceEpisodeID(): any {
    const element = this.dataset['00380061'];
    return (element?.Value.length === 1)
      ? this.dataset['00380061']?.Value[0]
      : this.dataset['00380061']?.Value;
  }

  get '00380061'(): Element {
    return this.dataset['00380061'];
  }

  // Service Episode Description
  get ServiceEpisodeDescription(): any {
    const element = this.dataset['00380062'];
    return (element?.Value.length === 1)
      ? this.dataset['00380062']?.Value[0]
      : this.dataset['00380062']?.Value;
  }

  get '00380062'(): Element {
    return this.dataset['00380062'];
  }

  // Issuer of Service Episode ID Sequence
  get IssuerOfServiceEpisodeIDSequence(): any {
    const element = this.dataset['00380064'];
    return (element?.Value.length === 1)
      ? this.dataset['00380064']?.Value[0]
      : this.dataset['00380064']?.Value;
  }

  get '00380064'(): Element {
    return this.dataset['00380064'];
  }

  // Pertinent Documents Sequence
  get PertinentDocumentsSequence(): any {
    const element = this.dataset['00380100'];
    return (element?.Value.length === 1)
      ? this.dataset['00380100']?.Value[0]
      : this.dataset['00380100']?.Value;
  }

  get '00380100'(): Element {
    return this.dataset['00380100'];
  }

  // Current Patient Location
  get CurrentPatientLocation(): any {
    const element = this.dataset['00380300'];
    return (element?.Value.length === 1)
      ? this.dataset['00380300']?.Value[0]
      : this.dataset['00380300']?.Value;
  }

  get '00380300'(): Element {
    return this.dataset['00380300'];
  }

  // Patient's Institution Residence
  get PatientInstitutionResidence(): any {
    const element = this.dataset['00380400'];
    return (element?.Value.length === 1)
      ? this.dataset['00380400']?.Value[0]
      : this.dataset['00380400']?.Value;
  }

  get '00380400'(): Element {
    return this.dataset['00380400'];
  }

  // Patient State
  get PatientState(): any {
    const element = this.dataset['00380500'];
    return (element?.Value.length === 1)
      ? this.dataset['00380500']?.Value[0]
      : this.dataset['00380500']?.Value;
  }

  get '00380500'(): Element {
    return this.dataset['00380500'];
  }

  // Patient Clinical Trial Participation Sequence
  get PatientClinicalTrialParticipationSequence(): any {
    const element = this.dataset['00380502'];
    return (element?.Value.length === 1)
      ? this.dataset['00380502']?.Value[0]
      : this.dataset['00380502']?.Value;
  }

  get '00380502'(): Element {
    return this.dataset['00380502'];
  }

  // Visit Comments
  get VisitComments(): any {
    const element = this.dataset['00384000'];
    return (element?.Value.length === 1)
      ? this.dataset['00384000']?.Value[0]
      : this.dataset['00384000']?.Value;
  }

  get '00384000'(): Element {
    return this.dataset['00384000'];
  }

  // Waveform Originality
  get WaveformOriginality(): any {
    const element = this.dataset['003A0004'];
    return (element?.Value.length === 1)
      ? this.dataset['003A0004']?.Value[0]
      : this.dataset['003A0004']?.Value;
  }

  get '003A0004'(): Element {
    return this.dataset['003A0004'];
  }

  // Number of Waveform Channels
  get NumberOfWaveformChannels(): any {
    const element = this.dataset['003A0005'];
    return (element?.Value.length === 1)
      ? this.dataset['003A0005']?.Value[0]
      : this.dataset['003A0005']?.Value;
  }

  get '003A0005'(): Element {
    return this.dataset['003A0005'];
  }

  // Number of Waveform Samples
  get NumberOfWaveformSamples(): any {
    const element = this.dataset['003A0010'];
    return (element?.Value.length === 1)
      ? this.dataset['003A0010']?.Value[0]
      : this.dataset['003A0010']?.Value;
  }

  get '003A0010'(): Element {
    return this.dataset['003A0010'];
  }

  // Sampling Frequency
  get SamplingFrequency(): any {
    const element = this.dataset['003A001A'];
    return (element?.Value.length === 1)
      ? this.dataset['003A001A']?.Value[0]
      : this.dataset['003A001A']?.Value;
  }

  get '003A001A'(): Element {
    return this.dataset['003A001A'];
  }

  // Multiplex Group Label
  get MultiplexGroupLabel(): any {
    const element = this.dataset['003A0020'];
    return (element?.Value.length === 1)
      ? this.dataset['003A0020']?.Value[0]
      : this.dataset['003A0020']?.Value;
  }

  get '003A0020'(): Element {
    return this.dataset['003A0020'];
  }

  // Channel Definition Sequence
  get ChannelDefinitionSequence(): any {
    const element = this.dataset['003A0200'];
    return (element?.Value.length === 1)
      ? this.dataset['003A0200']?.Value[0]
      : this.dataset['003A0200']?.Value;
  }

  get '003A0200'(): Element {
    return this.dataset['003A0200'];
  }

  // Waveform Channel Number
  get WaveformChannelNumber(): any {
    const element = this.dataset['003A0202'];
    return (element?.Value.length === 1)
      ? this.dataset['003A0202']?.Value[0]
      : this.dataset['003A0202']?.Value;
  }

  get '003A0202'(): Element {
    return this.dataset['003A0202'];
  }

  // Channel Label
  get ChannelLabel(): any {
    const element = this.dataset['003A0203'];
    return (element?.Value.length === 1)
      ? this.dataset['003A0203']?.Value[0]
      : this.dataset['003A0203']?.Value;
  }

  get '003A0203'(): Element {
    return this.dataset['003A0203'];
  }

  // Channel Status
  get ChannelStatus(): any {
    const element = this.dataset['003A0205'];
    return (element?.Value.length === 1)
      ? this.dataset['003A0205']?.Value[0]
      : this.dataset['003A0205']?.Value;
  }

  get '003A0205'(): Element {
    return this.dataset['003A0205'];
  }

  // Channel Source Sequence
  get ChannelSourceSequence(): any {
    const element = this.dataset['003A0208'];
    return (element?.Value.length === 1)
      ? this.dataset['003A0208']?.Value[0]
      : this.dataset['003A0208']?.Value;
  }

  get '003A0208'(): Element {
    return this.dataset['003A0208'];
  }

  // Channel Source Modifiers Sequence
  get ChannelSourceModifiersSequence(): any {
    const element = this.dataset['003A0209'];
    return (element?.Value.length === 1)
      ? this.dataset['003A0209']?.Value[0]
      : this.dataset['003A0209']?.Value;
  }

  get '003A0209'(): Element {
    return this.dataset['003A0209'];
  }

  // Source Waveform Sequence
  get SourceWaveformSequence(): any {
    const element = this.dataset['003A020A'];
    return (element?.Value.length === 1)
      ? this.dataset['003A020A']?.Value[0]
      : this.dataset['003A020A']?.Value;
  }

  get '003A020A'(): Element {
    return this.dataset['003A020A'];
  }

  // Channel Derivation Description
  get ChannelDerivationDescription(): any {
    const element = this.dataset['003A020C'];
    return (element?.Value.length === 1)
      ? this.dataset['003A020C']?.Value[0]
      : this.dataset['003A020C']?.Value;
  }

  get '003A020C'(): Element {
    return this.dataset['003A020C'];
  }

  // Channel Sensitivity
  get ChannelSensitivity(): any {
    const element = this.dataset['003A0210'];
    return (element?.Value.length === 1)
      ? this.dataset['003A0210']?.Value[0]
      : this.dataset['003A0210']?.Value;
  }

  get '003A0210'(): Element {
    return this.dataset['003A0210'];
  }

  // Channel Sensitivity Units Sequence
  get ChannelSensitivityUnitsSequence(): any {
    const element = this.dataset['003A0211'];
    return (element?.Value.length === 1)
      ? this.dataset['003A0211']?.Value[0]
      : this.dataset['003A0211']?.Value;
  }

  get '003A0211'(): Element {
    return this.dataset['003A0211'];
  }

  // Channel Sensitivity Correction Factor
  get ChannelSensitivityCorrectionFactor(): any {
    const element = this.dataset['003A0212'];
    return (element?.Value.length === 1)
      ? this.dataset['003A0212']?.Value[0]
      : this.dataset['003A0212']?.Value;
  }

  get '003A0212'(): Element {
    return this.dataset['003A0212'];
  }

  // Channel Baseline
  get ChannelBaseline(): any {
    const element = this.dataset['003A0213'];
    return (element?.Value.length === 1)
      ? this.dataset['003A0213']?.Value[0]
      : this.dataset['003A0213']?.Value;
  }

  get '003A0213'(): Element {
    return this.dataset['003A0213'];
  }

  // Channel Time Skew
  get ChannelTimeSkew(): any {
    const element = this.dataset['003A0214'];
    return (element?.Value.length === 1)
      ? this.dataset['003A0214']?.Value[0]
      : this.dataset['003A0214']?.Value;
  }

  get '003A0214'(): Element {
    return this.dataset['003A0214'];
  }

  // Channel Sample Skew
  get ChannelSampleSkew(): any {
    const element = this.dataset['003A0215'];
    return (element?.Value.length === 1)
      ? this.dataset['003A0215']?.Value[0]
      : this.dataset['003A0215']?.Value;
  }

  get '003A0215'(): Element {
    return this.dataset['003A0215'];
  }

  // Channel Offset
  get ChannelOffset(): any {
    const element = this.dataset['003A0218'];
    return (element?.Value.length === 1)
      ? this.dataset['003A0218']?.Value[0]
      : this.dataset['003A0218']?.Value;
  }

  get '003A0218'(): Element {
    return this.dataset['003A0218'];
  }

  // Waveform Bits Stored
  get WaveformBitsStored(): any {
    const element = this.dataset['003A021A'];
    return (element?.Value.length === 1)
      ? this.dataset['003A021A']?.Value[0]
      : this.dataset['003A021A']?.Value;
  }

  get '003A021A'(): Element {
    return this.dataset['003A021A'];
  }

  // Filter Low Frequency
  get FilterLowFrequency(): any {
    const element = this.dataset['003A0220'];
    return (element?.Value.length === 1)
      ? this.dataset['003A0220']?.Value[0]
      : this.dataset['003A0220']?.Value;
  }

  get '003A0220'(): Element {
    return this.dataset['003A0220'];
  }

  // Filter High Frequency
  get FilterHighFrequency(): any {
    const element = this.dataset['003A0221'];
    return (element?.Value.length === 1)
      ? this.dataset['003A0221']?.Value[0]
      : this.dataset['003A0221']?.Value;
  }

  get '003A0221'(): Element {
    return this.dataset['003A0221'];
  }

  // Notch Filter Frequency
  get NotchFilterFrequency(): any {
    const element = this.dataset['003A0222'];
    return (element?.Value.length === 1)
      ? this.dataset['003A0222']?.Value[0]
      : this.dataset['003A0222']?.Value;
  }

  get '003A0222'(): Element {
    return this.dataset['003A0222'];
  }

  // Notch Filter Bandwidth
  get NotchFilterBandwidth(): any {
    const element = this.dataset['003A0223'];
    return (element?.Value.length === 1)
      ? this.dataset['003A0223']?.Value[0]
      : this.dataset['003A0223']?.Value;
  }

  get '003A0223'(): Element {
    return this.dataset['003A0223'];
  }

  // Waveform Data Display Scale
  get WaveformDataDisplayScale(): any {
    const element = this.dataset['003A0230'];
    return (element?.Value.length === 1)
      ? this.dataset['003A0230']?.Value[0]
      : this.dataset['003A0230']?.Value;
  }

  get '003A0230'(): Element {
    return this.dataset['003A0230'];
  }

  // Waveform Display Background CIELab Value
  get WaveformDisplayBackgroundCIELabValue(): any {
    const element = this.dataset['003A0231'];
    return (element?.Value.length === 1)
      ? this.dataset['003A0231']?.Value[0]
      : this.dataset['003A0231']?.Value;
  }

  get '003A0231'(): Element {
    return this.dataset['003A0231'];
  }

  // Waveform Presentation Group Sequence
  get WaveformPresentationGroupSequence(): any {
    const element = this.dataset['003A0240'];
    return (element?.Value.length === 1)
      ? this.dataset['003A0240']?.Value[0]
      : this.dataset['003A0240']?.Value;
  }

  get '003A0240'(): Element {
    return this.dataset['003A0240'];
  }

  // Presentation Group Number
  get PresentationGroupNumber(): any {
    const element = this.dataset['003A0241'];
    return (element?.Value.length === 1)
      ? this.dataset['003A0241']?.Value[0]
      : this.dataset['003A0241']?.Value;
  }

  get '003A0241'(): Element {
    return this.dataset['003A0241'];
  }

  // Channel Display Sequence
  get ChannelDisplaySequence(): any {
    const element = this.dataset['003A0242'];
    return (element?.Value.length === 1)
      ? this.dataset['003A0242']?.Value[0]
      : this.dataset['003A0242']?.Value;
  }

  get '003A0242'(): Element {
    return this.dataset['003A0242'];
  }

  // Channel Recommended Display CIELab Value
  get ChannelRecommendedDisplayCIELabValue(): any {
    const element = this.dataset['003A0244'];
    return (element?.Value.length === 1)
      ? this.dataset['003A0244']?.Value[0]
      : this.dataset['003A0244']?.Value;
  }

  get '003A0244'(): Element {
    return this.dataset['003A0244'];
  }

  // Channel Position
  get ChannelPosition(): any {
    const element = this.dataset['003A0245'];
    return (element?.Value.length === 1)
      ? this.dataset['003A0245']?.Value[0]
      : this.dataset['003A0245']?.Value;
  }

  get '003A0245'(): Element {
    return this.dataset['003A0245'];
  }

  // Display Shading Flag
  get DisplayShadingFlag(): any {
    const element = this.dataset['003A0246'];
    return (element?.Value.length === 1)
      ? this.dataset['003A0246']?.Value[0]
      : this.dataset['003A0246']?.Value;
  }

  get '003A0246'(): Element {
    return this.dataset['003A0246'];
  }

  // Fractional Channel Display Scale
  get FractionalChannelDisplayScale(): any {
    const element = this.dataset['003A0247'];
    return (element?.Value.length === 1)
      ? this.dataset['003A0247']?.Value[0]
      : this.dataset['003A0247']?.Value;
  }

  get '003A0247'(): Element {
    return this.dataset['003A0247'];
  }

  // Absolute Channel Display Scale
  get AbsoluteChannelDisplayScale(): any {
    const element = this.dataset['003A0248'];
    return (element?.Value.length === 1)
      ? this.dataset['003A0248']?.Value[0]
      : this.dataset['003A0248']?.Value;
  }

  get '003A0248'(): Element {
    return this.dataset['003A0248'];
  }

  // Multiplexed Audio Channels Description Code Sequence
  get MultiplexedAudioChannelsDescriptionCodeSequence(): any {
    const element = this.dataset['003A0300'];
    return (element?.Value.length === 1)
      ? this.dataset['003A0300']?.Value[0]
      : this.dataset['003A0300']?.Value;
  }

  get '003A0300'(): Element {
    return this.dataset['003A0300'];
  }

  // Channel Identification Code
  get ChannelIdentificationCode(): any {
    const element = this.dataset['003A0301'];
    return (element?.Value.length === 1)
      ? this.dataset['003A0301']?.Value[0]
      : this.dataset['003A0301']?.Value;
  }

  get '003A0301'(): Element {
    return this.dataset['003A0301'];
  }

  // Channel Mode
  get ChannelMode(): any {
    const element = this.dataset['003A0302'];
    return (element?.Value.length === 1)
      ? this.dataset['003A0302']?.Value[0]
      : this.dataset['003A0302']?.Value;
  }

  get '003A0302'(): Element {
    return this.dataset['003A0302'];
  }

  // Scheduled Station AE Title
  get ScheduledStationAETitle(): any {
    const element = this.dataset['00400001'];
    return (element?.Value.length === 1)
      ? this.dataset['00400001']?.Value[0]
      : this.dataset['00400001']?.Value;
  }

  get '00400001'(): Element {
    return this.dataset['00400001'];
  }

  // Scheduled Procedure Step Start Date
  get ScheduledProcedureStepStartDate(): any {
    const element = this.dataset['00400002'];
    return (element?.Value.length === 1)
      ? this.dataset['00400002']?.Value[0]
      : this.dataset['00400002']?.Value;
  }

  get '00400002'(): Element {
    return this.dataset['00400002'];
  }

  // Scheduled Procedure Step Start Time
  get ScheduledProcedureStepStartTime(): any {
    const element = this.dataset['00400003'];
    return (element?.Value.length === 1)
      ? this.dataset['00400003']?.Value[0]
      : this.dataset['00400003']?.Value;
  }

  get '00400003'(): Element {
    return this.dataset['00400003'];
  }

  // Scheduled Procedure Step End Date
  get ScheduledProcedureStepEndDate(): any {
    const element = this.dataset['00400004'];
    return (element?.Value.length === 1)
      ? this.dataset['00400004']?.Value[0]
      : this.dataset['00400004']?.Value;
  }

  get '00400004'(): Element {
    return this.dataset['00400004'];
  }

  // Scheduled Procedure Step End Time
  get ScheduledProcedureStepEndTime(): any {
    const element = this.dataset['00400005'];
    return (element?.Value.length === 1)
      ? this.dataset['00400005']?.Value[0]
      : this.dataset['00400005']?.Value;
  }

  get '00400005'(): Element {
    return this.dataset['00400005'];
  }

  // Scheduled Performing Physician's Name
  get ScheduledPerformingPhysicianName(): any {
    const element = this.dataset['00400006'];
    return (element?.Value.length === 1)
      ? this.dataset['00400006']?.Value[0]
      : this.dataset['00400006']?.Value;
  }

  get '00400006'(): Element {
    return this.dataset['00400006'];
  }

  // Scheduled Procedure Step Description
  get ScheduledProcedureStepDescription(): any {
    const element = this.dataset['00400007'];
    return (element?.Value.length === 1)
      ? this.dataset['00400007']?.Value[0]
      : this.dataset['00400007']?.Value;
  }

  get '00400007'(): Element {
    return this.dataset['00400007'];
  }

  // Scheduled Protocol Code Sequence
  get ScheduledProtocolCodeSequence(): any {
    const element = this.dataset['00400008'];
    return (element?.Value.length === 1)
      ? this.dataset['00400008']?.Value[0]
      : this.dataset['00400008']?.Value;
  }

  get '00400008'(): Element {
    return this.dataset['00400008'];
  }

  // Scheduled Procedure Step ID
  get ScheduledProcedureStepID(): any {
    const element = this.dataset['00400009'];
    return (element?.Value.length === 1)
      ? this.dataset['00400009']?.Value[0]
      : this.dataset['00400009']?.Value;
  }

  get '00400009'(): Element {
    return this.dataset['00400009'];
  }

  // Stage Code Sequence
  get StageCodeSequence(): any {
    const element = this.dataset['0040000A'];
    return (element?.Value.length === 1)
      ? this.dataset['0040000A']?.Value[0]
      : this.dataset['0040000A']?.Value;
  }

  get '0040000A'(): Element {
    return this.dataset['0040000A'];
  }

  // Scheduled Performing Physician Identification Sequence
  get ScheduledPerformingPhysicianIdentificationSequence(): any {
    const element = this.dataset['0040000B'];
    return (element?.Value.length === 1)
      ? this.dataset['0040000B']?.Value[0]
      : this.dataset['0040000B']?.Value;
  }

  get '0040000B'(): Element {
    return this.dataset['0040000B'];
  }

  // Scheduled Station Name
  get ScheduledStationName(): any {
    const element = this.dataset['00400010'];
    return (element?.Value.length === 1)
      ? this.dataset['00400010']?.Value[0]
      : this.dataset['00400010']?.Value;
  }

  get '00400010'(): Element {
    return this.dataset['00400010'];
  }

  // Scheduled Procedure Step Location
  get ScheduledProcedureStepLocation(): any {
    const element = this.dataset['00400011'];
    return (element?.Value.length === 1)
      ? this.dataset['00400011']?.Value[0]
      : this.dataset['00400011']?.Value;
  }

  get '00400011'(): Element {
    return this.dataset['00400011'];
  }

  // Pre-Medication
  get PreMedication(): any {
    const element = this.dataset['00400012'];
    return (element?.Value.length === 1)
      ? this.dataset['00400012']?.Value[0]
      : this.dataset['00400012']?.Value;
  }

  get '00400012'(): Element {
    return this.dataset['00400012'];
  }

  // Scheduled Procedure Step Status
  get ScheduledProcedureStepStatus(): any {
    const element = this.dataset['00400020'];
    return (element?.Value.length === 1)
      ? this.dataset['00400020']?.Value[0]
      : this.dataset['00400020']?.Value;
  }

  get '00400020'(): Element {
    return this.dataset['00400020'];
  }

  // Order Placer Identifier Sequence
  get OrderPlacerIdentifierSequence(): any {
    const element = this.dataset['00400026'];
    return (element?.Value.length === 1)
      ? this.dataset['00400026']?.Value[0]
      : this.dataset['00400026']?.Value;
  }

  get '00400026'(): Element {
    return this.dataset['00400026'];
  }

  // Order Filler Identifier Sequence
  get OrderFillerIdentifierSequence(): any {
    const element = this.dataset['00400027'];
    return (element?.Value.length === 1)
      ? this.dataset['00400027']?.Value[0]
      : this.dataset['00400027']?.Value;
  }

  get '00400027'(): Element {
    return this.dataset['00400027'];
  }

  // Local Namespace Entity ID
  get LocalNamespaceEntityID(): any {
    const element = this.dataset['00400031'];
    return (element?.Value.length === 1)
      ? this.dataset['00400031']?.Value[0]
      : this.dataset['00400031']?.Value;
  }

  get '00400031'(): Element {
    return this.dataset['00400031'];
  }

  // Universal Entity ID
  get UniversalEntityID(): any {
    const element = this.dataset['00400032'];
    return (element?.Value.length === 1)
      ? this.dataset['00400032']?.Value[0]
      : this.dataset['00400032']?.Value;
  }

  get '00400032'(): Element {
    return this.dataset['00400032'];
  }

  // Universal Entity ID Type
  get UniversalEntityIDType(): any {
    const element = this.dataset['00400033'];
    return (element?.Value.length === 1)
      ? this.dataset['00400033']?.Value[0]
      : this.dataset['00400033']?.Value;
  }

  get '00400033'(): Element {
    return this.dataset['00400033'];
  }

  // Identifier Type Code
  get IdentifierTypeCode(): any {
    const element = this.dataset['00400035'];
    return (element?.Value.length === 1)
      ? this.dataset['00400035']?.Value[0]
      : this.dataset['00400035']?.Value;
  }

  get '00400035'(): Element {
    return this.dataset['00400035'];
  }

  // Assigning Facility Sequence
  get AssigningFacilitySequence(): any {
    const element = this.dataset['00400036'];
    return (element?.Value.length === 1)
      ? this.dataset['00400036']?.Value[0]
      : this.dataset['00400036']?.Value;
  }

  get '00400036'(): Element {
    return this.dataset['00400036'];
  }

  // Assigning Jurisdiction Code Sequence
  get AssigningJurisdictionCodeSequence(): any {
    const element = this.dataset['00400039'];
    return (element?.Value.length === 1)
      ? this.dataset['00400039']?.Value[0]
      : this.dataset['00400039']?.Value;
  }

  get '00400039'(): Element {
    return this.dataset['00400039'];
  }

  // Assigning Agency or Department Code Sequence
  get AssigningAgencyOrDepartmentCodeSequence(): any {
    const element = this.dataset['0040003A'];
    return (element?.Value.length === 1)
      ? this.dataset['0040003A']?.Value[0]
      : this.dataset['0040003A']?.Value;
  }

  get '0040003A'(): Element {
    return this.dataset['0040003A'];
  }

  // Scheduled Procedure Step Sequence
  get ScheduledProcedureStepSequence(): any {
    const element = this.dataset['00400100'];
    return (element?.Value.length === 1)
      ? this.dataset['00400100']?.Value[0]
      : this.dataset['00400100']?.Value;
  }

  get '00400100'(): Element {
    return this.dataset['00400100'];
  }

  // Referenced Non-Image Composite SOP Instance Sequence
  get ReferencedNonImageCompositeSOPInstanceSequence(): any {
    const element = this.dataset['00400220'];
    return (element?.Value.length === 1)
      ? this.dataset['00400220']?.Value[0]
      : this.dataset['00400220']?.Value;
  }

  get '00400220'(): Element {
    return this.dataset['00400220'];
  }

  // Performed Station AE Title
  get PerformedStationAETitle(): any {
    const element = this.dataset['00400241'];
    return (element?.Value.length === 1)
      ? this.dataset['00400241']?.Value[0]
      : this.dataset['00400241']?.Value;
  }

  get '00400241'(): Element {
    return this.dataset['00400241'];
  }

  // Performed Station Name
  get PerformedStationName(): any {
    const element = this.dataset['00400242'];
    return (element?.Value.length === 1)
      ? this.dataset['00400242']?.Value[0]
      : this.dataset['00400242']?.Value;
  }

  get '00400242'(): Element {
    return this.dataset['00400242'];
  }

  // Performed Location
  get PerformedLocation(): any {
    const element = this.dataset['00400243'];
    return (element?.Value.length === 1)
      ? this.dataset['00400243']?.Value[0]
      : this.dataset['00400243']?.Value;
  }

  get '00400243'(): Element {
    return this.dataset['00400243'];
  }

  // Performed Procedure Step Start Date
  get PerformedProcedureStepStartDate(): any {
    const element = this.dataset['00400244'];
    return (element?.Value.length === 1)
      ? this.dataset['00400244']?.Value[0]
      : this.dataset['00400244']?.Value;
  }

  get '00400244'(): Element {
    return this.dataset['00400244'];
  }

  // Performed Procedure Step Start Time
  get PerformedProcedureStepStartTime(): any {
    const element = this.dataset['00400245'];
    return (element?.Value.length === 1)
      ? this.dataset['00400245']?.Value[0]
      : this.dataset['00400245']?.Value;
  }

  get '00400245'(): Element {
    return this.dataset['00400245'];
  }

  // Performed Procedure Step End Date
  get PerformedProcedureStepEndDate(): any {
    const element = this.dataset['00400250'];
    return (element?.Value.length === 1)
      ? this.dataset['00400250']?.Value[0]
      : this.dataset['00400250']?.Value;
  }

  get '00400250'(): Element {
    return this.dataset['00400250'];
  }

  // Performed Procedure Step End Time
  get PerformedProcedureStepEndTime(): any {
    const element = this.dataset['00400251'];
    return (element?.Value.length === 1)
      ? this.dataset['00400251']?.Value[0]
      : this.dataset['00400251']?.Value;
  }

  get '00400251'(): Element {
    return this.dataset['00400251'];
  }

  // Performed Procedure Step Status
  get PerformedProcedureStepStatus(): any {
    const element = this.dataset['00400252'];
    return (element?.Value.length === 1)
      ? this.dataset['00400252']?.Value[0]
      : this.dataset['00400252']?.Value;
  }

  get '00400252'(): Element {
    return this.dataset['00400252'];
  }

  // Performed Procedure Step ID
  get PerformedProcedureStepID(): any {
    const element = this.dataset['00400253'];
    return (element?.Value.length === 1)
      ? this.dataset['00400253']?.Value[0]
      : this.dataset['00400253']?.Value;
  }

  get '00400253'(): Element {
    return this.dataset['00400253'];
  }

  // Performed Procedure Step Description
  get PerformedProcedureStepDescription(): any {
    const element = this.dataset['00400254'];
    return (element?.Value.length === 1)
      ? this.dataset['00400254']?.Value[0]
      : this.dataset['00400254']?.Value;
  }

  get '00400254'(): Element {
    return this.dataset['00400254'];
  }

  // Performed Procedure Type Description
  get PerformedProcedureTypeDescription(): any {
    const element = this.dataset['00400255'];
    return (element?.Value.length === 1)
      ? this.dataset['00400255']?.Value[0]
      : this.dataset['00400255']?.Value;
  }

  get '00400255'(): Element {
    return this.dataset['00400255'];
  }

  // Performed Protocol Code Sequence
  get PerformedProtocolCodeSequence(): any {
    const element = this.dataset['00400260'];
    return (element?.Value.length === 1)
      ? this.dataset['00400260']?.Value[0]
      : this.dataset['00400260']?.Value;
  }

  get '00400260'(): Element {
    return this.dataset['00400260'];
  }

  // Performed Protocol Type
  get PerformedProtocolType(): any {
    const element = this.dataset['00400261'];
    return (element?.Value.length === 1)
      ? this.dataset['00400261']?.Value[0]
      : this.dataset['00400261']?.Value;
  }

  get '00400261'(): Element {
    return this.dataset['00400261'];
  }

  // Scheduled Step Attributes Sequence
  get ScheduledStepAttributesSequence(): any {
    const element = this.dataset['00400270'];
    return (element?.Value.length === 1)
      ? this.dataset['00400270']?.Value[0]
      : this.dataset['00400270']?.Value;
  }

  get '00400270'(): Element {
    return this.dataset['00400270'];
  }

  // Request Attributes Sequence
  get RequestAttributesSequence(): any {
    const element = this.dataset['00400275'];
    return (element?.Value.length === 1)
      ? this.dataset['00400275']?.Value[0]
      : this.dataset['00400275']?.Value;
  }

  get '00400275'(): Element {
    return this.dataset['00400275'];
  }

  // Comments on the Performed Procedure Step
  get CommentsOnThePerformedProcedureStep(): any {
    const element = this.dataset['00400280'];
    return (element?.Value.length === 1)
      ? this.dataset['00400280']?.Value[0]
      : this.dataset['00400280']?.Value;
  }

  get '00400280'(): Element {
    return this.dataset['00400280'];
  }

  // Performed Procedure Step Discontinuation Reason Code Sequence
  get PerformedProcedureStepDiscontinuationReasonCodeSequence(): any {
    const element = this.dataset['00400281'];
    return (element?.Value.length === 1)
      ? this.dataset['00400281']?.Value[0]
      : this.dataset['00400281']?.Value;
  }

  get '00400281'(): Element {
    return this.dataset['00400281'];
  }

  // Quantity Sequence
  get QuantitySequence(): any {
    const element = this.dataset['00400293'];
    return (element?.Value.length === 1)
      ? this.dataset['00400293']?.Value[0]
      : this.dataset['00400293']?.Value;
  }

  get '00400293'(): Element {
    return this.dataset['00400293'];
  }

  // Quantity
  get Quantity(): any {
    const element = this.dataset['00400294'];
    return (element?.Value.length === 1)
      ? this.dataset['00400294']?.Value[0]
      : this.dataset['00400294']?.Value;
  }

  get '00400294'(): Element {
    return this.dataset['00400294'];
  }

  // Measuring Units Sequence
  get MeasuringUnitsSequence(): any {
    const element = this.dataset['00400295'];
    return (element?.Value.length === 1)
      ? this.dataset['00400295']?.Value[0]
      : this.dataset['00400295']?.Value;
  }

  get '00400295'(): Element {
    return this.dataset['00400295'];
  }

  // Billing Item Sequence
  get BillingItemSequence(): any {
    const element = this.dataset['00400296'];
    return (element?.Value.length === 1)
      ? this.dataset['00400296']?.Value[0]
      : this.dataset['00400296']?.Value;
  }

  get '00400296'(): Element {
    return this.dataset['00400296'];
  }

  // Total Time of Fluoroscopy
  get TotalTimeOfFluoroscopy(): any {
    const element = this.dataset['00400300'];
    return (element?.Value.length === 1)
      ? this.dataset['00400300']?.Value[0]
      : this.dataset['00400300']?.Value;
  }

  get '00400300'(): Element {
    return this.dataset['00400300'];
  }

  // Total Number of Exposures
  get TotalNumberOfExposures(): any {
    const element = this.dataset['00400301'];
    return (element?.Value.length === 1)
      ? this.dataset['00400301']?.Value[0]
      : this.dataset['00400301']?.Value;
  }

  get '00400301'(): Element {
    return this.dataset['00400301'];
  }

  // Entrance Dose
  get EntranceDose(): any {
    const element = this.dataset['00400302'];
    return (element?.Value.length === 1)
      ? this.dataset['00400302']?.Value[0]
      : this.dataset['00400302']?.Value;
  }

  get '00400302'(): Element {
    return this.dataset['00400302'];
  }

  // Exposed Area
  get ExposedArea(): any {
    const element = this.dataset['00400303'];
    return (element?.Value.length === 1)
      ? this.dataset['00400303']?.Value[0]
      : this.dataset['00400303']?.Value;
  }

  get '00400303'(): Element {
    return this.dataset['00400303'];
  }

  // Distance Source to Entrance
  get DistanceSourceToEntrance(): any {
    const element = this.dataset['00400306'];
    return (element?.Value.length === 1)
      ? this.dataset['00400306']?.Value[0]
      : this.dataset['00400306']?.Value;
  }

  get '00400306'(): Element {
    return this.dataset['00400306'];
  }

  // Distance Source to Support
  get DistanceSourceToSupport(): any {
    const element = this.dataset['00400307'];
    return (element?.Value.length === 1)
      ? this.dataset['00400307']?.Value[0]
      : this.dataset['00400307']?.Value;
  }

  get '00400307'(): Element {
    return this.dataset['00400307'];
  }

  // Exposure Dose Sequence
  get ExposureDoseSequence(): any {
    const element = this.dataset['0040030E'];
    return (element?.Value.length === 1)
      ? this.dataset['0040030E']?.Value[0]
      : this.dataset['0040030E']?.Value;
  }

  get '0040030E'(): Element {
    return this.dataset['0040030E'];
  }

  // Comments on Radiation Dose
  get CommentsOnRadiationDose(): any {
    const element = this.dataset['00400310'];
    return (element?.Value.length === 1)
      ? this.dataset['00400310']?.Value[0]
      : this.dataset['00400310']?.Value;
  }

  get '00400310'(): Element {
    return this.dataset['00400310'];
  }

  // X-Ray Output
  get XRayOutput(): any {
    const element = this.dataset['00400312'];
    return (element?.Value.length === 1)
      ? this.dataset['00400312']?.Value[0]
      : this.dataset['00400312']?.Value;
  }

  get '00400312'(): Element {
    return this.dataset['00400312'];
  }

  // Half Value Layer
  get HalfValueLayer(): any {
    const element = this.dataset['00400314'];
    return (element?.Value.length === 1)
      ? this.dataset['00400314']?.Value[0]
      : this.dataset['00400314']?.Value;
  }

  get '00400314'(): Element {
    return this.dataset['00400314'];
  }

  // Organ Dose
  get OrganDose(): any {
    const element = this.dataset['00400316'];
    return (element?.Value.length === 1)
      ? this.dataset['00400316']?.Value[0]
      : this.dataset['00400316']?.Value;
  }

  get '00400316'(): Element {
    return this.dataset['00400316'];
  }

  // Organ Exposed
  get OrganExposed(): any {
    const element = this.dataset['00400318'];
    return (element?.Value.length === 1)
      ? this.dataset['00400318']?.Value[0]
      : this.dataset['00400318']?.Value;
  }

  get '00400318'(): Element {
    return this.dataset['00400318'];
  }

  // Billing Procedure Step Sequence
  get BillingProcedureStepSequence(): any {
    const element = this.dataset['00400320'];
    return (element?.Value.length === 1)
      ? this.dataset['00400320']?.Value[0]
      : this.dataset['00400320']?.Value;
  }

  get '00400320'(): Element {
    return this.dataset['00400320'];
  }

  // Film Consumption Sequence
  get FilmConsumptionSequence(): any {
    const element = this.dataset['00400321'];
    return (element?.Value.length === 1)
      ? this.dataset['00400321']?.Value[0]
      : this.dataset['00400321']?.Value;
  }

  get '00400321'(): Element {
    return this.dataset['00400321'];
  }

  // Billing Supplies and Devices Sequence
  get BillingSuppliesAndDevicesSequence(): any {
    const element = this.dataset['00400324'];
    return (element?.Value.length === 1)
      ? this.dataset['00400324']?.Value[0]
      : this.dataset['00400324']?.Value;
  }

  get '00400324'(): Element {
    return this.dataset['00400324'];
  }

  // Referenced Procedure Step Sequence
  get ReferencedProcedureStepSequence(): any {
    const element = this.dataset['00400330'];
    return (element?.Value.length === 1)
      ? this.dataset['00400330']?.Value[0]
      : this.dataset['00400330']?.Value;
  }

  get '00400330'(): Element {
    return this.dataset['00400330'];
  }

  // Performed Series Sequence
  get PerformedSeriesSequence(): any {
    const element = this.dataset['00400340'];
    return (element?.Value.length === 1)
      ? this.dataset['00400340']?.Value[0]
      : this.dataset['00400340']?.Value;
  }

  get '00400340'(): Element {
    return this.dataset['00400340'];
  }

  // Comments on the Scheduled Procedure Step
  get CommentsOnTheScheduledProcedureStep(): any {
    const element = this.dataset['00400400'];
    return (element?.Value.length === 1)
      ? this.dataset['00400400']?.Value[0]
      : this.dataset['00400400']?.Value;
  }

  get '00400400'(): Element {
    return this.dataset['00400400'];
  }

  // Protocol Context Sequence
  get ProtocolContextSequence(): any {
    const element = this.dataset['00400440'];
    return (element?.Value.length === 1)
      ? this.dataset['00400440']?.Value[0]
      : this.dataset['00400440']?.Value;
  }

  get '00400440'(): Element {
    return this.dataset['00400440'];
  }

  // Content Item Modifier Sequence
  get ContentItemModifierSequence(): any {
    const element = this.dataset['00400441'];
    return (element?.Value.length === 1)
      ? this.dataset['00400441']?.Value[0]
      : this.dataset['00400441']?.Value;
  }

  get '00400441'(): Element {
    return this.dataset['00400441'];
  }

  // Scheduled Specimen Sequence
  get ScheduledSpecimenSequence(): any {
    const element = this.dataset['00400500'];
    return (element?.Value.length === 1)
      ? this.dataset['00400500']?.Value[0]
      : this.dataset['00400500']?.Value;
  }

  get '00400500'(): Element {
    return this.dataset['00400500'];
  }

  // Specimen Accession Number
  get SpecimenAccessionNumber(): any {
    const element = this.dataset['0040050A'];
    return (element?.Value.length === 1)
      ? this.dataset['0040050A']?.Value[0]
      : this.dataset['0040050A']?.Value;
  }

  get '0040050A'(): Element {
    return this.dataset['0040050A'];
  }

  // Container Identifier
  get ContainerIdentifier(): any {
    const element = this.dataset['00400512'];
    return (element?.Value.length === 1)
      ? this.dataset['00400512']?.Value[0]
      : this.dataset['00400512']?.Value;
  }

  get '00400512'(): Element {
    return this.dataset['00400512'];
  }

  // Issuer of the Container Identifier Sequence
  get IssuerOfTheContainerIdentifierSequence(): any {
    const element = this.dataset['00400513'];
    return (element?.Value.length === 1)
      ? this.dataset['00400513']?.Value[0]
      : this.dataset['00400513']?.Value;
  }

  get '00400513'(): Element {
    return this.dataset['00400513'];
  }

  // Alternate Container Identifier Sequence
  get AlternateContainerIdentifierSequence(): any {
    const element = this.dataset['00400515'];
    return (element?.Value.length === 1)
      ? this.dataset['00400515']?.Value[0]
      : this.dataset['00400515']?.Value;
  }

  get '00400515'(): Element {
    return this.dataset['00400515'];
  }

  // Container Type Code Sequence
  get ContainerTypeCodeSequence(): any {
    const element = this.dataset['00400518'];
    return (element?.Value.length === 1)
      ? this.dataset['00400518']?.Value[0]
      : this.dataset['00400518']?.Value;
  }

  get '00400518'(): Element {
    return this.dataset['00400518'];
  }

  // Container Description
  get ContainerDescription(): any {
    const element = this.dataset['0040051A'];
    return (element?.Value.length === 1)
      ? this.dataset['0040051A']?.Value[0]
      : this.dataset['0040051A']?.Value;
  }

  get '0040051A'(): Element {
    return this.dataset['0040051A'];
  }

  // Container Component Sequence
  get ContainerComponentSequence(): any {
    const element = this.dataset['00400520'];
    return (element?.Value.length === 1)
      ? this.dataset['00400520']?.Value[0]
      : this.dataset['00400520']?.Value;
  }

  get '00400520'(): Element {
    return this.dataset['00400520'];
  }

  // Specimen Sequence
  get SpecimenSequence(): any {
    const element = this.dataset['00400550'];
    return (element?.Value.length === 1)
      ? this.dataset['00400550']?.Value[0]
      : this.dataset['00400550']?.Value;
  }

  get '00400550'(): Element {
    return this.dataset['00400550'];
  }

  // Specimen Identifier
  get SpecimenIdentifier(): any {
    const element = this.dataset['00400551'];
    return (element?.Value.length === 1)
      ? this.dataset['00400551']?.Value[0]
      : this.dataset['00400551']?.Value;
  }

  get '00400551'(): Element {
    return this.dataset['00400551'];
  }

  // Specimen Description Sequence (Trial)
  get SpecimenDescriptionSequenceTrial(): any {
    const element = this.dataset['00400552'];
    return (element?.Value.length === 1)
      ? this.dataset['00400552']?.Value[0]
      : this.dataset['00400552']?.Value;
  }

  get '00400552'(): Element {
    return this.dataset['00400552'];
  }

  // Specimen Description (Trial)
  get SpecimenDescriptionTrial(): any {
    const element = this.dataset['00400553'];
    return (element?.Value.length === 1)
      ? this.dataset['00400553']?.Value[0]
      : this.dataset['00400553']?.Value;
  }

  get '00400553'(): Element {
    return this.dataset['00400553'];
  }

  // Specimen UID
  get SpecimenUID(): any {
    const element = this.dataset['00400554'];
    return (element?.Value.length === 1)
      ? this.dataset['00400554']?.Value[0]
      : this.dataset['00400554']?.Value;
  }

  get '00400554'(): Element {
    return this.dataset['00400554'];
  }

  // Acquisition Context Sequence
  get AcquisitionContextSequence(): any {
    const element = this.dataset['00400555'];
    return (element?.Value.length === 1)
      ? this.dataset['00400555']?.Value[0]
      : this.dataset['00400555']?.Value;
  }

  get '00400555'(): Element {
    return this.dataset['00400555'];
  }

  // Acquisition Context Description
  get AcquisitionContextDescription(): any {
    const element = this.dataset['00400556'];
    return (element?.Value.length === 1)
      ? this.dataset['00400556']?.Value[0]
      : this.dataset['00400556']?.Value;
  }

  get '00400556'(): Element {
    return this.dataset['00400556'];
  }

  // Specimen Type Code Sequence
  get SpecimenTypeCodeSequence(): any {
    const element = this.dataset['0040059A'];
    return (element?.Value.length === 1)
      ? this.dataset['0040059A']?.Value[0]
      : this.dataset['0040059A']?.Value;
  }

  get '0040059A'(): Element {
    return this.dataset['0040059A'];
  }

  // Specimen Description Sequence
  get SpecimenDescriptionSequence(): any {
    const element = this.dataset['00400560'];
    return (element?.Value.length === 1)
      ? this.dataset['00400560']?.Value[0]
      : this.dataset['00400560']?.Value;
  }

  get '00400560'(): Element {
    return this.dataset['00400560'];
  }

  // Issuer of the Specimen Identifier Sequence
  get IssuerOfTheSpecimenIdentifierSequence(): any {
    const element = this.dataset['00400562'];
    return (element?.Value.length === 1)
      ? this.dataset['00400562']?.Value[0]
      : this.dataset['00400562']?.Value;
  }

  get '00400562'(): Element {
    return this.dataset['00400562'];
  }

  // Specimen Short Description
  get SpecimenShortDescription(): any {
    const element = this.dataset['00400600'];
    return (element?.Value.length === 1)
      ? this.dataset['00400600']?.Value[0]
      : this.dataset['00400600']?.Value;
  }

  get '00400600'(): Element {
    return this.dataset['00400600'];
  }

  // Specimen Detailed Description
  get SpecimenDetailedDescription(): any {
    const element = this.dataset['00400602'];
    return (element?.Value.length === 1)
      ? this.dataset['00400602']?.Value[0]
      : this.dataset['00400602']?.Value;
  }

  get '00400602'(): Element {
    return this.dataset['00400602'];
  }

  // Specimen Preparation Sequence
  get SpecimenPreparationSequence(): any {
    const element = this.dataset['00400610'];
    return (element?.Value.length === 1)
      ? this.dataset['00400610']?.Value[0]
      : this.dataset['00400610']?.Value;
  }

  get '00400610'(): Element {
    return this.dataset['00400610'];
  }

  // Specimen Preparation Step Content Item Sequence
  get SpecimenPreparationStepContentItemSequence(): any {
    const element = this.dataset['00400612'];
    return (element?.Value.length === 1)
      ? this.dataset['00400612']?.Value[0]
      : this.dataset['00400612']?.Value;
  }

  get '00400612'(): Element {
    return this.dataset['00400612'];
  }

  // Specimen Localization Content Item Sequence
  get SpecimenLocalizationContentItemSequence(): any {
    const element = this.dataset['00400620'];
    return (element?.Value.length === 1)
      ? this.dataset['00400620']?.Value[0]
      : this.dataset['00400620']?.Value;
  }

  get '00400620'(): Element {
    return this.dataset['00400620'];
  }

  // Slide Identifier
  get SlideIdentifier(): any {
    const element = this.dataset['004006FA'];
    return (element?.Value.length === 1)
      ? this.dataset['004006FA']?.Value[0]
      : this.dataset['004006FA']?.Value;
  }

  get '004006FA'(): Element {
    return this.dataset['004006FA'];
  }

  // Image Center Point Coordinates Sequence
  get ImageCenterPointCoordinatesSequence(): any {
    const element = this.dataset['0040071A'];
    return (element?.Value.length === 1)
      ? this.dataset['0040071A']?.Value[0]
      : this.dataset['0040071A']?.Value;
  }

  get '0040071A'(): Element {
    return this.dataset['0040071A'];
  }

  // X Offset in Slide Coordinate System
  get XOffsetInSlideCoordinateSystem(): any {
    const element = this.dataset['0040072A'];
    return (element?.Value.length === 1)
      ? this.dataset['0040072A']?.Value[0]
      : this.dataset['0040072A']?.Value;
  }

  get '0040072A'(): Element {
    return this.dataset['0040072A'];
  }

  // Y Offset in Slide Coordinate System
  get YOffsetInSlideCoordinateSystem(): any {
    const element = this.dataset['0040073A'];
    return (element?.Value.length === 1)
      ? this.dataset['0040073A']?.Value[0]
      : this.dataset['0040073A']?.Value;
  }

  get '0040073A'(): Element {
    return this.dataset['0040073A'];
  }

  // Z Offset in Slide Coordinate System
  get ZOffsetInSlideCoordinateSystem(): any {
    const element = this.dataset['0040074A'];
    return (element?.Value.length === 1)
      ? this.dataset['0040074A']?.Value[0]
      : this.dataset['0040074A']?.Value;
  }

  get '0040074A'(): Element {
    return this.dataset['0040074A'];
  }

  // Pixel Spacing Sequence
  get PixelSpacingSequence(): any {
    const element = this.dataset['004008D8'];
    return (element?.Value.length === 1)
      ? this.dataset['004008D8']?.Value[0]
      : this.dataset['004008D8']?.Value;
  }

  get '004008D8'(): Element {
    return this.dataset['004008D8'];
  }

  // Coordinate System Axis Code Sequence
  get CoordinateSystemAxisCodeSequence(): any {
    const element = this.dataset['004008DA'];
    return (element?.Value.length === 1)
      ? this.dataset['004008DA']?.Value[0]
      : this.dataset['004008DA']?.Value;
  }

  get '004008DA'(): Element {
    return this.dataset['004008DA'];
  }

  // Measurement Units Code Sequence
  get MeasurementUnitsCodeSequence(): any {
    const element = this.dataset['004008EA'];
    return (element?.Value.length === 1)
      ? this.dataset['004008EA']?.Value[0]
      : this.dataset['004008EA']?.Value;
  }

  get '004008EA'(): Element {
    return this.dataset['004008EA'];
  }

  // Vital Stain Code Sequence (Trial)
  get VitalStainCodeSequenceTrial(): any {
    const element = this.dataset['004009F8'];
    return (element?.Value.length === 1)
      ? this.dataset['004009F8']?.Value[0]
      : this.dataset['004009F8']?.Value;
  }

  get '004009F8'(): Element {
    return this.dataset['004009F8'];
  }

  // Requested Procedure ID
  get RequestedProcedureID(): any {
    const element = this.dataset['00401001'];
    return (element?.Value.length === 1)
      ? this.dataset['00401001']?.Value[0]
      : this.dataset['00401001']?.Value;
  }

  get '00401001'(): Element {
    return this.dataset['00401001'];
  }

  // Reason for the Requested Procedure
  get ReasonForTheRequestedProcedure(): any {
    const element = this.dataset['00401002'];
    return (element?.Value.length === 1)
      ? this.dataset['00401002']?.Value[0]
      : this.dataset['00401002']?.Value;
  }

  get '00401002'(): Element {
    return this.dataset['00401002'];
  }

  // Requested Procedure Priority
  get RequestedProcedurePriority(): any {
    const element = this.dataset['00401003'];
    return (element?.Value.length === 1)
      ? this.dataset['00401003']?.Value[0]
      : this.dataset['00401003']?.Value;
  }

  get '00401003'(): Element {
    return this.dataset['00401003'];
  }

  // Patient Transport Arrangements
  get PatientTransportArrangements(): any {
    const element = this.dataset['00401004'];
    return (element?.Value.length === 1)
      ? this.dataset['00401004']?.Value[0]
      : this.dataset['00401004']?.Value;
  }

  get '00401004'(): Element {
    return this.dataset['00401004'];
  }

  // Requested Procedure Location
  get RequestedProcedureLocation(): any {
    const element = this.dataset['00401005'];
    return (element?.Value.length === 1)
      ? this.dataset['00401005']?.Value[0]
      : this.dataset['00401005']?.Value;
  }

  get '00401005'(): Element {
    return this.dataset['00401005'];
  }

  // Placer Order Number / Procedure
  get PlacerOrderNumberProcedure(): any {
    const element = this.dataset['00401006'];
    return (element?.Value.length === 1)
      ? this.dataset['00401006']?.Value[0]
      : this.dataset['00401006']?.Value;
  }

  get '00401006'(): Element {
    return this.dataset['00401006'];
  }

  // Filler Order Number / Procedure
  get FillerOrderNumberProcedure(): any {
    const element = this.dataset['00401007'];
    return (element?.Value.length === 1)
      ? this.dataset['00401007']?.Value[0]
      : this.dataset['00401007']?.Value;
  }

  get '00401007'(): Element {
    return this.dataset['00401007'];
  }

  // Confidentiality Code
  get ConfidentialityCode(): any {
    const element = this.dataset['00401008'];
    return (element?.Value.length === 1)
      ? this.dataset['00401008']?.Value[0]
      : this.dataset['00401008']?.Value;
  }

  get '00401008'(): Element {
    return this.dataset['00401008'];
  }

  // Reporting Priority
  get ReportingPriority(): any {
    const element = this.dataset['00401009'];
    return (element?.Value.length === 1)
      ? this.dataset['00401009']?.Value[0]
      : this.dataset['00401009']?.Value;
  }

  get '00401009'(): Element {
    return this.dataset['00401009'];
  }

  // Reason for Requested Procedure Code Sequence
  get ReasonForRequestedProcedureCodeSequence(): any {
    const element = this.dataset['0040100A'];
    return (element?.Value.length === 1)
      ? this.dataset['0040100A']?.Value[0]
      : this.dataset['0040100A']?.Value;
  }

  get '0040100A'(): Element {
    return this.dataset['0040100A'];
  }

  // Names of Intended Recipients of Results
  get NamesOfIntendedRecipientsOfResults(): any {
    const element = this.dataset['00401010'];
    return (element?.Value.length === 1)
      ? this.dataset['00401010']?.Value[0]
      : this.dataset['00401010']?.Value;
  }

  get '00401010'(): Element {
    return this.dataset['00401010'];
  }

  // Intended Recipients of Results Identification Sequence
  get IntendedRecipientsOfResultsIdentificationSequence(): any {
    const element = this.dataset['00401011'];
    return (element?.Value.length === 1)
      ? this.dataset['00401011']?.Value[0]
      : this.dataset['00401011']?.Value;
  }

  get '00401011'(): Element {
    return this.dataset['00401011'];
  }

  // Reason For Performed Procedure Code Sequence
  get ReasonForPerformedProcedureCodeSequence(): any {
    const element = this.dataset['00401012'];
    return (element?.Value.length === 1)
      ? this.dataset['00401012']?.Value[0]
      : this.dataset['00401012']?.Value;
  }

  get '00401012'(): Element {
    return this.dataset['00401012'];
  }

  // Requested Procedure Description (Trial)
  get RequestedProcedureDescriptionTrial(): any {
    const element = this.dataset['00401060'];
    return (element?.Value.length === 1)
      ? this.dataset['00401060']?.Value[0]
      : this.dataset['00401060']?.Value;
  }

  get '00401060'(): Element {
    return this.dataset['00401060'];
  }

  // Person Identification Code Sequence
  get PersonIdentificationCodeSequence(): any {
    const element = this.dataset['00401101'];
    return (element?.Value.length === 1)
      ? this.dataset['00401101']?.Value[0]
      : this.dataset['00401101']?.Value;
  }

  get '00401101'(): Element {
    return this.dataset['00401101'];
  }

  // Person's Address
  get PersonAddress(): any {
    const element = this.dataset['00401102'];
    return (element?.Value.length === 1)
      ? this.dataset['00401102']?.Value[0]
      : this.dataset['00401102']?.Value;
  }

  get '00401102'(): Element {
    return this.dataset['00401102'];
  }

  // Person's Telephone Numbers
  get PersonTelephoneNumbers(): any {
    const element = this.dataset['00401103'];
    return (element?.Value.length === 1)
      ? this.dataset['00401103']?.Value[0]
      : this.dataset['00401103']?.Value;
  }

  get '00401103'(): Element {
    return this.dataset['00401103'];
  }

  // Requested Procedure Comments
  get RequestedProcedureComments(): any {
    const element = this.dataset['00401400'];
    return (element?.Value.length === 1)
      ? this.dataset['00401400']?.Value[0]
      : this.dataset['00401400']?.Value;
  }

  get '00401400'(): Element {
    return this.dataset['00401400'];
  }

  // Reason for the Imaging Service Request
  get ReasonForTheImagingServiceRequest(): any {
    const element = this.dataset['00402001'];
    return (element?.Value.length === 1)
      ? this.dataset['00402001']?.Value[0]
      : this.dataset['00402001']?.Value;
  }

  get '00402001'(): Element {
    return this.dataset['00402001'];
  }

  // Issue Date of Imaging Service Request
  get IssueDateOfImagingServiceRequest(): any {
    const element = this.dataset['00402004'];
    return (element?.Value.length === 1)
      ? this.dataset['00402004']?.Value[0]
      : this.dataset['00402004']?.Value;
  }

  get '00402004'(): Element {
    return this.dataset['00402004'];
  }

  // Issue Time of Imaging Service Request
  get IssueTimeOfImagingServiceRequest(): any {
    const element = this.dataset['00402005'];
    return (element?.Value.length === 1)
      ? this.dataset['00402005']?.Value[0]
      : this.dataset['00402005']?.Value;
  }

  get '00402005'(): Element {
    return this.dataset['00402005'];
  }

  // Placer Order Number / Imaging Service Request (Retired)
  get PlacerOrderNumberImagingServiceRequestRetired(): any {
    const element = this.dataset['00402006'];
    return (element?.Value.length === 1)
      ? this.dataset['00402006']?.Value[0]
      : this.dataset['00402006']?.Value;
  }

  get '00402006'(): Element {
    return this.dataset['00402006'];
  }

  // Filler Order Number / Imaging Service Request (Retired)
  get FillerOrderNumberImagingServiceRequestRetired(): any {
    const element = this.dataset['00402007'];
    return (element?.Value.length === 1)
      ? this.dataset['00402007']?.Value[0]
      : this.dataset['00402007']?.Value;
  }

  get '00402007'(): Element {
    return this.dataset['00402007'];
  }

  // Order Entered By
  get OrderEnteredBy(): any {
    const element = this.dataset['00402008'];
    return (element?.Value.length === 1)
      ? this.dataset['00402008']?.Value[0]
      : this.dataset['00402008']?.Value;
  }

  get '00402008'(): Element {
    return this.dataset['00402008'];
  }

  // Order Enterer's Location
  get OrderEntererLocation(): any {
    const element = this.dataset['00402009'];
    return (element?.Value.length === 1)
      ? this.dataset['00402009']?.Value[0]
      : this.dataset['00402009']?.Value;
  }

  get '00402009'(): Element {
    return this.dataset['00402009'];
  }

  // Order Callback Phone Number
  get OrderCallbackPhoneNumber(): any {
    const element = this.dataset['00402010'];
    return (element?.Value.length === 1)
      ? this.dataset['00402010']?.Value[0]
      : this.dataset['00402010']?.Value;
  }

  get '00402010'(): Element {
    return this.dataset['00402010'];
  }

  // Placer Order Number / Imaging Service Request
  get PlacerOrderNumberImagingServiceRequest(): any {
    const element = this.dataset['00402016'];
    return (element?.Value.length === 1)
      ? this.dataset['00402016']?.Value[0]
      : this.dataset['00402016']?.Value;
  }

  get '00402016'(): Element {
    return this.dataset['00402016'];
  }

  // Filler Order Number / Imaging Service Request
  get FillerOrderNumberImagingServiceRequest(): any {
    const element = this.dataset['00402017'];
    return (element?.Value.length === 1)
      ? this.dataset['00402017']?.Value[0]
      : this.dataset['00402017']?.Value;
  }

  get '00402017'(): Element {
    return this.dataset['00402017'];
  }

  // Imaging Service Request Comments
  get ImagingServiceRequestComments(): any {
    const element = this.dataset['00402400'];
    return (element?.Value.length === 1)
      ? this.dataset['00402400']?.Value[0]
      : this.dataset['00402400']?.Value;
  }

  get '00402400'(): Element {
    return this.dataset['00402400'];
  }

  // Confidentiality Constraint on Patient Data Description
  get ConfidentialityConstraintOnPatientDataDescription(): any {
    const element = this.dataset['00403001'];
    return (element?.Value.length === 1)
      ? this.dataset['00403001']?.Value[0]
      : this.dataset['00403001']?.Value;
  }

  get '00403001'(): Element {
    return this.dataset['00403001'];
  }

  // General Purpose Scheduled Procedure Step Status
  get GeneralPurposeScheduledProcedureStepStatus(): any {
    const element = this.dataset['00404001'];
    return (element?.Value.length === 1)
      ? this.dataset['00404001']?.Value[0]
      : this.dataset['00404001']?.Value;
  }

  get '00404001'(): Element {
    return this.dataset['00404001'];
  }

  // General Purpose Performed Procedure Step Status
  get GeneralPurposePerformedProcedureStepStatus(): any {
    const element = this.dataset['00404002'];
    return (element?.Value.length === 1)
      ? this.dataset['00404002']?.Value[0]
      : this.dataset['00404002']?.Value;
  }

  get '00404002'(): Element {
    return this.dataset['00404002'];
  }

  // General Purpose Scheduled Procedure Step Priority
  get GeneralPurposeScheduledProcedureStepPriority(): any {
    const element = this.dataset['00404003'];
    return (element?.Value.length === 1)
      ? this.dataset['00404003']?.Value[0]
      : this.dataset['00404003']?.Value;
  }

  get '00404003'(): Element {
    return this.dataset['00404003'];
  }

  // Scheduled Processing Applications Code Sequence
  get ScheduledProcessingApplicationsCodeSequence(): any {
    const element = this.dataset['00404004'];
    return (element?.Value.length === 1)
      ? this.dataset['00404004']?.Value[0]
      : this.dataset['00404004']?.Value;
  }

  get '00404004'(): Element {
    return this.dataset['00404004'];
  }

  // Scheduled Procedure Step Start DateTime
  get ScheduledProcedureStepStartDateTime(): any {
    const element = this.dataset['00404005'];
    return (element?.Value.length === 1)
      ? this.dataset['00404005']?.Value[0]
      : this.dataset['00404005']?.Value;
  }

  get '00404005'(): Element {
    return this.dataset['00404005'];
  }

  // Multiple Copies Flag
  get MultipleCopiesFlag(): any {
    const element = this.dataset['00404006'];
    return (element?.Value.length === 1)
      ? this.dataset['00404006']?.Value[0]
      : this.dataset['00404006']?.Value;
  }

  get '00404006'(): Element {
    return this.dataset['00404006'];
  }

  // Performed Processing Applications Code Sequence
  get PerformedProcessingApplicationsCodeSequence(): any {
    const element = this.dataset['00404007'];
    return (element?.Value.length === 1)
      ? this.dataset['00404007']?.Value[0]
      : this.dataset['00404007']?.Value;
  }

  get '00404007'(): Element {
    return this.dataset['00404007'];
  }

  // Human Performer Code Sequence
  get HumanPerformerCodeSequence(): any {
    const element = this.dataset['00404009'];
    return (element?.Value.length === 1)
      ? this.dataset['00404009']?.Value[0]
      : this.dataset['00404009']?.Value;
  }

  get '00404009'(): Element {
    return this.dataset['00404009'];
  }

  // Scheduled Procedure Step Modification DateTime
  get ScheduledProcedureStepModificationDateTime(): any {
    const element = this.dataset['00404010'];
    return (element?.Value.length === 1)
      ? this.dataset['00404010']?.Value[0]
      : this.dataset['00404010']?.Value;
  }

  get '00404010'(): Element {
    return this.dataset['00404010'];
  }

  // Expected Completion DateTime
  get ExpectedCompletionDateTime(): any {
    const element = this.dataset['00404011'];
    return (element?.Value.length === 1)
      ? this.dataset['00404011']?.Value[0]
      : this.dataset['00404011']?.Value;
  }

  get '00404011'(): Element {
    return this.dataset['00404011'];
  }

  // Resulting General Purpose Performed Procedure Steps Sequence
  get ResultingGeneralPurposePerformedProcedureStepsSequence(): any {
    const element = this.dataset['00404015'];
    return (element?.Value.length === 1)
      ? this.dataset['00404015']?.Value[0]
      : this.dataset['00404015']?.Value;
  }

  get '00404015'(): Element {
    return this.dataset['00404015'];
  }

  // Referenced General Purpose Scheduled Procedure Step Sequence
  get ReferencedGeneralPurposeScheduledProcedureStepSequence(): any {
    const element = this.dataset['00404016'];
    return (element?.Value.length === 1)
      ? this.dataset['00404016']?.Value[0]
      : this.dataset['00404016']?.Value;
  }

  get '00404016'(): Element {
    return this.dataset['00404016'];
  }

  // Scheduled Workitem Code Sequence
  get ScheduledWorkitemCodeSequence(): any {
    const element = this.dataset['00404018'];
    return (element?.Value.length === 1)
      ? this.dataset['00404018']?.Value[0]
      : this.dataset['00404018']?.Value;
  }

  get '00404018'(): Element {
    return this.dataset['00404018'];
  }

  // Performed Workitem Code Sequence
  get PerformedWorkitemCodeSequence(): any {
    const element = this.dataset['00404019'];
    return (element?.Value.length === 1)
      ? this.dataset['00404019']?.Value[0]
      : this.dataset['00404019']?.Value;
  }

  get '00404019'(): Element {
    return this.dataset['00404019'];
  }

  // Input Availability Flag
  get InputAvailabilityFlag(): any {
    const element = this.dataset['00404020'];
    return (element?.Value.length === 1)
      ? this.dataset['00404020']?.Value[0]
      : this.dataset['00404020']?.Value;
  }

  get '00404020'(): Element {
    return this.dataset['00404020'];
  }

  // Input Information Sequence
  get InputInformationSequence(): any {
    const element = this.dataset['00404021'];
    return (element?.Value.length === 1)
      ? this.dataset['00404021']?.Value[0]
      : this.dataset['00404021']?.Value;
  }

  get '00404021'(): Element {
    return this.dataset['00404021'];
  }

  // Relevant Information Sequence
  get RelevantInformationSequence(): any {
    const element = this.dataset['00404022'];
    return (element?.Value.length === 1)
      ? this.dataset['00404022']?.Value[0]
      : this.dataset['00404022']?.Value;
  }

  get '00404022'(): Element {
    return this.dataset['00404022'];
  }

  // Referenced General Purpose Scheduled Procedure Step Transaction UID
  get ReferencedGeneralPurposeScheduledProcedureStepTransactionUID(): any {
    const element = this.dataset['00404023'];
    return (element?.Value.length === 1)
      ? this.dataset['00404023']?.Value[0]
      : this.dataset['00404023']?.Value;
  }

  get '00404023'(): Element {
    return this.dataset['00404023'];
  }

  // Scheduled Station Name Code Sequence
  get ScheduledStationNameCodeSequence(): any {
    const element = this.dataset['00404025'];
    return (element?.Value.length === 1)
      ? this.dataset['00404025']?.Value[0]
      : this.dataset['00404025']?.Value;
  }

  get '00404025'(): Element {
    return this.dataset['00404025'];
  }

  // Scheduled Station Class Code Sequence
  get ScheduledStationClassCodeSequence(): any {
    const element = this.dataset['00404026'];
    return (element?.Value.length === 1)
      ? this.dataset['00404026']?.Value[0]
      : this.dataset['00404026']?.Value;
  }

  get '00404026'(): Element {
    return this.dataset['00404026'];
  }

  // Scheduled Station Geographic Location Code Sequence
  get ScheduledStationGeographicLocationCodeSequence(): any {
    const element = this.dataset['00404027'];
    return (element?.Value.length === 1)
      ? this.dataset['00404027']?.Value[0]
      : this.dataset['00404027']?.Value;
  }

  get '00404027'(): Element {
    return this.dataset['00404027'];
  }

  // Performed Station Name Code Sequence
  get PerformedStationNameCodeSequence(): any {
    const element = this.dataset['00404028'];
    return (element?.Value.length === 1)
      ? this.dataset['00404028']?.Value[0]
      : this.dataset['00404028']?.Value;
  }

  get '00404028'(): Element {
    return this.dataset['00404028'];
  }

  // Performed Station Class Code Sequence
  get PerformedStationClassCodeSequence(): any {
    const element = this.dataset['00404029'];
    return (element?.Value.length === 1)
      ? this.dataset['00404029']?.Value[0]
      : this.dataset['00404029']?.Value;
  }

  get '00404029'(): Element {
    return this.dataset['00404029'];
  }

  // Performed Station Geographic Location Code Sequence
  get PerformedStationGeographicLocationCodeSequence(): any {
    const element = this.dataset['00404030'];
    return (element?.Value.length === 1)
      ? this.dataset['00404030']?.Value[0]
      : this.dataset['00404030']?.Value;
  }

  get '00404030'(): Element {
    return this.dataset['00404030'];
  }

  // Requested Subsequent Workitem Code Sequence
  get RequestedSubsequentWorkitemCodeSequence(): any {
    const element = this.dataset['00404031'];
    return (element?.Value.length === 1)
      ? this.dataset['00404031']?.Value[0]
      : this.dataset['00404031']?.Value;
  }

  get '00404031'(): Element {
    return this.dataset['00404031'];
  }

  // Non-DICOM Output Code Sequence
  get NonDICOMOutputCodeSequence(): any {
    const element = this.dataset['00404032'];
    return (element?.Value.length === 1)
      ? this.dataset['00404032']?.Value[0]
      : this.dataset['00404032']?.Value;
  }

  get '00404032'(): Element {
    return this.dataset['00404032'];
  }

  // Output Information Sequence
  get OutputInformationSequence(): any {
    const element = this.dataset['00404033'];
    return (element?.Value.length === 1)
      ? this.dataset['00404033']?.Value[0]
      : this.dataset['00404033']?.Value;
  }

  get '00404033'(): Element {
    return this.dataset['00404033'];
  }

  // Scheduled Human Performers Sequence
  get ScheduledHumanPerformersSequence(): any {
    const element = this.dataset['00404034'];
    return (element?.Value.length === 1)
      ? this.dataset['00404034']?.Value[0]
      : this.dataset['00404034']?.Value;
  }

  get '00404034'(): Element {
    return this.dataset['00404034'];
  }

  // Actual Human Performers Sequence
  get ActualHumanPerformersSequence(): any {
    const element = this.dataset['00404035'];
    return (element?.Value.length === 1)
      ? this.dataset['00404035']?.Value[0]
      : this.dataset['00404035']?.Value;
  }

  get '00404035'(): Element {
    return this.dataset['00404035'];
  }

  // Human Performer's Organization
  get HumanPerformerOrganization(): any {
    const element = this.dataset['00404036'];
    return (element?.Value.length === 1)
      ? this.dataset['00404036']?.Value[0]
      : this.dataset['00404036']?.Value;
  }

  get '00404036'(): Element {
    return this.dataset['00404036'];
  }

  // Human Performer's Name
  get HumanPerformerName(): any {
    const element = this.dataset['00404037'];
    return (element?.Value.length === 1)
      ? this.dataset['00404037']?.Value[0]
      : this.dataset['00404037']?.Value;
  }

  get '00404037'(): Element {
    return this.dataset['00404037'];
  }

  // Raw Data Handling
  get RawDataHandling(): any {
    const element = this.dataset['00404040'];
    return (element?.Value.length === 1)
      ? this.dataset['00404040']?.Value[0]
      : this.dataset['00404040']?.Value;
  }

  get '00404040'(): Element {
    return this.dataset['00404040'];
  }

  // Input Readiness State
  get InputReadinessState(): any {
    const element = this.dataset['00404041'];
    return (element?.Value.length === 1)
      ? this.dataset['00404041']?.Value[0]
      : this.dataset['00404041']?.Value;
  }

  get '00404041'(): Element {
    return this.dataset['00404041'];
  }

  // Performed Procedure Step Start DateTime
  get PerformedProcedureStepStartDateTime(): any {
    const element = this.dataset['00404050'];
    return (element?.Value.length === 1)
      ? this.dataset['00404050']?.Value[0]
      : this.dataset['00404050']?.Value;
  }

  get '00404050'(): Element {
    return this.dataset['00404050'];
  }

  // Performed Procedure Step End DateTime
  get PerformedProcedureStepEndDateTime(): any {
    const element = this.dataset['00404051'];
    return (element?.Value.length === 1)
      ? this.dataset['00404051']?.Value[0]
      : this.dataset['00404051']?.Value;
  }

  get '00404051'(): Element {
    return this.dataset['00404051'];
  }

  // Procedure Step Cancellation DateTime
  get ProcedureStepCancellationDateTime(): any {
    const element = this.dataset['00404052'];
    return (element?.Value.length === 1)
      ? this.dataset['00404052']?.Value[0]
      : this.dataset['00404052']?.Value;
  }

  get '00404052'(): Element {
    return this.dataset['00404052'];
  }

  // Entrance Dose in mGy
  get EntranceDoseInmGy(): any {
    const element = this.dataset['00408302'];
    return (element?.Value.length === 1)
      ? this.dataset['00408302']?.Value[0]
      : this.dataset['00408302']?.Value;
  }

  get '00408302'(): Element {
    return this.dataset['00408302'];
  }

  // Referenced Image Real World Value Mapping Sequence
  get ReferencedImageRealWorldValueMappingSequence(): any {
    const element = this.dataset['00409094'];
    return (element?.Value.length === 1)
      ? this.dataset['00409094']?.Value[0]
      : this.dataset['00409094']?.Value;
  }

  get '00409094'(): Element {
    return this.dataset['00409094'];
  }

  // Real World Value Mapping Sequence
  get RealWorldValueMappingSequence(): any {
    const element = this.dataset['00409096'];
    return (element?.Value.length === 1)
      ? this.dataset['00409096']?.Value[0]
      : this.dataset['00409096']?.Value;
  }

  get '00409096'(): Element {
    return this.dataset['00409096'];
  }

  // Pixel Value Mapping Code Sequence
  get PixelValueMappingCodeSequence(): any {
    const element = this.dataset['00409098'];
    return (element?.Value.length === 1)
      ? this.dataset['00409098']?.Value[0]
      : this.dataset['00409098']?.Value;
  }

  get '00409098'(): Element {
    return this.dataset['00409098'];
  }

  // LUT Label
  get LUTLabel(): any {
    const element = this.dataset['00409210'];
    return (element?.Value.length === 1)
      ? this.dataset['00409210']?.Value[0]
      : this.dataset['00409210']?.Value;
  }

  get '00409210'(): Element {
    return this.dataset['00409210'];
  }

  // Real World Value Last Value Mapped
  get RealWorldValueLastValueMapped(): any {
    const element = this.dataset['00409211'];
    return (element?.Value.length === 1)
      ? this.dataset['00409211']?.Value[0]
      : this.dataset['00409211']?.Value;
  }

  get '00409211'(): Element {
    return this.dataset['00409211'];
  }

  // Real World Value LUT Data
  get RealWorldValueLUTData(): any {
    const element = this.dataset['00409212'];
    return (element?.Value.length === 1)
      ? this.dataset['00409212']?.Value[0]
      : this.dataset['00409212']?.Value;
  }

  get '00409212'(): Element {
    return this.dataset['00409212'];
  }

  // Real World Value First Value Mapped
  get RealWorldValueFirstValueMapped(): any {
    const element = this.dataset['00409216'];
    return (element?.Value.length === 1)
      ? this.dataset['00409216']?.Value[0]
      : this.dataset['00409216']?.Value;
  }

  get '00409216'(): Element {
    return this.dataset['00409216'];
  }

  // Real World Value Intercept
  get RealWorldValueIntercept(): any {
    const element = this.dataset['00409224'];
    return (element?.Value.length === 1)
      ? this.dataset['00409224']?.Value[0]
      : this.dataset['00409224']?.Value;
  }

  get '00409224'(): Element {
    return this.dataset['00409224'];
  }

  // Real World Value Slope
  get RealWorldValueSlope(): any {
    const element = this.dataset['00409225'];
    return (element?.Value.length === 1)
      ? this.dataset['00409225']?.Value[0]
      : this.dataset['00409225']?.Value;
  }

  get '00409225'(): Element {
    return this.dataset['00409225'];
  }

  // Findings Flag (Trial)
  get FindingsFlagTrial(): any {
    const element = this.dataset['0040A007'];
    return (element?.Value.length === 1)
      ? this.dataset['0040A007']?.Value[0]
      : this.dataset['0040A007']?.Value;
  }

  get '0040A007'(): Element {
    return this.dataset['0040A007'];
  }

  // Relationship Type
  get RelationshipType(): any {
    const element = this.dataset['0040A010'];
    return (element?.Value.length === 1)
      ? this.dataset['0040A010']?.Value[0]
      : this.dataset['0040A010']?.Value;
  }

  get '0040A010'(): Element {
    return this.dataset['0040A010'];
  }

  // Findings Sequence (Trial)
  get FindingsSequenceTrial(): any {
    const element = this.dataset['0040A020'];
    return (element?.Value.length === 1)
      ? this.dataset['0040A020']?.Value[0]
      : this.dataset['0040A020']?.Value;
  }

  get '0040A020'(): Element {
    return this.dataset['0040A020'];
  }

  // Findings Group UID (Trial)
  get FindingsGroupUIDTrial(): any {
    const element = this.dataset['0040A021'];
    return (element?.Value.length === 1)
      ? this.dataset['0040A021']?.Value[0]
      : this.dataset['0040A021']?.Value;
  }

  get '0040A021'(): Element {
    return this.dataset['0040A021'];
  }

  // Referenced Findings Group UID (Trial)
  get ReferencedFindingsGroupUIDTrial(): any {
    const element = this.dataset['0040A022'];
    return (element?.Value.length === 1)
      ? this.dataset['0040A022']?.Value[0]
      : this.dataset['0040A022']?.Value;
  }

  get '0040A022'(): Element {
    return this.dataset['0040A022'];
  }

  // Findings Group Recording Date (Trial)
  get FindingsGroupRecordingDateTrial(): any {
    const element = this.dataset['0040A023'];
    return (element?.Value.length === 1)
      ? this.dataset['0040A023']?.Value[0]
      : this.dataset['0040A023']?.Value;
  }

  get '0040A023'(): Element {
    return this.dataset['0040A023'];
  }

  // Findings Group Recording Time (Trial)
  get FindingsGroupRecordingTimeTrial(): any {
    const element = this.dataset['0040A024'];
    return (element?.Value.length === 1)
      ? this.dataset['0040A024']?.Value[0]
      : this.dataset['0040A024']?.Value;
  }

  get '0040A024'(): Element {
    return this.dataset['0040A024'];
  }

  // Findings Source Category Code Sequence (Trial)
  get FindingsSourceCategoryCodeSequenceTrial(): any {
    const element = this.dataset['0040A026'];
    return (element?.Value.length === 1)
      ? this.dataset['0040A026']?.Value[0]
      : this.dataset['0040A026']?.Value;
  }

  get '0040A026'(): Element {
    return this.dataset['0040A026'];
  }

  // Verifying Organization
  get VerifyingOrganization(): any {
    const element = this.dataset['0040A027'];
    return (element?.Value.length === 1)
      ? this.dataset['0040A027']?.Value[0]
      : this.dataset['0040A027']?.Value;
  }

  get '0040A027'(): Element {
    return this.dataset['0040A027'];
  }

  // Documenting Organization Identifier Code Sequence (Trial)
  get DocumentingOrganizationIdentifierCodeSequenceTrial(): any {
    const element = this.dataset['0040A028'];
    return (element?.Value.length === 1)
      ? this.dataset['0040A028']?.Value[0]
      : this.dataset['0040A028']?.Value;
  }

  get '0040A028'(): Element {
    return this.dataset['0040A028'];
  }

  // Verification DateTime
  get VerificationDateTime(): any {
    const element = this.dataset['0040A030'];
    return (element?.Value.length === 1)
      ? this.dataset['0040A030']?.Value[0]
      : this.dataset['0040A030']?.Value;
  }

  get '0040A030'(): Element {
    return this.dataset['0040A030'];
  }

  // Observation DateTime
  get ObservationDateTime(): any {
    const element = this.dataset['0040A032'];
    return (element?.Value.length === 1)
      ? this.dataset['0040A032']?.Value[0]
      : this.dataset['0040A032']?.Value;
  }

  get '0040A032'(): Element {
    return this.dataset['0040A032'];
  }

  // Value Type
  get ValueType(): any {
    const element = this.dataset['0040A040'];
    return (element?.Value.length === 1)
      ? this.dataset['0040A040']?.Value[0]
      : this.dataset['0040A040']?.Value;
  }

  get '0040A040'(): Element {
    return this.dataset['0040A040'];
  }

  // Concept Name Code Sequence
  get ConceptNameCodeSequence(): any {
    const element = this.dataset['0040A043'];
    return (element?.Value.length === 1)
      ? this.dataset['0040A043']?.Value[0]
      : this.dataset['0040A043']?.Value;
  }

  get '0040A043'(): Element {
    return this.dataset['0040A043'];
  }

  // Measurement Precision Description (Trial)
  get MeasurementPrecisionDescriptionTrial(): any {
    const element = this.dataset['0040A047'];
    return (element?.Value.length === 1)
      ? this.dataset['0040A047']?.Value[0]
      : this.dataset['0040A047']?.Value;
  }

  get '0040A047'(): Element {
    return this.dataset['0040A047'];
  }

  // Continuity Of Content
  get ContinuityOfContent(): any {
    const element = this.dataset['0040A050'];
    return (element?.Value.length === 1)
      ? this.dataset['0040A050']?.Value[0]
      : this.dataset['0040A050']?.Value;
  }

  get '0040A050'(): Element {
    return this.dataset['0040A050'];
  }

  // Urgency or Priority Alerts (Trial)
  get UrgencyOrPriorityAlertsTrial(): any {
    const element = this.dataset['0040A057'];
    return (element?.Value.length === 1)
      ? this.dataset['0040A057']?.Value[0]
      : this.dataset['0040A057']?.Value;
  }

  get '0040A057'(): Element {
    return this.dataset['0040A057'];
  }

  // Sequencing Indicator (Trial)
  get SequencingIndicatorTrial(): any {
    const element = this.dataset['0040A060'];
    return (element?.Value.length === 1)
      ? this.dataset['0040A060']?.Value[0]
      : this.dataset['0040A060']?.Value;
  }

  get '0040A060'(): Element {
    return this.dataset['0040A060'];
  }

  // Document Identifier Code Sequence (Trial)
  get DocumentIdentifierCodeSequenceTrial(): any {
    const element = this.dataset['0040A066'];
    return (element?.Value.length === 1)
      ? this.dataset['0040A066']?.Value[0]
      : this.dataset['0040A066']?.Value;
  }

  get '0040A066'(): Element {
    return this.dataset['0040A066'];
  }

  // Document Author (Trial)
  get DocumentAuthorTrial(): any {
    const element = this.dataset['0040A067'];
    return (element?.Value.length === 1)
      ? this.dataset['0040A067']?.Value[0]
      : this.dataset['0040A067']?.Value;
  }

  get '0040A067'(): Element {
    return this.dataset['0040A067'];
  }

  // Document Author Identifier Code Sequence (Trial)
  get DocumentAuthorIdentifierCodeSequenceTrial(): any {
    const element = this.dataset['0040A068'];
    return (element?.Value.length === 1)
      ? this.dataset['0040A068']?.Value[0]
      : this.dataset['0040A068']?.Value;
  }

  get '0040A068'(): Element {
    return this.dataset['0040A068'];
  }

  // Identifier Code Sequence (Trial)
  get IdentifierCodeSequenceTrial(): any {
    const element = this.dataset['0040A070'];
    return (element?.Value.length === 1)
      ? this.dataset['0040A070']?.Value[0]
      : this.dataset['0040A070']?.Value;
  }

  get '0040A070'(): Element {
    return this.dataset['0040A070'];
  }

  // Verifying Observer Sequence
  get VerifyingObserverSequence(): any {
    const element = this.dataset['0040A073'];
    return (element?.Value.length === 1)
      ? this.dataset['0040A073']?.Value[0]
      : this.dataset['0040A073']?.Value;
  }

  get '0040A073'(): Element {
    return this.dataset['0040A073'];
  }

  // Object Binary Identifier (Trial)
  get ObjectBinaryIdentifierTrial(): any {
    const element = this.dataset['0040A074'];
    return (element?.Value.length === 1)
      ? this.dataset['0040A074']?.Value[0]
      : this.dataset['0040A074']?.Value;
  }

  get '0040A074'(): Element {
    return this.dataset['0040A074'];
  }

  // Verifying Observer Name
  get VerifyingObserverName(): any {
    const element = this.dataset['0040A075'];
    return (element?.Value.length === 1)
      ? this.dataset['0040A075']?.Value[0]
      : this.dataset['0040A075']?.Value;
  }

  get '0040A075'(): Element {
    return this.dataset['0040A075'];
  }

  // Documenting Observer Identifier Code Sequence (Trial)
  get DocumentingObserverIdentifierCodeSequenceTrial(): any {
    const element = this.dataset['0040A076'];
    return (element?.Value.length === 1)
      ? this.dataset['0040A076']?.Value[0]
      : this.dataset['0040A076']?.Value;
  }

  get '0040A076'(): Element {
    return this.dataset['0040A076'];
  }

  // Author Observer Sequence
  get AuthorObserverSequence(): any {
    const element = this.dataset['0040A078'];
    return (element?.Value.length === 1)
      ? this.dataset['0040A078']?.Value[0]
      : this.dataset['0040A078']?.Value;
  }

  get '0040A078'(): Element {
    return this.dataset['0040A078'];
  }

  // Participant Sequence
  get ParticipantSequence(): any {
    const element = this.dataset['0040A07A'];
    return (element?.Value.length === 1)
      ? this.dataset['0040A07A']?.Value[0]
      : this.dataset['0040A07A']?.Value;
  }

  get '0040A07A'(): Element {
    return this.dataset['0040A07A'];
  }

  // Custodial Organization Sequence
  get CustodialOrganizationSequence(): any {
    const element = this.dataset['0040A07C'];
    return (element?.Value.length === 1)
      ? this.dataset['0040A07C']?.Value[0]
      : this.dataset['0040A07C']?.Value;
  }

  get '0040A07C'(): Element {
    return this.dataset['0040A07C'];
  }

  // Participation Type
  get ParticipationType(): any {
    const element = this.dataset['0040A080'];
    return (element?.Value.length === 1)
      ? this.dataset['0040A080']?.Value[0]
      : this.dataset['0040A080']?.Value;
  }

  get '0040A080'(): Element {
    return this.dataset['0040A080'];
  }

  // Participation DateTime
  get ParticipationDateTime(): any {
    const element = this.dataset['0040A082'];
    return (element?.Value.length === 1)
      ? this.dataset['0040A082']?.Value[0]
      : this.dataset['0040A082']?.Value;
  }

  get '0040A082'(): Element {
    return this.dataset['0040A082'];
  }

  // Observer Type
  get ObserverType(): any {
    const element = this.dataset['0040A084'];
    return (element?.Value.length === 1)
      ? this.dataset['0040A084']?.Value[0]
      : this.dataset['0040A084']?.Value;
  }

  get '0040A084'(): Element {
    return this.dataset['0040A084'];
  }

  // Procedure Identifier Code Sequence (Trial)
  get ProcedureIdentifierCodeSequenceTrial(): any {
    const element = this.dataset['0040A085'];
    return (element?.Value.length === 1)
      ? this.dataset['0040A085']?.Value[0]
      : this.dataset['0040A085']?.Value;
  }

  get '0040A085'(): Element {
    return this.dataset['0040A085'];
  }

  // Verifying Observer Identification Code Sequence
  get VerifyingObserverIdentificationCodeSequence(): any {
    const element = this.dataset['0040A088'];
    return (element?.Value.length === 1)
      ? this.dataset['0040A088']?.Value[0]
      : this.dataset['0040A088']?.Value;
  }

  get '0040A088'(): Element {
    return this.dataset['0040A088'];
  }

  // Object Directory Binary Identifier (Trial)
  get ObjectDirectoryBinaryIdentifierTrial(): any {
    const element = this.dataset['0040A089'];
    return (element?.Value.length === 1)
      ? this.dataset['0040A089']?.Value[0]
      : this.dataset['0040A089']?.Value;
  }

  get '0040A089'(): Element {
    return this.dataset['0040A089'];
  }

  // Equivalent CDA Document Sequence
  get EquivalentCDADocumentSequence(): any {
    const element = this.dataset['0040A090'];
    return (element?.Value.length === 1)
      ? this.dataset['0040A090']?.Value[0]
      : this.dataset['0040A090']?.Value;
  }

  get '0040A090'(): Element {
    return this.dataset['0040A090'];
  }

  // Referenced Waveform Channels
  get ReferencedWaveformChannels(): any {
    const element = this.dataset['0040A0B0'];
    return (element?.Value.length === 1)
      ? this.dataset['0040A0B0']?.Value[0]
      : this.dataset['0040A0B0']?.Value;
  }

  get '0040A0B0'(): Element {
    return this.dataset['0040A0B0'];
  }

  // Date of Document or Verbal Transaction (Trial)
  get DateOfDocumentOrVerbalTransactionTrial(): any {
    const element = this.dataset['0040A110'];
    return (element?.Value.length === 1)
      ? this.dataset['0040A110']?.Value[0]
      : this.dataset['0040A110']?.Value;
  }

  get '0040A110'(): Element {
    return this.dataset['0040A110'];
  }

  // Time of Document Creation or Verbal Transaction (Trial)
  get TimeOfDocumentCreationOrVerbalTransactionTrial(): any {
    const element = this.dataset['0040A112'];
    return (element?.Value.length === 1)
      ? this.dataset['0040A112']?.Value[0]
      : this.dataset['0040A112']?.Value;
  }

  get '0040A112'(): Element {
    return this.dataset['0040A112'];
  }

  // DateTime
  get DateTime(): any {
    const element = this.dataset['0040A120'];
    return (element?.Value.length === 1)
      ? this.dataset['0040A120']?.Value[0]
      : this.dataset['0040A120']?.Value;
  }

  get '0040A120'(): Element {
    return this.dataset['0040A120'];
  }

  // Date
  get Date(): any {
    const element = this.dataset['0040A121'];
    return (element?.Value.length === 1)
      ? this.dataset['0040A121']?.Value[0]
      : this.dataset['0040A121']?.Value;
  }

  get '0040A121'(): Element {
    return this.dataset['0040A121'];
  }

  // Time
  get Time(): any {
    const element = this.dataset['0040A122'];
    return (element?.Value.length === 1)
      ? this.dataset['0040A122']?.Value[0]
      : this.dataset['0040A122']?.Value;
  }

  get '0040A122'(): Element {
    return this.dataset['0040A122'];
  }

  // Person Name
  get PersonName(): any {
    const element = this.dataset['0040A123'];
    return (element?.Value.length === 1)
      ? this.dataset['0040A123']?.Value[0]
      : this.dataset['0040A123']?.Value;
  }

  get '0040A123'(): Element {
    return this.dataset['0040A123'];
  }

  // UID
  get UID(): any {
    const element = this.dataset['0040A124'];
    return (element?.Value.length === 1)
      ? this.dataset['0040A124']?.Value[0]
      : this.dataset['0040A124']?.Value;
  }

  get '0040A124'(): Element {
    return this.dataset['0040A124'];
  }

  // Report Status ID (Trial)
  get ReportStatusIDTrial(): any {
    const element = this.dataset['0040A125'];
    return (element?.Value.length === 1)
      ? this.dataset['0040A125']?.Value[0]
      : this.dataset['0040A125']?.Value;
  }

  get '0040A125'(): Element {
    return this.dataset['0040A125'];
  }

  // Temporal Range Type
  get TemporalRangeType(): any {
    const element = this.dataset['0040A130'];
    return (element?.Value.length === 1)
      ? this.dataset['0040A130']?.Value[0]
      : this.dataset['0040A130']?.Value;
  }

  get '0040A130'(): Element {
    return this.dataset['0040A130'];
  }

  // Referenced Sample Positions
  get ReferencedSamplePositions(): any {
    const element = this.dataset['0040A132'];
    return (element?.Value.length === 1)
      ? this.dataset['0040A132']?.Value[0]
      : this.dataset['0040A132']?.Value;
  }

  get '0040A132'(): Element {
    return this.dataset['0040A132'];
  }

  // Referenced Frame Numbers
  get ReferencedFrameNumbers(): any {
    const element = this.dataset['0040A136'];
    return (element?.Value.length === 1)
      ? this.dataset['0040A136']?.Value[0]
      : this.dataset['0040A136']?.Value;
  }

  get '0040A136'(): Element {
    return this.dataset['0040A136'];
  }

  // Referenced Time Offsets
  get ReferencedTimeOffsets(): any {
    const element = this.dataset['0040A138'];
    return (element?.Value.length === 1)
      ? this.dataset['0040A138']?.Value[0]
      : this.dataset['0040A138']?.Value;
  }

  get '0040A138'(): Element {
    return this.dataset['0040A138'];
  }

  // Referenced DateTime
  get ReferencedDateTime(): any {
    const element = this.dataset['0040A13A'];
    return (element?.Value.length === 1)
      ? this.dataset['0040A13A']?.Value[0]
      : this.dataset['0040A13A']?.Value;
  }

  get '0040A13A'(): Element {
    return this.dataset['0040A13A'];
  }

  // Text Value
  get TextValue(): any {
    const element = this.dataset['0040A160'];
    return (element?.Value.length === 1)
      ? this.dataset['0040A160']?.Value[0]
      : this.dataset['0040A160']?.Value;
  }

  get '0040A160'(): Element {
    return this.dataset['0040A160'];
  }

  // Floating Point Value
  get FloatingPointValue(): any {
    const element = this.dataset['0040A161'];
    return (element?.Value.length === 1)
      ? this.dataset['0040A161']?.Value[0]
      : this.dataset['0040A161']?.Value;
  }

  get '0040A161'(): Element {
    return this.dataset['0040A161'];
  }

  // Rational Numerator Value
  get RationalNumeratorValue(): any {
    const element = this.dataset['0040A162'];
    return (element?.Value.length === 1)
      ? this.dataset['0040A162']?.Value[0]
      : this.dataset['0040A162']?.Value;
  }

  get '0040A162'(): Element {
    return this.dataset['0040A162'];
  }

  // Rational Denominator Value
  get RationalDenominatorValue(): any {
    const element = this.dataset['0040A163'];
    return (element?.Value.length === 1)
      ? this.dataset['0040A163']?.Value[0]
      : this.dataset['0040A163']?.Value;
  }

  get '0040A163'(): Element {
    return this.dataset['0040A163'];
  }

  // Observation Category Code Sequence (Trial)
  get ObservationCategoryCodeSequenceTrial(): any {
    const element = this.dataset['0040A167'];
    return (element?.Value.length === 1)
      ? this.dataset['0040A167']?.Value[0]
      : this.dataset['0040A167']?.Value;
  }

  get '0040A167'(): Element {
    return this.dataset['0040A167'];
  }

  // Concept Code Sequence
  get ConceptCodeSequence(): any {
    const element = this.dataset['0040A168'];
    return (element?.Value.length === 1)
      ? this.dataset['0040A168']?.Value[0]
      : this.dataset['0040A168']?.Value;
  }

  get '0040A168'(): Element {
    return this.dataset['0040A168'];
  }

  // Bibliographic Citation (Trial)
  get BibliographicCitationTrial(): any {
    const element = this.dataset['0040A16A'];
    return (element?.Value.length === 1)
      ? this.dataset['0040A16A']?.Value[0]
      : this.dataset['0040A16A']?.Value;
  }

  get '0040A16A'(): Element {
    return this.dataset['0040A16A'];
  }

  // Purpose of Reference Code Sequence
  get PurposeOfReferenceCodeSequence(): any {
    const element = this.dataset['0040A170'];
    return (element?.Value.length === 1)
      ? this.dataset['0040A170']?.Value[0]
      : this.dataset['0040A170']?.Value;
  }

  get '0040A170'(): Element {
    return this.dataset['0040A170'];
  }

  // Observation UID
  get ObservationUID(): any {
    const element = this.dataset['0040A171'];
    return (element?.Value.length === 1)
      ? this.dataset['0040A171']?.Value[0]
      : this.dataset['0040A171']?.Value;
  }

  get '0040A171'(): Element {
    return this.dataset['0040A171'];
  }

  // Referenced Observation UID (Trial)
  get ReferencedObservationUIDTrial(): any {
    const element = this.dataset['0040A172'];
    return (element?.Value.length === 1)
      ? this.dataset['0040A172']?.Value[0]
      : this.dataset['0040A172']?.Value;
  }

  get '0040A172'(): Element {
    return this.dataset['0040A172'];
  }

  // Referenced Observation Class (Trial)
  get ReferencedObservationClassTrial(): any {
    const element = this.dataset['0040A173'];
    return (element?.Value.length === 1)
      ? this.dataset['0040A173']?.Value[0]
      : this.dataset['0040A173']?.Value;
  }

  get '0040A173'(): Element {
    return this.dataset['0040A173'];
  }

  // Referenced Object Observation Class (Trial)
  get ReferencedObjectObservationClassTrial(): any {
    const element = this.dataset['0040A174'];
    return (element?.Value.length === 1)
      ? this.dataset['0040A174']?.Value[0]
      : this.dataset['0040A174']?.Value;
  }

  get '0040A174'(): Element {
    return this.dataset['0040A174'];
  }

  // Annotation Group Number
  get AnnotationGroupNumber(): any {
    const element = this.dataset['0040A180'];
    return (element?.Value.length === 1)
      ? this.dataset['0040A180']?.Value[0]
      : this.dataset['0040A180']?.Value;
  }

  get '0040A180'(): Element {
    return this.dataset['0040A180'];
  }

  // Observation Date (Trial)
  get ObservationDateTrial(): any {
    const element = this.dataset['0040A192'];
    return (element?.Value.length === 1)
      ? this.dataset['0040A192']?.Value[0]
      : this.dataset['0040A192']?.Value;
  }

  get '0040A192'(): Element {
    return this.dataset['0040A192'];
  }

  // Observation Time (Trial)
  get ObservationTimeTrial(): any {
    const element = this.dataset['0040A193'];
    return (element?.Value.length === 1)
      ? this.dataset['0040A193']?.Value[0]
      : this.dataset['0040A193']?.Value;
  }

  get '0040A193'(): Element {
    return this.dataset['0040A193'];
  }

  // Measurement Automation (Trial)
  get MeasurementAutomationTrial(): any {
    const element = this.dataset['0040A194'];
    return (element?.Value.length === 1)
      ? this.dataset['0040A194']?.Value[0]
      : this.dataset['0040A194']?.Value;
  }

  get '0040A194'(): Element {
    return this.dataset['0040A194'];
  }

  // Modifier Code Sequence
  get ModifierCodeSequence(): any {
    const element = this.dataset['0040A195'];
    return (element?.Value.length === 1)
      ? this.dataset['0040A195']?.Value[0]
      : this.dataset['0040A195']?.Value;
  }

  get '0040A195'(): Element {
    return this.dataset['0040A195'];
  }

  // Identification Description (Trial)
  get IdentificationDescriptionTrial(): any {
    const element = this.dataset['0040A224'];
    return (element?.Value.length === 1)
      ? this.dataset['0040A224']?.Value[0]
      : this.dataset['0040A224']?.Value;
  }

  get '0040A224'(): Element {
    return this.dataset['0040A224'];
  }

  // Coordinates Set Geometric Type (Trial)
  get CoordinatesSetGeometricTypeTrial(): any {
    const element = this.dataset['0040A290'];
    return (element?.Value.length === 1)
      ? this.dataset['0040A290']?.Value[0]
      : this.dataset['0040A290']?.Value;
  }

  get '0040A290'(): Element {
    return this.dataset['0040A290'];
  }

  // Algorithm Code Sequence (Trial)
  get AlgorithmCodeSequenceTrial(): any {
    const element = this.dataset['0040A296'];
    return (element?.Value.length === 1)
      ? this.dataset['0040A296']?.Value[0]
      : this.dataset['0040A296']?.Value;
  }

  get '0040A296'(): Element {
    return this.dataset['0040A296'];
  }

  // Algorithm Description (Trial)
  get AlgorithmDescriptionTrial(): any {
    const element = this.dataset['0040A297'];
    return (element?.Value.length === 1)
      ? this.dataset['0040A297']?.Value[0]
      : this.dataset['0040A297']?.Value;
  }

  get '0040A297'(): Element {
    return this.dataset['0040A297'];
  }

  // Pixel Coordinates Set (Trial)
  get PixelCoordinatesSetTrial(): any {
    const element = this.dataset['0040A29A'];
    return (element?.Value.length === 1)
      ? this.dataset['0040A29A']?.Value[0]
      : this.dataset['0040A29A']?.Value;
  }

  get '0040A29A'(): Element {
    return this.dataset['0040A29A'];
  }

  // Measured Value Sequence
  get MeasuredValueSequence(): any {
    const element = this.dataset['0040A300'];
    return (element?.Value.length === 1)
      ? this.dataset['0040A300']?.Value[0]
      : this.dataset['0040A300']?.Value;
  }

  get '0040A300'(): Element {
    return this.dataset['0040A300'];
  }

  // Numeric Value Qualifier Code Sequence
  get NumericValueQualifierCodeSequence(): any {
    const element = this.dataset['0040A301'];
    return (element?.Value.length === 1)
      ? this.dataset['0040A301']?.Value[0]
      : this.dataset['0040A301']?.Value;
  }

  get '0040A301'(): Element {
    return this.dataset['0040A301'];
  }

  // Current Observer (Trial)
  get CurrentObserverTrial(): any {
    const element = this.dataset['0040A307'];
    return (element?.Value.length === 1)
      ? this.dataset['0040A307']?.Value[0]
      : this.dataset['0040A307']?.Value;
  }

  get '0040A307'(): Element {
    return this.dataset['0040A307'];
  }

  // Numeric Value
  get NumericValue(): any {
    const element = this.dataset['0040A30A'];
    return (element?.Value.length === 1)
      ? this.dataset['0040A30A']?.Value[0]
      : this.dataset['0040A30A']?.Value;
  }

  get '0040A30A'(): Element {
    return this.dataset['0040A30A'];
  }

  // Referenced Accession Sequence (Trial)
  get ReferencedAccessionSequenceTrial(): any {
    const element = this.dataset['0040A313'];
    return (element?.Value.length === 1)
      ? this.dataset['0040A313']?.Value[0]
      : this.dataset['0040A313']?.Value;
  }

  get '0040A313'(): Element {
    return this.dataset['0040A313'];
  }

  // Report Status Comment (Trial)
  get ReportStatusCommentTrial(): any {
    const element = this.dataset['0040A33A'];
    return (element?.Value.length === 1)
      ? this.dataset['0040A33A']?.Value[0]
      : this.dataset['0040A33A']?.Value;
  }

  get '0040A33A'(): Element {
    return this.dataset['0040A33A'];
  }

  // Procedure Context Sequence (Trial)
  get ProcedureContextSequenceTrial(): any {
    const element = this.dataset['0040A340'];
    return (element?.Value.length === 1)
      ? this.dataset['0040A340']?.Value[0]
      : this.dataset['0040A340']?.Value;
  }

  get '0040A340'(): Element {
    return this.dataset['0040A340'];
  }

  // Verbal Source (Trial)
  get VerbalSourceTrial(): any {
    const element = this.dataset['0040A352'];
    return (element?.Value.length === 1)
      ? this.dataset['0040A352']?.Value[0]
      : this.dataset['0040A352']?.Value;
  }

  get '0040A352'(): Element {
    return this.dataset['0040A352'];
  }

  // Address (Trial)
  get AddressTrial(): any {
    const element = this.dataset['0040A353'];
    return (element?.Value.length === 1)
      ? this.dataset['0040A353']?.Value[0]
      : this.dataset['0040A353']?.Value;
  }

  get '0040A353'(): Element {
    return this.dataset['0040A353'];
  }

  // Telephone Number (Trial)
  get TelephoneNumberTrial(): any {
    const element = this.dataset['0040A354'];
    return (element?.Value.length === 1)
      ? this.dataset['0040A354']?.Value[0]
      : this.dataset['0040A354']?.Value;
  }

  get '0040A354'(): Element {
    return this.dataset['0040A354'];
  }

  // Verbal Source Identifier Code Sequence (Trial)
  get VerbalSourceIdentifierCodeSequenceTrial(): any {
    const element = this.dataset['0040A358'];
    return (element?.Value.length === 1)
      ? this.dataset['0040A358']?.Value[0]
      : this.dataset['0040A358']?.Value;
  }

  get '0040A358'(): Element {
    return this.dataset['0040A358'];
  }

  // Predecessor Documents Sequence
  get PredecessorDocumentsSequence(): any {
    const element = this.dataset['0040A360'];
    return (element?.Value.length === 1)
      ? this.dataset['0040A360']?.Value[0]
      : this.dataset['0040A360']?.Value;
  }

  get '0040A360'(): Element {
    return this.dataset['0040A360'];
  }

  // Referenced Request Sequence
  get ReferencedRequestSequence(): any {
    const element = this.dataset['0040A370'];
    return (element?.Value.length === 1)
      ? this.dataset['0040A370']?.Value[0]
      : this.dataset['0040A370']?.Value;
  }

  get '0040A370'(): Element {
    return this.dataset['0040A370'];
  }

  // Performed Procedure Code Sequence
  get PerformedProcedureCodeSequence(): any {
    const element = this.dataset['0040A372'];
    return (element?.Value.length === 1)
      ? this.dataset['0040A372']?.Value[0]
      : this.dataset['0040A372']?.Value;
  }

  get '0040A372'(): Element {
    return this.dataset['0040A372'];
  }

  // Current Requested Procedure Evidence Sequence
  get CurrentRequestedProcedureEvidenceSequence(): any {
    const element = this.dataset['0040A375'];
    return (element?.Value.length === 1)
      ? this.dataset['0040A375']?.Value[0]
      : this.dataset['0040A375']?.Value;
  }

  get '0040A375'(): Element {
    return this.dataset['0040A375'];
  }

  // Report Detail Sequence (Trial)
  get ReportDetailSequenceTrial(): any {
    const element = this.dataset['0040A380'];
    return (element?.Value.length === 1)
      ? this.dataset['0040A380']?.Value[0]
      : this.dataset['0040A380']?.Value;
  }

  get '0040A380'(): Element {
    return this.dataset['0040A380'];
  }

  // Pertinent Other Evidence Sequence
  get PertinentOtherEvidenceSequence(): any {
    const element = this.dataset['0040A385'];
    return (element?.Value.length === 1)
      ? this.dataset['0040A385']?.Value[0]
      : this.dataset['0040A385']?.Value;
  }

  get '0040A385'(): Element {
    return this.dataset['0040A385'];
  }

  // HL7 Structured Document Reference Sequence
  get HL7StructuredDocumentReferenceSequence(): any {
    const element = this.dataset['0040A390'];
    return (element?.Value.length === 1)
      ? this.dataset['0040A390']?.Value[0]
      : this.dataset['0040A390']?.Value;
  }

  get '0040A390'(): Element {
    return this.dataset['0040A390'];
  }

  // Observation Subject UID (Trial)
  get ObservationSubjectUIDTrial(): any {
    const element = this.dataset['0040A402'];
    return (element?.Value.length === 1)
      ? this.dataset['0040A402']?.Value[0]
      : this.dataset['0040A402']?.Value;
  }

  get '0040A402'(): Element {
    return this.dataset['0040A402'];
  }

  // Observation Subject Class (Trial)
  get ObservationSubjectClassTrial(): any {
    const element = this.dataset['0040A403'];
    return (element?.Value.length === 1)
      ? this.dataset['0040A403']?.Value[0]
      : this.dataset['0040A403']?.Value;
  }

  get '0040A403'(): Element {
    return this.dataset['0040A403'];
  }

  // Observation Subject Type Code Sequence (Trial)
  get ObservationSubjectTypeCodeSequenceTrial(): any {
    const element = this.dataset['0040A404'];
    return (element?.Value.length === 1)
      ? this.dataset['0040A404']?.Value[0]
      : this.dataset['0040A404']?.Value;
  }

  get '0040A404'(): Element {
    return this.dataset['0040A404'];
  }

  // Completion Flag
  get CompletionFlag(): any {
    const element = this.dataset['0040A491'];
    return (element?.Value.length === 1)
      ? this.dataset['0040A491']?.Value[0]
      : this.dataset['0040A491']?.Value;
  }

  get '0040A491'(): Element {
    return this.dataset['0040A491'];
  }

  // Completion Flag Description
  get CompletionFlagDescription(): any {
    const element = this.dataset['0040A492'];
    return (element?.Value.length === 1)
      ? this.dataset['0040A492']?.Value[0]
      : this.dataset['0040A492']?.Value;
  }

  get '0040A492'(): Element {
    return this.dataset['0040A492'];
  }

  // Verification Flag
  get VerificationFlag(): any {
    const element = this.dataset['0040A493'];
    return (element?.Value.length === 1)
      ? this.dataset['0040A493']?.Value[0]
      : this.dataset['0040A493']?.Value;
  }

  get '0040A493'(): Element {
    return this.dataset['0040A493'];
  }

  // Archive Requested
  get ArchiveRequested(): any {
    const element = this.dataset['0040A494'];
    return (element?.Value.length === 1)
      ? this.dataset['0040A494']?.Value[0]
      : this.dataset['0040A494']?.Value;
  }

  get '0040A494'(): Element {
    return this.dataset['0040A494'];
  }

  // Preliminary Flag
  get PreliminaryFlag(): any {
    const element = this.dataset['0040A496'];
    return (element?.Value.length === 1)
      ? this.dataset['0040A496']?.Value[0]
      : this.dataset['0040A496']?.Value;
  }

  get '0040A496'(): Element {
    return this.dataset['0040A496'];
  }

  // Content Template Sequence
  get ContentTemplateSequence(): any {
    const element = this.dataset['0040A504'];
    return (element?.Value.length === 1)
      ? this.dataset['0040A504']?.Value[0]
      : this.dataset['0040A504']?.Value;
  }

  get '0040A504'(): Element {
    return this.dataset['0040A504'];
  }

  // Identical Documents Sequence
  get IdenticalDocumentsSequence(): any {
    const element = this.dataset['0040A525'];
    return (element?.Value.length === 1)
      ? this.dataset['0040A525']?.Value[0]
      : this.dataset['0040A525']?.Value;
  }

  get '0040A525'(): Element {
    return this.dataset['0040A525'];
  }

  // Observation Subject Context Flag (Trial)
  get ObservationSubjectContextFlagTrial(): any {
    const element = this.dataset['0040A600'];
    return (element?.Value.length === 1)
      ? this.dataset['0040A600']?.Value[0]
      : this.dataset['0040A600']?.Value;
  }

  get '0040A600'(): Element {
    return this.dataset['0040A600'];
  }

  // Observer Context Flag (Trial)
  get ObserverContextFlagTrial(): any {
    const element = this.dataset['0040A601'];
    return (element?.Value.length === 1)
      ? this.dataset['0040A601']?.Value[0]
      : this.dataset['0040A601']?.Value;
  }

  get '0040A601'(): Element {
    return this.dataset['0040A601'];
  }

  // Procedure Context Flag (Trial)
  get ProcedureContextFlagTrial(): any {
    const element = this.dataset['0040A603'];
    return (element?.Value.length === 1)
      ? this.dataset['0040A603']?.Value[0]
      : this.dataset['0040A603']?.Value;
  }

  get '0040A603'(): Element {
    return this.dataset['0040A603'];
  }

  // Content Sequence
  get ContentSequence(): any {
    const element = this.dataset['0040A730'];
    return (element?.Value.length === 1)
      ? this.dataset['0040A730']?.Value[0]
      : this.dataset['0040A730']?.Value;
  }

  get '0040A730'(): Element {
    return this.dataset['0040A730'];
  }

  // Relationship Sequence (Trial)
  get RelationshipSequenceTrial(): any {
    const element = this.dataset['0040A731'];
    return (element?.Value.length === 1)
      ? this.dataset['0040A731']?.Value[0]
      : this.dataset['0040A731']?.Value;
  }

  get '0040A731'(): Element {
    return this.dataset['0040A731'];
  }

  // Relationship Type Code Sequence (Trial)
  get RelationshipTypeCodeSequenceTrial(): any {
    const element = this.dataset['0040A732'];
    return (element?.Value.length === 1)
      ? this.dataset['0040A732']?.Value[0]
      : this.dataset['0040A732']?.Value;
  }

  get '0040A732'(): Element {
    return this.dataset['0040A732'];
  }

  // Language Code Sequence (Trial)
  get LanguageCodeSequenceTrial(): any {
    const element = this.dataset['0040A744'];
    return (element?.Value.length === 1)
      ? this.dataset['0040A744']?.Value[0]
      : this.dataset['0040A744']?.Value;
  }

  get '0040A744'(): Element {
    return this.dataset['0040A744'];
  }

  // Uniform Resource Locator (Trial)
  get UniformResourceLocatorTrial(): any {
    const element = this.dataset['0040A992'];
    return (element?.Value.length === 1)
      ? this.dataset['0040A992']?.Value[0]
      : this.dataset['0040A992']?.Value;
  }

  get '0040A992'(): Element {
    return this.dataset['0040A992'];
  }

  // Waveform Annotation Sequence
  get WaveformAnnotationSequence(): any {
    const element = this.dataset['0040B020'];
    return (element?.Value.length === 1)
      ? this.dataset['0040B020']?.Value[0]
      : this.dataset['0040B020']?.Value;
  }

  get '0040B020'(): Element {
    return this.dataset['0040B020'];
  }

  // Template Identifier
  get TemplateIdentifier(): any {
    const element = this.dataset['0040DB00'];
    return (element?.Value.length === 1)
      ? this.dataset['0040DB00']?.Value[0]
      : this.dataset['0040DB00']?.Value;
  }

  get '0040DB00'(): Element {
    return this.dataset['0040DB00'];
  }

  // Template Version
  get TemplateVersion(): any {
    const element = this.dataset['0040DB06'];
    return (element?.Value.length === 1)
      ? this.dataset['0040DB06']?.Value[0]
      : this.dataset['0040DB06']?.Value;
  }

  get '0040DB06'(): Element {
    return this.dataset['0040DB06'];
  }

  // Template Local Version
  get TemplateLocalVersion(): any {
    const element = this.dataset['0040DB07'];
    return (element?.Value.length === 1)
      ? this.dataset['0040DB07']?.Value[0]
      : this.dataset['0040DB07']?.Value;
  }

  get '0040DB07'(): Element {
    return this.dataset['0040DB07'];
  }

  // Template Extension Flag
  get TemplateExtensionFlag(): any {
    const element = this.dataset['0040DB0B'];
    return (element?.Value.length === 1)
      ? this.dataset['0040DB0B']?.Value[0]
      : this.dataset['0040DB0B']?.Value;
  }

  get '0040DB0B'(): Element {
    return this.dataset['0040DB0B'];
  }

  // Template Extension Organization UID
  get TemplateExtensionOrganizationUID(): any {
    const element = this.dataset['0040DB0C'];
    return (element?.Value.length === 1)
      ? this.dataset['0040DB0C']?.Value[0]
      : this.dataset['0040DB0C']?.Value;
  }

  get '0040DB0C'(): Element {
    return this.dataset['0040DB0C'];
  }

  // Template Extension Creator UID
  get TemplateExtensionCreatorUID(): any {
    const element = this.dataset['0040DB0D'];
    return (element?.Value.length === 1)
      ? this.dataset['0040DB0D']?.Value[0]
      : this.dataset['0040DB0D']?.Value;
  }

  get '0040DB0D'(): Element {
    return this.dataset['0040DB0D'];
  }

  // Referenced Content Item Identifier
  get ReferencedContentItemIdentifier(): any {
    const element = this.dataset['0040DB73'];
    return (element?.Value.length === 1)
      ? this.dataset['0040DB73']?.Value[0]
      : this.dataset['0040DB73']?.Value;
  }

  get '0040DB73'(): Element {
    return this.dataset['0040DB73'];
  }

  // HL7 Instance Identifier
  get HL7InstanceIdentifier(): any {
    const element = this.dataset['0040E001'];
    return (element?.Value.length === 1)
      ? this.dataset['0040E001']?.Value[0]
      : this.dataset['0040E001']?.Value;
  }

  get '0040E001'(): Element {
    return this.dataset['0040E001'];
  }

  // HL7 Document Effective Time
  get HL7DocumentEffectiveTime(): any {
    const element = this.dataset['0040E004'];
    return (element?.Value.length === 1)
      ? this.dataset['0040E004']?.Value[0]
      : this.dataset['0040E004']?.Value;
  }

  get '0040E004'(): Element {
    return this.dataset['0040E004'];
  }

  // HL7 Document Type Code Sequence
  get HL7DocumentTypeCodeSequence(): any {
    const element = this.dataset['0040E006'];
    return (element?.Value.length === 1)
      ? this.dataset['0040E006']?.Value[0]
      : this.dataset['0040E006']?.Value;
  }

  get '0040E006'(): Element {
    return this.dataset['0040E006'];
  }

  // Document Class Code Sequence
  get DocumentClassCodeSequence(): any {
    const element = this.dataset['0040E008'];
    return (element?.Value.length === 1)
      ? this.dataset['0040E008']?.Value[0]
      : this.dataset['0040E008']?.Value;
  }

  get '0040E008'(): Element {
    return this.dataset['0040E008'];
  }

  // Retrieve URI
  get RetrieveURI(): any {
    const element = this.dataset['0040E010'];
    return (element?.Value.length === 1)
      ? this.dataset['0040E010']?.Value[0]
      : this.dataset['0040E010']?.Value;
  }

  get '0040E010'(): Element {
    return this.dataset['0040E010'];
  }

  // Retrieve Location UID
  get RetrieveLocationUID(): any {
    const element = this.dataset['0040E011'];
    return (element?.Value.length === 1)
      ? this.dataset['0040E011']?.Value[0]
      : this.dataset['0040E011']?.Value;
  }

  get '0040E011'(): Element {
    return this.dataset['0040E011'];
  }

  // Type of Instances
  get TypeOfInstances(): any {
    const element = this.dataset['0040E020'];
    return (element?.Value.length === 1)
      ? this.dataset['0040E020']?.Value[0]
      : this.dataset['0040E020']?.Value;
  }

  get '0040E020'(): Element {
    return this.dataset['0040E020'];
  }

  // DICOM Retrieval Sequence
  get DICOMRetrievalSequence(): any {
    const element = this.dataset['0040E021'];
    return (element?.Value.length === 1)
      ? this.dataset['0040E021']?.Value[0]
      : this.dataset['0040E021']?.Value;
  }

  get '0040E021'(): Element {
    return this.dataset['0040E021'];
  }

  // DICOM Media Retrieval Sequence
  get DICOMMediaRetrievalSequence(): any {
    const element = this.dataset['0040E022'];
    return (element?.Value.length === 1)
      ? this.dataset['0040E022']?.Value[0]
      : this.dataset['0040E022']?.Value;
  }

  get '0040E022'(): Element {
    return this.dataset['0040E022'];
  }

  // WADO Retrieval Sequence
  get WADORetrievalSequence(): any {
    const element = this.dataset['0040E023'];
    return (element?.Value.length === 1)
      ? this.dataset['0040E023']?.Value[0]
      : this.dataset['0040E023']?.Value;
  }

  get '0040E023'(): Element {
    return this.dataset['0040E023'];
  }

  // XDS Retrieval Sequence
  get XDSRetrievalSequence(): any {
    const element = this.dataset['0040E024'];
    return (element?.Value.length === 1)
      ? this.dataset['0040E024']?.Value[0]
      : this.dataset['0040E024']?.Value;
  }

  get '0040E024'(): Element {
    return this.dataset['0040E024'];
  }

  // Repository Unique ID
  get RepositoryUniqueID(): any {
    const element = this.dataset['0040E030'];
    return (element?.Value.length === 1)
      ? this.dataset['0040E030']?.Value[0]
      : this.dataset['0040E030']?.Value;
  }

  get '0040E030'(): Element {
    return this.dataset['0040E030'];
  }

  // Home Community ID
  get HomeCommunityID(): any {
    const element = this.dataset['0040E031'];
    return (element?.Value.length === 1)
      ? this.dataset['0040E031']?.Value[0]
      : this.dataset['0040E031']?.Value;
  }

  get '0040E031'(): Element {
    return this.dataset['0040E031'];
  }

  // Document Title
  get DocumentTitle(): any {
    const element = this.dataset['00420010'];
    return (element?.Value.length === 1)
      ? this.dataset['00420010']?.Value[0]
      : this.dataset['00420010']?.Value;
  }

  get '00420010'(): Element {
    return this.dataset['00420010'];
  }

  // Encapsulated Document
  get EncapsulatedDocument(): any {
    const element = this.dataset['00420011'];
    return (element?.Value.length === 1)
      ? this.dataset['00420011']?.Value[0]
      : this.dataset['00420011']?.Value;
  }

  get '00420011'(): Element {
    return this.dataset['00420011'];
  }

  // MIME Type of Encapsulated Document
  get MIMETypeOfEncapsulatedDocument(): any {
    const element = this.dataset['00420012'];
    return (element?.Value.length === 1)
      ? this.dataset['00420012']?.Value[0]
      : this.dataset['00420012']?.Value;
  }

  get '00420012'(): Element {
    return this.dataset['00420012'];
  }

  // Source Instance Sequence
  get SourceInstanceSequence(): any {
    const element = this.dataset['00420013'];
    return (element?.Value.length === 1)
      ? this.dataset['00420013']?.Value[0]
      : this.dataset['00420013']?.Value;
  }

  get '00420013'(): Element {
    return this.dataset['00420013'];
  }

  // List of MIME Types
  get ListOfMIMETypes(): any {
    const element = this.dataset['00420014'];
    return (element?.Value.length === 1)
      ? this.dataset['00420014']?.Value[0]
      : this.dataset['00420014']?.Value;
  }

  get '00420014'(): Element {
    return this.dataset['00420014'];
  }

  // Product Package Identifier
  get ProductPackageIdentifier(): any {
    const element = this.dataset['00440001'];
    return (element?.Value.length === 1)
      ? this.dataset['00440001']?.Value[0]
      : this.dataset['00440001']?.Value;
  }

  get '00440001'(): Element {
    return this.dataset['00440001'];
  }

  // Substance Administration Approval
  get SubstanceAdministrationApproval(): any {
    const element = this.dataset['00440002'];
    return (element?.Value.length === 1)
      ? this.dataset['00440002']?.Value[0]
      : this.dataset['00440002']?.Value;
  }

  get '00440002'(): Element {
    return this.dataset['00440002'];
  }

  // Approval Status Further Description
  get ApprovalStatusFurtherDescription(): any {
    const element = this.dataset['00440003'];
    return (element?.Value.length === 1)
      ? this.dataset['00440003']?.Value[0]
      : this.dataset['00440003']?.Value;
  }

  get '00440003'(): Element {
    return this.dataset['00440003'];
  }

  // Approval Status DateTime
  get ApprovalStatusDateTime(): any {
    const element = this.dataset['00440004'];
    return (element?.Value.length === 1)
      ? this.dataset['00440004']?.Value[0]
      : this.dataset['00440004']?.Value;
  }

  get '00440004'(): Element {
    return this.dataset['00440004'];
  }

  // Product Type Code Sequence
  get ProductTypeCodeSequence(): any {
    const element = this.dataset['00440007'];
    return (element?.Value.length === 1)
      ? this.dataset['00440007']?.Value[0]
      : this.dataset['00440007']?.Value;
  }

  get '00440007'(): Element {
    return this.dataset['00440007'];
  }

  // Product Name
  get ProductName(): any {
    const element = this.dataset['00440008'];
    return (element?.Value.length === 1)
      ? this.dataset['00440008']?.Value[0]
      : this.dataset['00440008']?.Value;
  }

  get '00440008'(): Element {
    return this.dataset['00440008'];
  }

  // Product Description
  get ProductDescription(): any {
    const element = this.dataset['00440009'];
    return (element?.Value.length === 1)
      ? this.dataset['00440009']?.Value[0]
      : this.dataset['00440009']?.Value;
  }

  get '00440009'(): Element {
    return this.dataset['00440009'];
  }

  // Product Lot Identifier
  get ProductLotIdentifier(): any {
    const element = this.dataset['0044000A'];
    return (element?.Value.length === 1)
      ? this.dataset['0044000A']?.Value[0]
      : this.dataset['0044000A']?.Value;
  }

  get '0044000A'(): Element {
    return this.dataset['0044000A'];
  }

  // Product Expiration DateTime
  get ProductExpirationDateTime(): any {
    const element = this.dataset['0044000B'];
    return (element?.Value.length === 1)
      ? this.dataset['0044000B']?.Value[0]
      : this.dataset['0044000B']?.Value;
  }

  get '0044000B'(): Element {
    return this.dataset['0044000B'];
  }

  // Substance Administration DateTime
  get SubstanceAdministrationDateTime(): any {
    const element = this.dataset['00440010'];
    return (element?.Value.length === 1)
      ? this.dataset['00440010']?.Value[0]
      : this.dataset['00440010']?.Value;
  }

  get '00440010'(): Element {
    return this.dataset['00440010'];
  }

  // Substance Administration Notes
  get SubstanceAdministrationNotes(): any {
    const element = this.dataset['00440011'];
    return (element?.Value.length === 1)
      ? this.dataset['00440011']?.Value[0]
      : this.dataset['00440011']?.Value;
  }

  get '00440011'(): Element {
    return this.dataset['00440011'];
  }

  // Substance Administration Device ID
  get SubstanceAdministrationDeviceID(): any {
    const element = this.dataset['00440012'];
    return (element?.Value.length === 1)
      ? this.dataset['00440012']?.Value[0]
      : this.dataset['00440012']?.Value;
  }

  get '00440012'(): Element {
    return this.dataset['00440012'];
  }

  // Product Parameter Sequence
  get ProductParameterSequence(): any {
    const element = this.dataset['00440013'];
    return (element?.Value.length === 1)
      ? this.dataset['00440013']?.Value[0]
      : this.dataset['00440013']?.Value;
  }

  get '00440013'(): Element {
    return this.dataset['00440013'];
  }

  // Substance Administration Parameter Sequence
  get SubstanceAdministrationParameterSequence(): any {
    const element = this.dataset['00440019'];
    return (element?.Value.length === 1)
      ? this.dataset['00440019']?.Value[0]
      : this.dataset['00440019']?.Value;
  }

  get '00440019'(): Element {
    return this.dataset['00440019'];
  }

  // Lens Description
  get LensDescription(): any {
    const element = this.dataset['00460012'];
    return (element?.Value.length === 1)
      ? this.dataset['00460012']?.Value[0]
      : this.dataset['00460012']?.Value;
  }

  get '00460012'(): Element {
    return this.dataset['00460012'];
  }

  // Right Lens Sequence
  get RightLensSequence(): any {
    const element = this.dataset['00460014'];
    return (element?.Value.length === 1)
      ? this.dataset['00460014']?.Value[0]
      : this.dataset['00460014']?.Value;
  }

  get '00460014'(): Element {
    return this.dataset['00460014'];
  }

  // Left Lens Sequence
  get LeftLensSequence(): any {
    const element = this.dataset['00460015'];
    return (element?.Value.length === 1)
      ? this.dataset['00460015']?.Value[0]
      : this.dataset['00460015']?.Value;
  }

  get '00460015'(): Element {
    return this.dataset['00460015'];
  }

  // Unspecified Laterality Lens Sequence
  get UnspecifiedLateralityLensSequence(): any {
    const element = this.dataset['00460016'];
    return (element?.Value.length === 1)
      ? this.dataset['00460016']?.Value[0]
      : this.dataset['00460016']?.Value;
  }

  get '00460016'(): Element {
    return this.dataset['00460016'];
  }

  // Cylinder Sequence
  get CylinderSequence(): any {
    const element = this.dataset['00460018'];
    return (element?.Value.length === 1)
      ? this.dataset['00460018']?.Value[0]
      : this.dataset['00460018']?.Value;
  }

  get '00460018'(): Element {
    return this.dataset['00460018'];
  }

  // Prism Sequence
  get PrismSequence(): any {
    const element = this.dataset['00460028'];
    return (element?.Value.length === 1)
      ? this.dataset['00460028']?.Value[0]
      : this.dataset['00460028']?.Value;
  }

  get '00460028'(): Element {
    return this.dataset['00460028'];
  }

  // Horizontal Prism Power
  get HorizontalPrismPower(): any {
    const element = this.dataset['00460030'];
    return (element?.Value.length === 1)
      ? this.dataset['00460030']?.Value[0]
      : this.dataset['00460030']?.Value;
  }

  get '00460030'(): Element {
    return this.dataset['00460030'];
  }

  // Horizontal Prism Base
  get HorizontalPrismBase(): any {
    const element = this.dataset['00460032'];
    return (element?.Value.length === 1)
      ? this.dataset['00460032']?.Value[0]
      : this.dataset['00460032']?.Value;
  }

  get '00460032'(): Element {
    return this.dataset['00460032'];
  }

  // Vertical Prism Power
  get VerticalPrismPower(): any {
    const element = this.dataset['00460034'];
    return (element?.Value.length === 1)
      ? this.dataset['00460034']?.Value[0]
      : this.dataset['00460034']?.Value;
  }

  get '00460034'(): Element {
    return this.dataset['00460034'];
  }

  // Vertical Prism Base
  get VerticalPrismBase(): any {
    const element = this.dataset['00460036'];
    return (element?.Value.length === 1)
      ? this.dataset['00460036']?.Value[0]
      : this.dataset['00460036']?.Value;
  }

  get '00460036'(): Element {
    return this.dataset['00460036'];
  }

  // Lens Segment Type
  get LensSegmentType(): any {
    const element = this.dataset['00460038'];
    return (element?.Value.length === 1)
      ? this.dataset['00460038']?.Value[0]
      : this.dataset['00460038']?.Value;
  }

  get '00460038'(): Element {
    return this.dataset['00460038'];
  }

  // Optical Transmittance
  get OpticalTransmittance(): any {
    const element = this.dataset['00460040'];
    return (element?.Value.length === 1)
      ? this.dataset['00460040']?.Value[0]
      : this.dataset['00460040']?.Value;
  }

  get '00460040'(): Element {
    return this.dataset['00460040'];
  }

  // Channel Width
  get ChannelWidth(): any {
    const element = this.dataset['00460042'];
    return (element?.Value.length === 1)
      ? this.dataset['00460042']?.Value[0]
      : this.dataset['00460042']?.Value;
  }

  get '00460042'(): Element {
    return this.dataset['00460042'];
  }

  // Pupil Size
  get PupilSize(): any {
    const element = this.dataset['00460044'];
    return (element?.Value.length === 1)
      ? this.dataset['00460044']?.Value[0]
      : this.dataset['00460044']?.Value;
  }

  get '00460044'(): Element {
    return this.dataset['00460044'];
  }

  // Corneal Size
  get CornealSize(): any {
    const element = this.dataset['00460046'];
    return (element?.Value.length === 1)
      ? this.dataset['00460046']?.Value[0]
      : this.dataset['00460046']?.Value;
  }

  get '00460046'(): Element {
    return this.dataset['00460046'];
  }

  // Autorefraction Right Eye Sequence
  get AutorefractionRightEyeSequence(): any {
    const element = this.dataset['00460050'];
    return (element?.Value.length === 1)
      ? this.dataset['00460050']?.Value[0]
      : this.dataset['00460050']?.Value;
  }

  get '00460050'(): Element {
    return this.dataset['00460050'];
  }

  // Autorefraction Left Eye Sequence
  get AutorefractionLeftEyeSequence(): any {
    const element = this.dataset['00460052'];
    return (element?.Value.length === 1)
      ? this.dataset['00460052']?.Value[0]
      : this.dataset['00460052']?.Value;
  }

  get '00460052'(): Element {
    return this.dataset['00460052'];
  }

  // Distance Pupillary Distance
  get DistancePupillaryDistance(): any {
    const element = this.dataset['00460060'];
    return (element?.Value.length === 1)
      ? this.dataset['00460060']?.Value[0]
      : this.dataset['00460060']?.Value;
  }

  get '00460060'(): Element {
    return this.dataset['00460060'];
  }

  // Near Pupillary Distance
  get NearPupillaryDistance(): any {
    const element = this.dataset['00460062'];
    return (element?.Value.length === 1)
      ? this.dataset['00460062']?.Value[0]
      : this.dataset['00460062']?.Value;
  }

  get '00460062'(): Element {
    return this.dataset['00460062'];
  }

  // Intermediate Pupillary Distance
  get IntermediatePupillaryDistance(): any {
    const element = this.dataset['00460063'];
    return (element?.Value.length === 1)
      ? this.dataset['00460063']?.Value[0]
      : this.dataset['00460063']?.Value;
  }

  get '00460063'(): Element {
    return this.dataset['00460063'];
  }

  // Other Pupillary Distance
  get OtherPupillaryDistance(): any {
    const element = this.dataset['00460064'];
    return (element?.Value.length === 1)
      ? this.dataset['00460064']?.Value[0]
      : this.dataset['00460064']?.Value;
  }

  get '00460064'(): Element {
    return this.dataset['00460064'];
  }

  // Keratometry Right Eye Sequence
  get KeratometryRightEyeSequence(): any {
    const element = this.dataset['00460070'];
    return (element?.Value.length === 1)
      ? this.dataset['00460070']?.Value[0]
      : this.dataset['00460070']?.Value;
  }

  get '00460070'(): Element {
    return this.dataset['00460070'];
  }

  // Keratometry Left Eye Sequence
  get KeratometryLeftEyeSequence(): any {
    const element = this.dataset['00460071'];
    return (element?.Value.length === 1)
      ? this.dataset['00460071']?.Value[0]
      : this.dataset['00460071']?.Value;
  }

  get '00460071'(): Element {
    return this.dataset['00460071'];
  }

  // Steep Keratometric Axis Sequence
  get SteepKeratometricAxisSequence(): any {
    const element = this.dataset['00460074'];
    return (element?.Value.length === 1)
      ? this.dataset['00460074']?.Value[0]
      : this.dataset['00460074']?.Value;
  }

  get '00460074'(): Element {
    return this.dataset['00460074'];
  }

  // Radius of Curvature
  get RadiusOfCurvature(): any {
    const element = this.dataset['00460075'];
    return (element?.Value.length === 1)
      ? this.dataset['00460075']?.Value[0]
      : this.dataset['00460075']?.Value;
  }

  get '00460075'(): Element {
    return this.dataset['00460075'];
  }

  // Keratometric Power
  get KeratometricPower(): any {
    const element = this.dataset['00460076'];
    return (element?.Value.length === 1)
      ? this.dataset['00460076']?.Value[0]
      : this.dataset['00460076']?.Value;
  }

  get '00460076'(): Element {
    return this.dataset['00460076'];
  }

  // Keratometric Axis
  get KeratometricAxis(): any {
    const element = this.dataset['00460077'];
    return (element?.Value.length === 1)
      ? this.dataset['00460077']?.Value[0]
      : this.dataset['00460077']?.Value;
  }

  get '00460077'(): Element {
    return this.dataset['00460077'];
  }

  // Flat Keratometric Axis Sequence
  get FlatKeratometricAxisSequence(): any {
    const element = this.dataset['00460080'];
    return (element?.Value.length === 1)
      ? this.dataset['00460080']?.Value[0]
      : this.dataset['00460080']?.Value;
  }

  get '00460080'(): Element {
    return this.dataset['00460080'];
  }

  // Background Color
  get BackgroundColor(): any {
    const element = this.dataset['00460092'];
    return (element?.Value.length === 1)
      ? this.dataset['00460092']?.Value[0]
      : this.dataset['00460092']?.Value;
  }

  get '00460092'(): Element {
    return this.dataset['00460092'];
  }

  // Optotype
  get Optotype(): any {
    const element = this.dataset['00460094'];
    return (element?.Value.length === 1)
      ? this.dataset['00460094']?.Value[0]
      : this.dataset['00460094']?.Value;
  }

  get '00460094'(): Element {
    return this.dataset['00460094'];
  }

  // Optotype Presentation
  get OptotypePresentation(): any {
    const element = this.dataset['00460095'];
    return (element?.Value.length === 1)
      ? this.dataset['00460095']?.Value[0]
      : this.dataset['00460095']?.Value;
  }

  get '00460095'(): Element {
    return this.dataset['00460095'];
  }

  // Subjective Refraction Right Eye Sequence
  get SubjectiveRefractionRightEyeSequence(): any {
    const element = this.dataset['00460097'];
    return (element?.Value.length === 1)
      ? this.dataset['00460097']?.Value[0]
      : this.dataset['00460097']?.Value;
  }

  get '00460097'(): Element {
    return this.dataset['00460097'];
  }

  // Subjective Refraction Left Eye Sequence
  get SubjectiveRefractionLeftEyeSequence(): any {
    const element = this.dataset['00460098'];
    return (element?.Value.length === 1)
      ? this.dataset['00460098']?.Value[0]
      : this.dataset['00460098']?.Value;
  }

  get '00460098'(): Element {
    return this.dataset['00460098'];
  }

  // Add Near Sequence
  get AddNearSequence(): any {
    const element = this.dataset['00460100'];
    return (element?.Value.length === 1)
      ? this.dataset['00460100']?.Value[0]
      : this.dataset['00460100']?.Value;
  }

  get '00460100'(): Element {
    return this.dataset['00460100'];
  }

  // Add Intermediate Sequence
  get AddIntermediateSequence(): any {
    const element = this.dataset['00460101'];
    return (element?.Value.length === 1)
      ? this.dataset['00460101']?.Value[0]
      : this.dataset['00460101']?.Value;
  }

  get '00460101'(): Element {
    return this.dataset['00460101'];
  }

  // Add Other Sequence
  get AddOtherSequence(): any {
    const element = this.dataset['00460102'];
    return (element?.Value.length === 1)
      ? this.dataset['00460102']?.Value[0]
      : this.dataset['00460102']?.Value;
  }

  get '00460102'(): Element {
    return this.dataset['00460102'];
  }

  // Add Power
  get AddPower(): any {
    const element = this.dataset['00460104'];
    return (element?.Value.length === 1)
      ? this.dataset['00460104']?.Value[0]
      : this.dataset['00460104']?.Value;
  }

  get '00460104'(): Element {
    return this.dataset['00460104'];
  }

  // Viewing Distance
  get ViewingDistance(): any {
    const element = this.dataset['00460106'];
    return (element?.Value.length === 1)
      ? this.dataset['00460106']?.Value[0]
      : this.dataset['00460106']?.Value;
  }

  get '00460106'(): Element {
    return this.dataset['00460106'];
  }

  // Visual Acuity Type Code Sequence
  get VisualAcuityTypeCodeSequence(): any {
    const element = this.dataset['00460121'];
    return (element?.Value.length === 1)
      ? this.dataset['00460121']?.Value[0]
      : this.dataset['00460121']?.Value;
  }

  get '00460121'(): Element {
    return this.dataset['00460121'];
  }

  // Visual Acuity Right Eye Sequence
  get VisualAcuityRightEyeSequence(): any {
    const element = this.dataset['00460122'];
    return (element?.Value.length === 1)
      ? this.dataset['00460122']?.Value[0]
      : this.dataset['00460122']?.Value;
  }

  get '00460122'(): Element {
    return this.dataset['00460122'];
  }

  // Visual Acuity Left Eye Sequence
  get VisualAcuityLeftEyeSequence(): any {
    const element = this.dataset['00460123'];
    return (element?.Value.length === 1)
      ? this.dataset['00460123']?.Value[0]
      : this.dataset['00460123']?.Value;
  }

  get '00460123'(): Element {
    return this.dataset['00460123'];
  }

  // Visual Acuity Both Eyes Open Sequence
  get VisualAcuityBothEyesOpenSequence(): any {
    const element = this.dataset['00460124'];
    return (element?.Value.length === 1)
      ? this.dataset['00460124']?.Value[0]
      : this.dataset['00460124']?.Value;
  }

  get '00460124'(): Element {
    return this.dataset['00460124'];
  }

  // Viewing Distance Type
  get ViewingDistanceType(): any {
    const element = this.dataset['00460125'];
    return (element?.Value.length === 1)
      ? this.dataset['00460125']?.Value[0]
      : this.dataset['00460125']?.Value;
  }

  get '00460125'(): Element {
    return this.dataset['00460125'];
  }

  // Visual Acuity Modifiers
  get VisualAcuityModifiers(): any {
    const element = this.dataset['00460135'];
    return (element?.Value.length === 1)
      ? this.dataset['00460135']?.Value[0]
      : this.dataset['00460135']?.Value;
  }

  get '00460135'(): Element {
    return this.dataset['00460135'];
  }

  // Decimal Visual Acuity
  get DecimalVisualAcuity(): any {
    const element = this.dataset['00460137'];
    return (element?.Value.length === 1)
      ? this.dataset['00460137']?.Value[0]
      : this.dataset['00460137']?.Value;
  }

  get '00460137'(): Element {
    return this.dataset['00460137'];
  }

  // Optotype Detailed Definition
  get OptotypeDetailedDefinition(): any {
    const element = this.dataset['00460139'];
    return (element?.Value.length === 1)
      ? this.dataset['00460139']?.Value[0]
      : this.dataset['00460139']?.Value;
  }

  get '00460139'(): Element {
    return this.dataset['00460139'];
  }

  // Referenced Refractive Measurements Sequence
  get ReferencedRefractiveMeasurementsSequence(): any {
    const element = this.dataset['00460145'];
    return (element?.Value.length === 1)
      ? this.dataset['00460145']?.Value[0]
      : this.dataset['00460145']?.Value;
  }

  get '00460145'(): Element {
    return this.dataset['00460145'];
  }

  // Sphere Power
  get SpherePower(): any {
    const element = this.dataset['00460146'];
    return (element?.Value.length === 1)
      ? this.dataset['00460146']?.Value[0]
      : this.dataset['00460146']?.Value;
  }

  get '00460146'(): Element {
    return this.dataset['00460146'];
  }

  // Cylinder Power
  get CylinderPower(): any {
    const element = this.dataset['00460147'];
    return (element?.Value.length === 1)
      ? this.dataset['00460147']?.Value[0]
      : this.dataset['00460147']?.Value;
  }

  get '00460147'(): Element {
    return this.dataset['00460147'];
  }

  // Corneal Topography Surface
  get CornealTopographySurface(): any {
    const element = this.dataset['00460201'];
    return (element?.Value.length === 1)
      ? this.dataset['00460201']?.Value[0]
      : this.dataset['00460201']?.Value;
  }

  get '00460201'(): Element {
    return this.dataset['00460201'];
  }

  // Corneal Vertex Location
  get CornealVertexLocation(): any {
    const element = this.dataset['00460202'];
    return (element?.Value.length === 1)
      ? this.dataset['00460202']?.Value[0]
      : this.dataset['00460202']?.Value;
  }

  get '00460202'(): Element {
    return this.dataset['00460202'];
  }

  // Pupil Centroid X-Coordinate
  get PupilCentroidXCoordinate(): any {
    const element = this.dataset['00460203'];
    return (element?.Value.length === 1)
      ? this.dataset['00460203']?.Value[0]
      : this.dataset['00460203']?.Value;
  }

  get '00460203'(): Element {
    return this.dataset['00460203'];
  }

  // Pupil Centroid Y-Coordinate
  get PupilCentroidYCoordinate(): any {
    const element = this.dataset['00460204'];
    return (element?.Value.length === 1)
      ? this.dataset['00460204']?.Value[0]
      : this.dataset['00460204']?.Value;
  }

  get '00460204'(): Element {
    return this.dataset['00460204'];
  }

  // Equivalent Pupil Radius
  get EquivalentPupilRadius(): any {
    const element = this.dataset['00460205'];
    return (element?.Value.length === 1)
      ? this.dataset['00460205']?.Value[0]
      : this.dataset['00460205']?.Value;
  }

  get '00460205'(): Element {
    return this.dataset['00460205'];
  }

  // Corneal Topography Map Type Code Sequence
  get CornealTopographyMapTypeCodeSequence(): any {
    const element = this.dataset['00460207'];
    return (element?.Value.length === 1)
      ? this.dataset['00460207']?.Value[0]
      : this.dataset['00460207']?.Value;
  }

  get '00460207'(): Element {
    return this.dataset['00460207'];
  }

  // Vertices of the Outline of Pupil
  get VerticesOfTheOutlineOfPupil(): any {
    const element = this.dataset['00460208'];
    return (element?.Value.length === 1)
      ? this.dataset['00460208']?.Value[0]
      : this.dataset['00460208']?.Value;
  }

  get '00460208'(): Element {
    return this.dataset['00460208'];
  }

  // Corneal Topography Mapping Normals Sequence
  get CornealTopographyMappingNormalsSequence(): any {
    const element = this.dataset['00460210'];
    return (element?.Value.length === 1)
      ? this.dataset['00460210']?.Value[0]
      : this.dataset['00460210']?.Value;
  }

  get '00460210'(): Element {
    return this.dataset['00460210'];
  }

  // Maximum Corneal Curvature Sequence
  get MaximumCornealCurvatureSequence(): any {
    const element = this.dataset['00460211'];
    return (element?.Value.length === 1)
      ? this.dataset['00460211']?.Value[0]
      : this.dataset['00460211']?.Value;
  }

  get '00460211'(): Element {
    return this.dataset['00460211'];
  }

  // Maximum Corneal Curvature
  get MaximumCornealCurvature(): any {
    const element = this.dataset['00460212'];
    return (element?.Value.length === 1)
      ? this.dataset['00460212']?.Value[0]
      : this.dataset['00460212']?.Value;
  }

  get '00460212'(): Element {
    return this.dataset['00460212'];
  }

  // Maximum Corneal Curvature Location
  get MaximumCornealCurvatureLocation(): any {
    const element = this.dataset['00460213'];
    return (element?.Value.length === 1)
      ? this.dataset['00460213']?.Value[0]
      : this.dataset['00460213']?.Value;
  }

  get '00460213'(): Element {
    return this.dataset['00460213'];
  }

  // Minimum Keratometric Sequence
  get MinimumKeratometricSequence(): any {
    const element = this.dataset['00460215'];
    return (element?.Value.length === 1)
      ? this.dataset['00460215']?.Value[0]
      : this.dataset['00460215']?.Value;
  }

  get '00460215'(): Element {
    return this.dataset['00460215'];
  }

  // Simulated Keratometric Cylinder Sequence
  get SimulatedKeratometricCylinderSequence(): any {
    const element = this.dataset['00460218'];
    return (element?.Value.length === 1)
      ? this.dataset['00460218']?.Value[0]
      : this.dataset['00460218']?.Value;
  }

  get '00460218'(): Element {
    return this.dataset['00460218'];
  }

  // Average Corneal Power
  get AverageCornealPower(): any {
    const element = this.dataset['00460220'];
    return (element?.Value.length === 1)
      ? this.dataset['00460220']?.Value[0]
      : this.dataset['00460220']?.Value;
  }

  get '00460220'(): Element {
    return this.dataset['00460220'];
  }

  // Corneal I-S Value
  get CornealISValue(): any {
    const element = this.dataset['00460224'];
    return (element?.Value.length === 1)
      ? this.dataset['00460224']?.Value[0]
      : this.dataset['00460224']?.Value;
  }

  get '00460224'(): Element {
    return this.dataset['00460224'];
  }

  // Analyzed Area
  get AnalyzedArea(): any {
    const element = this.dataset['00460227'];
    return (element?.Value.length === 1)
      ? this.dataset['00460227']?.Value[0]
      : this.dataset['00460227']?.Value;
  }

  get '00460227'(): Element {
    return this.dataset['00460227'];
  }

  // Surface Regularity Index
  get SurfaceRegularityIndex(): any {
    const element = this.dataset['00460230'];
    return (element?.Value.length === 1)
      ? this.dataset['00460230']?.Value[0]
      : this.dataset['00460230']?.Value;
  }

  get '00460230'(): Element {
    return this.dataset['00460230'];
  }

  // Surface Asymmetry Index
  get SurfaceAsymmetryIndex(): any {
    const element = this.dataset['00460232'];
    return (element?.Value.length === 1)
      ? this.dataset['00460232']?.Value[0]
      : this.dataset['00460232']?.Value;
  }

  get '00460232'(): Element {
    return this.dataset['00460232'];
  }

  // Corneal Eccentricity Index
  get CornealEccentricityIndex(): any {
    const element = this.dataset['00460234'];
    return (element?.Value.length === 1)
      ? this.dataset['00460234']?.Value[0]
      : this.dataset['00460234']?.Value;
  }

  get '00460234'(): Element {
    return this.dataset['00460234'];
  }

  // Keratoconus Prediction Index
  get KeratoconusPredictionIndex(): any {
    const element = this.dataset['00460236'];
    return (element?.Value.length === 1)
      ? this.dataset['00460236']?.Value[0]
      : this.dataset['00460236']?.Value;
  }

  get '00460236'(): Element {
    return this.dataset['00460236'];
  }

  // Decimal Potential Visual Acuity
  get DecimalPotentialVisualAcuity(): any {
    const element = this.dataset['00460238'];
    return (element?.Value.length === 1)
      ? this.dataset['00460238']?.Value[0]
      : this.dataset['00460238']?.Value;
  }

  get '00460238'(): Element {
    return this.dataset['00460238'];
  }

  // Corneal Topography Map Quality Evaluation
  get CornealTopographyMapQualityEvaluation(): any {
    const element = this.dataset['00460242'];
    return (element?.Value.length === 1)
      ? this.dataset['00460242']?.Value[0]
      : this.dataset['00460242']?.Value;
  }

  get '00460242'(): Element {
    return this.dataset['00460242'];
  }

  // Source Image Corneal Processed Data Sequence
  get SourceImageCornealProcessedDataSequence(): any {
    const element = this.dataset['00460244'];
    return (element?.Value.length === 1)
      ? this.dataset['00460244']?.Value[0]
      : this.dataset['00460244']?.Value;
  }

  get '00460244'(): Element {
    return this.dataset['00460244'];
  }

  // Corneal Point Location
  get CornealPointLocation(): any {
    const element = this.dataset['00460247'];
    return (element?.Value.length === 1)
      ? this.dataset['00460247']?.Value[0]
      : this.dataset['00460247']?.Value;
  }

  get '00460247'(): Element {
    return this.dataset['00460247'];
  }

  // Corneal Point Estimated
  get CornealPointEstimated(): any {
    const element = this.dataset['00460248'];
    return (element?.Value.length === 1)
      ? this.dataset['00460248']?.Value[0]
      : this.dataset['00460248']?.Value;
  }

  get '00460248'(): Element {
    return this.dataset['00460248'];
  }

  // Axial Power
  get AxialPower(): any {
    const element = this.dataset['00460249'];
    return (element?.Value.length === 1)
      ? this.dataset['00460249']?.Value[0]
      : this.dataset['00460249']?.Value;
  }

  get '00460249'(): Element {
    return this.dataset['00460249'];
  }

  // Tangential Power
  get TangentialPower(): any {
    const element = this.dataset['00460250'];
    return (element?.Value.length === 1)
      ? this.dataset['00460250']?.Value[0]
      : this.dataset['00460250']?.Value;
  }

  get '00460250'(): Element {
    return this.dataset['00460250'];
  }

  // Refractive Power
  get RefractivePower(): any {
    const element = this.dataset['00460251'];
    return (element?.Value.length === 1)
      ? this.dataset['00460251']?.Value[0]
      : this.dataset['00460251']?.Value;
  }

  get '00460251'(): Element {
    return this.dataset['00460251'];
  }

  // Relative Elevation
  get RelativeElevation(): any {
    const element = this.dataset['00460252'];
    return (element?.Value.length === 1)
      ? this.dataset['00460252']?.Value[0]
      : this.dataset['00460252']?.Value;
  }

  get '00460252'(): Element {
    return this.dataset['00460252'];
  }

  // Corneal Wavefront
  get CornealWavefront(): any {
    const element = this.dataset['00460253'];
    return (element?.Value.length === 1)
      ? this.dataset['00460253']?.Value[0]
      : this.dataset['00460253']?.Value;
  }

  get '00460253'(): Element {
    return this.dataset['00460253'];
  }

  // Imaged Volume Width
  get ImagedVolumeWidth(): any {
    const element = this.dataset['00480001'];
    return (element?.Value.length === 1)
      ? this.dataset['00480001']?.Value[0]
      : this.dataset['00480001']?.Value;
  }

  get '00480001'(): Element {
    return this.dataset['00480001'];
  }

  // Imaged Volume Height
  get ImagedVolumeHeight(): any {
    const element = this.dataset['00480002'];
    return (element?.Value.length === 1)
      ? this.dataset['00480002']?.Value[0]
      : this.dataset['00480002']?.Value;
  }

  get '00480002'(): Element {
    return this.dataset['00480002'];
  }

  // Imaged Volume Depth
  get ImagedVolumeDepth(): any {
    const element = this.dataset['00480003'];
    return (element?.Value.length === 1)
      ? this.dataset['00480003']?.Value[0]
      : this.dataset['00480003']?.Value;
  }

  get '00480003'(): Element {
    return this.dataset['00480003'];
  }

  // Total Pixel Matrix Columns
  get TotalPixelMatrixColumns(): any {
    const element = this.dataset['00480006'];
    return (element?.Value.length === 1)
      ? this.dataset['00480006']?.Value[0]
      : this.dataset['00480006']?.Value;
  }

  get '00480006'(): Element {
    return this.dataset['00480006'];
  }

  // Total Pixel Matrix Rows
  get TotalPixelMatrixRows(): any {
    const element = this.dataset['00480007'];
    return (element?.Value.length === 1)
      ? this.dataset['00480007']?.Value[0]
      : this.dataset['00480007']?.Value;
  }

  get '00480007'(): Element {
    return this.dataset['00480007'];
  }

  // Total Pixel Matrix Origin Sequence
  get TotalPixelMatrixOriginSequence(): any {
    const element = this.dataset['00480008'];
    return (element?.Value.length === 1)
      ? this.dataset['00480008']?.Value[0]
      : this.dataset['00480008']?.Value;
  }

  get '00480008'(): Element {
    return this.dataset['00480008'];
  }

  // Specimen Label in Image
  get SpecimenLabelInImage(): any {
    const element = this.dataset['00480010'];
    return (element?.Value.length === 1)
      ? this.dataset['00480010']?.Value[0]
      : this.dataset['00480010']?.Value;
  }

  get '00480010'(): Element {
    return this.dataset['00480010'];
  }

  // Focus Method
  get FocusMethod(): any {
    const element = this.dataset['00480011'];
    return (element?.Value.length === 1)
      ? this.dataset['00480011']?.Value[0]
      : this.dataset['00480011']?.Value;
  }

  get '00480011'(): Element {
    return this.dataset['00480011'];
  }

  // Extended Depth of Field
  get ExtendedDepthOfField(): any {
    const element = this.dataset['00480012'];
    return (element?.Value.length === 1)
      ? this.dataset['00480012']?.Value[0]
      : this.dataset['00480012']?.Value;
  }

  get '00480012'(): Element {
    return this.dataset['00480012'];
  }

  // Number of Focal Planes
  get NumberOfFocalPlanes(): any {
    const element = this.dataset['00480013'];
    return (element?.Value.length === 1)
      ? this.dataset['00480013']?.Value[0]
      : this.dataset['00480013']?.Value;
  }

  get '00480013'(): Element {
    return this.dataset['00480013'];
  }

  // Distance Between Focal Planes
  get DistanceBetweenFocalPlanes(): any {
    const element = this.dataset['00480014'];
    return (element?.Value.length === 1)
      ? this.dataset['00480014']?.Value[0]
      : this.dataset['00480014']?.Value;
  }

  get '00480014'(): Element {
    return this.dataset['00480014'];
  }

  // Recommended Absent Pixel CIELab Value
  get RecommendedAbsentPixelCIELabValue(): any {
    const element = this.dataset['00480015'];
    return (element?.Value.length === 1)
      ? this.dataset['00480015']?.Value[0]
      : this.dataset['00480015']?.Value;
  }

  get '00480015'(): Element {
    return this.dataset['00480015'];
  }

  // Illuminator Type Code Sequence
  get IlluminatorTypeCodeSequence(): any {
    const element = this.dataset['00480100'];
    return (element?.Value.length === 1)
      ? this.dataset['00480100']?.Value[0]
      : this.dataset['00480100']?.Value;
  }

  get '00480100'(): Element {
    return this.dataset['00480100'];
  }

  // Image Orientation (Slide)
  get ImageOrientationSlide(): any {
    const element = this.dataset['00480102'];
    return (element?.Value.length === 1)
      ? this.dataset['00480102']?.Value[0]
      : this.dataset['00480102']?.Value;
  }

  get '00480102'(): Element {
    return this.dataset['00480102'];
  }

  // Optical Path Sequence
  get OpticalPathSequence(): any {
    const element = this.dataset['00480105'];
    return (element?.Value.length === 1)
      ? this.dataset['00480105']?.Value[0]
      : this.dataset['00480105']?.Value;
  }

  get '00480105'(): Element {
    return this.dataset['00480105'];
  }

  // Optical Path Identifier
  get OpticalPathIdentifier(): any {
    const element = this.dataset['00480106'];
    return (element?.Value.length === 1)
      ? this.dataset['00480106']?.Value[0]
      : this.dataset['00480106']?.Value;
  }

  get '00480106'(): Element {
    return this.dataset['00480106'];
  }

  // Optical Path Description
  get OpticalPathDescription(): any {
    const element = this.dataset['00480107'];
    return (element?.Value.length === 1)
      ? this.dataset['00480107']?.Value[0]
      : this.dataset['00480107']?.Value;
  }

  get '00480107'(): Element {
    return this.dataset['00480107'];
  }

  // Illumination Color Code Sequence
  get IlluminationColorCodeSequence(): any {
    const element = this.dataset['00480108'];
    return (element?.Value.length === 1)
      ? this.dataset['00480108']?.Value[0]
      : this.dataset['00480108']?.Value;
  }

  get '00480108'(): Element {
    return this.dataset['00480108'];
  }

  // Specimen Reference Sequence
  get SpecimenReferenceSequence(): any {
    const element = this.dataset['00480110'];
    return (element?.Value.length === 1)
      ? this.dataset['00480110']?.Value[0]
      : this.dataset['00480110']?.Value;
  }

  get '00480110'(): Element {
    return this.dataset['00480110'];
  }

  // Condenser Lens Power
  get CondenserLensPower(): any {
    const element = this.dataset['00480111'];
    return (element?.Value.length === 1)
      ? this.dataset['00480111']?.Value[0]
      : this.dataset['00480111']?.Value;
  }

  get '00480111'(): Element {
    return this.dataset['00480111'];
  }

  // Objective Lens Power
  get ObjectiveLensPower(): any {
    const element = this.dataset['00480112'];
    return (element?.Value.length === 1)
      ? this.dataset['00480112']?.Value[0]
      : this.dataset['00480112']?.Value;
  }

  get '00480112'(): Element {
    return this.dataset['00480112'];
  }

  // Objective Lens Numerical Aperture
  get ObjectiveLensNumericalAperture(): any {
    const element = this.dataset['00480113'];
    return (element?.Value.length === 1)
      ? this.dataset['00480113']?.Value[0]
      : this.dataset['00480113']?.Value;
  }

  get '00480113'(): Element {
    return this.dataset['00480113'];
  }

  // Palette Color Lookup Table Sequence
  get PaletteColorLookupTableSequence(): any {
    const element = this.dataset['00480120'];
    return (element?.Value.length === 1)
      ? this.dataset['00480120']?.Value[0]
      : this.dataset['00480120']?.Value;
  }

  get '00480120'(): Element {
    return this.dataset['00480120'];
  }

  // Referenced Image Navigation Sequence
  get ReferencedImageNavigationSequence(): any {
    const element = this.dataset['00480200'];
    return (element?.Value.length === 1)
      ? this.dataset['00480200']?.Value[0]
      : this.dataset['00480200']?.Value;
  }

  get '00480200'(): Element {
    return this.dataset['00480200'];
  }

  // Top Left Hand Corner of Localizer Area
  get TopLeftHandCornerOfLocalizerArea(): any {
    const element = this.dataset['00480201'];
    return (element?.Value.length === 1)
      ? this.dataset['00480201']?.Value[0]
      : this.dataset['00480201']?.Value;
  }

  get '00480201'(): Element {
    return this.dataset['00480201'];
  }

  // Bottom Right Hand Corner of Localizer Area
  get BottomRightHandCornerOfLocalizerArea(): any {
    const element = this.dataset['00480202'];
    return (element?.Value.length === 1)
      ? this.dataset['00480202']?.Value[0]
      : this.dataset['00480202']?.Value;
  }

  get '00480202'(): Element {
    return this.dataset['00480202'];
  }

  // Optical Path Identification Sequence
  get OpticalPathIdentificationSequence(): any {
    const element = this.dataset['00480207'];
    return (element?.Value.length === 1)
      ? this.dataset['00480207']?.Value[0]
      : this.dataset['00480207']?.Value;
  }

  get '00480207'(): Element {
    return this.dataset['00480207'];
  }

  // Plane Position (Slide) Sequence
  get PlanePositionSlideSequence(): any {
    const element = this.dataset['0048021A'];
    return (element?.Value.length === 1)
      ? this.dataset['0048021A']?.Value[0]
      : this.dataset['0048021A']?.Value;
  }

  get '0048021A'(): Element {
    return this.dataset['0048021A'];
  }

  // Column Position In Total Image Pixel Matrix
  get ColumnPositionInTotalImagePixelMatrix(): any {
    const element = this.dataset['0048021E'];
    return (element?.Value.length === 1)
      ? this.dataset['0048021E']?.Value[0]
      : this.dataset['0048021E']?.Value;
  }

  get '0048021E'(): Element {
    return this.dataset['0048021E'];
  }

  // Row Position In Total Image Pixel Matrix
  get RowPositionInTotalImagePixelMatrix(): any {
    const element = this.dataset['0048021F'];
    return (element?.Value.length === 1)
      ? this.dataset['0048021F']?.Value[0]
      : this.dataset['0048021F']?.Value;
  }

  get '0048021F'(): Element {
    return this.dataset['0048021F'];
  }

  // Pixel Origin Interpretation
  get PixelOriginInterpretation(): any {
    const element = this.dataset['00480301'];
    return (element?.Value.length === 1)
      ? this.dataset['00480301']?.Value[0]
      : this.dataset['00480301']?.Value;
  }

  get '00480301'(): Element {
    return this.dataset['00480301'];
  }

  // Calibration Image
  get CalibrationImage(): any {
    const element = this.dataset['00500004'];
    return (element?.Value.length === 1)
      ? this.dataset['00500004']?.Value[0]
      : this.dataset['00500004']?.Value;
  }

  get '00500004'(): Element {
    return this.dataset['00500004'];
  }

  // Device Sequence
  get DeviceSequence(): any {
    const element = this.dataset['00500010'];
    return (element?.Value.length === 1)
      ? this.dataset['00500010']?.Value[0]
      : this.dataset['00500010']?.Value;
  }

  get '00500010'(): Element {
    return this.dataset['00500010'];
  }

  // Container Component Type Code Sequence
  get ContainerComponentTypeCodeSequence(): any {
    const element = this.dataset['00500012'];
    return (element?.Value.length === 1)
      ? this.dataset['00500012']?.Value[0]
      : this.dataset['00500012']?.Value;
  }

  get '00500012'(): Element {
    return this.dataset['00500012'];
  }

  // Container Component Thickness
  get ContainerComponentThickness(): any {
    const element = this.dataset['00500013'];
    return (element?.Value.length === 1)
      ? this.dataset['00500013']?.Value[0]
      : this.dataset['00500013']?.Value;
  }

  get '00500013'(): Element {
    return this.dataset['00500013'];
  }

  // Device Length
  get DeviceLength(): any {
    const element = this.dataset['00500014'];
    return (element?.Value.length === 1)
      ? this.dataset['00500014']?.Value[0]
      : this.dataset['00500014']?.Value;
  }

  get '00500014'(): Element {
    return this.dataset['00500014'];
  }

  // Container Component Width
  get ContainerComponentWidth(): any {
    const element = this.dataset['00500015'];
    return (element?.Value.length === 1)
      ? this.dataset['00500015']?.Value[0]
      : this.dataset['00500015']?.Value;
  }

  get '00500015'(): Element {
    return this.dataset['00500015'];
  }

  // Device Diameter
  get DeviceDiameter(): any {
    const element = this.dataset['00500016'];
    return (element?.Value.length === 1)
      ? this.dataset['00500016']?.Value[0]
      : this.dataset['00500016']?.Value;
  }

  get '00500016'(): Element {
    return this.dataset['00500016'];
  }

  // Device Diameter Units
  get DeviceDiameterUnits(): any {
    const element = this.dataset['00500017'];
    return (element?.Value.length === 1)
      ? this.dataset['00500017']?.Value[0]
      : this.dataset['00500017']?.Value;
  }

  get '00500017'(): Element {
    return this.dataset['00500017'];
  }

  // Device Volume
  get DeviceVolume(): any {
    const element = this.dataset['00500018'];
    return (element?.Value.length === 1)
      ? this.dataset['00500018']?.Value[0]
      : this.dataset['00500018']?.Value;
  }

  get '00500018'(): Element {
    return this.dataset['00500018'];
  }

  // Inter-Marker Distance
  get InterMarkerDistance(): any {
    const element = this.dataset['00500019'];
    return (element?.Value.length === 1)
      ? this.dataset['00500019']?.Value[0]
      : this.dataset['00500019']?.Value;
  }

  get '00500019'(): Element {
    return this.dataset['00500019'];
  }

  // Container Component Material
  get ContainerComponentMaterial(): any {
    const element = this.dataset['0050001A'];
    return (element?.Value.length === 1)
      ? this.dataset['0050001A']?.Value[0]
      : this.dataset['0050001A']?.Value;
  }

  get '0050001A'(): Element {
    return this.dataset['0050001A'];
  }

  // Container Component ID
  get ContainerComponentID(): any {
    const element = this.dataset['0050001B'];
    return (element?.Value.length === 1)
      ? this.dataset['0050001B']?.Value[0]
      : this.dataset['0050001B']?.Value;
  }

  get '0050001B'(): Element {
    return this.dataset['0050001B'];
  }

  // Container Component Length
  get ContainerComponentLength(): any {
    const element = this.dataset['0050001C'];
    return (element?.Value.length === 1)
      ? this.dataset['0050001C']?.Value[0]
      : this.dataset['0050001C']?.Value;
  }

  get '0050001C'(): Element {
    return this.dataset['0050001C'];
  }

  // Container Component Diameter
  get ContainerComponentDiameter(): any {
    const element = this.dataset['0050001D'];
    return (element?.Value.length === 1)
      ? this.dataset['0050001D']?.Value[0]
      : this.dataset['0050001D']?.Value;
  }

  get '0050001D'(): Element {
    return this.dataset['0050001D'];
  }

  // Container Component Description
  get ContainerComponentDescription(): any {
    const element = this.dataset['0050001E'];
    return (element?.Value.length === 1)
      ? this.dataset['0050001E']?.Value[0]
      : this.dataset['0050001E']?.Value;
  }

  get '0050001E'(): Element {
    return this.dataset['0050001E'];
  }

  // Device Description
  get DeviceDescription(): any {
    const element = this.dataset['00500020'];
    return (element?.Value.length === 1)
      ? this.dataset['00500020']?.Value[0]
      : this.dataset['00500020']?.Value;
  }

  get '00500020'(): Element {
    return this.dataset['00500020'];
  }

  // Contrast/Bolus Ingredient Percent by Volume
  get ContrastBolusIngredientPercentByVolume(): any {
    const element = this.dataset['00520001'];
    return (element?.Value.length === 1)
      ? this.dataset['00520001']?.Value[0]
      : this.dataset['00520001']?.Value;
  }

  get '00520001'(): Element {
    return this.dataset['00520001'];
  }

  // OCT Focal Distance
  get OCTFocalDistance(): any {
    const element = this.dataset['00520002'];
    return (element?.Value.length === 1)
      ? this.dataset['00520002']?.Value[0]
      : this.dataset['00520002']?.Value;
  }

  get '00520002'(): Element {
    return this.dataset['00520002'];
  }

  // Beam Spot Size
  get BeamSpotSize(): any {
    const element = this.dataset['00520003'];
    return (element?.Value.length === 1)
      ? this.dataset['00520003']?.Value[0]
      : this.dataset['00520003']?.Value;
  }

  get '00520003'(): Element {
    return this.dataset['00520003'];
  }

  // Effective Refractive Index
  get EffectiveRefractiveIndex(): any {
    const element = this.dataset['00520004'];
    return (element?.Value.length === 1)
      ? this.dataset['00520004']?.Value[0]
      : this.dataset['00520004']?.Value;
  }

  get '00520004'(): Element {
    return this.dataset['00520004'];
  }

  // OCT Acquisition Domain
  get OCTAcquisitionDomain(): any {
    const element = this.dataset['00520006'];
    return (element?.Value.length === 1)
      ? this.dataset['00520006']?.Value[0]
      : this.dataset['00520006']?.Value;
  }

  get '00520006'(): Element {
    return this.dataset['00520006'];
  }

  // OCT Optical Center Wavelength
  get OCTOpticalCenterWavelength(): any {
    const element = this.dataset['00520007'];
    return (element?.Value.length === 1)
      ? this.dataset['00520007']?.Value[0]
      : this.dataset['00520007']?.Value;
  }

  get '00520007'(): Element {
    return this.dataset['00520007'];
  }

  // Axial Resolution
  get AxialResolution(): any {
    const element = this.dataset['00520008'];
    return (element?.Value.length === 1)
      ? this.dataset['00520008']?.Value[0]
      : this.dataset['00520008']?.Value;
  }

  get '00520008'(): Element {
    return this.dataset['00520008'];
  }

  // Ranging Depth
  get RangingDepth(): any {
    const element = this.dataset['00520009'];
    return (element?.Value.length === 1)
      ? this.dataset['00520009']?.Value[0]
      : this.dataset['00520009']?.Value;
  }

  get '00520009'(): Element {
    return this.dataset['00520009'];
  }

  // A-line Rate
  get ALineRate(): any {
    const element = this.dataset['00520011'];
    return (element?.Value.length === 1)
      ? this.dataset['00520011']?.Value[0]
      : this.dataset['00520011']?.Value;
  }

  get '00520011'(): Element {
    return this.dataset['00520011'];
  }

  // A-lines Per Frame
  get ALinesPerFrame(): any {
    const element = this.dataset['00520012'];
    return (element?.Value.length === 1)
      ? this.dataset['00520012']?.Value[0]
      : this.dataset['00520012']?.Value;
  }

  get '00520012'(): Element {
    return this.dataset['00520012'];
  }

  // Catheter Rotational Rate
  get CatheterRotationalRate(): any {
    const element = this.dataset['00520013'];
    return (element?.Value.length === 1)
      ? this.dataset['00520013']?.Value[0]
      : this.dataset['00520013']?.Value;
  }

  get '00520013'(): Element {
    return this.dataset['00520013'];
  }

  // A-line Pixel Spacing
  get ALinePixelSpacing(): any {
    const element = this.dataset['00520014'];
    return (element?.Value.length === 1)
      ? this.dataset['00520014']?.Value[0]
      : this.dataset['00520014']?.Value;
  }

  get '00520014'(): Element {
    return this.dataset['00520014'];
  }

  // Mode of Percutaneous Access Sequence
  get ModeOfPercutaneousAccessSequence(): any {
    const element = this.dataset['00520016'];
    return (element?.Value.length === 1)
      ? this.dataset['00520016']?.Value[0]
      : this.dataset['00520016']?.Value;
  }

  get '00520016'(): Element {
    return this.dataset['00520016'];
  }

  // Intravascular OCT Frame Type Sequence
  get IntravascularOCTFrameTypeSequence(): any {
    const element = this.dataset['00520025'];
    return (element?.Value.length === 1)
      ? this.dataset['00520025']?.Value[0]
      : this.dataset['00520025']?.Value;
  }

  get '00520025'(): Element {
    return this.dataset['00520025'];
  }

  // OCT Z Offset Applied
  get OCTZOffsetApplied(): any {
    const element = this.dataset['00520026'];
    return (element?.Value.length === 1)
      ? this.dataset['00520026']?.Value[0]
      : this.dataset['00520026']?.Value;
  }

  get '00520026'(): Element {
    return this.dataset['00520026'];
  }

  // Intravascular Frame Content Sequence
  get IntravascularFrameContentSequence(): any {
    const element = this.dataset['00520027'];
    return (element?.Value.length === 1)
      ? this.dataset['00520027']?.Value[0]
      : this.dataset['00520027']?.Value;
  }

  get '00520027'(): Element {
    return this.dataset['00520027'];
  }

  // Intravascular Longitudinal Distance
  get IntravascularLongitudinalDistance(): any {
    const element = this.dataset['00520028'];
    return (element?.Value.length === 1)
      ? this.dataset['00520028']?.Value[0]
      : this.dataset['00520028']?.Value;
  }

  get '00520028'(): Element {
    return this.dataset['00520028'];
  }

  // Intravascular OCT Frame Content Sequence
  get IntravascularOCTFrameContentSequence(): any {
    const element = this.dataset['00520029'];
    return (element?.Value.length === 1)
      ? this.dataset['00520029']?.Value[0]
      : this.dataset['00520029']?.Value;
  }

  get '00520029'(): Element {
    return this.dataset['00520029'];
  }

  // OCT Z Offset Correction
  get OCTZOffsetCorrection(): any {
    const element = this.dataset['00520030'];
    return (element?.Value.length === 1)
      ? this.dataset['00520030']?.Value[0]
      : this.dataset['00520030']?.Value;
  }

  get '00520030'(): Element {
    return this.dataset['00520030'];
  }

  // Catheter Direction of Rotation
  get CatheterDirectionOfRotation(): any {
    const element = this.dataset['00520031'];
    return (element?.Value.length === 1)
      ? this.dataset['00520031']?.Value[0]
      : this.dataset['00520031']?.Value;
  }

  get '00520031'(): Element {
    return this.dataset['00520031'];
  }

  // Seam Line Location
  get SeamLineLocation(): any {
    const element = this.dataset['00520033'];
    return (element?.Value.length === 1)
      ? this.dataset['00520033']?.Value[0]
      : this.dataset['00520033']?.Value;
  }

  get '00520033'(): Element {
    return this.dataset['00520033'];
  }

  // First A-line Location
  get FirstALineLocation(): any {
    const element = this.dataset['00520034'];
    return (element?.Value.length === 1)
      ? this.dataset['00520034']?.Value[0]
      : this.dataset['00520034']?.Value;
  }

  get '00520034'(): Element {
    return this.dataset['00520034'];
  }

  // Seam Line Index
  get SeamLineIndex(): any {
    const element = this.dataset['00520036'];
    return (element?.Value.length === 1)
      ? this.dataset['00520036']?.Value[0]
      : this.dataset['00520036']?.Value;
  }

  get '00520036'(): Element {
    return this.dataset['00520036'];
  }

  // Number of Padded A-lines
  get NumberOfPaddedALines(): any {
    const element = this.dataset['00520038'];
    return (element?.Value.length === 1)
      ? this.dataset['00520038']?.Value[0]
      : this.dataset['00520038']?.Value;
  }

  get '00520038'(): Element {
    return this.dataset['00520038'];
  }

  // Interpolation Type
  get InterpolationType(): any {
    const element = this.dataset['00520039'];
    return (element?.Value.length === 1)
      ? this.dataset['00520039']?.Value[0]
      : this.dataset['00520039']?.Value;
  }

  get '00520039'(): Element {
    return this.dataset['00520039'];
  }

  // Refractive Index Applied
  get RefractiveIndexApplied(): any {
    const element = this.dataset['0052003A'];
    return (element?.Value.length === 1)
      ? this.dataset['0052003A']?.Value[0]
      : this.dataset['0052003A']?.Value;
  }

  get '0052003A'(): Element {
    return this.dataset['0052003A'];
  }

  // Energy Window Vector
  get EnergyWindowVector(): any {
    const element = this.dataset['00540010'];
    return (element?.Value.length === 1)
      ? this.dataset['00540010']?.Value[0]
      : this.dataset['00540010']?.Value;
  }

  get '00540010'(): Element {
    return this.dataset['00540010'];
  }

  // Number of Energy Windows
  get NumberOfEnergyWindows(): any {
    const element = this.dataset['00540011'];
    return (element?.Value.length === 1)
      ? this.dataset['00540011']?.Value[0]
      : this.dataset['00540011']?.Value;
  }

  get '00540011'(): Element {
    return this.dataset['00540011'];
  }

  // Energy Window Information Sequence
  get EnergyWindowInformationSequence(): any {
    const element = this.dataset['00540012'];
    return (element?.Value.length === 1)
      ? this.dataset['00540012']?.Value[0]
      : this.dataset['00540012']?.Value;
  }

  get '00540012'(): Element {
    return this.dataset['00540012'];
  }

  // Energy Window Range Sequence
  get EnergyWindowRangeSequence(): any {
    const element = this.dataset['00540013'];
    return (element?.Value.length === 1)
      ? this.dataset['00540013']?.Value[0]
      : this.dataset['00540013']?.Value;
  }

  get '00540013'(): Element {
    return this.dataset['00540013'];
  }

  // Energy Window Lower Limit
  get EnergyWindowLowerLimit(): any {
    const element = this.dataset['00540014'];
    return (element?.Value.length === 1)
      ? this.dataset['00540014']?.Value[0]
      : this.dataset['00540014']?.Value;
  }

  get '00540014'(): Element {
    return this.dataset['00540014'];
  }

  // Energy Window Upper Limit
  get EnergyWindowUpperLimit(): any {
    const element = this.dataset['00540015'];
    return (element?.Value.length === 1)
      ? this.dataset['00540015']?.Value[0]
      : this.dataset['00540015']?.Value;
  }

  get '00540015'(): Element {
    return this.dataset['00540015'];
  }

  // Radiopharmaceutical Information Sequence
  get RadiopharmaceuticalInformationSequence(): any {
    const element = this.dataset['00540016'];
    return (element?.Value.length === 1)
      ? this.dataset['00540016']?.Value[0]
      : this.dataset['00540016']?.Value;
  }

  get '00540016'(): Element {
    return this.dataset['00540016'];
  }

  // Residual Syringe Counts
  get ResidualSyringeCounts(): any {
    const element = this.dataset['00540017'];
    return (element?.Value.length === 1)
      ? this.dataset['00540017']?.Value[0]
      : this.dataset['00540017']?.Value;
  }

  get '00540017'(): Element {
    return this.dataset['00540017'];
  }

  // Energy Window Name
  get EnergyWindowName(): any {
    const element = this.dataset['00540018'];
    return (element?.Value.length === 1)
      ? this.dataset['00540018']?.Value[0]
      : this.dataset['00540018']?.Value;
  }

  get '00540018'(): Element {
    return this.dataset['00540018'];
  }

  // Detector Vector
  get DetectorVector(): any {
    const element = this.dataset['00540020'];
    return (element?.Value.length === 1)
      ? this.dataset['00540020']?.Value[0]
      : this.dataset['00540020']?.Value;
  }

  get '00540020'(): Element {
    return this.dataset['00540020'];
  }

  // Number of Detectors
  get NumberOfDetectors(): any {
    const element = this.dataset['00540021'];
    return (element?.Value.length === 1)
      ? this.dataset['00540021']?.Value[0]
      : this.dataset['00540021']?.Value;
  }

  get '00540021'(): Element {
    return this.dataset['00540021'];
  }

  // Detector Information Sequence
  get DetectorInformationSequence(): any {
    const element = this.dataset['00540022'];
    return (element?.Value.length === 1)
      ? this.dataset['00540022']?.Value[0]
      : this.dataset['00540022']?.Value;
  }

  get '00540022'(): Element {
    return this.dataset['00540022'];
  }

  // Phase Vector
  get PhaseVector(): any {
    const element = this.dataset['00540030'];
    return (element?.Value.length === 1)
      ? this.dataset['00540030']?.Value[0]
      : this.dataset['00540030']?.Value;
  }

  get '00540030'(): Element {
    return this.dataset['00540030'];
  }

  // Number of Phases
  get NumberOfPhases(): any {
    const element = this.dataset['00540031'];
    return (element?.Value.length === 1)
      ? this.dataset['00540031']?.Value[0]
      : this.dataset['00540031']?.Value;
  }

  get '00540031'(): Element {
    return this.dataset['00540031'];
  }

  // Phase Information Sequence
  get PhaseInformationSequence(): any {
    const element = this.dataset['00540032'];
    return (element?.Value.length === 1)
      ? this.dataset['00540032']?.Value[0]
      : this.dataset['00540032']?.Value;
  }

  get '00540032'(): Element {
    return this.dataset['00540032'];
  }

  // Number of Frames in Phase
  get NumberOfFramesInPhase(): any {
    const element = this.dataset['00540033'];
    return (element?.Value.length === 1)
      ? this.dataset['00540033']?.Value[0]
      : this.dataset['00540033']?.Value;
  }

  get '00540033'(): Element {
    return this.dataset['00540033'];
  }

  // Phase Delay
  get PhaseDelay(): any {
    const element = this.dataset['00540036'];
    return (element?.Value.length === 1)
      ? this.dataset['00540036']?.Value[0]
      : this.dataset['00540036']?.Value;
  }

  get '00540036'(): Element {
    return this.dataset['00540036'];
  }

  // Pause Between Frames
  get PauseBetweenFrames(): any {
    const element = this.dataset['00540038'];
    return (element?.Value.length === 1)
      ? this.dataset['00540038']?.Value[0]
      : this.dataset['00540038']?.Value;
  }

  get '00540038'(): Element {
    return this.dataset['00540038'];
  }

  // Phase Description
  get PhaseDescription(): any {
    const element = this.dataset['00540039'];
    return (element?.Value.length === 1)
      ? this.dataset['00540039']?.Value[0]
      : this.dataset['00540039']?.Value;
  }

  get '00540039'(): Element {
    return this.dataset['00540039'];
  }

  // Rotation Vector
  get RotationVector(): any {
    const element = this.dataset['00540050'];
    return (element?.Value.length === 1)
      ? this.dataset['00540050']?.Value[0]
      : this.dataset['00540050']?.Value;
  }

  get '00540050'(): Element {
    return this.dataset['00540050'];
  }

  // Number of Rotations
  get NumberOfRotations(): any {
    const element = this.dataset['00540051'];
    return (element?.Value.length === 1)
      ? this.dataset['00540051']?.Value[0]
      : this.dataset['00540051']?.Value;
  }

  get '00540051'(): Element {
    return this.dataset['00540051'];
  }

  // Rotation Information Sequence
  get RotationInformationSequence(): any {
    const element = this.dataset['00540052'];
    return (element?.Value.length === 1)
      ? this.dataset['00540052']?.Value[0]
      : this.dataset['00540052']?.Value;
  }

  get '00540052'(): Element {
    return this.dataset['00540052'];
  }

  // Number of Frames in Rotation
  get NumberOfFramesInRotation(): any {
    const element = this.dataset['00540053'];
    return (element?.Value.length === 1)
      ? this.dataset['00540053']?.Value[0]
      : this.dataset['00540053']?.Value;
  }

  get '00540053'(): Element {
    return this.dataset['00540053'];
  }

  // R-R Interval Vector
  get RRIntervalVector(): any {
    const element = this.dataset['00540060'];
    return (element?.Value.length === 1)
      ? this.dataset['00540060']?.Value[0]
      : this.dataset['00540060']?.Value;
  }

  get '00540060'(): Element {
    return this.dataset['00540060'];
  }

  // Number of R-R Intervals
  get NumberOfRRIntervals(): any {
    const element = this.dataset['00540061'];
    return (element?.Value.length === 1)
      ? this.dataset['00540061']?.Value[0]
      : this.dataset['00540061']?.Value;
  }

  get '00540061'(): Element {
    return this.dataset['00540061'];
  }

  // Gated Information Sequence
  get GatedInformationSequence(): any {
    const element = this.dataset['00540062'];
    return (element?.Value.length === 1)
      ? this.dataset['00540062']?.Value[0]
      : this.dataset['00540062']?.Value;
  }

  get '00540062'(): Element {
    return this.dataset['00540062'];
  }

  // Data Information Sequence
  get DataInformationSequence(): any {
    const element = this.dataset['00540063'];
    return (element?.Value.length === 1)
      ? this.dataset['00540063']?.Value[0]
      : this.dataset['00540063']?.Value;
  }

  get '00540063'(): Element {
    return this.dataset['00540063'];
  }

  // Time Slot Vector
  get TimeSlotVector(): any {
    const element = this.dataset['00540070'];
    return (element?.Value.length === 1)
      ? this.dataset['00540070']?.Value[0]
      : this.dataset['00540070']?.Value;
  }

  get '00540070'(): Element {
    return this.dataset['00540070'];
  }

  // Number of Time Slots
  get NumberOfTimeSlots(): any {
    const element = this.dataset['00540071'];
    return (element?.Value.length === 1)
      ? this.dataset['00540071']?.Value[0]
      : this.dataset['00540071']?.Value;
  }

  get '00540071'(): Element {
    return this.dataset['00540071'];
  }

  // Time Slot Information Sequence
  get TimeSlotInformationSequence(): any {
    const element = this.dataset['00540072'];
    return (element?.Value.length === 1)
      ? this.dataset['00540072']?.Value[0]
      : this.dataset['00540072']?.Value;
  }

  get '00540072'(): Element {
    return this.dataset['00540072'];
  }

  // Time Slot Time
  get TimeSlotTime(): any {
    const element = this.dataset['00540073'];
    return (element?.Value.length === 1)
      ? this.dataset['00540073']?.Value[0]
      : this.dataset['00540073']?.Value;
  }

  get '00540073'(): Element {
    return this.dataset['00540073'];
  }

  // Slice Vector
  get SliceVector(): any {
    const element = this.dataset['00540080'];
    return (element?.Value.length === 1)
      ? this.dataset['00540080']?.Value[0]
      : this.dataset['00540080']?.Value;
  }

  get '00540080'(): Element {
    return this.dataset['00540080'];
  }

  // Number of Slices
  get NumberOfSlices(): any {
    const element = this.dataset['00540081'];
    return (element?.Value.length === 1)
      ? this.dataset['00540081']?.Value[0]
      : this.dataset['00540081']?.Value;
  }

  get '00540081'(): Element {
    return this.dataset['00540081'];
  }

  // Angular View Vector
  get AngularViewVector(): any {
    const element = this.dataset['00540090'];
    return (element?.Value.length === 1)
      ? this.dataset['00540090']?.Value[0]
      : this.dataset['00540090']?.Value;
  }

  get '00540090'(): Element {
    return this.dataset['00540090'];
  }

  // Time Slice Vector
  get TimeSliceVector(): any {
    const element = this.dataset['00540100'];
    return (element?.Value.length === 1)
      ? this.dataset['00540100']?.Value[0]
      : this.dataset['00540100']?.Value;
  }

  get '00540100'(): Element {
    return this.dataset['00540100'];
  }

  // Number of Time Slices
  get NumberOfTimeSlices(): any {
    const element = this.dataset['00540101'];
    return (element?.Value.length === 1)
      ? this.dataset['00540101']?.Value[0]
      : this.dataset['00540101']?.Value;
  }

  get '00540101'(): Element {
    return this.dataset['00540101'];
  }

  // Start Angle
  get StartAngle(): any {
    const element = this.dataset['00540200'];
    return (element?.Value.length === 1)
      ? this.dataset['00540200']?.Value[0]
      : this.dataset['00540200']?.Value;
  }

  get '00540200'(): Element {
    return this.dataset['00540200'];
  }

  // Type of Detector Motion
  get TypeOfDetectorMotion(): any {
    const element = this.dataset['00540202'];
    return (element?.Value.length === 1)
      ? this.dataset['00540202']?.Value[0]
      : this.dataset['00540202']?.Value;
  }

  get '00540202'(): Element {
    return this.dataset['00540202'];
  }

  // Trigger Vector
  get TriggerVector(): any {
    const element = this.dataset['00540210'];
    return (element?.Value.length === 1)
      ? this.dataset['00540210']?.Value[0]
      : this.dataset['00540210']?.Value;
  }

  get '00540210'(): Element {
    return this.dataset['00540210'];
  }

  // Number of Triggers in Phase
  get NumberOfTriggersInPhase(): any {
    const element = this.dataset['00540211'];
    return (element?.Value.length === 1)
      ? this.dataset['00540211']?.Value[0]
      : this.dataset['00540211']?.Value;
  }

  get '00540211'(): Element {
    return this.dataset['00540211'];
  }

  // View Code Sequence
  get ViewCodeSequence(): any {
    const element = this.dataset['00540220'];
    return (element?.Value.length === 1)
      ? this.dataset['00540220']?.Value[0]
      : this.dataset['00540220']?.Value;
  }

  get '00540220'(): Element {
    return this.dataset['00540220'];
  }

  // View Modifier Code Sequence
  get ViewModifierCodeSequence(): any {
    const element = this.dataset['00540222'];
    return (element?.Value.length === 1)
      ? this.dataset['00540222']?.Value[0]
      : this.dataset['00540222']?.Value;
  }

  get '00540222'(): Element {
    return this.dataset['00540222'];
  }

  // Radionuclide Code Sequence
  get RadionuclideCodeSequence(): any {
    const element = this.dataset['00540300'];
    return (element?.Value.length === 1)
      ? this.dataset['00540300']?.Value[0]
      : this.dataset['00540300']?.Value;
  }

  get '00540300'(): Element {
    return this.dataset['00540300'];
  }

  // Administration Route Code Sequence
  get AdministrationRouteCodeSequence(): any {
    const element = this.dataset['00540302'];
    return (element?.Value.length === 1)
      ? this.dataset['00540302']?.Value[0]
      : this.dataset['00540302']?.Value;
  }

  get '00540302'(): Element {
    return this.dataset['00540302'];
  }

  // Radiopharmaceutical Code Sequence
  get RadiopharmaceuticalCodeSequence(): any {
    const element = this.dataset['00540304'];
    return (element?.Value.length === 1)
      ? this.dataset['00540304']?.Value[0]
      : this.dataset['00540304']?.Value;
  }

  get '00540304'(): Element {
    return this.dataset['00540304'];
  }

  // Calibration Data Sequence
  get CalibrationDataSequence(): any {
    const element = this.dataset['00540306'];
    return (element?.Value.length === 1)
      ? this.dataset['00540306']?.Value[0]
      : this.dataset['00540306']?.Value;
  }

  get '00540306'(): Element {
    return this.dataset['00540306'];
  }

  // Energy Window Number
  get EnergyWindowNumber(): any {
    const element = this.dataset['00540308'];
    return (element?.Value.length === 1)
      ? this.dataset['00540308']?.Value[0]
      : this.dataset['00540308']?.Value;
  }

  get '00540308'(): Element {
    return this.dataset['00540308'];
  }

  // Image ID
  get ImageID(): any {
    const element = this.dataset['00540400'];
    return (element?.Value.length === 1)
      ? this.dataset['00540400']?.Value[0]
      : this.dataset['00540400']?.Value;
  }

  get '00540400'(): Element {
    return this.dataset['00540400'];
  }

  // Patient Orientation Code Sequence
  get PatientOrientationCodeSequence(): any {
    const element = this.dataset['00540410'];
    return (element?.Value.length === 1)
      ? this.dataset['00540410']?.Value[0]
      : this.dataset['00540410']?.Value;
  }

  get '00540410'(): Element {
    return this.dataset['00540410'];
  }

  // Patient Orientation Modifier Code Sequence
  get PatientOrientationModifierCodeSequence(): any {
    const element = this.dataset['00540412'];
    return (element?.Value.length === 1)
      ? this.dataset['00540412']?.Value[0]
      : this.dataset['00540412']?.Value;
  }

  get '00540412'(): Element {
    return this.dataset['00540412'];
  }

  // Patient Gantry Relationship Code Sequence
  get PatientGantryRelationshipCodeSequence(): any {
    const element = this.dataset['00540414'];
    return (element?.Value.length === 1)
      ? this.dataset['00540414']?.Value[0]
      : this.dataset['00540414']?.Value;
  }

  get '00540414'(): Element {
    return this.dataset['00540414'];
  }

  // Slice Progression Direction
  get SliceProgressionDirection(): any {
    const element = this.dataset['00540500'];
    return (element?.Value.length === 1)
      ? this.dataset['00540500']?.Value[0]
      : this.dataset['00540500']?.Value;
  }

  get '00540500'(): Element {
    return this.dataset['00540500'];
  }

  // Scan Progression Direction
  get ScanProgressionDirection(): any {
    const element = this.dataset['00540501'];
    return (element?.Value.length === 1)
      ? this.dataset['00540501']?.Value[0]
      : this.dataset['00540501']?.Value;
  }

  get '00540501'(): Element {
    return this.dataset['00540501'];
  }

  // Series Type
  get SeriesType(): any {
    const element = this.dataset['00541000'];
    return (element?.Value.length === 1)
      ? this.dataset['00541000']?.Value[0]
      : this.dataset['00541000']?.Value;
  }

  get '00541000'(): Element {
    return this.dataset['00541000'];
  }

  // Units
  get Units(): any {
    const element = this.dataset['00541001'];
    return (element?.Value.length === 1)
      ? this.dataset['00541001']?.Value[0]
      : this.dataset['00541001']?.Value;
  }

  get '00541001'(): Element {
    return this.dataset['00541001'];
  }

  // Counts Source
  get CountsSource(): any {
    const element = this.dataset['00541002'];
    return (element?.Value.length === 1)
      ? this.dataset['00541002']?.Value[0]
      : this.dataset['00541002']?.Value;
  }

  get '00541002'(): Element {
    return this.dataset['00541002'];
  }

  // Reprojection Method
  get ReprojectionMethod(): any {
    const element = this.dataset['00541004'];
    return (element?.Value.length === 1)
      ? this.dataset['00541004']?.Value[0]
      : this.dataset['00541004']?.Value;
  }

  get '00541004'(): Element {
    return this.dataset['00541004'];
  }

  // SUV Type
  get SUVType(): any {
    const element = this.dataset['00541006'];
    return (element?.Value.length === 1)
      ? this.dataset['00541006']?.Value[0]
      : this.dataset['00541006']?.Value;
  }

  get '00541006'(): Element {
    return this.dataset['00541006'];
  }

  // Randoms Correction Method
  get RandomsCorrectionMethod(): any {
    const element = this.dataset['00541100'];
    return (element?.Value.length === 1)
      ? this.dataset['00541100']?.Value[0]
      : this.dataset['00541100']?.Value;
  }

  get '00541100'(): Element {
    return this.dataset['00541100'];
  }

  // Attenuation Correction Method
  get AttenuationCorrectionMethod(): any {
    const element = this.dataset['00541101'];
    return (element?.Value.length === 1)
      ? this.dataset['00541101']?.Value[0]
      : this.dataset['00541101']?.Value;
  }

  get '00541101'(): Element {
    return this.dataset['00541101'];
  }

  // Decay Correction
  get DecayCorrection(): any {
    const element = this.dataset['00541102'];
    return (element?.Value.length === 1)
      ? this.dataset['00541102']?.Value[0]
      : this.dataset['00541102']?.Value;
  }

  get '00541102'(): Element {
    return this.dataset['00541102'];
  }

  // Reconstruction Method
  get ReconstructionMethod(): any {
    const element = this.dataset['00541103'];
    return (element?.Value.length === 1)
      ? this.dataset['00541103']?.Value[0]
      : this.dataset['00541103']?.Value;
  }

  get '00541103'(): Element {
    return this.dataset['00541103'];
  }

  // Detector Lines of Response Used
  get DetectorLinesOfResponseUsed(): any {
    const element = this.dataset['00541104'];
    return (element?.Value.length === 1)
      ? this.dataset['00541104']?.Value[0]
      : this.dataset['00541104']?.Value;
  }

  get '00541104'(): Element {
    return this.dataset['00541104'];
  }

  // Scatter Correction Method
  get ScatterCorrectionMethod(): any {
    const element = this.dataset['00541105'];
    return (element?.Value.length === 1)
      ? this.dataset['00541105']?.Value[0]
      : this.dataset['00541105']?.Value;
  }

  get '00541105'(): Element {
    return this.dataset['00541105'];
  }

  // Axial Acceptance
  get AxialAcceptance(): any {
    const element = this.dataset['00541200'];
    return (element?.Value.length === 1)
      ? this.dataset['00541200']?.Value[0]
      : this.dataset['00541200']?.Value;
  }

  get '00541200'(): Element {
    return this.dataset['00541200'];
  }

  // Axial Mash
  get AxialMash(): any {
    const element = this.dataset['00541201'];
    return (element?.Value.length === 1)
      ? this.dataset['00541201']?.Value[0]
      : this.dataset['00541201']?.Value;
  }

  get '00541201'(): Element {
    return this.dataset['00541201'];
  }

  // Transverse Mash
  get TransverseMash(): any {
    const element = this.dataset['00541202'];
    return (element?.Value.length === 1)
      ? this.dataset['00541202']?.Value[0]
      : this.dataset['00541202']?.Value;
  }

  get '00541202'(): Element {
    return this.dataset['00541202'];
  }

  // Detector Element Size
  get DetectorElementSize(): any {
    const element = this.dataset['00541203'];
    return (element?.Value.length === 1)
      ? this.dataset['00541203']?.Value[0]
      : this.dataset['00541203']?.Value;
  }

  get '00541203'(): Element {
    return this.dataset['00541203'];
  }

  // Coincidence Window Width
  get CoincidenceWindowWidth(): any {
    const element = this.dataset['00541210'];
    return (element?.Value.length === 1)
      ? this.dataset['00541210']?.Value[0]
      : this.dataset['00541210']?.Value;
  }

  get '00541210'(): Element {
    return this.dataset['00541210'];
  }

  // Secondary Counts Type
  get SecondaryCountsType(): any {
    const element = this.dataset['00541220'];
    return (element?.Value.length === 1)
      ? this.dataset['00541220']?.Value[0]
      : this.dataset['00541220']?.Value;
  }

  get '00541220'(): Element {
    return this.dataset['00541220'];
  }

  // Frame Reference Time
  get FrameReferenceTime(): any {
    const element = this.dataset['00541300'];
    return (element?.Value.length === 1)
      ? this.dataset['00541300']?.Value[0]
      : this.dataset['00541300']?.Value;
  }

  get '00541300'(): Element {
    return this.dataset['00541300'];
  }

  // Primary (Prompts) Counts Accumulated
  get PrimaryPromptsCountsAccumulated(): any {
    const element = this.dataset['00541310'];
    return (element?.Value.length === 1)
      ? this.dataset['00541310']?.Value[0]
      : this.dataset['00541310']?.Value;
  }

  get '00541310'(): Element {
    return this.dataset['00541310'];
  }

  // Secondary Counts Accumulated
  get SecondaryCountsAccumulated(): any {
    const element = this.dataset['00541311'];
    return (element?.Value.length === 1)
      ? this.dataset['00541311']?.Value[0]
      : this.dataset['00541311']?.Value;
  }

  get '00541311'(): Element {
    return this.dataset['00541311'];
  }

  // Slice Sensitivity Factor
  get SliceSensitivityFactor(): any {
    const element = this.dataset['00541320'];
    return (element?.Value.length === 1)
      ? this.dataset['00541320']?.Value[0]
      : this.dataset['00541320']?.Value;
  }

  get '00541320'(): Element {
    return this.dataset['00541320'];
  }

  // Decay Factor
  get DecayFactor(): any {
    const element = this.dataset['00541321'];
    return (element?.Value.length === 1)
      ? this.dataset['00541321']?.Value[0]
      : this.dataset['00541321']?.Value;
  }

  get '00541321'(): Element {
    return this.dataset['00541321'];
  }

  // Dose Calibration Factor
  get DoseCalibrationFactor(): any {
    const element = this.dataset['00541322'];
    return (element?.Value.length === 1)
      ? this.dataset['00541322']?.Value[0]
      : this.dataset['00541322']?.Value;
  }

  get '00541322'(): Element {
    return this.dataset['00541322'];
  }

  // Scatter Fraction Factor
  get ScatterFractionFactor(): any {
    const element = this.dataset['00541323'];
    return (element?.Value.length === 1)
      ? this.dataset['00541323']?.Value[0]
      : this.dataset['00541323']?.Value;
  }

  get '00541323'(): Element {
    return this.dataset['00541323'];
  }

  // Dead Time Factor
  get DeadTimeFactor(): any {
    const element = this.dataset['00541324'];
    return (element?.Value.length === 1)
      ? this.dataset['00541324']?.Value[0]
      : this.dataset['00541324']?.Value;
  }

  get '00541324'(): Element {
    return this.dataset['00541324'];
  }

  // Image Index
  get ImageIndex(): any {
    const element = this.dataset['00541330'];
    return (element?.Value.length === 1)
      ? this.dataset['00541330']?.Value[0]
      : this.dataset['00541330']?.Value;
  }

  get '00541330'(): Element {
    return this.dataset['00541330'];
  }

  // Counts Included
  get CountsIncluded(): any {
    const element = this.dataset['00541400'];
    return (element?.Value.length === 1)
      ? this.dataset['00541400']?.Value[0]
      : this.dataset['00541400']?.Value;
  }

  get '00541400'(): Element {
    return this.dataset['00541400'];
  }

  // Dead Time Correction Flag
  get DeadTimeCorrectionFlag(): any {
    const element = this.dataset['00541401'];
    return (element?.Value.length === 1)
      ? this.dataset['00541401']?.Value[0]
      : this.dataset['00541401']?.Value;
  }

  get '00541401'(): Element {
    return this.dataset['00541401'];
  }

  // Histogram Sequence
  get HistogramSequence(): any {
    const element = this.dataset['00603000'];
    return (element?.Value.length === 1)
      ? this.dataset['00603000']?.Value[0]
      : this.dataset['00603000']?.Value;
  }

  get '00603000'(): Element {
    return this.dataset['00603000'];
  }

  // Histogram Number of Bins
  get HistogramNumberOfBins(): any {
    const element = this.dataset['00603002'];
    return (element?.Value.length === 1)
      ? this.dataset['00603002']?.Value[0]
      : this.dataset['00603002']?.Value;
  }

  get '00603002'(): Element {
    return this.dataset['00603002'];
  }

  // Histogram First Bin Value
  get HistogramFirstBinValue(): any {
    const element = this.dataset['00603004'];
    return (element?.Value.length === 1)
      ? this.dataset['00603004']?.Value[0]
      : this.dataset['00603004']?.Value;
  }

  get '00603004'(): Element {
    return this.dataset['00603004'];
  }

  // Histogram Last Bin Value
  get HistogramLastBinValue(): any {
    const element = this.dataset['00603006'];
    return (element?.Value.length === 1)
      ? this.dataset['00603006']?.Value[0]
      : this.dataset['00603006']?.Value;
  }

  get '00603006'(): Element {
    return this.dataset['00603006'];
  }

  // Histogram Bin Width
  get HistogramBinWidth(): any {
    const element = this.dataset['00603008'];
    return (element?.Value.length === 1)
      ? this.dataset['00603008']?.Value[0]
      : this.dataset['00603008']?.Value;
  }

  get '00603008'(): Element {
    return this.dataset['00603008'];
  }

  // Histogram Explanation
  get HistogramExplanation(): any {
    const element = this.dataset['00603010'];
    return (element?.Value.length === 1)
      ? this.dataset['00603010']?.Value[0]
      : this.dataset['00603010']?.Value;
  }

  get '00603010'(): Element {
    return this.dataset['00603010'];
  }

  // Histogram Data
  get HistogramData(): any {
    const element = this.dataset['00603020'];
    return (element?.Value.length === 1)
      ? this.dataset['00603020']?.Value[0]
      : this.dataset['00603020']?.Value;
  }

  get '00603020'(): Element {
    return this.dataset['00603020'];
  }

  // Segmentation Type
  get SegmentationType(): any {
    const element = this.dataset['00620001'];
    return (element?.Value.length === 1)
      ? this.dataset['00620001']?.Value[0]
      : this.dataset['00620001']?.Value;
  }

  get '00620001'(): Element {
    return this.dataset['00620001'];
  }

  // Segment Sequence
  get SegmentSequence(): any {
    const element = this.dataset['00620002'];
    return (element?.Value.length === 1)
      ? this.dataset['00620002']?.Value[0]
      : this.dataset['00620002']?.Value;
  }

  get '00620002'(): Element {
    return this.dataset['00620002'];
  }

  // Segmented Property Category Code Sequence
  get SegmentedPropertyCategoryCodeSequence(): any {
    const element = this.dataset['00620003'];
    return (element?.Value.length === 1)
      ? this.dataset['00620003']?.Value[0]
      : this.dataset['00620003']?.Value;
  }

  get '00620003'(): Element {
    return this.dataset['00620003'];
  }

  // Segment Number
  get SegmentNumber(): any {
    const element = this.dataset['00620004'];
    return (element?.Value.length === 1)
      ? this.dataset['00620004']?.Value[0]
      : this.dataset['00620004']?.Value;
  }

  get '00620004'(): Element {
    return this.dataset['00620004'];
  }

  // Segment Label
  get SegmentLabel(): any {
    const element = this.dataset['00620005'];
    return (element?.Value.length === 1)
      ? this.dataset['00620005']?.Value[0]
      : this.dataset['00620005']?.Value;
  }

  get '00620005'(): Element {
    return this.dataset['00620005'];
  }

  // Segment Description
  get SegmentDescription(): any {
    const element = this.dataset['00620006'];
    return (element?.Value.length === 1)
      ? this.dataset['00620006']?.Value[0]
      : this.dataset['00620006']?.Value;
  }

  get '00620006'(): Element {
    return this.dataset['00620006'];
  }

  // Segment Algorithm Type
  get SegmentAlgorithmType(): any {
    const element = this.dataset['00620008'];
    return (element?.Value.length === 1)
      ? this.dataset['00620008']?.Value[0]
      : this.dataset['00620008']?.Value;
  }

  get '00620008'(): Element {
    return this.dataset['00620008'];
  }

  // Segment Algorithm Name
  get SegmentAlgorithmName(): any {
    const element = this.dataset['00620009'];
    return (element?.Value.length === 1)
      ? this.dataset['00620009']?.Value[0]
      : this.dataset['00620009']?.Value;
  }

  get '00620009'(): Element {
    return this.dataset['00620009'];
  }

  // Segment Identification Sequence
  get SegmentIdentificationSequence(): any {
    const element = this.dataset['0062000A'];
    return (element?.Value.length === 1)
      ? this.dataset['0062000A']?.Value[0]
      : this.dataset['0062000A']?.Value;
  }

  get '0062000A'(): Element {
    return this.dataset['0062000A'];
  }

  // Referenced Segment Number
  get ReferencedSegmentNumber(): any {
    const element = this.dataset['0062000B'];
    return (element?.Value.length === 1)
      ? this.dataset['0062000B']?.Value[0]
      : this.dataset['0062000B']?.Value;
  }

  get '0062000B'(): Element {
    return this.dataset['0062000B'];
  }

  // Recommended Display Grayscale Value
  get RecommendedDisplayGrayscaleValue(): any {
    const element = this.dataset['0062000C'];
    return (element?.Value.length === 1)
      ? this.dataset['0062000C']?.Value[0]
      : this.dataset['0062000C']?.Value;
  }

  get '0062000C'(): Element {
    return this.dataset['0062000C'];
  }

  // Recommended Display CIELab Value
  get RecommendedDisplayCIELabValue(): any {
    const element = this.dataset['0062000D'];
    return (element?.Value.length === 1)
      ? this.dataset['0062000D']?.Value[0]
      : this.dataset['0062000D']?.Value;
  }

  get '0062000D'(): Element {
    return this.dataset['0062000D'];
  }

  // Maximum Fractional Value
  get MaximumFractionalValue(): any {
    const element = this.dataset['0062000E'];
    return (element?.Value.length === 1)
      ? this.dataset['0062000E']?.Value[0]
      : this.dataset['0062000E']?.Value;
  }

  get '0062000E'(): Element {
    return this.dataset['0062000E'];
  }

  // Segmented Property Type Code Sequence
  get SegmentedPropertyTypeCodeSequence(): any {
    const element = this.dataset['0062000F'];
    return (element?.Value.length === 1)
      ? this.dataset['0062000F']?.Value[0]
      : this.dataset['0062000F']?.Value;
  }

  get '0062000F'(): Element {
    return this.dataset['0062000F'];
  }

  // Segmentation Fractional Type
  get SegmentationFractionalType(): any {
    const element = this.dataset['00620010'];
    return (element?.Value.length === 1)
      ? this.dataset['00620010']?.Value[0]
      : this.dataset['00620010']?.Value;
  }

  get '00620010'(): Element {
    return this.dataset['00620010'];
  }

  // Segmented Property Type Modifier Code Sequence
  get SegmentedPropertyTypeModifierCodeSequence(): any {
    const element = this.dataset['00620011'];
    return (element?.Value.length === 1)
      ? this.dataset['00620011']?.Value[0]
      : this.dataset['00620011']?.Value;
  }

  get '00620011'(): Element {
    return this.dataset['00620011'];
  }

  // Used Segments Sequence
  get UsedSegmentsSequence(): any {
    const element = this.dataset['00620012'];
    return (element?.Value.length === 1)
      ? this.dataset['00620012']?.Value[0]
      : this.dataset['00620012']?.Value;
  }

  get '00620012'(): Element {
    return this.dataset['00620012'];
  }

  // Deformable Registration Sequence
  get DeformableRegistrationSequence(): any {
    const element = this.dataset['00640002'];
    return (element?.Value.length === 1)
      ? this.dataset['00640002']?.Value[0]
      : this.dataset['00640002']?.Value;
  }

  get '00640002'(): Element {
    return this.dataset['00640002'];
  }

  // Source Frame of Reference UID
  get SourceFrameOfReferenceUID(): any {
    const element = this.dataset['00640003'];
    return (element?.Value.length === 1)
      ? this.dataset['00640003']?.Value[0]
      : this.dataset['00640003']?.Value;
  }

  get '00640003'(): Element {
    return this.dataset['00640003'];
  }

  // Deformable Registration Grid Sequence
  get DeformableRegistrationGridSequence(): any {
    const element = this.dataset['00640005'];
    return (element?.Value.length === 1)
      ? this.dataset['00640005']?.Value[0]
      : this.dataset['00640005']?.Value;
  }

  get '00640005'(): Element {
    return this.dataset['00640005'];
  }

  // Grid Dimensions
  get GridDimensions(): any {
    const element = this.dataset['00640007'];
    return (element?.Value.length === 1)
      ? this.dataset['00640007']?.Value[0]
      : this.dataset['00640007']?.Value;
  }

  get '00640007'(): Element {
    return this.dataset['00640007'];
  }

  // Grid Resolution
  get GridResolution(): any {
    const element = this.dataset['00640008'];
    return (element?.Value.length === 1)
      ? this.dataset['00640008']?.Value[0]
      : this.dataset['00640008']?.Value;
  }

  get '00640008'(): Element {
    return this.dataset['00640008'];
  }

  // Vector Grid Data
  get VectorGridData(): any {
    const element = this.dataset['00640009'];
    return (element?.Value.length === 1)
      ? this.dataset['00640009']?.Value[0]
      : this.dataset['00640009']?.Value;
  }

  get '00640009'(): Element {
    return this.dataset['00640009'];
  }

  // Pre Deformation Matrix Registration Sequence
  get PreDeformationMatrixRegistrationSequence(): any {
    const element = this.dataset['0064000F'];
    return (element?.Value.length === 1)
      ? this.dataset['0064000F']?.Value[0]
      : this.dataset['0064000F']?.Value;
  }

  get '0064000F'(): Element {
    return this.dataset['0064000F'];
  }

  // Post Deformation Matrix Registration Sequence
  get PostDeformationMatrixRegistrationSequence(): any {
    const element = this.dataset['00640010'];
    return (element?.Value.length === 1)
      ? this.dataset['00640010']?.Value[0]
      : this.dataset['00640010']?.Value;
  }

  get '00640010'(): Element {
    return this.dataset['00640010'];
  }

  // Number of Surfaces
  get NumberOfSurfaces(): any {
    const element = this.dataset['00660001'];
    return (element?.Value.length === 1)
      ? this.dataset['00660001']?.Value[0]
      : this.dataset['00660001']?.Value;
  }

  get '00660001'(): Element {
    return this.dataset['00660001'];
  }

  // Surface Sequence
  get SurfaceSequence(): any {
    const element = this.dataset['00660002'];
    return (element?.Value.length === 1)
      ? this.dataset['00660002']?.Value[0]
      : this.dataset['00660002']?.Value;
  }

  get '00660002'(): Element {
    return this.dataset['00660002'];
  }

  // Surface Number
  get SurfaceNumber(): any {
    const element = this.dataset['00660003'];
    return (element?.Value.length === 1)
      ? this.dataset['00660003']?.Value[0]
      : this.dataset['00660003']?.Value;
  }

  get '00660003'(): Element {
    return this.dataset['00660003'];
  }

  // Surface Comments
  get SurfaceComments(): any {
    const element = this.dataset['00660004'];
    return (element?.Value.length === 1)
      ? this.dataset['00660004']?.Value[0]
      : this.dataset['00660004']?.Value;
  }

  get '00660004'(): Element {
    return this.dataset['00660004'];
  }

  // Surface Processing
  get SurfaceProcessing(): any {
    const element = this.dataset['00660009'];
    return (element?.Value.length === 1)
      ? this.dataset['00660009']?.Value[0]
      : this.dataset['00660009']?.Value;
  }

  get '00660009'(): Element {
    return this.dataset['00660009'];
  }

  // Surface Processing Ratio
  get SurfaceProcessingRatio(): any {
    const element = this.dataset['0066000A'];
    return (element?.Value.length === 1)
      ? this.dataset['0066000A']?.Value[0]
      : this.dataset['0066000A']?.Value;
  }

  get '0066000A'(): Element {
    return this.dataset['0066000A'];
  }

  // Surface Processing Description
  get SurfaceProcessingDescription(): any {
    const element = this.dataset['0066000B'];
    return (element?.Value.length === 1)
      ? this.dataset['0066000B']?.Value[0]
      : this.dataset['0066000B']?.Value;
  }

  get '0066000B'(): Element {
    return this.dataset['0066000B'];
  }

  // Recommended Presentation Opacity
  get RecommendedPresentationOpacity(): any {
    const element = this.dataset['0066000C'];
    return (element?.Value.length === 1)
      ? this.dataset['0066000C']?.Value[0]
      : this.dataset['0066000C']?.Value;
  }

  get '0066000C'(): Element {
    return this.dataset['0066000C'];
  }

  // Recommended Presentation Type
  get RecommendedPresentationType(): any {
    const element = this.dataset['0066000D'];
    return (element?.Value.length === 1)
      ? this.dataset['0066000D']?.Value[0]
      : this.dataset['0066000D']?.Value;
  }

  get '0066000D'(): Element {
    return this.dataset['0066000D'];
  }

  // Finite Volume
  get FiniteVolume(): any {
    const element = this.dataset['0066000E'];
    return (element?.Value.length === 1)
      ? this.dataset['0066000E']?.Value[0]
      : this.dataset['0066000E']?.Value;
  }

  get '0066000E'(): Element {
    return this.dataset['0066000E'];
  }

  // Manifold
  get Manifold(): any {
    const element = this.dataset['00660010'];
    return (element?.Value.length === 1)
      ? this.dataset['00660010']?.Value[0]
      : this.dataset['00660010']?.Value;
  }

  get '00660010'(): Element {
    return this.dataset['00660010'];
  }

  // Surface Points Sequence
  get SurfacePointsSequence(): any {
    const element = this.dataset['00660011'];
    return (element?.Value.length === 1)
      ? this.dataset['00660011']?.Value[0]
      : this.dataset['00660011']?.Value;
  }

  get '00660011'(): Element {
    return this.dataset['00660011'];
  }

  // Surface Points Normals Sequence
  get SurfacePointsNormalsSequence(): any {
    const element = this.dataset['00660012'];
    return (element?.Value.length === 1)
      ? this.dataset['00660012']?.Value[0]
      : this.dataset['00660012']?.Value;
  }

  get '00660012'(): Element {
    return this.dataset['00660012'];
  }

  // Surface Mesh Primitives Sequence
  get SurfaceMeshPrimitivesSequence(): any {
    const element = this.dataset['00660013'];
    return (element?.Value.length === 1)
      ? this.dataset['00660013']?.Value[0]
      : this.dataset['00660013']?.Value;
  }

  get '00660013'(): Element {
    return this.dataset['00660013'];
  }

  // Number of Surface Points
  get NumberOfSurfacePoints(): any {
    const element = this.dataset['00660015'];
    return (element?.Value.length === 1)
      ? this.dataset['00660015']?.Value[0]
      : this.dataset['00660015']?.Value;
  }

  get '00660015'(): Element {
    return this.dataset['00660015'];
  }

  // Point Coordinates Data
  get PointCoordinatesData(): any {
    const element = this.dataset['00660016'];
    return (element?.Value.length === 1)
      ? this.dataset['00660016']?.Value[0]
      : this.dataset['00660016']?.Value;
  }

  get '00660016'(): Element {
    return this.dataset['00660016'];
  }

  // Point Position Accuracy
  get PointPositionAccuracy(): any {
    const element = this.dataset['00660017'];
    return (element?.Value.length === 1)
      ? this.dataset['00660017']?.Value[0]
      : this.dataset['00660017']?.Value;
  }

  get '00660017'(): Element {
    return this.dataset['00660017'];
  }

  // Mean Point Distance
  get MeanPointDistance(): any {
    const element = this.dataset['00660018'];
    return (element?.Value.length === 1)
      ? this.dataset['00660018']?.Value[0]
      : this.dataset['00660018']?.Value;
  }

  get '00660018'(): Element {
    return this.dataset['00660018'];
  }

  // Maximum Point Distance
  get MaximumPointDistance(): any {
    const element = this.dataset['00660019'];
    return (element?.Value.length === 1)
      ? this.dataset['00660019']?.Value[0]
      : this.dataset['00660019']?.Value;
  }

  get '00660019'(): Element {
    return this.dataset['00660019'];
  }

  // Points Bounding Box Coordinates
  get PointsBoundingBoxCoordinates(): any {
    const element = this.dataset['0066001A'];
    return (element?.Value.length === 1)
      ? this.dataset['0066001A']?.Value[0]
      : this.dataset['0066001A']?.Value;
  }

  get '0066001A'(): Element {
    return this.dataset['0066001A'];
  }

  // Axis of Rotation
  get AxisOfRotation(): any {
    const element = this.dataset['0066001B'];
    return (element?.Value.length === 1)
      ? this.dataset['0066001B']?.Value[0]
      : this.dataset['0066001B']?.Value;
  }

  get '0066001B'(): Element {
    return this.dataset['0066001B'];
  }

  // Center of Rotation
  get CenterOfRotation(): any {
    const element = this.dataset['0066001C'];
    return (element?.Value.length === 1)
      ? this.dataset['0066001C']?.Value[0]
      : this.dataset['0066001C']?.Value;
  }

  get '0066001C'(): Element {
    return this.dataset['0066001C'];
  }

  // Number of Vectors
  get NumberOfVectors(): any {
    const element = this.dataset['0066001E'];
    return (element?.Value.length === 1)
      ? this.dataset['0066001E']?.Value[0]
      : this.dataset['0066001E']?.Value;
  }

  get '0066001E'(): Element {
    return this.dataset['0066001E'];
  }

  // Vector Dimensionality
  get VectorDimensionality(): any {
    const element = this.dataset['0066001F'];
    return (element?.Value.length === 1)
      ? this.dataset['0066001F']?.Value[0]
      : this.dataset['0066001F']?.Value;
  }

  get '0066001F'(): Element {
    return this.dataset['0066001F'];
  }

  // Vector Accuracy
  get VectorAccuracy(): any {
    const element = this.dataset['00660020'];
    return (element?.Value.length === 1)
      ? this.dataset['00660020']?.Value[0]
      : this.dataset['00660020']?.Value;
  }

  get '00660020'(): Element {
    return this.dataset['00660020'];
  }

  // Vector Coordinate Data
  get VectorCoordinateData(): any {
    const element = this.dataset['00660021'];
    return (element?.Value.length === 1)
      ? this.dataset['00660021']?.Value[0]
      : this.dataset['00660021']?.Value;
  }

  get '00660021'(): Element {
    return this.dataset['00660021'];
  }

  // Triangle Point Index List
  get TrianglePointIndexList(): any {
    const element = this.dataset['00660023'];
    return (element?.Value.length === 1)
      ? this.dataset['00660023']?.Value[0]
      : this.dataset['00660023']?.Value;
  }

  get '00660023'(): Element {
    return this.dataset['00660023'];
  }

  // Edge Point Index List
  get EdgePointIndexList(): any {
    const element = this.dataset['00660024'];
    return (element?.Value.length === 1)
      ? this.dataset['00660024']?.Value[0]
      : this.dataset['00660024']?.Value;
  }

  get '00660024'(): Element {
    return this.dataset['00660024'];
  }

  // Vertex Point Index List
  get VertexPointIndexList(): any {
    const element = this.dataset['00660025'];
    return (element?.Value.length === 1)
      ? this.dataset['00660025']?.Value[0]
      : this.dataset['00660025']?.Value;
  }

  get '00660025'(): Element {
    return this.dataset['00660025'];
  }

  // Triangle Strip Sequence
  get TriangleStripSequence(): any {
    const element = this.dataset['00660026'];
    return (element?.Value.length === 1)
      ? this.dataset['00660026']?.Value[0]
      : this.dataset['00660026']?.Value;
  }

  get '00660026'(): Element {
    return this.dataset['00660026'];
  }

  // Triangle Fan Sequence
  get TriangleFanSequence(): any {
    const element = this.dataset['00660027'];
    return (element?.Value.length === 1)
      ? this.dataset['00660027']?.Value[0]
      : this.dataset['00660027']?.Value;
  }

  get '00660027'(): Element {
    return this.dataset['00660027'];
  }

  // Line Sequence
  get LineSequence(): any {
    const element = this.dataset['00660028'];
    return (element?.Value.length === 1)
      ? this.dataset['00660028']?.Value[0]
      : this.dataset['00660028']?.Value;
  }

  get '00660028'(): Element {
    return this.dataset['00660028'];
  }

  // Primitive Point Index List
  get PrimitivePointIndexList(): any {
    const element = this.dataset['00660029'];
    return (element?.Value.length === 1)
      ? this.dataset['00660029']?.Value[0]
      : this.dataset['00660029']?.Value;
  }

  get '00660029'(): Element {
    return this.dataset['00660029'];
  }

  // Surface Count
  get SurfaceCount(): any {
    const element = this.dataset['0066002A'];
    return (element?.Value.length === 1)
      ? this.dataset['0066002A']?.Value[0]
      : this.dataset['0066002A']?.Value;
  }

  get '0066002A'(): Element {
    return this.dataset['0066002A'];
  }

  // Referenced Surface Sequence
  get ReferencedSurfaceSequence(): any {
    const element = this.dataset['0066002B'];
    return (element?.Value.length === 1)
      ? this.dataset['0066002B']?.Value[0]
      : this.dataset['0066002B']?.Value;
  }

  get '0066002B'(): Element {
    return this.dataset['0066002B'];
  }

  // Referenced Surface Number
  get ReferencedSurfaceNumber(): any {
    const element = this.dataset['0066002C'];
    return (element?.Value.length === 1)
      ? this.dataset['0066002C']?.Value[0]
      : this.dataset['0066002C']?.Value;
  }

  get '0066002C'(): Element {
    return this.dataset['0066002C'];
  }

  // Segment Surface Generation Algorithm Identification Sequence
  get SegmentSurfaceGenerationAlgorithmIdentificationSequence(): any {
    const element = this.dataset['0066002D'];
    return (element?.Value.length === 1)
      ? this.dataset['0066002D']?.Value[0]
      : this.dataset['0066002D']?.Value;
  }

  get '0066002D'(): Element {
    return this.dataset['0066002D'];
  }

  // Segment Surface Source Instance Sequence
  get SegmentSurfaceSourceInstanceSequence(): any {
    const element = this.dataset['0066002E'];
    return (element?.Value.length === 1)
      ? this.dataset['0066002E']?.Value[0]
      : this.dataset['0066002E']?.Value;
  }

  get '0066002E'(): Element {
    return this.dataset['0066002E'];
  }

  // Algorithm Family Code Sequence
  get AlgorithmFamilyCodeSequence(): any {
    const element = this.dataset['0066002F'];
    return (element?.Value.length === 1)
      ? this.dataset['0066002F']?.Value[0]
      : this.dataset['0066002F']?.Value;
  }

  get '0066002F'(): Element {
    return this.dataset['0066002F'];
  }

  // Algorithm Name Code Sequence
  get AlgorithmNameCodeSequence(): any {
    const element = this.dataset['00660030'];
    return (element?.Value.length === 1)
      ? this.dataset['00660030']?.Value[0]
      : this.dataset['00660030']?.Value;
  }

  get '00660030'(): Element {
    return this.dataset['00660030'];
  }

  // Algorithm Version
  get AlgorithmVersion(): any {
    const element = this.dataset['00660031'];
    return (element?.Value.length === 1)
      ? this.dataset['00660031']?.Value[0]
      : this.dataset['00660031']?.Value;
  }

  get '00660031'(): Element {
    return this.dataset['00660031'];
  }

  // Algorithm Parameters
  get AlgorithmParameters(): any {
    const element = this.dataset['00660032'];
    return (element?.Value.length === 1)
      ? this.dataset['00660032']?.Value[0]
      : this.dataset['00660032']?.Value;
  }

  get '00660032'(): Element {
    return this.dataset['00660032'];
  }

  // Facet Sequence
  get FacetSequence(): any {
    const element = this.dataset['00660034'];
    return (element?.Value.length === 1)
      ? this.dataset['00660034']?.Value[0]
      : this.dataset['00660034']?.Value;
  }

  get '00660034'(): Element {
    return this.dataset['00660034'];
  }

  // Surface Processing Algorithm Identification Sequence
  get SurfaceProcessingAlgorithmIdentificationSequence(): any {
    const element = this.dataset['00660035'];
    return (element?.Value.length === 1)
      ? this.dataset['00660035']?.Value[0]
      : this.dataset['00660035']?.Value;
  }

  get '00660035'(): Element {
    return this.dataset['00660035'];
  }

  // Algorithm Name
  get AlgorithmName(): any {
    const element = this.dataset['00660036'];
    return (element?.Value.length === 1)
      ? this.dataset['00660036']?.Value[0]
      : this.dataset['00660036']?.Value;
  }

  get '00660036'(): Element {
    return this.dataset['00660036'];
  }

  // Recommended Point Radius
  get RecommendedPointRadius(): any {
    const element = this.dataset['00660037'];
    return (element?.Value.length === 1)
      ? this.dataset['00660037']?.Value[0]
      : this.dataset['00660037']?.Value;
  }

  get '00660037'(): Element {
    return this.dataset['00660037'];
  }

  // Recommended Line Thickness
  get RecommendedLineThickness(): any {
    const element = this.dataset['00660038'];
    return (element?.Value.length === 1)
      ? this.dataset['00660038']?.Value[0]
      : this.dataset['00660038']?.Value;
  }

  get '00660038'(): Element {
    return this.dataset['00660038'];
  }

  // Implant Size
  get ImplantSize(): any {
    const element = this.dataset['00686210'];
    return (element?.Value.length === 1)
      ? this.dataset['00686210']?.Value[0]
      : this.dataset['00686210']?.Value;
  }

  get '00686210'(): Element {
    return this.dataset['00686210'];
  }

  // Implant Template Version
  get ImplantTemplateVersion(): any {
    const element = this.dataset['00686221'];
    return (element?.Value.length === 1)
      ? this.dataset['00686221']?.Value[0]
      : this.dataset['00686221']?.Value;
  }

  get '00686221'(): Element {
    return this.dataset['00686221'];
  }

  // Replaced Implant Template Sequence
  get ReplacedImplantTemplateSequence(): any {
    const element = this.dataset['00686222'];
    return (element?.Value.length === 1)
      ? this.dataset['00686222']?.Value[0]
      : this.dataset['00686222']?.Value;
  }

  get '00686222'(): Element {
    return this.dataset['00686222'];
  }

  // Implant Type
  get ImplantType(): any {
    const element = this.dataset['00686223'];
    return (element?.Value.length === 1)
      ? this.dataset['00686223']?.Value[0]
      : this.dataset['00686223']?.Value;
  }

  get '00686223'(): Element {
    return this.dataset['00686223'];
  }

  // Derivation Implant Template Sequence
  get DerivationImplantTemplateSequence(): any {
    const element = this.dataset['00686224'];
    return (element?.Value.length === 1)
      ? this.dataset['00686224']?.Value[0]
      : this.dataset['00686224']?.Value;
  }

  get '00686224'(): Element {
    return this.dataset['00686224'];
  }

  // Original Implant Template Sequence
  get OriginalImplantTemplateSequence(): any {
    const element = this.dataset['00686225'];
    return (element?.Value.length === 1)
      ? this.dataset['00686225']?.Value[0]
      : this.dataset['00686225']?.Value;
  }

  get '00686225'(): Element {
    return this.dataset['00686225'];
  }

  // Effective DateTime
  get EffectiveDateTime(): any {
    const element = this.dataset['00686226'];
    return (element?.Value.length === 1)
      ? this.dataset['00686226']?.Value[0]
      : this.dataset['00686226']?.Value;
  }

  get '00686226'(): Element {
    return this.dataset['00686226'];
  }

  // Implant Target Anatomy Sequence
  get ImplantTargetAnatomySequence(): any {
    const element = this.dataset['00686230'];
    return (element?.Value.length === 1)
      ? this.dataset['00686230']?.Value[0]
      : this.dataset['00686230']?.Value;
  }

  get '00686230'(): Element {
    return this.dataset['00686230'];
  }

  // Information From Manufacturer Sequence
  get InformationFromManufacturerSequence(): any {
    const element = this.dataset['00686260'];
    return (element?.Value.length === 1)
      ? this.dataset['00686260']?.Value[0]
      : this.dataset['00686260']?.Value;
  }

  get '00686260'(): Element {
    return this.dataset['00686260'];
  }

  // Notification From Manufacturer Sequence
  get NotificationFromManufacturerSequence(): any {
    const element = this.dataset['00686265'];
    return (element?.Value.length === 1)
      ? this.dataset['00686265']?.Value[0]
      : this.dataset['00686265']?.Value;
  }

  get '00686265'(): Element {
    return this.dataset['00686265'];
  }

  // Information Issue DateTime
  get InformationIssueDateTime(): any {
    const element = this.dataset['00686270'];
    return (element?.Value.length === 1)
      ? this.dataset['00686270']?.Value[0]
      : this.dataset['00686270']?.Value;
  }

  get '00686270'(): Element {
    return this.dataset['00686270'];
  }

  // Information Summary
  get InformationSummary(): any {
    const element = this.dataset['00686280'];
    return (element?.Value.length === 1)
      ? this.dataset['00686280']?.Value[0]
      : this.dataset['00686280']?.Value;
  }

  get '00686280'(): Element {
    return this.dataset['00686280'];
  }

  // Implant Regulatory Disapproval Code Sequence
  get ImplantRegulatoryDisapprovalCodeSequence(): any {
    const element = this.dataset['006862A0'];
    return (element?.Value.length === 1)
      ? this.dataset['006862A0']?.Value[0]
      : this.dataset['006862A0']?.Value;
  }

  get '006862A0'(): Element {
    return this.dataset['006862A0'];
  }

  // Overall Template Spatial Tolerance
  get OverallTemplateSpatialTolerance(): any {
    const element = this.dataset['006862A5'];
    return (element?.Value.length === 1)
      ? this.dataset['006862A5']?.Value[0]
      : this.dataset['006862A5']?.Value;
  }

  get '006862A5'(): Element {
    return this.dataset['006862A5'];
  }

  // HPGL Document Sequence
  get HPGLDocumentSequence(): any {
    const element = this.dataset['006862C0'];
    return (element?.Value.length === 1)
      ? this.dataset['006862C0']?.Value[0]
      : this.dataset['006862C0']?.Value;
  }

  get '006862C0'(): Element {
    return this.dataset['006862C0'];
  }

  // HPGL Document ID
  get HPGLDocumentID(): any {
    const element = this.dataset['006862D0'];
    return (element?.Value.length === 1)
      ? this.dataset['006862D0']?.Value[0]
      : this.dataset['006862D0']?.Value;
  }

  get '006862D0'(): Element {
    return this.dataset['006862D0'];
  }

  // HPGL Document Label
  get HPGLDocumentLabel(): any {
    const element = this.dataset['006862D5'];
    return (element?.Value.length === 1)
      ? this.dataset['006862D5']?.Value[0]
      : this.dataset['006862D5']?.Value;
  }

  get '006862D5'(): Element {
    return this.dataset['006862D5'];
  }

  // View Orientation Code Sequence
  get ViewOrientationCodeSequence(): any {
    const element = this.dataset['006862E0'];
    return (element?.Value.length === 1)
      ? this.dataset['006862E0']?.Value[0]
      : this.dataset['006862E0']?.Value;
  }

  get '006862E0'(): Element {
    return this.dataset['006862E0'];
  }

  // View Orientation Modifier
  get ViewOrientationModifier(): any {
    const element = this.dataset['006862F0'];
    return (element?.Value.length === 1)
      ? this.dataset['006862F0']?.Value[0]
      : this.dataset['006862F0']?.Value;
  }

  get '006862F0'(): Element {
    return this.dataset['006862F0'];
  }

  // HPGL Document Scaling
  get HPGLDocumentScaling(): any {
    const element = this.dataset['006862F2'];
    return (element?.Value.length === 1)
      ? this.dataset['006862F2']?.Value[0]
      : this.dataset['006862F2']?.Value;
  }

  get '006862F2'(): Element {
    return this.dataset['006862F2'];
  }

  // HPGL Document
  get HPGLDocument(): any {
    const element = this.dataset['00686300'];
    return (element?.Value.length === 1)
      ? this.dataset['00686300']?.Value[0]
      : this.dataset['00686300']?.Value;
  }

  get '00686300'(): Element {
    return this.dataset['00686300'];
  }

  // HPGL Contour Pen Number
  get HPGLContourPenNumber(): any {
    const element = this.dataset['00686310'];
    return (element?.Value.length === 1)
      ? this.dataset['00686310']?.Value[0]
      : this.dataset['00686310']?.Value;
  }

  get '00686310'(): Element {
    return this.dataset['00686310'];
  }

  // HPGL Pen Sequence
  get HPGLPenSequence(): any {
    const element = this.dataset['00686320'];
    return (element?.Value.length === 1)
      ? this.dataset['00686320']?.Value[0]
      : this.dataset['00686320']?.Value;
  }

  get '00686320'(): Element {
    return this.dataset['00686320'];
  }

  // HPGL Pen Number
  get HPGLPenNumber(): any {
    const element = this.dataset['00686330'];
    return (element?.Value.length === 1)
      ? this.dataset['00686330']?.Value[0]
      : this.dataset['00686330']?.Value;
  }

  get '00686330'(): Element {
    return this.dataset['00686330'];
  }

  // HPGL Pen Label
  get HPGLPenLabel(): any {
    const element = this.dataset['00686340'];
    return (element?.Value.length === 1)
      ? this.dataset['00686340']?.Value[0]
      : this.dataset['00686340']?.Value;
  }

  get '00686340'(): Element {
    return this.dataset['00686340'];
  }

  // HPGL Pen Description
  get HPGLPenDescription(): any {
    const element = this.dataset['00686345'];
    return (element?.Value.length === 1)
      ? this.dataset['00686345']?.Value[0]
      : this.dataset['00686345']?.Value;
  }

  get '00686345'(): Element {
    return this.dataset['00686345'];
  }

  // Recommended Rotation Point
  get RecommendedRotationPoint(): any {
    const element = this.dataset['00686346'];
    return (element?.Value.length === 1)
      ? this.dataset['00686346']?.Value[0]
      : this.dataset['00686346']?.Value;
  }

  get '00686346'(): Element {
    return this.dataset['00686346'];
  }

  // Bounding Rectangle
  get BoundingRectangle(): any {
    const element = this.dataset['00686347'];
    return (element?.Value.length === 1)
      ? this.dataset['00686347']?.Value[0]
      : this.dataset['00686347']?.Value;
  }

  get '00686347'(): Element {
    return this.dataset['00686347'];
  }

  // Implant Template 3D Model Surface Number
  get ImplantTemplate3DModelSurfaceNumber(): any {
    const element = this.dataset['00686350'];
    return (element?.Value.length === 1)
      ? this.dataset['00686350']?.Value[0]
      : this.dataset['00686350']?.Value;
  }

  get '00686350'(): Element {
    return this.dataset['00686350'];
  }

  // Surface Model Description Sequence
  get SurfaceModelDescriptionSequence(): any {
    const element = this.dataset['00686360'];
    return (element?.Value.length === 1)
      ? this.dataset['00686360']?.Value[0]
      : this.dataset['00686360']?.Value;
  }

  get '00686360'(): Element {
    return this.dataset['00686360'];
  }

  // Surface Model Label
  get SurfaceModelLabel(): any {
    const element = this.dataset['00686380'];
    return (element?.Value.length === 1)
      ? this.dataset['00686380']?.Value[0]
      : this.dataset['00686380']?.Value;
  }

  get '00686380'(): Element {
    return this.dataset['00686380'];
  }

  // Surface Model Scaling Factor
  get SurfaceModelScalingFactor(): any {
    const element = this.dataset['00686390'];
    return (element?.Value.length === 1)
      ? this.dataset['00686390']?.Value[0]
      : this.dataset['00686390']?.Value;
  }

  get '00686390'(): Element {
    return this.dataset['00686390'];
  }

  // Materials Code Sequence
  get MaterialsCodeSequence(): any {
    const element = this.dataset['006863A0'];
    return (element?.Value.length === 1)
      ? this.dataset['006863A0']?.Value[0]
      : this.dataset['006863A0']?.Value;
  }

  get '006863A0'(): Element {
    return this.dataset['006863A0'];
  }

  // Coating Materials Code Sequence
  get CoatingMaterialsCodeSequence(): any {
    const element = this.dataset['006863A4'];
    return (element?.Value.length === 1)
      ? this.dataset['006863A4']?.Value[0]
      : this.dataset['006863A4']?.Value;
  }

  get '006863A4'(): Element {
    return this.dataset['006863A4'];
  }

  // Implant Type Code Sequence
  get ImplantTypeCodeSequence(): any {
    const element = this.dataset['006863A8'];
    return (element?.Value.length === 1)
      ? this.dataset['006863A8']?.Value[0]
      : this.dataset['006863A8']?.Value;
  }

  get '006863A8'(): Element {
    return this.dataset['006863A8'];
  }

  // Fixation Method Code Sequence
  get FixationMethodCodeSequence(): any {
    const element = this.dataset['006863AC'];
    return (element?.Value.length === 1)
      ? this.dataset['006863AC']?.Value[0]
      : this.dataset['006863AC']?.Value;
  }

  get '006863AC'(): Element {
    return this.dataset['006863AC'];
  }

  // Mating Feature Sets Sequence
  get MatingFeatureSetsSequence(): any {
    const element = this.dataset['006863B0'];
    return (element?.Value.length === 1)
      ? this.dataset['006863B0']?.Value[0]
      : this.dataset['006863B0']?.Value;
  }

  get '006863B0'(): Element {
    return this.dataset['006863B0'];
  }

  // Mating Feature Set ID
  get MatingFeatureSetID(): any {
    const element = this.dataset['006863C0'];
    return (element?.Value.length === 1)
      ? this.dataset['006863C0']?.Value[0]
      : this.dataset['006863C0']?.Value;
  }

  get '006863C0'(): Element {
    return this.dataset['006863C0'];
  }

  // Mating Feature Set Label
  get MatingFeatureSetLabel(): any {
    const element = this.dataset['006863D0'];
    return (element?.Value.length === 1)
      ? this.dataset['006863D0']?.Value[0]
      : this.dataset['006863D0']?.Value;
  }

  get '006863D0'(): Element {
    return this.dataset['006863D0'];
  }

  // Mating Feature Sequence
  get MatingFeatureSequence(): any {
    const element = this.dataset['006863E0'];
    return (element?.Value.length === 1)
      ? this.dataset['006863E0']?.Value[0]
      : this.dataset['006863E0']?.Value;
  }

  get '006863E0'(): Element {
    return this.dataset['006863E0'];
  }

  // Mating Feature ID
  get MatingFeatureID(): any {
    const element = this.dataset['006863F0'];
    return (element?.Value.length === 1)
      ? this.dataset['006863F0']?.Value[0]
      : this.dataset['006863F0']?.Value;
  }

  get '006863F0'(): Element {
    return this.dataset['006863F0'];
  }

  // Mating Feature Degree of Freedom Sequence
  get MatingFeatureDegreeOfFreedomSequence(): any {
    const element = this.dataset['00686400'];
    return (element?.Value.length === 1)
      ? this.dataset['00686400']?.Value[0]
      : this.dataset['00686400']?.Value;
  }

  get '00686400'(): Element {
    return this.dataset['00686400'];
  }

  // Degree of Freedom ID
  get DegreeOfFreedomID(): any {
    const element = this.dataset['00686410'];
    return (element?.Value.length === 1)
      ? this.dataset['00686410']?.Value[0]
      : this.dataset['00686410']?.Value;
  }

  get '00686410'(): Element {
    return this.dataset['00686410'];
  }

  // Degree of Freedom Type
  get DegreeOfFreedomType(): any {
    const element = this.dataset['00686420'];
    return (element?.Value.length === 1)
      ? this.dataset['00686420']?.Value[0]
      : this.dataset['00686420']?.Value;
  }

  get '00686420'(): Element {
    return this.dataset['00686420'];
  }

  // 2D Mating Feature Coordinates Sequence
  get TwoDMatingFeatureCoordinatesSequence(): any {
    const element = this.dataset['00686430'];
    return (element?.Value.length === 1)
      ? this.dataset['00686430']?.Value[0]
      : this.dataset['00686430']?.Value;
  }

  get '00686430'(): Element {
    return this.dataset['00686430'];
  }

  // Referenced HPGL Document ID
  get ReferencedHPGLDocumentID(): any {
    const element = this.dataset['00686440'];
    return (element?.Value.length === 1)
      ? this.dataset['00686440']?.Value[0]
      : this.dataset['00686440']?.Value;
  }

  get '00686440'(): Element {
    return this.dataset['00686440'];
  }

  // 2D Mating Point
  get TwoDMatingPoint(): any {
    const element = this.dataset['00686450'];
    return (element?.Value.length === 1)
      ? this.dataset['00686450']?.Value[0]
      : this.dataset['00686450']?.Value;
  }

  get '00686450'(): Element {
    return this.dataset['00686450'];
  }

  // 2D Mating Axes
  get TwoDMatingAxes(): any {
    const element = this.dataset['00686460'];
    return (element?.Value.length === 1)
      ? this.dataset['00686460']?.Value[0]
      : this.dataset['00686460']?.Value;
  }

  get '00686460'(): Element {
    return this.dataset['00686460'];
  }

  // 2D Degree of Freedom Sequence
  get TwoDDegreeOfFreedomSequence(): any {
    const element = this.dataset['00686470'];
    return (element?.Value.length === 1)
      ? this.dataset['00686470']?.Value[0]
      : this.dataset['00686470']?.Value;
  }

  get '00686470'(): Element {
    return this.dataset['00686470'];
  }

  // 3D Degree of Freedom Axis
  get ThreeDDegreeOfFreedomAxis(): any {
    const element = this.dataset['00686490'];
    return (element?.Value.length === 1)
      ? this.dataset['00686490']?.Value[0]
      : this.dataset['00686490']?.Value;
  }

  get '00686490'(): Element {
    return this.dataset['00686490'];
  }

  // Range of Freedom
  get RangeOfFreedom(): any {
    const element = this.dataset['006864A0'];
    return (element?.Value.length === 1)
      ? this.dataset['006864A0']?.Value[0]
      : this.dataset['006864A0']?.Value;
  }

  get '006864A0'(): Element {
    return this.dataset['006864A0'];
  }

  // 3D Mating Point
  get ThreeDMatingPoint(): any {
    const element = this.dataset['006864C0'];
    return (element?.Value.length === 1)
      ? this.dataset['006864C0']?.Value[0]
      : this.dataset['006864C0']?.Value;
  }

  get '006864C0'(): Element {
    return this.dataset['006864C0'];
  }

  // 3D Mating Axes
  get ThreeDMatingAxes(): any {
    const element = this.dataset['006864D0'];
    return (element?.Value.length === 1)
      ? this.dataset['006864D0']?.Value[0]
      : this.dataset['006864D0']?.Value;
  }

  get '006864D0'(): Element {
    return this.dataset['006864D0'];
  }

  // 2D Degree of Freedom Axis
  get TwoDDegreeOfFreedomAxis(): any {
    const element = this.dataset['006864F0'];
    return (element?.Value.length === 1)
      ? this.dataset['006864F0']?.Value[0]
      : this.dataset['006864F0']?.Value;
  }

  get '006864F0'(): Element {
    return this.dataset['006864F0'];
  }

  // Planning Landmark Point Sequence
  get PlanningLandmarkPointSequence(): any {
    const element = this.dataset['00686500'];
    return (element?.Value.length === 1)
      ? this.dataset['00686500']?.Value[0]
      : this.dataset['00686500']?.Value;
  }

  get '00686500'(): Element {
    return this.dataset['00686500'];
  }

  // Planning Landmark Line Sequence
  get PlanningLandmarkLineSequence(): any {
    const element = this.dataset['00686510'];
    return (element?.Value.length === 1)
      ? this.dataset['00686510']?.Value[0]
      : this.dataset['00686510']?.Value;
  }

  get '00686510'(): Element {
    return this.dataset['00686510'];
  }

  // Planning Landmark Plane Sequence
  get PlanningLandmarkPlaneSequence(): any {
    const element = this.dataset['00686520'];
    return (element?.Value.length === 1)
      ? this.dataset['00686520']?.Value[0]
      : this.dataset['00686520']?.Value;
  }

  get '00686520'(): Element {
    return this.dataset['00686520'];
  }

  // Planning Landmark ID
  get PlanningLandmarkID(): any {
    const element = this.dataset['00686530'];
    return (element?.Value.length === 1)
      ? this.dataset['00686530']?.Value[0]
      : this.dataset['00686530']?.Value;
  }

  get '00686530'(): Element {
    return this.dataset['00686530'];
  }

  // Planning Landmark Description
  get PlanningLandmarkDescription(): any {
    const element = this.dataset['00686540'];
    return (element?.Value.length === 1)
      ? this.dataset['00686540']?.Value[0]
      : this.dataset['00686540']?.Value;
  }

  get '00686540'(): Element {
    return this.dataset['00686540'];
  }

  // Planning Landmark Identification Code Sequence
  get PlanningLandmarkIdentificationCodeSequence(): any {
    const element = this.dataset['00686545'];
    return (element?.Value.length === 1)
      ? this.dataset['00686545']?.Value[0]
      : this.dataset['00686545']?.Value;
  }

  get '00686545'(): Element {
    return this.dataset['00686545'];
  }

  // 2D Point Coordinates Sequence
  get TwoDPointCoordinatesSequence(): any {
    const element = this.dataset['00686550'];
    return (element?.Value.length === 1)
      ? this.dataset['00686550']?.Value[0]
      : this.dataset['00686550']?.Value;
  }

  get '00686550'(): Element {
    return this.dataset['00686550'];
  }

  // 2D Point Coordinates
  get TwoDPointCoordinates(): any {
    const element = this.dataset['00686560'];
    return (element?.Value.length === 1)
      ? this.dataset['00686560']?.Value[0]
      : this.dataset['00686560']?.Value;
  }

  get '00686560'(): Element {
    return this.dataset['00686560'];
  }

  // 3D Point Coordinates
  get ThreeDPointCoordinates(): any {
    const element = this.dataset['00686590'];
    return (element?.Value.length === 1)
      ? this.dataset['00686590']?.Value[0]
      : this.dataset['00686590']?.Value;
  }

  get '00686590'(): Element {
    return this.dataset['00686590'];
  }

  // 2D Line Coordinates Sequence
  get TwoDLineCoordinatesSequence(): any {
    const element = this.dataset['006865A0'];
    return (element?.Value.length === 1)
      ? this.dataset['006865A0']?.Value[0]
      : this.dataset['006865A0']?.Value;
  }

  get '006865A0'(): Element {
    return this.dataset['006865A0'];
  }

  // 2D Line Coordinates
  get TwoDLineCoordinates(): any {
    const element = this.dataset['006865B0'];
    return (element?.Value.length === 1)
      ? this.dataset['006865B0']?.Value[0]
      : this.dataset['006865B0']?.Value;
  }

  get '006865B0'(): Element {
    return this.dataset['006865B0'];
  }

  // 3D Line Coordinates
  get ThreeDLineCoordinates(): any {
    const element = this.dataset['006865D0'];
    return (element?.Value.length === 1)
      ? this.dataset['006865D0']?.Value[0]
      : this.dataset['006865D0']?.Value;
  }

  get '006865D0'(): Element {
    return this.dataset['006865D0'];
  }

  // 2D Plane Coordinates Sequence
  get TwoDPlaneCoordinatesSequence(): any {
    const element = this.dataset['006865E0'];
    return (element?.Value.length === 1)
      ? this.dataset['006865E0']?.Value[0]
      : this.dataset['006865E0']?.Value;
  }

  get '006865E0'(): Element {
    return this.dataset['006865E0'];
  }

  // 2D Plane Intersection
  get TwoDPlaneIntersection(): any {
    const element = this.dataset['006865F0'];
    return (element?.Value.length === 1)
      ? this.dataset['006865F0']?.Value[0]
      : this.dataset['006865F0']?.Value;
  }

  get '006865F0'(): Element {
    return this.dataset['006865F0'];
  }

  // 3D Plane Origin
  get ThreeDPlaneOrigin(): any {
    const element = this.dataset['00686610'];
    return (element?.Value.length === 1)
      ? this.dataset['00686610']?.Value[0]
      : this.dataset['00686610']?.Value;
  }

  get '00686610'(): Element {
    return this.dataset['00686610'];
  }

  // 3D Plane Normal
  get ThreeDPlaneNormal(): any {
    const element = this.dataset['00686620'];
    return (element?.Value.length === 1)
      ? this.dataset['00686620']?.Value[0]
      : this.dataset['00686620']?.Value;
  }

  get '00686620'(): Element {
    return this.dataset['00686620'];
  }

  // Graphic Annotation Sequence
  get GraphicAnnotationSequence(): any {
    const element = this.dataset['00700001'];
    return (element?.Value.length === 1)
      ? this.dataset['00700001']?.Value[0]
      : this.dataset['00700001']?.Value;
  }

  get '00700001'(): Element {
    return this.dataset['00700001'];
  }

  // Graphic Layer
  get GraphicLayer(): any {
    const element = this.dataset['00700002'];
    return (element?.Value.length === 1)
      ? this.dataset['00700002']?.Value[0]
      : this.dataset['00700002']?.Value;
  }

  get '00700002'(): Element {
    return this.dataset['00700002'];
  }

  // Bounding Box Annotation Units
  get BoundingBoxAnnotationUnits(): any {
    const element = this.dataset['00700003'];
    return (element?.Value.length === 1)
      ? this.dataset['00700003']?.Value[0]
      : this.dataset['00700003']?.Value;
  }

  get '00700003'(): Element {
    return this.dataset['00700003'];
  }

  // Anchor Point Annotation Units
  get AnchorPointAnnotationUnits(): any {
    const element = this.dataset['00700004'];
    return (element?.Value.length === 1)
      ? this.dataset['00700004']?.Value[0]
      : this.dataset['00700004']?.Value;
  }

  get '00700004'(): Element {
    return this.dataset['00700004'];
  }

  // Graphic Annotation Units
  get GraphicAnnotationUnits(): any {
    const element = this.dataset['00700005'];
    return (element?.Value.length === 1)
      ? this.dataset['00700005']?.Value[0]
      : this.dataset['00700005']?.Value;
  }

  get '00700005'(): Element {
    return this.dataset['00700005'];
  }

  // Unformatted Text Value
  get UnformattedTextValue(): any {
    const element = this.dataset['00700006'];
    return (element?.Value.length === 1)
      ? this.dataset['00700006']?.Value[0]
      : this.dataset['00700006']?.Value;
  }

  get '00700006'(): Element {
    return this.dataset['00700006'];
  }

  // Text Object Sequence
  get TextObjectSequence(): any {
    const element = this.dataset['00700008'];
    return (element?.Value.length === 1)
      ? this.dataset['00700008']?.Value[0]
      : this.dataset['00700008']?.Value;
  }

  get '00700008'(): Element {
    return this.dataset['00700008'];
  }

  // Graphic Object Sequence
  get GraphicObjectSequence(): any {
    const element = this.dataset['00700009'];
    return (element?.Value.length === 1)
      ? this.dataset['00700009']?.Value[0]
      : this.dataset['00700009']?.Value;
  }

  get '00700009'(): Element {
    return this.dataset['00700009'];
  }

  // Bounding Box Top Left Hand Corner
  get BoundingBoxTopLeftHandCorner(): any {
    const element = this.dataset['00700010'];
    return (element?.Value.length === 1)
      ? this.dataset['00700010']?.Value[0]
      : this.dataset['00700010']?.Value;
  }

  get '00700010'(): Element {
    return this.dataset['00700010'];
  }

  // Bounding Box Bottom Right Hand Corner
  get BoundingBoxBottomRightHandCorner(): any {
    const element = this.dataset['00700011'];
    return (element?.Value.length === 1)
      ? this.dataset['00700011']?.Value[0]
      : this.dataset['00700011']?.Value;
  }

  get '00700011'(): Element {
    return this.dataset['00700011'];
  }

  // Bounding Box Text Horizontal Justification
  get BoundingBoxTextHorizontalJustification(): any {
    const element = this.dataset['00700012'];
    return (element?.Value.length === 1)
      ? this.dataset['00700012']?.Value[0]
      : this.dataset['00700012']?.Value;
  }

  get '00700012'(): Element {
    return this.dataset['00700012'];
  }

  // Anchor Point
  get AnchorPoint(): any {
    const element = this.dataset['00700014'];
    return (element?.Value.length === 1)
      ? this.dataset['00700014']?.Value[0]
      : this.dataset['00700014']?.Value;
  }

  get '00700014'(): Element {
    return this.dataset['00700014'];
  }

  // Anchor Point Visibility
  get AnchorPointVisibility(): any {
    const element = this.dataset['00700015'];
    return (element?.Value.length === 1)
      ? this.dataset['00700015']?.Value[0]
      : this.dataset['00700015']?.Value;
  }

  get '00700015'(): Element {
    return this.dataset['00700015'];
  }

  // Graphic Dimensions
  get GraphicDimensions(): any {
    const element = this.dataset['00700020'];
    return (element?.Value.length === 1)
      ? this.dataset['00700020']?.Value[0]
      : this.dataset['00700020']?.Value;
  }

  get '00700020'(): Element {
    return this.dataset['00700020'];
  }

  // Number of Graphic Points
  get NumberOfGraphicPoints(): any {
    const element = this.dataset['00700021'];
    return (element?.Value.length === 1)
      ? this.dataset['00700021']?.Value[0]
      : this.dataset['00700021']?.Value;
  }

  get '00700021'(): Element {
    return this.dataset['00700021'];
  }

  // Graphic Data
  get GraphicData(): any {
    const element = this.dataset['00700022'];
    return (element?.Value.length === 1)
      ? this.dataset['00700022']?.Value[0]
      : this.dataset['00700022']?.Value;
  }

  get '00700022'(): Element {
    return this.dataset['00700022'];
  }

  // Graphic Type
  get GraphicType(): any {
    const element = this.dataset['00700023'];
    return (element?.Value.length === 1)
      ? this.dataset['00700023']?.Value[0]
      : this.dataset['00700023']?.Value;
  }

  get '00700023'(): Element {
    return this.dataset['00700023'];
  }

  // Graphic Filled
  get GraphicFilled(): any {
    const element = this.dataset['00700024'];
    return (element?.Value.length === 1)
      ? this.dataset['00700024']?.Value[0]
      : this.dataset['00700024']?.Value;
  }

  get '00700024'(): Element {
    return this.dataset['00700024'];
  }

  // Image Rotation (Retired)
  get ImageRotationRetired(): any {
    const element = this.dataset['00700040'];
    return (element?.Value.length === 1)
      ? this.dataset['00700040']?.Value[0]
      : this.dataset['00700040']?.Value;
  }

  get '00700040'(): Element {
    return this.dataset['00700040'];
  }

  // Image Horizontal Flip
  get ImageHorizontalFlip(): any {
    const element = this.dataset['00700041'];
    return (element?.Value.length === 1)
      ? this.dataset['00700041']?.Value[0]
      : this.dataset['00700041']?.Value;
  }

  get '00700041'(): Element {
    return this.dataset['00700041'];
  }

  // Image Rotation
  get ImageRotation(): any {
    const element = this.dataset['00700042'];
    return (element?.Value.length === 1)
      ? this.dataset['00700042']?.Value[0]
      : this.dataset['00700042']?.Value;
  }

  get '00700042'(): Element {
    return this.dataset['00700042'];
  }

  // Displayed Area Top Left Hand Corner (Trial)
  get DisplayedAreaTopLeftHandCornerTrial(): any {
    const element = this.dataset['00700050'];
    return (element?.Value.length === 1)
      ? this.dataset['00700050']?.Value[0]
      : this.dataset['00700050']?.Value;
  }

  get '00700050'(): Element {
    return this.dataset['00700050'];
  }

  // Displayed Area Bottom Right Hand Corner (Trial)
  get DisplayedAreaBottomRightHandCornerTrial(): any {
    const element = this.dataset['00700051'];
    return (element?.Value.length === 1)
      ? this.dataset['00700051']?.Value[0]
      : this.dataset['00700051']?.Value;
  }

  get '00700051'(): Element {
    return this.dataset['00700051'];
  }

  // Displayed Area Top Left Hand Corner
  get DisplayedAreaTopLeftHandCorner(): any {
    const element = this.dataset['00700052'];
    return (element?.Value.length === 1)
      ? this.dataset['00700052']?.Value[0]
      : this.dataset['00700052']?.Value;
  }

  get '00700052'(): Element {
    return this.dataset['00700052'];
  }

  // Displayed Area Bottom Right Hand Corner
  get DisplayedAreaBottomRightHandCorner(): any {
    const element = this.dataset['00700053'];
    return (element?.Value.length === 1)
      ? this.dataset['00700053']?.Value[0]
      : this.dataset['00700053']?.Value;
  }

  get '00700053'(): Element {
    return this.dataset['00700053'];
  }

  // Displayed Area Selection Sequence
  get DisplayedAreaSelectionSequence(): any {
    const element = this.dataset['0070005A'];
    return (element?.Value.length === 1)
      ? this.dataset['0070005A']?.Value[0]
      : this.dataset['0070005A']?.Value;
  }

  get '0070005A'(): Element {
    return this.dataset['0070005A'];
  }

  // Graphic Layer Sequence
  get GraphicLayerSequence(): any {
    const element = this.dataset['00700060'];
    return (element?.Value.length === 1)
      ? this.dataset['00700060']?.Value[0]
      : this.dataset['00700060']?.Value;
  }

  get '00700060'(): Element {
    return this.dataset['00700060'];
  }

  // Graphic Layer Order
  get GraphicLayerOrder(): any {
    const element = this.dataset['00700062'];
    return (element?.Value.length === 1)
      ? this.dataset['00700062']?.Value[0]
      : this.dataset['00700062']?.Value;
  }

  get '00700062'(): Element {
    return this.dataset['00700062'];
  }

  // Graphic Layer Recommended Display Grayscale Value
  get GraphicLayerRecommendedDisplayGrayscaleValue(): any {
    const element = this.dataset['00700066'];
    return (element?.Value.length === 1)
      ? this.dataset['00700066']?.Value[0]
      : this.dataset['00700066']?.Value;
  }

  get '00700066'(): Element {
    return this.dataset['00700066'];
  }

  // Graphic Layer Recommended Display RGB Value
  get GraphicLayerRecommendedDisplayRGBValue(): any {
    const element = this.dataset['00700067'];
    return (element?.Value.length === 1)
      ? this.dataset['00700067']?.Value[0]
      : this.dataset['00700067']?.Value;
  }

  get '00700067'(): Element {
    return this.dataset['00700067'];
  }

  // Graphic Layer Description
  get GraphicLayerDescription(): any {
    const element = this.dataset['00700068'];
    return (element?.Value.length === 1)
      ? this.dataset['00700068']?.Value[0]
      : this.dataset['00700068']?.Value;
  }

  get '00700068'(): Element {
    return this.dataset['00700068'];
  }

  // Content Label
  get ContentLabel(): any {
    const element = this.dataset['00700080'];
    return (element?.Value.length === 1)
      ? this.dataset['00700080']?.Value[0]
      : this.dataset['00700080']?.Value;
  }

  get '00700080'(): Element {
    return this.dataset['00700080'];
  }

  // Content Description
  get ContentDescription(): any {
    const element = this.dataset['00700081'];
    return (element?.Value.length === 1)
      ? this.dataset['00700081']?.Value[0]
      : this.dataset['00700081']?.Value;
  }

  get '00700081'(): Element {
    return this.dataset['00700081'];
  }

  // Presentation Creation Date
  get PresentationCreationDate(): any {
    const element = this.dataset['00700082'];
    return (element?.Value.length === 1)
      ? this.dataset['00700082']?.Value[0]
      : this.dataset['00700082']?.Value;
  }

  get '00700082'(): Element {
    return this.dataset['00700082'];
  }

  // Presentation Creation Time
  get PresentationCreationTime(): any {
    const element = this.dataset['00700083'];
    return (element?.Value.length === 1)
      ? this.dataset['00700083']?.Value[0]
      : this.dataset['00700083']?.Value;
  }

  get '00700083'(): Element {
    return this.dataset['00700083'];
  }

  // Content Creator's Name
  get ContentCreatorName(): any {
    const element = this.dataset['00700084'];
    return (element?.Value.length === 1)
      ? this.dataset['00700084']?.Value[0]
      : this.dataset['00700084']?.Value;
  }

  get '00700084'(): Element {
    return this.dataset['00700084'];
  }

  // Content Creator's Identification Code Sequence
  get ContentCreatorIdentificationCodeSequence(): any {
    const element = this.dataset['00700086'];
    return (element?.Value.length === 1)
      ? this.dataset['00700086']?.Value[0]
      : this.dataset['00700086']?.Value;
  }

  get '00700086'(): Element {
    return this.dataset['00700086'];
  }

  // Alternate Content Description Sequence
  get AlternateContentDescriptionSequence(): any {
    const element = this.dataset['00700087'];
    return (element?.Value.length === 1)
      ? this.dataset['00700087']?.Value[0]
      : this.dataset['00700087']?.Value;
  }

  get '00700087'(): Element {
    return this.dataset['00700087'];
  }

  // Presentation Size Mode
  get PresentationSizeMode(): any {
    const element = this.dataset['00700100'];
    return (element?.Value.length === 1)
      ? this.dataset['00700100']?.Value[0]
      : this.dataset['00700100']?.Value;
  }

  get '00700100'(): Element {
    return this.dataset['00700100'];
  }

  // Presentation Pixel Spacing
  get PresentationPixelSpacing(): any {
    const element = this.dataset['00700101'];
    return (element?.Value.length === 1)
      ? this.dataset['00700101']?.Value[0]
      : this.dataset['00700101']?.Value;
  }

  get '00700101'(): Element {
    return this.dataset['00700101'];
  }

  // Presentation Pixel Aspect Ratio
  get PresentationPixelAspectRatio(): any {
    const element = this.dataset['00700102'];
    return (element?.Value.length === 1)
      ? this.dataset['00700102']?.Value[0]
      : this.dataset['00700102']?.Value;
  }

  get '00700102'(): Element {
    return this.dataset['00700102'];
  }

  // Presentation Pixel Magnification Ratio
  get PresentationPixelMagnificationRatio(): any {
    const element = this.dataset['00700103'];
    return (element?.Value.length === 1)
      ? this.dataset['00700103']?.Value[0]
      : this.dataset['00700103']?.Value;
  }

  get '00700103'(): Element {
    return this.dataset['00700103'];
  }

  // Graphic Group Label
  get GraphicGroupLabel(): any {
    const element = this.dataset['00700207'];
    return (element?.Value.length === 1)
      ? this.dataset['00700207']?.Value[0]
      : this.dataset['00700207']?.Value;
  }

  get '00700207'(): Element {
    return this.dataset['00700207'];
  }

  // Graphic Group Description
  get GraphicGroupDescription(): any {
    const element = this.dataset['00700208'];
    return (element?.Value.length === 1)
      ? this.dataset['00700208']?.Value[0]
      : this.dataset['00700208']?.Value;
  }

  get '00700208'(): Element {
    return this.dataset['00700208'];
  }

  // Compound Graphic Sequence
  get CompoundGraphicSequence(): any {
    const element = this.dataset['00700209'];
    return (element?.Value.length === 1)
      ? this.dataset['00700209']?.Value[0]
      : this.dataset['00700209']?.Value;
  }

  get '00700209'(): Element {
    return this.dataset['00700209'];
  }

  // Compound Graphic Instance ID
  get CompoundGraphicInstanceID(): any {
    const element = this.dataset['00700226'];
    return (element?.Value.length === 1)
      ? this.dataset['00700226']?.Value[0]
      : this.dataset['00700226']?.Value;
  }

  get '00700226'(): Element {
    return this.dataset['00700226'];
  }

  // Font Name
  get FontName(): any {
    const element = this.dataset['00700227'];
    return (element?.Value.length === 1)
      ? this.dataset['00700227']?.Value[0]
      : this.dataset['00700227']?.Value;
  }

  get '00700227'(): Element {
    return this.dataset['00700227'];
  }

  // Font Name Type
  get FontNameType(): any {
    const element = this.dataset['00700228'];
    return (element?.Value.length === 1)
      ? this.dataset['00700228']?.Value[0]
      : this.dataset['00700228']?.Value;
  }

  get '00700228'(): Element {
    return this.dataset['00700228'];
  }

  // CSS Font Name
  get CSSFontName(): any {
    const element = this.dataset['00700229'];
    return (element?.Value.length === 1)
      ? this.dataset['00700229']?.Value[0]
      : this.dataset['00700229']?.Value;
  }

  get '00700229'(): Element {
    return this.dataset['00700229'];
  }

  // Rotation Angle
  get RotationAngle(): any {
    const element = this.dataset['00700230'];
    return (element?.Value.length === 1)
      ? this.dataset['00700230']?.Value[0]
      : this.dataset['00700230']?.Value;
  }

  get '00700230'(): Element {
    return this.dataset['00700230'];
  }

  // Text Style Sequence
  get TextStyleSequence(): any {
    const element = this.dataset['00700231'];
    return (element?.Value.length === 1)
      ? this.dataset['00700231']?.Value[0]
      : this.dataset['00700231']?.Value;
  }

  get '00700231'(): Element {
    return this.dataset['00700231'];
  }

  // Line Style Sequence
  get LineStyleSequence(): any {
    const element = this.dataset['00700232'];
    return (element?.Value.length === 1)
      ? this.dataset['00700232']?.Value[0]
      : this.dataset['00700232']?.Value;
  }

  get '00700232'(): Element {
    return this.dataset['00700232'];
  }

  // Fill Style Sequence
  get FillStyleSequence(): any {
    const element = this.dataset['00700233'];
    return (element?.Value.length === 1)
      ? this.dataset['00700233']?.Value[0]
      : this.dataset['00700233']?.Value;
  }

  get '00700233'(): Element {
    return this.dataset['00700233'];
  }

  // Graphic Group Sequence
  get GraphicGroupSequence(): any {
    const element = this.dataset['00700234'];
    return (element?.Value.length === 1)
      ? this.dataset['00700234']?.Value[0]
      : this.dataset['00700234']?.Value;
  }

  get '00700234'(): Element {
    return this.dataset['00700234'];
  }

  // Text Color CIELab Value
  get TextColorCIELabValue(): any {
    const element = this.dataset['00700241'];
    return (element?.Value.length === 1)
      ? this.dataset['00700241']?.Value[0]
      : this.dataset['00700241']?.Value;
  }

  get '00700241'(): Element {
    return this.dataset['00700241'];
  }

  // Horizontal Alignment
  get HorizontalAlignment(): any {
    const element = this.dataset['00700242'];
    return (element?.Value.length === 1)
      ? this.dataset['00700242']?.Value[0]
      : this.dataset['00700242']?.Value;
  }

  get '00700242'(): Element {
    return this.dataset['00700242'];
  }

  // Vertical Alignment
  get VerticalAlignment(): any {
    const element = this.dataset['00700243'];
    return (element?.Value.length === 1)
      ? this.dataset['00700243']?.Value[0]
      : this.dataset['00700243']?.Value;
  }

  get '00700243'(): Element {
    return this.dataset['00700243'];
  }

  // Shadow Style
  get ShadowStyle(): any {
    const element = this.dataset['00700244'];
    return (element?.Value.length === 1)
      ? this.dataset['00700244']?.Value[0]
      : this.dataset['00700244']?.Value;
  }

  get '00700244'(): Element {
    return this.dataset['00700244'];
  }

  // Shadow Offset X
  get ShadowOffsetX(): any {
    const element = this.dataset['00700245'];
    return (element?.Value.length === 1)
      ? this.dataset['00700245']?.Value[0]
      : this.dataset['00700245']?.Value;
  }

  get '00700245'(): Element {
    return this.dataset['00700245'];
  }

  // Shadow Offset Y
  get ShadowOffsetY(): any {
    const element = this.dataset['00700246'];
    return (element?.Value.length === 1)
      ? this.dataset['00700246']?.Value[0]
      : this.dataset['00700246']?.Value;
  }

  get '00700246'(): Element {
    return this.dataset['00700246'];
  }

  // Shadow Color CIELab Value
  get ShadowColorCIELabValue(): any {
    const element = this.dataset['00700247'];
    return (element?.Value.length === 1)
      ? this.dataset['00700247']?.Value[0]
      : this.dataset['00700247']?.Value;
  }

  get '00700247'(): Element {
    return this.dataset['00700247'];
  }

  // Underlined
  get Underlined(): any {
    const element = this.dataset['00700248'];
    return (element?.Value.length === 1)
      ? this.dataset['00700248']?.Value[0]
      : this.dataset['00700248']?.Value;
  }

  get '00700248'(): Element {
    return this.dataset['00700248'];
  }

  // Bold
  get Bold(): any {
    const element = this.dataset['00700249'];
    return (element?.Value.length === 1)
      ? this.dataset['00700249']?.Value[0]
      : this.dataset['00700249']?.Value;
  }

  get '00700249'(): Element {
    return this.dataset['00700249'];
  }

  // Italic
  get Italic(): any {
    const element = this.dataset['00700250'];
    return (element?.Value.length === 1)
      ? this.dataset['00700250']?.Value[0]
      : this.dataset['00700250']?.Value;
  }

  get '00700250'(): Element {
    return this.dataset['00700250'];
  }

  // Pattern On Color CIELab Value
  get PatternOnColorCIELabValue(): any {
    const element = this.dataset['00700251'];
    return (element?.Value.length === 1)
      ? this.dataset['00700251']?.Value[0]
      : this.dataset['00700251']?.Value;
  }

  get '00700251'(): Element {
    return this.dataset['00700251'];
  }

  // Pattern Off Color CIELab Value
  get PatternOffColorCIELabValue(): any {
    const element = this.dataset['00700252'];
    return (element?.Value.length === 1)
      ? this.dataset['00700252']?.Value[0]
      : this.dataset['00700252']?.Value;
  }

  get '00700252'(): Element {
    return this.dataset['00700252'];
  }

  // Line Thickness
  get LineThickness(): any {
    const element = this.dataset['00700253'];
    return (element?.Value.length === 1)
      ? this.dataset['00700253']?.Value[0]
      : this.dataset['00700253']?.Value;
  }

  get '00700253'(): Element {
    return this.dataset['00700253'];
  }

  // Line Dashing Style
  get LineDashingStyle(): any {
    const element = this.dataset['00700254'];
    return (element?.Value.length === 1)
      ? this.dataset['00700254']?.Value[0]
      : this.dataset['00700254']?.Value;
  }

  get '00700254'(): Element {
    return this.dataset['00700254'];
  }

  // Line Pattern
  get LinePattern(): any {
    const element = this.dataset['00700255'];
    return (element?.Value.length === 1)
      ? this.dataset['00700255']?.Value[0]
      : this.dataset['00700255']?.Value;
  }

  get '00700255'(): Element {
    return this.dataset['00700255'];
  }

  // Fill Pattern
  get FillPattern(): any {
    const element = this.dataset['00700256'];
    return (element?.Value.length === 1)
      ? this.dataset['00700256']?.Value[0]
      : this.dataset['00700256']?.Value;
  }

  get '00700256'(): Element {
    return this.dataset['00700256'];
  }

  // Fill Mode
  get FillMode(): any {
    const element = this.dataset['00700257'];
    return (element?.Value.length === 1)
      ? this.dataset['00700257']?.Value[0]
      : this.dataset['00700257']?.Value;
  }

  get '00700257'(): Element {
    return this.dataset['00700257'];
  }

  // Shadow Opacity
  get ShadowOpacity(): any {
    const element = this.dataset['00700258'];
    return (element?.Value.length === 1)
      ? this.dataset['00700258']?.Value[0]
      : this.dataset['00700258']?.Value;
  }

  get '00700258'(): Element {
    return this.dataset['00700258'];
  }

  // Gap Length
  get GapLength(): any {
    const element = this.dataset['00700261'];
    return (element?.Value.length === 1)
      ? this.dataset['00700261']?.Value[0]
      : this.dataset['00700261']?.Value;
  }

  get '00700261'(): Element {
    return this.dataset['00700261'];
  }

  // Diameter of Visibility
  get DiameterOfVisibility(): any {
    const element = this.dataset['00700262'];
    return (element?.Value.length === 1)
      ? this.dataset['00700262']?.Value[0]
      : this.dataset['00700262']?.Value;
  }

  get '00700262'(): Element {
    return this.dataset['00700262'];
  }

  // Rotation Point
  get RotationPoint(): any {
    const element = this.dataset['00700273'];
    return (element?.Value.length === 1)
      ? this.dataset['00700273']?.Value[0]
      : this.dataset['00700273']?.Value;
  }

  get '00700273'(): Element {
    return this.dataset['00700273'];
  }

  // Tick Alignment
  get TickAlignment(): any {
    const element = this.dataset['00700274'];
    return (element?.Value.length === 1)
      ? this.dataset['00700274']?.Value[0]
      : this.dataset['00700274']?.Value;
  }

  get '00700274'(): Element {
    return this.dataset['00700274'];
  }

  // Show Tick Label
  get ShowTickLabel(): any {
    const element = this.dataset['00700278'];
    return (element?.Value.length === 1)
      ? this.dataset['00700278']?.Value[0]
      : this.dataset['00700278']?.Value;
  }

  get '00700278'(): Element {
    return this.dataset['00700278'];
  }

  // Tick Label Alignment
  get TickLabelAlignment(): any {
    const element = this.dataset['00700279'];
    return (element?.Value.length === 1)
      ? this.dataset['00700279']?.Value[0]
      : this.dataset['00700279']?.Value;
  }

  get '00700279'(): Element {
    return this.dataset['00700279'];
  }

  // Compound Graphic Units
  get CompoundGraphicUnits(): any {
    const element = this.dataset['00700282'];
    return (element?.Value.length === 1)
      ? this.dataset['00700282']?.Value[0]
      : this.dataset['00700282']?.Value;
  }

  get '00700282'(): Element {
    return this.dataset['00700282'];
  }

  // Pattern On Opacity
  get PatternOnOpacity(): any {
    const element = this.dataset['00700284'];
    return (element?.Value.length === 1)
      ? this.dataset['00700284']?.Value[0]
      : this.dataset['00700284']?.Value;
  }

  get '00700284'(): Element {
    return this.dataset['00700284'];
  }

  // Pattern Off Opacity
  get PatternOffOpacity(): any {
    const element = this.dataset['00700285'];
    return (element?.Value.length === 1)
      ? this.dataset['00700285']?.Value[0]
      : this.dataset['00700285']?.Value;
  }

  get '00700285'(): Element {
    return this.dataset['00700285'];
  }

  // Major Ticks Sequence
  get MajorTicksSequence(): any {
    const element = this.dataset['00700287'];
    return (element?.Value.length === 1)
      ? this.dataset['00700287']?.Value[0]
      : this.dataset['00700287']?.Value;
  }

  get '00700287'(): Element {
    return this.dataset['00700287'];
  }

  // Tick Position
  get TickPosition(): any {
    const element = this.dataset['00700288'];
    return (element?.Value.length === 1)
      ? this.dataset['00700288']?.Value[0]
      : this.dataset['00700288']?.Value;
  }

  get '00700288'(): Element {
    return this.dataset['00700288'];
  }

  // Tick Label
  get TickLabel(): any {
    const element = this.dataset['00700289'];
    return (element?.Value.length === 1)
      ? this.dataset['00700289']?.Value[0]
      : this.dataset['00700289']?.Value;
  }

  get '00700289'(): Element {
    return this.dataset['00700289'];
  }

  // Compound Graphic Type
  get CompoundGraphicType(): any {
    const element = this.dataset['00700294'];
    return (element?.Value.length === 1)
      ? this.dataset['00700294']?.Value[0]
      : this.dataset['00700294']?.Value;
  }

  get '00700294'(): Element {
    return this.dataset['00700294'];
  }

  // Graphic Group ID
  get GraphicGroupID(): any {
    const element = this.dataset['00700295'];
    return (element?.Value.length === 1)
      ? this.dataset['00700295']?.Value[0]
      : this.dataset['00700295']?.Value;
  }

  get '00700295'(): Element {
    return this.dataset['00700295'];
  }

  // Shape Type
  get ShapeType(): any {
    const element = this.dataset['00700306'];
    return (element?.Value.length === 1)
      ? this.dataset['00700306']?.Value[0]
      : this.dataset['00700306']?.Value;
  }

  get '00700306'(): Element {
    return this.dataset['00700306'];
  }

  // Registration Sequence
  get RegistrationSequence(): any {
    const element = this.dataset['00700308'];
    return (element?.Value.length === 1)
      ? this.dataset['00700308']?.Value[0]
      : this.dataset['00700308']?.Value;
  }

  get '00700308'(): Element {
    return this.dataset['00700308'];
  }

  // Matrix Registration Sequence
  get MatrixRegistrationSequence(): any {
    const element = this.dataset['00700309'];
    return (element?.Value.length === 1)
      ? this.dataset['00700309']?.Value[0]
      : this.dataset['00700309']?.Value;
  }

  get '00700309'(): Element {
    return this.dataset['00700309'];
  }

  // Matrix Sequence
  get MatrixSequence(): any {
    const element = this.dataset['0070030A'];
    return (element?.Value.length === 1)
      ? this.dataset['0070030A']?.Value[0]
      : this.dataset['0070030A']?.Value;
  }

  get '0070030A'(): Element {
    return this.dataset['0070030A'];
  }

  // Frame of Reference Transformation Matrix Type
  get FrameOfReferenceTransformationMatrixType(): any {
    const element = this.dataset['0070030C'];
    return (element?.Value.length === 1)
      ? this.dataset['0070030C']?.Value[0]
      : this.dataset['0070030C']?.Value;
  }

  get '0070030C'(): Element {
    return this.dataset['0070030C'];
  }

  // Registration Type Code Sequence
  get RegistrationTypeCodeSequence(): any {
    const element = this.dataset['0070030D'];
    return (element?.Value.length === 1)
      ? this.dataset['0070030D']?.Value[0]
      : this.dataset['0070030D']?.Value;
  }

  get '0070030D'(): Element {
    return this.dataset['0070030D'];
  }

  // Fiducial Description
  get FiducialDescription(): any {
    const element = this.dataset['0070030F'];
    return (element?.Value.length === 1)
      ? this.dataset['0070030F']?.Value[0]
      : this.dataset['0070030F']?.Value;
  }

  get '0070030F'(): Element {
    return this.dataset['0070030F'];
  }

  // Fiducial Identifier
  get FiducialIdentifier(): any {
    const element = this.dataset['00700310'];
    return (element?.Value.length === 1)
      ? this.dataset['00700310']?.Value[0]
      : this.dataset['00700310']?.Value;
  }

  get '00700310'(): Element {
    return this.dataset['00700310'];
  }

  // Fiducial Identifier Code Sequence
  get FiducialIdentifierCodeSequence(): any {
    const element = this.dataset['00700311'];
    return (element?.Value.length === 1)
      ? this.dataset['00700311']?.Value[0]
      : this.dataset['00700311']?.Value;
  }

  get '00700311'(): Element {
    return this.dataset['00700311'];
  }

  // Contour Uncertainty Radius
  get ContourUncertaintyRadius(): any {
    const element = this.dataset['00700312'];
    return (element?.Value.length === 1)
      ? this.dataset['00700312']?.Value[0]
      : this.dataset['00700312']?.Value;
  }

  get '00700312'(): Element {
    return this.dataset['00700312'];
  }

  // Used Fiducials Sequence
  get UsedFiducialsSequence(): any {
    const element = this.dataset['00700314'];
    return (element?.Value.length === 1)
      ? this.dataset['00700314']?.Value[0]
      : this.dataset['00700314']?.Value;
  }

  get '00700314'(): Element {
    return this.dataset['00700314'];
  }

  // Graphic Coordinates Data Sequence
  get GraphicCoordinatesDataSequence(): any {
    const element = this.dataset['00700318'];
    return (element?.Value.length === 1)
      ? this.dataset['00700318']?.Value[0]
      : this.dataset['00700318']?.Value;
  }

  get '00700318'(): Element {
    return this.dataset['00700318'];
  }

  // Fiducial UID
  get FiducialUID(): any {
    const element = this.dataset['0070031A'];
    return (element?.Value.length === 1)
      ? this.dataset['0070031A']?.Value[0]
      : this.dataset['0070031A']?.Value;
  }

  get '0070031A'(): Element {
    return this.dataset['0070031A'];
  }

  // Fiducial Set Sequence
  get FiducialSetSequence(): any {
    const element = this.dataset['0070031C'];
    return (element?.Value.length === 1)
      ? this.dataset['0070031C']?.Value[0]
      : this.dataset['0070031C']?.Value;
  }

  get '0070031C'(): Element {
    return this.dataset['0070031C'];
  }

  // Fiducial Sequence
  get FiducialSequence(): any {
    const element = this.dataset['0070031E'];
    return (element?.Value.length === 1)
      ? this.dataset['0070031E']?.Value[0]
      : this.dataset['0070031E']?.Value;
  }

  get '0070031E'(): Element {
    return this.dataset['0070031E'];
  }

  // Graphic Layer Recommended Display CIELab Value
  get GraphicLayerRecommendedDisplayCIELabValue(): any {
    const element = this.dataset['00700401'];
    return (element?.Value.length === 1)
      ? this.dataset['00700401']?.Value[0]
      : this.dataset['00700401']?.Value;
  }

  get '00700401'(): Element {
    return this.dataset['00700401'];
  }

  // Blending Sequence
  get BlendingSequence(): any {
    const element = this.dataset['00700402'];
    return (element?.Value.length === 1)
      ? this.dataset['00700402']?.Value[0]
      : this.dataset['00700402']?.Value;
  }

  get '00700402'(): Element {
    return this.dataset['00700402'];
  }

  // Relative Opacity
  get RelativeOpacity(): any {
    const element = this.dataset['00700403'];
    return (element?.Value.length === 1)
      ? this.dataset['00700403']?.Value[0]
      : this.dataset['00700403']?.Value;
  }

  get '00700403'(): Element {
    return this.dataset['00700403'];
  }

  // Referenced Spatial Registration Sequence
  get ReferencedSpatialRegistrationSequence(): any {
    const element = this.dataset['00700404'];
    return (element?.Value.length === 1)
      ? this.dataset['00700404']?.Value[0]
      : this.dataset['00700404']?.Value;
  }

  get '00700404'(): Element {
    return this.dataset['00700404'];
  }

  // Blending Position
  get BlendingPosition(): any {
    const element = this.dataset['00700405'];
    return (element?.Value.length === 1)
      ? this.dataset['00700405']?.Value[0]
      : this.dataset['00700405']?.Value;
  }

  get '00700405'(): Element {
    return this.dataset['00700405'];
  }

  // Hanging Protocol Name
  get HangingProtocolName(): any {
    const element = this.dataset['00720002'];
    return (element?.Value.length === 1)
      ? this.dataset['00720002']?.Value[0]
      : this.dataset['00720002']?.Value;
  }

  get '00720002'(): Element {
    return this.dataset['00720002'];
  }

  // Hanging Protocol Description
  get HangingProtocolDescription(): any {
    const element = this.dataset['00720004'];
    return (element?.Value.length === 1)
      ? this.dataset['00720004']?.Value[0]
      : this.dataset['00720004']?.Value;
  }

  get '00720004'(): Element {
    return this.dataset['00720004'];
  }

  // Hanging Protocol Level
  get HangingProtocolLevel(): any {
    const element = this.dataset['00720006'];
    return (element?.Value.length === 1)
      ? this.dataset['00720006']?.Value[0]
      : this.dataset['00720006']?.Value;
  }

  get '00720006'(): Element {
    return this.dataset['00720006'];
  }

  // Hanging Protocol Creator
  get HangingProtocolCreator(): any {
    const element = this.dataset['00720008'];
    return (element?.Value.length === 1)
      ? this.dataset['00720008']?.Value[0]
      : this.dataset['00720008']?.Value;
  }

  get '00720008'(): Element {
    return this.dataset['00720008'];
  }

  // Hanging Protocol Creation DateTime
  get HangingProtocolCreationDateTime(): any {
    const element = this.dataset['0072000A'];
    return (element?.Value.length === 1)
      ? this.dataset['0072000A']?.Value[0]
      : this.dataset['0072000A']?.Value;
  }

  get '0072000A'(): Element {
    return this.dataset['0072000A'];
  }

  // Hanging Protocol Definition Sequence
  get HangingProtocolDefinitionSequence(): any {
    const element = this.dataset['0072000C'];
    return (element?.Value.length === 1)
      ? this.dataset['0072000C']?.Value[0]
      : this.dataset['0072000C']?.Value;
  }

  get '0072000C'(): Element {
    return this.dataset['0072000C'];
  }

  // Hanging Protocol User Identification Code Sequence
  get HangingProtocolUserIdentificationCodeSequence(): any {
    const element = this.dataset['0072000E'];
    return (element?.Value.length === 1)
      ? this.dataset['0072000E']?.Value[0]
      : this.dataset['0072000E']?.Value;
  }

  get '0072000E'(): Element {
    return this.dataset['0072000E'];
  }

  // Hanging Protocol User Group Name
  get HangingProtocolUserGroupName(): any {
    const element = this.dataset['00720010'];
    return (element?.Value.length === 1)
      ? this.dataset['00720010']?.Value[0]
      : this.dataset['00720010']?.Value;
  }

  get '00720010'(): Element {
    return this.dataset['00720010'];
  }

  // Source Hanging Protocol Sequence
  get SourceHangingProtocolSequence(): any {
    const element = this.dataset['00720012'];
    return (element?.Value.length === 1)
      ? this.dataset['00720012']?.Value[0]
      : this.dataset['00720012']?.Value;
  }

  get '00720012'(): Element {
    return this.dataset['00720012'];
  }

  // Number of Priors Referenced
  get NumberOfPriorsReferenced(): any {
    const element = this.dataset['00720014'];
    return (element?.Value.length === 1)
      ? this.dataset['00720014']?.Value[0]
      : this.dataset['00720014']?.Value;
  }

  get '00720014'(): Element {
    return this.dataset['00720014'];
  }

  // Image Sets Sequence
  get ImageSetsSequence(): any {
    const element = this.dataset['00720020'];
    return (element?.Value.length === 1)
      ? this.dataset['00720020']?.Value[0]
      : this.dataset['00720020']?.Value;
  }

  get '00720020'(): Element {
    return this.dataset['00720020'];
  }

  // Image Set Selector Sequence
  get ImageSetSelectorSequence(): any {
    const element = this.dataset['00720022'];
    return (element?.Value.length === 1)
      ? this.dataset['00720022']?.Value[0]
      : this.dataset['00720022']?.Value;
  }

  get '00720022'(): Element {
    return this.dataset['00720022'];
  }

  // Image Set Selector Usage Flag
  get ImageSetSelectorUsageFlag(): any {
    const element = this.dataset['00720024'];
    return (element?.Value.length === 1)
      ? this.dataset['00720024']?.Value[0]
      : this.dataset['00720024']?.Value;
  }

  get '00720024'(): Element {
    return this.dataset['00720024'];
  }

  // Selector Attribute
  get SelectorAttribute(): any {
    const element = this.dataset['00720026'];
    return (element?.Value.length === 1)
      ? this.dataset['00720026']?.Value[0]
      : this.dataset['00720026']?.Value;
  }

  get '00720026'(): Element {
    return this.dataset['00720026'];
  }

  // Selector Value Number
  get SelectorValueNumber(): any {
    const element = this.dataset['00720028'];
    return (element?.Value.length === 1)
      ? this.dataset['00720028']?.Value[0]
      : this.dataset['00720028']?.Value;
  }

  get '00720028'(): Element {
    return this.dataset['00720028'];
  }

  // Time Based Image Sets Sequence
  get TimeBasedImageSetsSequence(): any {
    const element = this.dataset['00720030'];
    return (element?.Value.length === 1)
      ? this.dataset['00720030']?.Value[0]
      : this.dataset['00720030']?.Value;
  }

  get '00720030'(): Element {
    return this.dataset['00720030'];
  }

  // Image Set Number
  get ImageSetNumber(): any {
    const element = this.dataset['00720032'];
    return (element?.Value.length === 1)
      ? this.dataset['00720032']?.Value[0]
      : this.dataset['00720032']?.Value;
  }

  get '00720032'(): Element {
    return this.dataset['00720032'];
  }

  // Image Set Selector Category
  get ImageSetSelectorCategory(): any {
    const element = this.dataset['00720034'];
    return (element?.Value.length === 1)
      ? this.dataset['00720034']?.Value[0]
      : this.dataset['00720034']?.Value;
  }

  get '00720034'(): Element {
    return this.dataset['00720034'];
  }

  // Relative Time
  get RelativeTime(): any {
    const element = this.dataset['00720038'];
    return (element?.Value.length === 1)
      ? this.dataset['00720038']?.Value[0]
      : this.dataset['00720038']?.Value;
  }

  get '00720038'(): Element {
    return this.dataset['00720038'];
  }

  // Relative Time Units
  get RelativeTimeUnits(): any {
    const element = this.dataset['0072003A'];
    return (element?.Value.length === 1)
      ? this.dataset['0072003A']?.Value[0]
      : this.dataset['0072003A']?.Value;
  }

  get '0072003A'(): Element {
    return this.dataset['0072003A'];
  }

  // Abstract Prior Value
  get AbstractPriorValue(): any {
    const element = this.dataset['0072003C'];
    return (element?.Value.length === 1)
      ? this.dataset['0072003C']?.Value[0]
      : this.dataset['0072003C']?.Value;
  }

  get '0072003C'(): Element {
    return this.dataset['0072003C'];
  }

  // Abstract Prior Code Sequence
  get AbstractPriorCodeSequence(): any {
    const element = this.dataset['0072003E'];
    return (element?.Value.length === 1)
      ? this.dataset['0072003E']?.Value[0]
      : this.dataset['0072003E']?.Value;
  }

  get '0072003E'(): Element {
    return this.dataset['0072003E'];
  }

  // Image Set Label
  get ImageSetLabel(): any {
    const element = this.dataset['00720040'];
    return (element?.Value.length === 1)
      ? this.dataset['00720040']?.Value[0]
      : this.dataset['00720040']?.Value;
  }

  get '00720040'(): Element {
    return this.dataset['00720040'];
  }

  // Selector Attribute VR
  get SelectorAttributeVR(): any {
    const element = this.dataset['00720050'];
    return (element?.Value.length === 1)
      ? this.dataset['00720050']?.Value[0]
      : this.dataset['00720050']?.Value;
  }

  get '00720050'(): Element {
    return this.dataset['00720050'];
  }

  // Selector Sequence Pointer
  get SelectorSequencePointer(): any {
    const element = this.dataset['00720052'];
    return (element?.Value.length === 1)
      ? this.dataset['00720052']?.Value[0]
      : this.dataset['00720052']?.Value;
  }

  get '00720052'(): Element {
    return this.dataset['00720052'];
  }

  // Selector Sequence Pointer Private Creator
  get SelectorSequencePointerPrivateCreator(): any {
    const element = this.dataset['00720054'];
    return (element?.Value.length === 1)
      ? this.dataset['00720054']?.Value[0]
      : this.dataset['00720054']?.Value;
  }

  get '00720054'(): Element {
    return this.dataset['00720054'];
  }

  // Selector Attribute Private Creator
  get SelectorAttributePrivateCreator(): any {
    const element = this.dataset['00720056'];
    return (element?.Value.length === 1)
      ? this.dataset['00720056']?.Value[0]
      : this.dataset['00720056']?.Value;
  }

  get '00720056'(): Element {
    return this.dataset['00720056'];
  }

  // Selector AT Value
  get SelectorATValue(): any {
    const element = this.dataset['00720060'];
    return (element?.Value.length === 1)
      ? this.dataset['00720060']?.Value[0]
      : this.dataset['00720060']?.Value;
  }

  get '00720060'(): Element {
    return this.dataset['00720060'];
  }

  // Selector CS Value
  get SelectorCSValue(): any {
    const element = this.dataset['00720062'];
    return (element?.Value.length === 1)
      ? this.dataset['00720062']?.Value[0]
      : this.dataset['00720062']?.Value;
  }

  get '00720062'(): Element {
    return this.dataset['00720062'];
  }

  // Selector IS Value
  get SelectorISValue(): any {
    const element = this.dataset['00720064'];
    return (element?.Value.length === 1)
      ? this.dataset['00720064']?.Value[0]
      : this.dataset['00720064']?.Value;
  }

  get '00720064'(): Element {
    return this.dataset['00720064'];
  }

  // Selector LO Value
  get SelectorLOValue(): any {
    const element = this.dataset['00720066'];
    return (element?.Value.length === 1)
      ? this.dataset['00720066']?.Value[0]
      : this.dataset['00720066']?.Value;
  }

  get '00720066'(): Element {
    return this.dataset['00720066'];
  }

  // Selector LT Value
  get SelectorLTValue(): any {
    const element = this.dataset['00720068'];
    return (element?.Value.length === 1)
      ? this.dataset['00720068']?.Value[0]
      : this.dataset['00720068']?.Value;
  }

  get '00720068'(): Element {
    return this.dataset['00720068'];
  }

  // Selector PN Value
  get SelectorPNValue(): any {
    const element = this.dataset['0072006A'];
    return (element?.Value.length === 1)
      ? this.dataset['0072006A']?.Value[0]
      : this.dataset['0072006A']?.Value;
  }

  get '0072006A'(): Element {
    return this.dataset['0072006A'];
  }

  // Selector SH Value
  get SelectorSHValue(): any {
    const element = this.dataset['0072006C'];
    return (element?.Value.length === 1)
      ? this.dataset['0072006C']?.Value[0]
      : this.dataset['0072006C']?.Value;
  }

  get '0072006C'(): Element {
    return this.dataset['0072006C'];
  }

  // Selector ST Value
  get SelectorSTValue(): any {
    const element = this.dataset['0072006E'];
    return (element?.Value.length === 1)
      ? this.dataset['0072006E']?.Value[0]
      : this.dataset['0072006E']?.Value;
  }

  get '0072006E'(): Element {
    return this.dataset['0072006E'];
  }

  // Selector UT Value
  get SelectorUTValue(): any {
    const element = this.dataset['00720070'];
    return (element?.Value.length === 1)
      ? this.dataset['00720070']?.Value[0]
      : this.dataset['00720070']?.Value;
  }

  get '00720070'(): Element {
    return this.dataset['00720070'];
  }

  // Selector DS Value
  get SelectorDSValue(): any {
    const element = this.dataset['00720072'];
    return (element?.Value.length === 1)
      ? this.dataset['00720072']?.Value[0]
      : this.dataset['00720072']?.Value;
  }

  get '00720072'(): Element {
    return this.dataset['00720072'];
  }

  // Selector FD Value
  get SelectorFDValue(): any {
    const element = this.dataset['00720074'];
    return (element?.Value.length === 1)
      ? this.dataset['00720074']?.Value[0]
      : this.dataset['00720074']?.Value;
  }

  get '00720074'(): Element {
    return this.dataset['00720074'];
  }

  // Selector FL Value
  get SelectorFLValue(): any {
    const element = this.dataset['00720076'];
    return (element?.Value.length === 1)
      ? this.dataset['00720076']?.Value[0]
      : this.dataset['00720076']?.Value;
  }

  get '00720076'(): Element {
    return this.dataset['00720076'];
  }

  // Selector UL Value
  get SelectorULValue(): any {
    const element = this.dataset['00720078'];
    return (element?.Value.length === 1)
      ? this.dataset['00720078']?.Value[0]
      : this.dataset['00720078']?.Value;
  }

  get '00720078'(): Element {
    return this.dataset['00720078'];
  }

  // Selector US Value
  get SelectorUSValue(): any {
    const element = this.dataset['0072007A'];
    return (element?.Value.length === 1)
      ? this.dataset['0072007A']?.Value[0]
      : this.dataset['0072007A']?.Value;
  }

  get '0072007A'(): Element {
    return this.dataset['0072007A'];
  }

  // Selector SL Value
  get SelectorSLValue(): any {
    const element = this.dataset['0072007C'];
    return (element?.Value.length === 1)
      ? this.dataset['0072007C']?.Value[0]
      : this.dataset['0072007C']?.Value;
  }

  get '0072007C'(): Element {
    return this.dataset['0072007C'];
  }

  // Selector SS Value
  get SelectorSSValue(): any {
    const element = this.dataset['0072007E'];
    return (element?.Value.length === 1)
      ? this.dataset['0072007E']?.Value[0]
      : this.dataset['0072007E']?.Value;
  }

  get '0072007E'(): Element {
    return this.dataset['0072007E'];
  }

  // Selector Code Sequence Value
  get SelectorCodeSequenceValue(): any {
    const element = this.dataset['00720080'];
    return (element?.Value.length === 1)
      ? this.dataset['00720080']?.Value[0]
      : this.dataset['00720080']?.Value;
  }

  get '00720080'(): Element {
    return this.dataset['00720080'];
  }

  // Number of Screens
  get NumberOfScreens(): any {
    const element = this.dataset['00720100'];
    return (element?.Value.length === 1)
      ? this.dataset['00720100']?.Value[0]
      : this.dataset['00720100']?.Value;
  }

  get '00720100'(): Element {
    return this.dataset['00720100'];
  }

  // Nominal Screen Definition Sequence
  get NominalScreenDefinitionSequence(): any {
    const element = this.dataset['00720102'];
    return (element?.Value.length === 1)
      ? this.dataset['00720102']?.Value[0]
      : this.dataset['00720102']?.Value;
  }

  get '00720102'(): Element {
    return this.dataset['00720102'];
  }

  // Number of Vertical Pixels
  get NumberOfVerticalPixels(): any {
    const element = this.dataset['00720104'];
    return (element?.Value.length === 1)
      ? this.dataset['00720104']?.Value[0]
      : this.dataset['00720104']?.Value;
  }

  get '00720104'(): Element {
    return this.dataset['00720104'];
  }

  // Number of Horizontal Pixels
  get NumberOfHorizontalPixels(): any {
    const element = this.dataset['00720106'];
    return (element?.Value.length === 1)
      ? this.dataset['00720106']?.Value[0]
      : this.dataset['00720106']?.Value;
  }

  get '00720106'(): Element {
    return this.dataset['00720106'];
  }

  // Display Environment Spatial Position
  get DisplayEnvironmentSpatialPosition(): any {
    const element = this.dataset['00720108'];
    return (element?.Value.length === 1)
      ? this.dataset['00720108']?.Value[0]
      : this.dataset['00720108']?.Value;
  }

  get '00720108'(): Element {
    return this.dataset['00720108'];
  }

  // Screen Minimum Grayscale Bit Depth
  get ScreenMinimumGrayscaleBitDepth(): any {
    const element = this.dataset['0072010A'];
    return (element?.Value.length === 1)
      ? this.dataset['0072010A']?.Value[0]
      : this.dataset['0072010A']?.Value;
  }

  get '0072010A'(): Element {
    return this.dataset['0072010A'];
  }

  // Screen Minimum Color Bit Depth
  get ScreenMinimumColorBitDepth(): any {
    const element = this.dataset['0072010C'];
    return (element?.Value.length === 1)
      ? this.dataset['0072010C']?.Value[0]
      : this.dataset['0072010C']?.Value;
  }

  get '0072010C'(): Element {
    return this.dataset['0072010C'];
  }

  // Application Maximum Repaint Time
  get ApplicationMaximumRepaintTime(): any {
    const element = this.dataset['0072010E'];
    return (element?.Value.length === 1)
      ? this.dataset['0072010E']?.Value[0]
      : this.dataset['0072010E']?.Value;
  }

  get '0072010E'(): Element {
    return this.dataset['0072010E'];
  }

  // Display Sets Sequence
  get DisplaySetsSequence(): any {
    const element = this.dataset['00720200'];
    return (element?.Value.length === 1)
      ? this.dataset['00720200']?.Value[0]
      : this.dataset['00720200']?.Value;
  }

  get '00720200'(): Element {
    return this.dataset['00720200'];
  }

  // Display Set Number
  get DisplaySetNumber(): any {
    const element = this.dataset['00720202'];
    return (element?.Value.length === 1)
      ? this.dataset['00720202']?.Value[0]
      : this.dataset['00720202']?.Value;
  }

  get '00720202'(): Element {
    return this.dataset['00720202'];
  }

  // Display Set Label
  get DisplaySetLabel(): any {
    const element = this.dataset['00720203'];
    return (element?.Value.length === 1)
      ? this.dataset['00720203']?.Value[0]
      : this.dataset['00720203']?.Value;
  }

  get '00720203'(): Element {
    return this.dataset['00720203'];
  }

  // Display Set Presentation Group
  get DisplaySetPresentationGroup(): any {
    const element = this.dataset['00720204'];
    return (element?.Value.length === 1)
      ? this.dataset['00720204']?.Value[0]
      : this.dataset['00720204']?.Value;
  }

  get '00720204'(): Element {
    return this.dataset['00720204'];
  }

  // Display Set Presentation Group Description
  get DisplaySetPresentationGroupDescription(): any {
    const element = this.dataset['00720206'];
    return (element?.Value.length === 1)
      ? this.dataset['00720206']?.Value[0]
      : this.dataset['00720206']?.Value;
  }

  get '00720206'(): Element {
    return this.dataset['00720206'];
  }

  // Partial Data Display Handling
  get PartialDataDisplayHandling(): any {
    const element = this.dataset['00720208'];
    return (element?.Value.length === 1)
      ? this.dataset['00720208']?.Value[0]
      : this.dataset['00720208']?.Value;
  }

  get '00720208'(): Element {
    return this.dataset['00720208'];
  }

  // Synchronized Scrolling Sequence
  get SynchronizedScrollingSequence(): any {
    const element = this.dataset['00720210'];
    return (element?.Value.length === 1)
      ? this.dataset['00720210']?.Value[0]
      : this.dataset['00720210']?.Value;
  }

  get '00720210'(): Element {
    return this.dataset['00720210'];
  }

  // Display Set Scrolling Group
  get DisplaySetScrollingGroup(): any {
    const element = this.dataset['00720212'];
    return (element?.Value.length === 1)
      ? this.dataset['00720212']?.Value[0]
      : this.dataset['00720212']?.Value;
  }

  get '00720212'(): Element {
    return this.dataset['00720212'];
  }

  // Navigation Indicator Sequence
  get NavigationIndicatorSequence(): any {
    const element = this.dataset['00720214'];
    return (element?.Value.length === 1)
      ? this.dataset['00720214']?.Value[0]
      : this.dataset['00720214']?.Value;
  }

  get '00720214'(): Element {
    return this.dataset['00720214'];
  }

  // Navigation Display Set
  get NavigationDisplaySet(): any {
    const element = this.dataset['00720216'];
    return (element?.Value.length === 1)
      ? this.dataset['00720216']?.Value[0]
      : this.dataset['00720216']?.Value;
  }

  get '00720216'(): Element {
    return this.dataset['00720216'];
  }

  // Reference Display Sets
  get ReferenceDisplaySets(): any {
    const element = this.dataset['00720218'];
    return (element?.Value.length === 1)
      ? this.dataset['00720218']?.Value[0]
      : this.dataset['00720218']?.Value;
  }

  get '00720218'(): Element {
    return this.dataset['00720218'];
  }

  // Image Boxes Sequence
  get ImageBoxesSequence(): any {
    const element = this.dataset['00720300'];
    return (element?.Value.length === 1)
      ? this.dataset['00720300']?.Value[0]
      : this.dataset['00720300']?.Value;
  }

  get '00720300'(): Element {
    return this.dataset['00720300'];
  }

  // Image Box Number
  get ImageBoxNumber(): any {
    const element = this.dataset['00720302'];
    return (element?.Value.length === 1)
      ? this.dataset['00720302']?.Value[0]
      : this.dataset['00720302']?.Value;
  }

  get '00720302'(): Element {
    return this.dataset['00720302'];
  }

  // Image Box Layout Type
  get ImageBoxLayoutType(): any {
    const element = this.dataset['00720304'];
    return (element?.Value.length === 1)
      ? this.dataset['00720304']?.Value[0]
      : this.dataset['00720304']?.Value;
  }

  get '00720304'(): Element {
    return this.dataset['00720304'];
  }

  // Image Box Tile Horizontal Dimension
  get ImageBoxTileHorizontalDimension(): any {
    const element = this.dataset['00720306'];
    return (element?.Value.length === 1)
      ? this.dataset['00720306']?.Value[0]
      : this.dataset['00720306']?.Value;
  }

  get '00720306'(): Element {
    return this.dataset['00720306'];
  }

  // Image Box Tile Vertical Dimension
  get ImageBoxTileVerticalDimension(): any {
    const element = this.dataset['00720308'];
    return (element?.Value.length === 1)
      ? this.dataset['00720308']?.Value[0]
      : this.dataset['00720308']?.Value;
  }

  get '00720308'(): Element {
    return this.dataset['00720308'];
  }

  // Image Box Scroll Direction
  get ImageBoxScrollDirection(): any {
    const element = this.dataset['00720310'];
    return (element?.Value.length === 1)
      ? this.dataset['00720310']?.Value[0]
      : this.dataset['00720310']?.Value;
  }

  get '00720310'(): Element {
    return this.dataset['00720310'];
  }

  // Image Box Small Scroll Type
  get ImageBoxSmallScrollType(): any {
    const element = this.dataset['00720312'];
    return (element?.Value.length === 1)
      ? this.dataset['00720312']?.Value[0]
      : this.dataset['00720312']?.Value;
  }

  get '00720312'(): Element {
    return this.dataset['00720312'];
  }

  // Image Box Small Scroll Amount
  get ImageBoxSmallScrollAmount(): any {
    const element = this.dataset['00720314'];
    return (element?.Value.length === 1)
      ? this.dataset['00720314']?.Value[0]
      : this.dataset['00720314']?.Value;
  }

  get '00720314'(): Element {
    return this.dataset['00720314'];
  }

  // Image Box Large Scroll Type
  get ImageBoxLargeScrollType(): any {
    const element = this.dataset['00720316'];
    return (element?.Value.length === 1)
      ? this.dataset['00720316']?.Value[0]
      : this.dataset['00720316']?.Value;
  }

  get '00720316'(): Element {
    return this.dataset['00720316'];
  }

  // Image Box Large Scroll Amount
  get ImageBoxLargeScrollAmount(): any {
    const element = this.dataset['00720318'];
    return (element?.Value.length === 1)
      ? this.dataset['00720318']?.Value[0]
      : this.dataset['00720318']?.Value;
  }

  get '00720318'(): Element {
    return this.dataset['00720318'];
  }

  // Image Box Overlap Priority
  get ImageBoxOverlapPriority(): any {
    const element = this.dataset['00720320'];
    return (element?.Value.length === 1)
      ? this.dataset['00720320']?.Value[0]
      : this.dataset['00720320']?.Value;
  }

  get '00720320'(): Element {
    return this.dataset['00720320'];
  }

  // Cine Relative to Real-Time
  get CineRelativeToRealTime(): any {
    const element = this.dataset['00720330'];
    return (element?.Value.length === 1)
      ? this.dataset['00720330']?.Value[0]
      : this.dataset['00720330']?.Value;
  }

  get '00720330'(): Element {
    return this.dataset['00720330'];
  }

  // Filter Operations Sequence
  get FilterOperationsSequence(): any {
    const element = this.dataset['00720400'];
    return (element?.Value.length === 1)
      ? this.dataset['00720400']?.Value[0]
      : this.dataset['00720400']?.Value;
  }

  get '00720400'(): Element {
    return this.dataset['00720400'];
  }

  // Filter-by Category
  get FilterByCategory(): any {
    const element = this.dataset['00720402'];
    return (element?.Value.length === 1)
      ? this.dataset['00720402']?.Value[0]
      : this.dataset['00720402']?.Value;
  }

  get '00720402'(): Element {
    return this.dataset['00720402'];
  }

  // Filter-by Attribute Presence
  get FilterByAttributePresence(): any {
    const element = this.dataset['00720404'];
    return (element?.Value.length === 1)
      ? this.dataset['00720404']?.Value[0]
      : this.dataset['00720404']?.Value;
  }

  get '00720404'(): Element {
    return this.dataset['00720404'];
  }

  // Filter-by Operator
  get FilterByOperator(): any {
    const element = this.dataset['00720406'];
    return (element?.Value.length === 1)
      ? this.dataset['00720406']?.Value[0]
      : this.dataset['00720406']?.Value;
  }

  get '00720406'(): Element {
    return this.dataset['00720406'];
  }

  // Structured Display Background CIELab Value
  get StructuredDisplayBackgroundCIELabValue(): any {
    const element = this.dataset['00720420'];
    return (element?.Value.length === 1)
      ? this.dataset['00720420']?.Value[0]
      : this.dataset['00720420']?.Value;
  }

  get '00720420'(): Element {
    return this.dataset['00720420'];
  }

  // Empty Image Box CIELab Value
  get EmptyImageBoxCIELabValue(): any {
    const element = this.dataset['00720421'];
    return (element?.Value.length === 1)
      ? this.dataset['00720421']?.Value[0]
      : this.dataset['00720421']?.Value;
  }

  get '00720421'(): Element {
    return this.dataset['00720421'];
  }

  // Structured Display Image Box Sequence
  get StructuredDisplayImageBoxSequence(): any {
    const element = this.dataset['00720422'];
    return (element?.Value.length === 1)
      ? this.dataset['00720422']?.Value[0]
      : this.dataset['00720422']?.Value;
  }

  get '00720422'(): Element {
    return this.dataset['00720422'];
  }

  // Structured Display Text Box Sequence
  get StructuredDisplayTextBoxSequence(): any {
    const element = this.dataset['00720424'];
    return (element?.Value.length === 1)
      ? this.dataset['00720424']?.Value[0]
      : this.dataset['00720424']?.Value;
  }

  get '00720424'(): Element {
    return this.dataset['00720424'];
  }

  // Referenced First Frame Sequence
  get ReferencedFirstFrameSequence(): any {
    const element = this.dataset['00720427'];
    return (element?.Value.length === 1)
      ? this.dataset['00720427']?.Value[0]
      : this.dataset['00720427']?.Value;
  }

  get '00720427'(): Element {
    return this.dataset['00720427'];
  }

  // Image Box Synchronization Sequence
  get ImageBoxSynchronizationSequence(): any {
    const element = this.dataset['00720430'];
    return (element?.Value.length === 1)
      ? this.dataset['00720430']?.Value[0]
      : this.dataset['00720430']?.Value;
  }

  get '00720430'(): Element {
    return this.dataset['00720430'];
  }

  // Synchronized Image Box List
  get SynchronizedImageBoxList(): any {
    const element = this.dataset['00720432'];
    return (element?.Value.length === 1)
      ? this.dataset['00720432']?.Value[0]
      : this.dataset['00720432']?.Value;
  }

  get '00720432'(): Element {
    return this.dataset['00720432'];
  }

  // Type of Synchronization
  get TypeOfSynchronization(): any {
    const element = this.dataset['00720434'];
    return (element?.Value.length === 1)
      ? this.dataset['00720434']?.Value[0]
      : this.dataset['00720434']?.Value;
  }

  get '00720434'(): Element {
    return this.dataset['00720434'];
  }

  // Blending Operation Type
  get BlendingOperationType(): any {
    const element = this.dataset['00720500'];
    return (element?.Value.length === 1)
      ? this.dataset['00720500']?.Value[0]
      : this.dataset['00720500']?.Value;
  }

  get '00720500'(): Element {
    return this.dataset['00720500'];
  }

  // Reformatting Operation Type
  get ReformattingOperationType(): any {
    const element = this.dataset['00720510'];
    return (element?.Value.length === 1)
      ? this.dataset['00720510']?.Value[0]
      : this.dataset['00720510']?.Value;
  }

  get '00720510'(): Element {
    return this.dataset['00720510'];
  }

  // Reformatting Thickness
  get ReformattingThickness(): any {
    const element = this.dataset['00720512'];
    return (element?.Value.length === 1)
      ? this.dataset['00720512']?.Value[0]
      : this.dataset['00720512']?.Value;
  }

  get '00720512'(): Element {
    return this.dataset['00720512'];
  }

  // Reformatting Interval
  get ReformattingInterval(): any {
    const element = this.dataset['00720514'];
    return (element?.Value.length === 1)
      ? this.dataset['00720514']?.Value[0]
      : this.dataset['00720514']?.Value;
  }

  get '00720514'(): Element {
    return this.dataset['00720514'];
  }

  // Reformatting Operation Initial View Direction
  get ReformattingOperationInitialViewDirection(): any {
    const element = this.dataset['00720516'];
    return (element?.Value.length === 1)
      ? this.dataset['00720516']?.Value[0]
      : this.dataset['00720516']?.Value;
  }

  get '00720516'(): Element {
    return this.dataset['00720516'];
  }

  // 3D Rendering Type
  get ThreeDRenderingType(): any {
    const element = this.dataset['00720520'];
    return (element?.Value.length === 1)
      ? this.dataset['00720520']?.Value[0]
      : this.dataset['00720520']?.Value;
  }

  get '00720520'(): Element {
    return this.dataset['00720520'];
  }

  // Sorting Operations Sequence
  get SortingOperationsSequence(): any {
    const element = this.dataset['00720600'];
    return (element?.Value.length === 1)
      ? this.dataset['00720600']?.Value[0]
      : this.dataset['00720600']?.Value;
  }

  get '00720600'(): Element {
    return this.dataset['00720600'];
  }

  // Sort-by Category
  get SortByCategory(): any {
    const element = this.dataset['00720602'];
    return (element?.Value.length === 1)
      ? this.dataset['00720602']?.Value[0]
      : this.dataset['00720602']?.Value;
  }

  get '00720602'(): Element {
    return this.dataset['00720602'];
  }

  // Sorting Direction
  get SortingDirection(): any {
    const element = this.dataset['00720604'];
    return (element?.Value.length === 1)
      ? this.dataset['00720604']?.Value[0]
      : this.dataset['00720604']?.Value;
  }

  get '00720604'(): Element {
    return this.dataset['00720604'];
  }

  // Display Set Patient Orientation
  get DisplaySetPatientOrientation(): any {
    const element = this.dataset['00720700'];
    return (element?.Value.length === 1)
      ? this.dataset['00720700']?.Value[0]
      : this.dataset['00720700']?.Value;
  }

  get '00720700'(): Element {
    return this.dataset['00720700'];
  }

  // VOI Type
  get VOIType(): any {
    const element = this.dataset['00720702'];
    return (element?.Value.length === 1)
      ? this.dataset['00720702']?.Value[0]
      : this.dataset['00720702']?.Value;
  }

  get '00720702'(): Element {
    return this.dataset['00720702'];
  }

  // Pseudo-Color Type
  get PseudoColorType(): any {
    const element = this.dataset['00720704'];
    return (element?.Value.length === 1)
      ? this.dataset['00720704']?.Value[0]
      : this.dataset['00720704']?.Value;
  }

  get '00720704'(): Element {
    return this.dataset['00720704'];
  }

  // Pseudo-Color Palette Instance Reference Sequence
  get PseudoColorPaletteInstanceReferenceSequence(): any {
    const element = this.dataset['00720705'];
    return (element?.Value.length === 1)
      ? this.dataset['00720705']?.Value[0]
      : this.dataset['00720705']?.Value;
  }

  get '00720705'(): Element {
    return this.dataset['00720705'];
  }

  // Show Grayscale Inverted
  get ShowGrayscaleInverted(): any {
    const element = this.dataset['00720706'];
    return (element?.Value.length === 1)
      ? this.dataset['00720706']?.Value[0]
      : this.dataset['00720706']?.Value;
  }

  get '00720706'(): Element {
    return this.dataset['00720706'];
  }

  // Show Image True Size Flag
  get ShowImageTrueSizeFlag(): any {
    const element = this.dataset['00720710'];
    return (element?.Value.length === 1)
      ? this.dataset['00720710']?.Value[0]
      : this.dataset['00720710']?.Value;
  }

  get '00720710'(): Element {
    return this.dataset['00720710'];
  }

  // Show Graphic Annotation Flag
  get ShowGraphicAnnotationFlag(): any {
    const element = this.dataset['00720712'];
    return (element?.Value.length === 1)
      ? this.dataset['00720712']?.Value[0]
      : this.dataset['00720712']?.Value;
  }

  get '00720712'(): Element {
    return this.dataset['00720712'];
  }

  // Show Patient Demographics Flag
  get ShowPatientDemographicsFlag(): any {
    const element = this.dataset['00720714'];
    return (element?.Value.length === 1)
      ? this.dataset['00720714']?.Value[0]
      : this.dataset['00720714']?.Value;
  }

  get '00720714'(): Element {
    return this.dataset['00720714'];
  }

  // Show Acquisition Techniques Flag
  get ShowAcquisitionTechniquesFlag(): any {
    const element = this.dataset['00720716'];
    return (element?.Value.length === 1)
      ? this.dataset['00720716']?.Value[0]
      : this.dataset['00720716']?.Value;
  }

  get '00720716'(): Element {
    return this.dataset['00720716'];
  }

  // Display Set Horizontal Justification
  get DisplaySetHorizontalJustification(): any {
    const element = this.dataset['00720717'];
    return (element?.Value.length === 1)
      ? this.dataset['00720717']?.Value[0]
      : this.dataset['00720717']?.Value;
  }

  get '00720717'(): Element {
    return this.dataset['00720717'];
  }

  // Display Set Vertical Justification
  get DisplaySetVerticalJustification(): any {
    const element = this.dataset['00720718'];
    return (element?.Value.length === 1)
      ? this.dataset['00720718']?.Value[0]
      : this.dataset['00720718']?.Value;
  }

  get '00720718'(): Element {
    return this.dataset['00720718'];
  }

  // Continuation Start Meterset
  get ContinuationStartMeterset(): any {
    const element = this.dataset['00740120'];
    return (element?.Value.length === 1)
      ? this.dataset['00740120']?.Value[0]
      : this.dataset['00740120']?.Value;
  }

  get '00740120'(): Element {
    return this.dataset['00740120'];
  }

  // Continuation End Meterset
  get ContinuationEndMeterset(): any {
    const element = this.dataset['00740121'];
    return (element?.Value.length === 1)
      ? this.dataset['00740121']?.Value[0]
      : this.dataset['00740121']?.Value;
  }

  get '00740121'(): Element {
    return this.dataset['00740121'];
  }

  // Procedure Step State
  get ProcedureStepState(): any {
    const element = this.dataset['00741000'];
    return (element?.Value.length === 1)
      ? this.dataset['00741000']?.Value[0]
      : this.dataset['00741000']?.Value;
  }

  get '00741000'(): Element {
    return this.dataset['00741000'];
  }

  // Procedure Step Progress Information Sequence
  get ProcedureStepProgressInformationSequence(): any {
    const element = this.dataset['00741002'];
    return (element?.Value.length === 1)
      ? this.dataset['00741002']?.Value[0]
      : this.dataset['00741002']?.Value;
  }

  get '00741002'(): Element {
    return this.dataset['00741002'];
  }

  // Procedure Step Progress
  get ProcedureStepProgress(): any {
    const element = this.dataset['00741004'];
    return (element?.Value.length === 1)
      ? this.dataset['00741004']?.Value[0]
      : this.dataset['00741004']?.Value;
  }

  get '00741004'(): Element {
    return this.dataset['00741004'];
  }

  // Procedure Step Progress Description
  get ProcedureStepProgressDescription(): any {
    const element = this.dataset['00741006'];
    return (element?.Value.length === 1)
      ? this.dataset['00741006']?.Value[0]
      : this.dataset['00741006']?.Value;
  }

  get '00741006'(): Element {
    return this.dataset['00741006'];
  }

  // Procedure Step Communications URI Sequence
  get ProcedureStepCommunicationsURISequence(): any {
    const element = this.dataset['00741008'];
    return (element?.Value.length === 1)
      ? this.dataset['00741008']?.Value[0]
      : this.dataset['00741008']?.Value;
  }

  get '00741008'(): Element {
    return this.dataset['00741008'];
  }

  // Contact URI
  get ContactURI(): any {
    const element = this.dataset['0074100a'];
    return (element?.Value.length === 1)
      ? this.dataset['0074100a']?.Value[0]
      : this.dataset['0074100a']?.Value;
  }

  get '0074100a'(): Element {
    return this.dataset['0074100a'];
  }

  // Contact Display Name
  get ContactDisplayName(): any {
    const element = this.dataset['0074100c'];
    return (element?.Value.length === 1)
      ? this.dataset['0074100c']?.Value[0]
      : this.dataset['0074100c']?.Value;
  }

  get '0074100c'(): Element {
    return this.dataset['0074100c'];
  }

  // Procedure Step Discontinuation Reason Code Sequence
  get ProcedureStepDiscontinuationReasonCodeSequence(): any {
    const element = this.dataset['0074100e'];
    return (element?.Value.length === 1)
      ? this.dataset['0074100e']?.Value[0]
      : this.dataset['0074100e']?.Value;
  }

  get '0074100e'(): Element {
    return this.dataset['0074100e'];
  }

  // Beam Task Sequence
  get BeamTaskSequence(): any {
    const element = this.dataset['00741020'];
    return (element?.Value.length === 1)
      ? this.dataset['00741020']?.Value[0]
      : this.dataset['00741020']?.Value;
  }

  get '00741020'(): Element {
    return this.dataset['00741020'];
  }

  // Beam Task Type
  get BeamTaskType(): any {
    const element = this.dataset['00741022'];
    return (element?.Value.length === 1)
      ? this.dataset['00741022']?.Value[0]
      : this.dataset['00741022']?.Value;
  }

  get '00741022'(): Element {
    return this.dataset['00741022'];
  }

  // Beam Order Index (Trial)
  get BeamOrderIndexTrial(): any {
    const element = this.dataset['00741024'];
    return (element?.Value.length === 1)
      ? this.dataset['00741024']?.Value[0]
      : this.dataset['00741024']?.Value;
  }

  get '00741024'(): Element {
    return this.dataset['00741024'];
  }

  // Autosequence Flag
  get AutosequenceFlag(): any {
    const element = this.dataset['00741025'];
    return (element?.Value.length === 1)
      ? this.dataset['00741025']?.Value[0]
      : this.dataset['00741025']?.Value;
  }

  get '00741025'(): Element {
    return this.dataset['00741025'];
  }

  // Table Top Vertical Adjusted Position
  get TableTopVerticalAdjustedPosition(): any {
    const element = this.dataset['00741026'];
    return (element?.Value.length === 1)
      ? this.dataset['00741026']?.Value[0]
      : this.dataset['00741026']?.Value;
  }

  get '00741026'(): Element {
    return this.dataset['00741026'];
  }

  // Table Top Longitudinal Adjusted Position
  get TableTopLongitudinalAdjustedPosition(): any {
    const element = this.dataset['00741027'];
    return (element?.Value.length === 1)
      ? this.dataset['00741027']?.Value[0]
      : this.dataset['00741027']?.Value;
  }

  get '00741027'(): Element {
    return this.dataset['00741027'];
  }

  // Table Top Lateral Adjusted Position
  get TableTopLateralAdjustedPosition(): any {
    const element = this.dataset['00741028'];
    return (element?.Value.length === 1)
      ? this.dataset['00741028']?.Value[0]
      : this.dataset['00741028']?.Value;
  }

  get '00741028'(): Element {
    return this.dataset['00741028'];
  }

  // Patient Support Adjusted Angle
  get PatientSupportAdjustedAngle(): any {
    const element = this.dataset['0074102A'];
    return (element?.Value.length === 1)
      ? this.dataset['0074102A']?.Value[0]
      : this.dataset['0074102A']?.Value;
  }

  get '0074102A'(): Element {
    return this.dataset['0074102A'];
  }

  // Table Top Eccentric Adjusted Angle
  get TableTopEccentricAdjustedAngle(): any {
    const element = this.dataset['0074102B'];
    return (element?.Value.length === 1)
      ? this.dataset['0074102B']?.Value[0]
      : this.dataset['0074102B']?.Value;
  }

  get '0074102B'(): Element {
    return this.dataset['0074102B'];
  }

  // Table Top Pitch Adjusted Angle
  get TableTopPitchAdjustedAngle(): any {
    const element = this.dataset['0074102C'];
    return (element?.Value.length === 1)
      ? this.dataset['0074102C']?.Value[0]
      : this.dataset['0074102C']?.Value;
  }

  get '0074102C'(): Element {
    return this.dataset['0074102C'];
  }

  // Table Top Roll Adjusted Angle
  get TableTopRollAdjustedAngle(): any {
    const element = this.dataset['0074102D'];
    return (element?.Value.length === 1)
      ? this.dataset['0074102D']?.Value[0]
      : this.dataset['0074102D']?.Value;
  }

  get '0074102D'(): Element {
    return this.dataset['0074102D'];
  }

  // Delivery Verification Image Sequence
  get DeliveryVerificationImageSequence(): any {
    const element = this.dataset['00741030'];
    return (element?.Value.length === 1)
      ? this.dataset['00741030']?.Value[0]
      : this.dataset['00741030']?.Value;
  }

  get '00741030'(): Element {
    return this.dataset['00741030'];
  }

  // Verification Image Timing
  get VerificationImageTiming(): any {
    const element = this.dataset['00741032'];
    return (element?.Value.length === 1)
      ? this.dataset['00741032']?.Value[0]
      : this.dataset['00741032']?.Value;
  }

  get '00741032'(): Element {
    return this.dataset['00741032'];
  }

  // Double Exposure Flag
  get DoubleExposureFlag(): any {
    const element = this.dataset['00741034'];
    return (element?.Value.length === 1)
      ? this.dataset['00741034']?.Value[0]
      : this.dataset['00741034']?.Value;
  }

  get '00741034'(): Element {
    return this.dataset['00741034'];
  }

  // Double Exposure Ordering
  get DoubleExposureOrdering(): any {
    const element = this.dataset['00741036'];
    return (element?.Value.length === 1)
      ? this.dataset['00741036']?.Value[0]
      : this.dataset['00741036']?.Value;
  }

  get '00741036'(): Element {
    return this.dataset['00741036'];
  }

  // Double Exposure Meterset (Trial)
  get DoubleExposureMetersetTrial(): any {
    const element = this.dataset['00741038'];
    return (element?.Value.length === 1)
      ? this.dataset['00741038']?.Value[0]
      : this.dataset['00741038']?.Value;
  }

  get '00741038'(): Element {
    return this.dataset['00741038'];
  }

  // Double Exposure Field Delta (Trial)
  get DoubleExposureFieldDeltaTrial(): any {
    const element = this.dataset['0074103A'];
    return (element?.Value.length === 1)
      ? this.dataset['0074103A']?.Value[0]
      : this.dataset['0074103A']?.Value;
  }

  get '0074103A'(): Element {
    return this.dataset['0074103A'];
  }

  // Related Reference RT Image Sequence
  get RelatedReferenceRTImageSequence(): any {
    const element = this.dataset['00741040'];
    return (element?.Value.length === 1)
      ? this.dataset['00741040']?.Value[0]
      : this.dataset['00741040']?.Value;
  }

  get '00741040'(): Element {
    return this.dataset['00741040'];
  }

  // General Machine Verification Sequence
  get GeneralMachineVerificationSequence(): any {
    const element = this.dataset['00741042'];
    return (element?.Value.length === 1)
      ? this.dataset['00741042']?.Value[0]
      : this.dataset['00741042']?.Value;
  }

  get '00741042'(): Element {
    return this.dataset['00741042'];
  }

  // Conventional Machine Verification Sequence
  get ConventionalMachineVerificationSequence(): any {
    const element = this.dataset['00741044'];
    return (element?.Value.length === 1)
      ? this.dataset['00741044']?.Value[0]
      : this.dataset['00741044']?.Value;
  }

  get '00741044'(): Element {
    return this.dataset['00741044'];
  }

  // Ion Machine Verification Sequence
  get IonMachineVerificationSequence(): any {
    const element = this.dataset['00741046'];
    return (element?.Value.length === 1)
      ? this.dataset['00741046']?.Value[0]
      : this.dataset['00741046']?.Value;
  }

  get '00741046'(): Element {
    return this.dataset['00741046'];
  }

  // Failed Attributes Sequence
  get FailedAttributesSequence(): any {
    const element = this.dataset['00741048'];
    return (element?.Value.length === 1)
      ? this.dataset['00741048']?.Value[0]
      : this.dataset['00741048']?.Value;
  }

  get '00741048'(): Element {
    return this.dataset['00741048'];
  }

  // Overridden Attributes Sequence
  get OverriddenAttributesSequence(): any {
    const element = this.dataset['0074104A'];
    return (element?.Value.length === 1)
      ? this.dataset['0074104A']?.Value[0]
      : this.dataset['0074104A']?.Value;
  }

  get '0074104A'(): Element {
    return this.dataset['0074104A'];
  }

  // Conventional Control Point Verification Sequence
  get ConventionalControlPointVerificationSequence(): any {
    const element = this.dataset['0074104C'];
    return (element?.Value.length === 1)
      ? this.dataset['0074104C']?.Value[0]
      : this.dataset['0074104C']?.Value;
  }

  get '0074104C'(): Element {
    return this.dataset['0074104C'];
  }

  // Ion Control Point Verification Sequence
  get IonControlPointVerificationSequence(): any {
    const element = this.dataset['0074104E'];
    return (element?.Value.length === 1)
      ? this.dataset['0074104E']?.Value[0]
      : this.dataset['0074104E']?.Value;
  }

  get '0074104E'(): Element {
    return this.dataset['0074104E'];
  }

  // Attribute Occurrence Sequence
  get AttributeOccurrenceSequence(): any {
    const element = this.dataset['00741050'];
    return (element?.Value.length === 1)
      ? this.dataset['00741050']?.Value[0]
      : this.dataset['00741050']?.Value;
  }

  get '00741050'(): Element {
    return this.dataset['00741050'];
  }

  // Attribute Occurrence Pointer
  get AttributeOccurrencePointer(): any {
    const element = this.dataset['00741052'];
    return (element?.Value.length === 1)
      ? this.dataset['00741052']?.Value[0]
      : this.dataset['00741052']?.Value;
  }

  get '00741052'(): Element {
    return this.dataset['00741052'];
  }

  // Attribute Item Selector
  get AttributeItemSelector(): any {
    const element = this.dataset['00741054'];
    return (element?.Value.length === 1)
      ? this.dataset['00741054']?.Value[0]
      : this.dataset['00741054']?.Value;
  }

  get '00741054'(): Element {
    return this.dataset['00741054'];
  }

  // Attribute Occurrence Private Creator
  get AttributeOccurrencePrivateCreator(): any {
    const element = this.dataset['00741056'];
    return (element?.Value.length === 1)
      ? this.dataset['00741056']?.Value[0]
      : this.dataset['00741056']?.Value;
  }

  get '00741056'(): Element {
    return this.dataset['00741056'];
  }

  // Selector Sequence Pointer Items
  get SelectorSequencePointerItems(): any {
    const element = this.dataset['00741057'];
    return (element?.Value.length === 1)
      ? this.dataset['00741057']?.Value[0]
      : this.dataset['00741057']?.Value;
  }

  get '00741057'(): Element {
    return this.dataset['00741057'];
  }

  // Scheduled Procedure Step Priority
  get ScheduledProcedureStepPriority(): any {
    const element = this.dataset['00741200'];
    return (element?.Value.length === 1)
      ? this.dataset['00741200']?.Value[0]
      : this.dataset['00741200']?.Value;
  }

  get '00741200'(): Element {
    return this.dataset['00741200'];
  }

  // Worklist Label
  get WorklistLabel(): any {
    const element = this.dataset['00741202'];
    return (element?.Value.length === 1)
      ? this.dataset['00741202']?.Value[0]
      : this.dataset['00741202']?.Value;
  }

  get '00741202'(): Element {
    return this.dataset['00741202'];
  }

  // Procedure Step Label
  get ProcedureStepLabel(): any {
    const element = this.dataset['00741204'];
    return (element?.Value.length === 1)
      ? this.dataset['00741204']?.Value[0]
      : this.dataset['00741204']?.Value;
  }

  get '00741204'(): Element {
    return this.dataset['00741204'];
  }

  // Scheduled Processing Parameters Sequence
  get ScheduledProcessingParametersSequence(): any {
    const element = this.dataset['00741210'];
    return (element?.Value.length === 1)
      ? this.dataset['00741210']?.Value[0]
      : this.dataset['00741210']?.Value;
  }

  get '00741210'(): Element {
    return this.dataset['00741210'];
  }

  // Performed Processing Parameters Sequence
  get PerformedProcessingParametersSequence(): any {
    const element = this.dataset['00741212'];
    return (element?.Value.length === 1)
      ? this.dataset['00741212']?.Value[0]
      : this.dataset['00741212']?.Value;
  }

  get '00741212'(): Element {
    return this.dataset['00741212'];
  }

  // Unified Procedure Step Performed Procedure Sequence
  get UnifiedProcedureStepPerformedProcedureSequence(): any {
    const element = this.dataset['00741216'];
    return (element?.Value.length === 1)
      ? this.dataset['00741216']?.Value[0]
      : this.dataset['00741216']?.Value;
  }

  get '00741216'(): Element {
    return this.dataset['00741216'];
  }

  // Related Procedure Step Sequence
  get RelatedProcedureStepSequence(): any {
    const element = this.dataset['00741220'];
    return (element?.Value.length === 1)
      ? this.dataset['00741220']?.Value[0]
      : this.dataset['00741220']?.Value;
  }

  get '00741220'(): Element {
    return this.dataset['00741220'];
  }

  // Procedure Step Relationship Type
  get ProcedureStepRelationshipType(): any {
    const element = this.dataset['00741222'];
    return (element?.Value.length === 1)
      ? this.dataset['00741222']?.Value[0]
      : this.dataset['00741222']?.Value;
  }

  get '00741222'(): Element {
    return this.dataset['00741222'];
  }

  // Replaced Procedure Step Sequence
  get ReplacedProcedureStepSequence(): any {
    const element = this.dataset['00741224'];
    return (element?.Value.length === 1)
      ? this.dataset['00741224']?.Value[0]
      : this.dataset['00741224']?.Value;
  }

  get '00741224'(): Element {
    return this.dataset['00741224'];
  }

  // Deletion Lock
  get DeletionLock(): any {
    const element = this.dataset['00741230'];
    return (element?.Value.length === 1)
      ? this.dataset['00741230']?.Value[0]
      : this.dataset['00741230']?.Value;
  }

  get '00741230'(): Element {
    return this.dataset['00741230'];
  }

  // Receiving AE
  get ReceivingAE(): any {
    const element = this.dataset['00741234'];
    return (element?.Value.length === 1)
      ? this.dataset['00741234']?.Value[0]
      : this.dataset['00741234']?.Value;
  }

  get '00741234'(): Element {
    return this.dataset['00741234'];
  }

  // Requesting AE
  get RequestingAE(): any {
    const element = this.dataset['00741236'];
    return (element?.Value.length === 1)
      ? this.dataset['00741236']?.Value[0]
      : this.dataset['00741236']?.Value;
  }

  get '00741236'(): Element {
    return this.dataset['00741236'];
  }

  // Reason for Cancellation
  get ReasonForCancellation(): any {
    const element = this.dataset['00741238'];
    return (element?.Value.length === 1)
      ? this.dataset['00741238']?.Value[0]
      : this.dataset['00741238']?.Value;
  }

  get '00741238'(): Element {
    return this.dataset['00741238'];
  }

  // SCP Status
  get SCPStatus(): any {
    const element = this.dataset['00741242'];
    return (element?.Value.length === 1)
      ? this.dataset['00741242']?.Value[0]
      : this.dataset['00741242']?.Value;
  }

  get '00741242'(): Element {
    return this.dataset['00741242'];
  }

  // Subscription List Status
  get SubscriptionListStatus(): any {
    const element = this.dataset['00741244'];
    return (element?.Value.length === 1)
      ? this.dataset['00741244']?.Value[0]
      : this.dataset['00741244']?.Value;
  }

  get '00741244'(): Element {
    return this.dataset['00741244'];
  }

  // Unified Procedure Step List Status
  get UnifiedProcedureStepListStatus(): any {
    const element = this.dataset['00741246'];
    return (element?.Value.length === 1)
      ? this.dataset['00741246']?.Value[0]
      : this.dataset['00741246']?.Value;
  }

  get '00741246'(): Element {
    return this.dataset['00741246'];
  }

  // Beam Order Index
  get BeamOrderIndex(): any {
    const element = this.dataset['00741324'];
    return (element?.Value.length === 1)
      ? this.dataset['00741324']?.Value[0]
      : this.dataset['00741324']?.Value;
  }

  get '00741324'(): Element {
    return this.dataset['00741324'];
  }

  // Double Exposure Meterset
  get DoubleExposureMeterset(): any {
    const element = this.dataset['00741338'];
    return (element?.Value.length === 1)
      ? this.dataset['00741338']?.Value[0]
      : this.dataset['00741338']?.Value;
  }

  get '00741338'(): Element {
    return this.dataset['00741338'];
  }

  // Double Exposure Field Delta
  get DoubleExposureFieldDelta(): any {
    const element = this.dataset['0074133A'];
    return (element?.Value.length === 1)
      ? this.dataset['0074133A']?.Value[0]
      : this.dataset['0074133A']?.Value;
  }

  get '0074133A'(): Element {
    return this.dataset['0074133A'];
  }

  // Implant Assembly Template Name
  get ImplantAssemblyTemplateName(): any {
    const element = this.dataset['00760001'];
    return (element?.Value.length === 1)
      ? this.dataset['00760001']?.Value[0]
      : this.dataset['00760001']?.Value;
  }

  get '00760001'(): Element {
    return this.dataset['00760001'];
  }

  // Implant Assembly Template Issuer
  get ImplantAssemblyTemplateIssuer(): any {
    const element = this.dataset['00760003'];
    return (element?.Value.length === 1)
      ? this.dataset['00760003']?.Value[0]
      : this.dataset['00760003']?.Value;
  }

  get '00760003'(): Element {
    return this.dataset['00760003'];
  }

  // Implant Assembly Template Version
  get ImplantAssemblyTemplateVersion(): any {
    const element = this.dataset['00760006'];
    return (element?.Value.length === 1)
      ? this.dataset['00760006']?.Value[0]
      : this.dataset['00760006']?.Value;
  }

  get '00760006'(): Element {
    return this.dataset['00760006'];
  }

  // Replaced Implant Assembly Template Sequence
  get ReplacedImplantAssemblyTemplateSequence(): any {
    const element = this.dataset['00760008'];
    return (element?.Value.length === 1)
      ? this.dataset['00760008']?.Value[0]
      : this.dataset['00760008']?.Value;
  }

  get '00760008'(): Element {
    return this.dataset['00760008'];
  }

  // Implant Assembly Template Type
  get ImplantAssemblyTemplateType(): any {
    const element = this.dataset['0076000A'];
    return (element?.Value.length === 1)
      ? this.dataset['0076000A']?.Value[0]
      : this.dataset['0076000A']?.Value;
  }

  get '0076000A'(): Element {
    return this.dataset['0076000A'];
  }

  // Original Implant Assembly Template Sequence
  get OriginalImplantAssemblyTemplateSequence(): any {
    const element = this.dataset['0076000C'];
    return (element?.Value.length === 1)
      ? this.dataset['0076000C']?.Value[0]
      : this.dataset['0076000C']?.Value;
  }

  get '0076000C'(): Element {
    return this.dataset['0076000C'];
  }

  // Derivation Implant Assembly Template Sequence
  get DerivationImplantAssemblyTemplateSequence(): any {
    const element = this.dataset['0076000E'];
    return (element?.Value.length === 1)
      ? this.dataset['0076000E']?.Value[0]
      : this.dataset['0076000E']?.Value;
  }

  get '0076000E'(): Element {
    return this.dataset['0076000E'];
  }

  // Implant Assembly Template Target Anatomy Sequence
  get ImplantAssemblyTemplateTargetAnatomySequence(): any {
    const element = this.dataset['00760010'];
    return (element?.Value.length === 1)
      ? this.dataset['00760010']?.Value[0]
      : this.dataset['00760010']?.Value;
  }

  get '00760010'(): Element {
    return this.dataset['00760010'];
  }

  // Procedure Type Code Sequence
  get ProcedureTypeCodeSequence(): any {
    const element = this.dataset['00760020'];
    return (element?.Value.length === 1)
      ? this.dataset['00760020']?.Value[0]
      : this.dataset['00760020']?.Value;
  }

  get '00760020'(): Element {
    return this.dataset['00760020'];
  }

  // Surgical Technique
  get SurgicalTechnique(): any {
    const element = this.dataset['00760030'];
    return (element?.Value.length === 1)
      ? this.dataset['00760030']?.Value[0]
      : this.dataset['00760030']?.Value;
  }

  get '00760030'(): Element {
    return this.dataset['00760030'];
  }

  // Component Types Sequence
  get ComponentTypesSequence(): any {
    const element = this.dataset['00760032'];
    return (element?.Value.length === 1)
      ? this.dataset['00760032']?.Value[0]
      : this.dataset['00760032']?.Value;
  }

  get '00760032'(): Element {
    return this.dataset['00760032'];
  }

  // Component Type Code Sequence
  get ComponentTypeCodeSequence(): any {
    const element = this.dataset['00760034'];
    return (element?.Value.length === 1)
      ? this.dataset['00760034']?.Value[0]
      : this.dataset['00760034']?.Value;
  }

  get '00760034'(): Element {
    return this.dataset['00760034'];
  }

  // Exclusive Component Type
  get ExclusiveComponentType(): any {
    const element = this.dataset['00760036'];
    return (element?.Value.length === 1)
      ? this.dataset['00760036']?.Value[0]
      : this.dataset['00760036']?.Value;
  }

  get '00760036'(): Element {
    return this.dataset['00760036'];
  }

  // Mandatory Component Type
  get MandatoryComponentType(): any {
    const element = this.dataset['00760038'];
    return (element?.Value.length === 1)
      ? this.dataset['00760038']?.Value[0]
      : this.dataset['00760038']?.Value;
  }

  get '00760038'(): Element {
    return this.dataset['00760038'];
  }

  // Component Sequence
  get ComponentSequence(): any {
    const element = this.dataset['00760040'];
    return (element?.Value.length === 1)
      ? this.dataset['00760040']?.Value[0]
      : this.dataset['00760040']?.Value;
  }

  get '00760040'(): Element {
    return this.dataset['00760040'];
  }

  // Component ID
  get ComponentID(): any {
    const element = this.dataset['00760055'];
    return (element?.Value.length === 1)
      ? this.dataset['00760055']?.Value[0]
      : this.dataset['00760055']?.Value;
  }

  get '00760055'(): Element {
    return this.dataset['00760055'];
  }

  // Component Assembly Sequence
  get ComponentAssemblySequence(): any {
    const element = this.dataset['00760060'];
    return (element?.Value.length === 1)
      ? this.dataset['00760060']?.Value[0]
      : this.dataset['00760060']?.Value;
  }

  get '00760060'(): Element {
    return this.dataset['00760060'];
  }

  // Component 1 Referenced ID
  get Component1ReferencedID(): any {
    const element = this.dataset['00760070'];
    return (element?.Value.length === 1)
      ? this.dataset['00760070']?.Value[0]
      : this.dataset['00760070']?.Value;
  }

  get '00760070'(): Element {
    return this.dataset['00760070'];
  }

  // Component 1 Referenced Mating Feature Set ID
  get Component1ReferencedMatingFeatureSetID(): any {
    const element = this.dataset['00760080'];
    return (element?.Value.length === 1)
      ? this.dataset['00760080']?.Value[0]
      : this.dataset['00760080']?.Value;
  }

  get '00760080'(): Element {
    return this.dataset['00760080'];
  }

  // Component 1 Referenced Mating Feature ID
  get Component1ReferencedMatingFeatureID(): any {
    const element = this.dataset['00760090'];
    return (element?.Value.length === 1)
      ? this.dataset['00760090']?.Value[0]
      : this.dataset['00760090']?.Value;
  }

  get '00760090'(): Element {
    return this.dataset['00760090'];
  }

  // Component 2 Referenced ID
  get Component2ReferencedID(): any {
    const element = this.dataset['007600A0'];
    return (element?.Value.length === 1)
      ? this.dataset['007600A0']?.Value[0]
      : this.dataset['007600A0']?.Value;
  }

  get '007600A0'(): Element {
    return this.dataset['007600A0'];
  }

  // Component 2 Referenced Mating Feature Set ID
  get Component2ReferencedMatingFeatureSetID(): any {
    const element = this.dataset['007600B0'];
    return (element?.Value.length === 1)
      ? this.dataset['007600B0']?.Value[0]
      : this.dataset['007600B0']?.Value;
  }

  get '007600B0'(): Element {
    return this.dataset['007600B0'];
  }

  // Component 2 Referenced Mating Feature ID
  get Component2ReferencedMatingFeatureID(): any {
    const element = this.dataset['007600C0'];
    return (element?.Value.length === 1)
      ? this.dataset['007600C0']?.Value[0]
      : this.dataset['007600C0']?.Value;
  }

  get '007600C0'(): Element {
    return this.dataset['007600C0'];
  }

  // Implant Template Group Name
  get ImplantTemplateGroupName(): any {
    const element = this.dataset['00780001'];
    return (element?.Value.length === 1)
      ? this.dataset['00780001']?.Value[0]
      : this.dataset['00780001']?.Value;
  }

  get '00780001'(): Element {
    return this.dataset['00780001'];
  }

  // Implant Template Group Description
  get ImplantTemplateGroupDescription(): any {
    const element = this.dataset['00780010'];
    return (element?.Value.length === 1)
      ? this.dataset['00780010']?.Value[0]
      : this.dataset['00780010']?.Value;
  }

  get '00780010'(): Element {
    return this.dataset['00780010'];
  }

  // Implant Template Group Issuer
  get ImplantTemplateGroupIssuer(): any {
    const element = this.dataset['00780020'];
    return (element?.Value.length === 1)
      ? this.dataset['00780020']?.Value[0]
      : this.dataset['00780020']?.Value;
  }

  get '00780020'(): Element {
    return this.dataset['00780020'];
  }

  // Implant Template Group Version
  get ImplantTemplateGroupVersion(): any {
    const element = this.dataset['00780024'];
    return (element?.Value.length === 1)
      ? this.dataset['00780024']?.Value[0]
      : this.dataset['00780024']?.Value;
  }

  get '00780024'(): Element {
    return this.dataset['00780024'];
  }

  // Replaced Implant Template Group Sequence
  get ReplacedImplantTemplateGroupSequence(): any {
    const element = this.dataset['00780026'];
    return (element?.Value.length === 1)
      ? this.dataset['00780026']?.Value[0]
      : this.dataset['00780026']?.Value;
  }

  get '00780026'(): Element {
    return this.dataset['00780026'];
  }

  // Implant Template Group Target Anatomy Sequence
  get ImplantTemplateGroupTargetAnatomySequence(): any {
    const element = this.dataset['00780028'];
    return (element?.Value.length === 1)
      ? this.dataset['00780028']?.Value[0]
      : this.dataset['00780028']?.Value;
  }

  get '00780028'(): Element {
    return this.dataset['00780028'];
  }

  // Implant Template Group Members Sequence
  get ImplantTemplateGroupMembersSequence(): any {
    const element = this.dataset['0078002A'];
    return (element?.Value.length === 1)
      ? this.dataset['0078002A']?.Value[0]
      : this.dataset['0078002A']?.Value;
  }

  get '0078002A'(): Element {
    return this.dataset['0078002A'];
  }

  // Implant Template Group Member ID
  get ImplantTemplateGroupMemberID(): any {
    const element = this.dataset['0078002E'];
    return (element?.Value.length === 1)
      ? this.dataset['0078002E']?.Value[0]
      : this.dataset['0078002E']?.Value;
  }

  get '0078002E'(): Element {
    return this.dataset['0078002E'];
  }

  // 3D Implant Template Group Member Matching Point
  get ThreeDImplantTemplateGroupMemberMatchingPoint(): any {
    const element = this.dataset['00780050'];
    return (element?.Value.length === 1)
      ? this.dataset['00780050']?.Value[0]
      : this.dataset['00780050']?.Value;
  }

  get '00780050'(): Element {
    return this.dataset['00780050'];
  }

  // 3D Implant Template Group Member Matching Axes
  get ThreeDImplantTemplateGroupMemberMatchingAxes(): any {
    const element = this.dataset['00780060'];
    return (element?.Value.length === 1)
      ? this.dataset['00780060']?.Value[0]
      : this.dataset['00780060']?.Value;
  }

  get '00780060'(): Element {
    return this.dataset['00780060'];
  }

  // Implant Template Group Member Matching 2D Coordinates Sequence
  get ImplantTemplateGroupMemberMatching2DCoordinatesSequence(): any {
    const element = this.dataset['00780070'];
    return (element?.Value.length === 1)
      ? this.dataset['00780070']?.Value[0]
      : this.dataset['00780070']?.Value;
  }

  get '00780070'(): Element {
    return this.dataset['00780070'];
  }

  // 2D Implant Template Group Member Matching Point
  get TwoDImplantTemplateGroupMemberMatchingPoint(): any {
    const element = this.dataset['00780090'];
    return (element?.Value.length === 1)
      ? this.dataset['00780090']?.Value[0]
      : this.dataset['00780090']?.Value;
  }

  get '00780090'(): Element {
    return this.dataset['00780090'];
  }

  // 2D Implant Template Group Member Matching Axes
  get TwoDImplantTemplateGroupMemberMatchingAxes(): any {
    const element = this.dataset['007800A0'];
    return (element?.Value.length === 1)
      ? this.dataset['007800A0']?.Value[0]
      : this.dataset['007800A0']?.Value;
  }

  get '007800A0'(): Element {
    return this.dataset['007800A0'];
  }

  // Implant Template Group Variation Dimension Sequence
  get ImplantTemplateGroupVariationDimensionSequence(): any {
    const element = this.dataset['007800B0'];
    return (element?.Value.length === 1)
      ? this.dataset['007800B0']?.Value[0]
      : this.dataset['007800B0']?.Value;
  }

  get '007800B0'(): Element {
    return this.dataset['007800B0'];
  }

  // Implant Template Group Variation Dimension Name
  get ImplantTemplateGroupVariationDimensionName(): any {
    const element = this.dataset['007800B2'];
    return (element?.Value.length === 1)
      ? this.dataset['007800B2']?.Value[0]
      : this.dataset['007800B2']?.Value;
  }

  get '007800B2'(): Element {
    return this.dataset['007800B2'];
  }

  // Implant Template Group Variation Dimension Rank Sequence
  get ImplantTemplateGroupVariationDimensionRankSequence(): any {
    const element = this.dataset['007800B4'];
    return (element?.Value.length === 1)
      ? this.dataset['007800B4']?.Value[0]
      : this.dataset['007800B4']?.Value;
  }

  get '007800B4'(): Element {
    return this.dataset['007800B4'];
  }

  // Referenced Implant Template Group Member ID
  get ReferencedImplantTemplateGroupMemberID(): any {
    const element = this.dataset['007800B6'];
    return (element?.Value.length === 1)
      ? this.dataset['007800B6']?.Value[0]
      : this.dataset['007800B6']?.Value;
  }

  get '007800B6'(): Element {
    return this.dataset['007800B6'];
  }

  // Implant Template Group Variation Dimension Rank
  get ImplantTemplateGroupVariationDimensionRank(): any {
    const element = this.dataset['007800B8'];
    return (element?.Value.length === 1)
      ? this.dataset['007800B8']?.Value[0]
      : this.dataset['007800B8']?.Value;
  }

  get '007800B8'(): Element {
    return this.dataset['007800B8'];
  }

  // Surface Scan Acquisition Type Code Sequence
  get SurfaceScanAcquisitionTypeCodeSequence(): any {
    const element = this.dataset['00800001'];
    return (element?.Value.length === 1)
      ? this.dataset['00800001']?.Value[0]
      : this.dataset['00800001']?.Value;
  }

  get '00800001'(): Element {
    return this.dataset['00800001'];
  }

  // Surface Scan Mode Code Sequence
  get SurfaceScanModeCodeSequence(): any {
    const element = this.dataset['00800002'];
    return (element?.Value.length === 1)
      ? this.dataset['00800002']?.Value[0]
      : this.dataset['00800002']?.Value;
  }

  get '00800002'(): Element {
    return this.dataset['00800002'];
  }

  // Registration Method Code Sequence
  get RegistrationMethodCodeSequence(): any {
    const element = this.dataset['00800003'];
    return (element?.Value.length === 1)
      ? this.dataset['00800003']?.Value[0]
      : this.dataset['00800003']?.Value;
  }

  get '00800003'(): Element {
    return this.dataset['00800003'];
  }

  // Shot Duration Time
  get ShotDurationTime(): any {
    const element = this.dataset['00800004'];
    return (element?.Value.length === 1)
      ? this.dataset['00800004']?.Value[0]
      : this.dataset['00800004']?.Value;
  }

  get '00800004'(): Element {
    return this.dataset['00800004'];
  }

  // Shot Offset Time
  get ShotOffsetTime(): any {
    const element = this.dataset['00800005'];
    return (element?.Value.length === 1)
      ? this.dataset['00800005']?.Value[0]
      : this.dataset['00800005']?.Value;
  }

  get '00800005'(): Element {
    return this.dataset['00800005'];
  }

  // Surface Point Presentation Value Data
  get SurfacePointPresentationValueData(): any {
    const element = this.dataset['00800006'];
    return (element?.Value.length === 1)
      ? this.dataset['00800006']?.Value[0]
      : this.dataset['00800006']?.Value;
  }

  get '00800006'(): Element {
    return this.dataset['00800006'];
  }

  // Surface Point Color CIELab Value Data
  get SurfacePointColorCIELabValueData(): any {
    const element = this.dataset['00800007'];
    return (element?.Value.length === 1)
      ? this.dataset['00800007']?.Value[0]
      : this.dataset['00800007']?.Value;
  }

  get '00800007'(): Element {
    return this.dataset['00800007'];
  }

  // UV Mapping Sequence
  get UVMappingSequence(): any {
    const element = this.dataset['00800008'];
    return (element?.Value.length === 1)
      ? this.dataset['00800008']?.Value[0]
      : this.dataset['00800008']?.Value;
  }

  get '00800008'(): Element {
    return this.dataset['00800008'];
  }

  // Texture Label
  get TextureLabel(): any {
    const element = this.dataset['00800009'];
    return (element?.Value.length === 1)
      ? this.dataset['00800009']?.Value[0]
      : this.dataset['00800009']?.Value;
  }

  get '00800009'(): Element {
    return this.dataset['00800009'];
  }

  // U Value Data
  get UValueData(): any {
    const element = this.dataset['00800010'];
    return (element?.Value.length === 1)
      ? this.dataset['00800010']?.Value[0]
      : this.dataset['00800010']?.Value;
  }

  get '00800010'(): Element {
    return this.dataset['00800010'];
  }

  // V Value Data
  get VValueData(): any {
    const element = this.dataset['00800011'];
    return (element?.Value.length === 1)
      ? this.dataset['00800011']?.Value[0]
      : this.dataset['00800011']?.Value;
  }

  get '00800011'(): Element {
    return this.dataset['00800011'];
  }

  // Referenced Texture Sequence
  get ReferencedTextureSequence(): any {
    const element = this.dataset['00800012'];
    return (element?.Value.length === 1)
      ? this.dataset['00800012']?.Value[0]
      : this.dataset['00800012']?.Value;
  }

  get '00800012'(): Element {
    return this.dataset['00800012'];
  }

  // Referenced Surface Data Sequence
  get ReferencedSurfaceDataSequence(): any {
    const element = this.dataset['00800013'];
    return (element?.Value.length === 1)
      ? this.dataset['00800013']?.Value[0]
      : this.dataset['00800013']?.Value;
  }

  get '00800013'(): Element {
    return this.dataset['00800013'];
  }

  // Storage Media File-set ID
  get StorageMediaFileSetID(): any {
    const element = this.dataset['00880130'];
    return (element?.Value.length === 1)
      ? this.dataset['00880130']?.Value[0]
      : this.dataset['00880130']?.Value;
  }

  get '00880130'(): Element {
    return this.dataset['00880130'];
  }

  // Storage Media File-set UID
  get StorageMediaFileSetUID(): any {
    const element = this.dataset['00880140'];
    return (element?.Value.length === 1)
      ? this.dataset['00880140']?.Value[0]
      : this.dataset['00880140']?.Value;
  }

  get '00880140'(): Element {
    return this.dataset['00880140'];
  }

  // Icon Image Sequence
  get IconImageSequence(): any {
    const element = this.dataset['00880200'];
    return (element?.Value.length === 1)
      ? this.dataset['00880200']?.Value[0]
      : this.dataset['00880200']?.Value;
  }

  get '00880200'(): Element {
    return this.dataset['00880200'];
  }

  // Topic Title
  get TopicTitle(): any {
    const element = this.dataset['00880904'];
    return (element?.Value.length === 1)
      ? this.dataset['00880904']?.Value[0]
      : this.dataset['00880904']?.Value;
  }

  get '00880904'(): Element {
    return this.dataset['00880904'];
  }

  // Topic Subject
  get TopicSubject(): any {
    const element = this.dataset['00880906'];
    return (element?.Value.length === 1)
      ? this.dataset['00880906']?.Value[0]
      : this.dataset['00880906']?.Value;
  }

  get '00880906'(): Element {
    return this.dataset['00880906'];
  }

  // Topic Author
  get TopicAuthor(): any {
    const element = this.dataset['00880910'];
    return (element?.Value.length === 1)
      ? this.dataset['00880910']?.Value[0]
      : this.dataset['00880910']?.Value;
  }

  get '00880910'(): Element {
    return this.dataset['00880910'];
  }

  // Topic Keywords
  get TopicKeywords(): any {
    const element = this.dataset['00880912'];
    return (element?.Value.length === 1)
      ? this.dataset['00880912']?.Value[0]
      : this.dataset['00880912']?.Value;
  }

  get '00880912'(): Element {
    return this.dataset['00880912'];
  }

  // SOP Instance Status
  get SOPInstanceStatus(): any {
    const element = this.dataset['01000410'];
    return (element?.Value.length === 1)
      ? this.dataset['01000410']?.Value[0]
      : this.dataset['01000410']?.Value;
  }

  get '01000410'(): Element {
    return this.dataset['01000410'];
  }

  // SOP Authorization DateTime
  get SOPAuthorizationDateTime(): any {
    const element = this.dataset['01000420'];
    return (element?.Value.length === 1)
      ? this.dataset['01000420']?.Value[0]
      : this.dataset['01000420']?.Value;
  }

  get '01000420'(): Element {
    return this.dataset['01000420'];
  }

  // SOP Authorization Comment
  get SOPAuthorizationComment(): any {
    const element = this.dataset['01000424'];
    return (element?.Value.length === 1)
      ? this.dataset['01000424']?.Value[0]
      : this.dataset['01000424']?.Value;
  }

  get '01000424'(): Element {
    return this.dataset['01000424'];
  }

  // Authorization Equipment Certification Number
  get AuthorizationEquipmentCertificationNumber(): any {
    const element = this.dataset['01000426'];
    return (element?.Value.length === 1)
      ? this.dataset['01000426']?.Value[0]
      : this.dataset['01000426']?.Value;
  }

  get '01000426'(): Element {
    return this.dataset['01000426'];
  }

  // MAC ID Number
  get MACIDNumber(): any {
    const element = this.dataset['04000005'];
    return (element?.Value.length === 1)
      ? this.dataset['04000005']?.Value[0]
      : this.dataset['04000005']?.Value;
  }

  get '04000005'(): Element {
    return this.dataset['04000005'];
  }

  // MAC Calculation Transfer Syntax UID
  get MACCalculationTransferSyntaxUID(): any {
    const element = this.dataset['04000010'];
    return (element?.Value.length === 1)
      ? this.dataset['04000010']?.Value[0]
      : this.dataset['04000010']?.Value;
  }

  get '04000010'(): Element {
    return this.dataset['04000010'];
  }

  // MAC Algorithm
  get MACAlgorithm(): any {
    const element = this.dataset['04000015'];
    return (element?.Value.length === 1)
      ? this.dataset['04000015']?.Value[0]
      : this.dataset['04000015']?.Value;
  }

  get '04000015'(): Element {
    return this.dataset['04000015'];
  }

  // Data Elements Signed
  get DataElementsSigned(): any {
    const element = this.dataset['04000020'];
    return (element?.Value.length === 1)
      ? this.dataset['04000020']?.Value[0]
      : this.dataset['04000020']?.Value;
  }

  get '04000020'(): Element {
    return this.dataset['04000020'];
  }

  // Digital Signature UID
  get DigitalSignatureUID(): any {
    const element = this.dataset['04000100'];
    return (element?.Value.length === 1)
      ? this.dataset['04000100']?.Value[0]
      : this.dataset['04000100']?.Value;
  }

  get '04000100'(): Element {
    return this.dataset['04000100'];
  }

  // Digital Signature DateTime
  get DigitalSignatureDateTime(): any {
    const element = this.dataset['04000105'];
    return (element?.Value.length === 1)
      ? this.dataset['04000105']?.Value[0]
      : this.dataset['04000105']?.Value;
  }

  get '04000105'(): Element {
    return this.dataset['04000105'];
  }

  // Certificate Type
  get CertificateType(): any {
    const element = this.dataset['04000110'];
    return (element?.Value.length === 1)
      ? this.dataset['04000110']?.Value[0]
      : this.dataset['04000110']?.Value;
  }

  get '04000110'(): Element {
    return this.dataset['04000110'];
  }

  // Certificate of Signer
  get CertificateOfSigner(): any {
    const element = this.dataset['04000115'];
    return (element?.Value.length === 1)
      ? this.dataset['04000115']?.Value[0]
      : this.dataset['04000115']?.Value;
  }

  get '04000115'(): Element {
    return this.dataset['04000115'];
  }

  // Signature
  get Signature(): any {
    const element = this.dataset['04000120'];
    return (element?.Value.length === 1)
      ? this.dataset['04000120']?.Value[0]
      : this.dataset['04000120']?.Value;
  }

  get '04000120'(): Element {
    return this.dataset['04000120'];
  }

  // Certified Timestamp Type
  get CertifiedTimestampType(): any {
    const element = this.dataset['04000305'];
    return (element?.Value.length === 1)
      ? this.dataset['04000305']?.Value[0]
      : this.dataset['04000305']?.Value;
  }

  get '04000305'(): Element {
    return this.dataset['04000305'];
  }

  // Certified Timestamp
  get CertifiedTimestamp(): any {
    const element = this.dataset['04000310'];
    return (element?.Value.length === 1)
      ? this.dataset['04000310']?.Value[0]
      : this.dataset['04000310']?.Value;
  }

  get '04000310'(): Element {
    return this.dataset['04000310'];
  }

  // Digital Signature Purpose Code Sequence
  get DigitalSignaturePurposeCodeSequence(): any {
    const element = this.dataset['04000401'];
    return (element?.Value.length === 1)
      ? this.dataset['04000401']?.Value[0]
      : this.dataset['04000401']?.Value;
  }

  get '04000401'(): Element {
    return this.dataset['04000401'];
  }

  // Referenced Digital Signature Sequence
  get ReferencedDigitalSignatureSequence(): any {
    const element = this.dataset['04000402'];
    return (element?.Value.length === 1)
      ? this.dataset['04000402']?.Value[0]
      : this.dataset['04000402']?.Value;
  }

  get '04000402'(): Element {
    return this.dataset['04000402'];
  }

  // Referenced SOP Instance MAC Sequence
  get ReferencedSOPInstanceMACSequence(): any {
    const element = this.dataset['04000403'];
    return (element?.Value.length === 1)
      ? this.dataset['04000403']?.Value[0]
      : this.dataset['04000403']?.Value;
  }

  get '04000403'(): Element {
    return this.dataset['04000403'];
  }

  // MAC
  get MAC(): any {
    const element = this.dataset['04000404'];
    return (element?.Value.length === 1)
      ? this.dataset['04000404']?.Value[0]
      : this.dataset['04000404']?.Value;
  }

  get '04000404'(): Element {
    return this.dataset['04000404'];
  }

  // Encrypted Attributes Sequence
  get EncryptedAttributesSequence(): any {
    const element = this.dataset['04000500'];
    return (element?.Value.length === 1)
      ? this.dataset['04000500']?.Value[0]
      : this.dataset['04000500']?.Value;
  }

  get '04000500'(): Element {
    return this.dataset['04000500'];
  }

  // Encrypted Content Transfer Syntax UID
  get EncryptedContentTransferSyntaxUID(): any {
    const element = this.dataset['04000510'];
    return (element?.Value.length === 1)
      ? this.dataset['04000510']?.Value[0]
      : this.dataset['04000510']?.Value;
  }

  get '04000510'(): Element {
    return this.dataset['04000510'];
  }

  // Encrypted Content
  get EncryptedContent(): any {
    const element = this.dataset['04000520'];
    return (element?.Value.length === 1)
      ? this.dataset['04000520']?.Value[0]
      : this.dataset['04000520']?.Value;
  }

  get '04000520'(): Element {
    return this.dataset['04000520'];
  }

  // Modified Attributes Sequence
  get ModifiedAttributesSequence(): any {
    const element = this.dataset['04000550'];
    return (element?.Value.length === 1)
      ? this.dataset['04000550']?.Value[0]
      : this.dataset['04000550']?.Value;
  }

  get '04000550'(): Element {
    return this.dataset['04000550'];
  }

  // Original Attributes Sequence
  get OriginalAttributesSequence(): any {
    const element = this.dataset['04000561'];
    return (element?.Value.length === 1)
      ? this.dataset['04000561']?.Value[0]
      : this.dataset['04000561']?.Value;
  }

  get '04000561'(): Element {
    return this.dataset['04000561'];
  }

  // Attribute Modification DateTime
  get AttributeModificationDateTime(): any {
    const element = this.dataset['04000562'];
    return (element?.Value.length === 1)
      ? this.dataset['04000562']?.Value[0]
      : this.dataset['04000562']?.Value;
  }

  get '04000562'(): Element {
    return this.dataset['04000562'];
  }

  // Modifying System
  get ModifyingSystem(): any {
    const element = this.dataset['04000563'];
    return (element?.Value.length === 1)
      ? this.dataset['04000563']?.Value[0]
      : this.dataset['04000563']?.Value;
  }

  get '04000563'(): Element {
    return this.dataset['04000563'];
  }

  // Source of Previous Values
  get SourceOfPreviousValues(): any {
    const element = this.dataset['04000564'];
    return (element?.Value.length === 1)
      ? this.dataset['04000564']?.Value[0]
      : this.dataset['04000564']?.Value;
  }

  get '04000564'(): Element {
    return this.dataset['04000564'];
  }

  // Reason for the Attribute Modification
  get ReasonForTheAttributeModification(): any {
    const element = this.dataset['04000565'];
    return (element?.Value.length === 1)
      ? this.dataset['04000565']?.Value[0]
      : this.dataset['04000565']?.Value;
  }

  get '04000565'(): Element {
    return this.dataset['04000565'];
  }

  // Escape Triplet
  get EscapeTriplet(): any {
    const element = this.dataset['1000xxx0'];
    return (element?.Value.length === 1)
      ? this.dataset['1000xxx0']?.Value[0]
      : this.dataset['1000xxx0']?.Value;
  }

  get '1000xxx0'(): Element {
    return this.dataset['1000xxx0'];
  }

  // Run Length Triplet
  get RunLengthTriplet(): any {
    const element = this.dataset['1000xxx1'];
    return (element?.Value.length === 1)
      ? this.dataset['1000xxx1']?.Value[0]
      : this.dataset['1000xxx1']?.Value;
  }

  get '1000xxx1'(): Element {
    return this.dataset['1000xxx1'];
  }

  // Huffman Table Size
  get HuffmanTableSize(): any {
    const element = this.dataset['1000xxx2'];
    return (element?.Value.length === 1)
      ? this.dataset['1000xxx2']?.Value[0]
      : this.dataset['1000xxx2']?.Value;
  }

  get '1000xxx2'(): Element {
    return this.dataset['1000xxx2'];
  }

  // Huffman Table Triplet
  get HuffmanTableTriplet(): any {
    const element = this.dataset['1000xxx3'];
    return (element?.Value.length === 1)
      ? this.dataset['1000xxx3']?.Value[0]
      : this.dataset['1000xxx3']?.Value;
  }

  get '1000xxx3'(): Element {
    return this.dataset['1000xxx3'];
  }

  // Shift Table Size
  get ShiftTableSize(): any {
    const element = this.dataset['1000xxx4'];
    return (element?.Value.length === 1)
      ? this.dataset['1000xxx4']?.Value[0]
      : this.dataset['1000xxx4']?.Value;
  }

  get '1000xxx4'(): Element {
    return this.dataset['1000xxx4'];
  }

  // Shift Table Triplet
  get ShiftTableTriplet(): any {
    const element = this.dataset['1000xxx5'];
    return (element?.Value.length === 1)
      ? this.dataset['1000xxx5']?.Value[0]
      : this.dataset['1000xxx5']?.Value;
  }

  get '1000xxx5'(): Element {
    return this.dataset['1000xxx5'];
  }

  // Zonal Map
  get ZonalMap(): any {
    const element = this.dataset['1010xxxx'];
    return (element?.Value.length === 1)
      ? this.dataset['1010xxxx']?.Value[0]
      : this.dataset['1010xxxx']?.Value;
  }

  get '1010xxxx'(): Element {
    return this.dataset['1010xxxx'];
  }

  // Number of Copies
  get NumberOfCopies(): any {
    const element = this.dataset['20000010'];
    return (element?.Value.length === 1)
      ? this.dataset['20000010']?.Value[0]
      : this.dataset['20000010']?.Value;
  }

  get '20000010'(): Element {
    return this.dataset['20000010'];
  }

  // Printer Configuration Sequence
  get PrinterConfigurationSequence(): any {
    const element = this.dataset['2000001E'];
    return (element?.Value.length === 1)
      ? this.dataset['2000001E']?.Value[0]
      : this.dataset['2000001E']?.Value;
  }

  get '2000001E'(): Element {
    return this.dataset['2000001E'];
  }

  // Print Priority
  get PrintPriority(): any {
    const element = this.dataset['20000020'];
    return (element?.Value.length === 1)
      ? this.dataset['20000020']?.Value[0]
      : this.dataset['20000020']?.Value;
  }

  get '20000020'(): Element {
    return this.dataset['20000020'];
  }

  // Medium Type
  get MediumType(): any {
    const element = this.dataset['20000030'];
    return (element?.Value.length === 1)
      ? this.dataset['20000030']?.Value[0]
      : this.dataset['20000030']?.Value;
  }

  get '20000030'(): Element {
    return this.dataset['20000030'];
  }

  // Film Destination
  get FilmDestination(): any {
    const element = this.dataset['20000040'];
    return (element?.Value.length === 1)
      ? this.dataset['20000040']?.Value[0]
      : this.dataset['20000040']?.Value;
  }

  get '20000040'(): Element {
    return this.dataset['20000040'];
  }

  // Film Session Label
  get FilmSessionLabel(): any {
    const element = this.dataset['20000050'];
    return (element?.Value.length === 1)
      ? this.dataset['20000050']?.Value[0]
      : this.dataset['20000050']?.Value;
  }

  get '20000050'(): Element {
    return this.dataset['20000050'];
  }

  // Memory Allocation
  get MemoryAllocation(): any {
    const element = this.dataset['20000060'];
    return (element?.Value.length === 1)
      ? this.dataset['20000060']?.Value[0]
      : this.dataset['20000060']?.Value;
  }

  get '20000060'(): Element {
    return this.dataset['20000060'];
  }

  // Maximum Memory Allocation
  get MaximumMemoryAllocation(): any {
    const element = this.dataset['20000061'];
    return (element?.Value.length === 1)
      ? this.dataset['20000061']?.Value[0]
      : this.dataset['20000061']?.Value;
  }

  get '20000061'(): Element {
    return this.dataset['20000061'];
  }

  // Color Image Printing Flag
  get ColorImagePrintingFlag(): any {
    const element = this.dataset['20000062'];
    return (element?.Value.length === 1)
      ? this.dataset['20000062']?.Value[0]
      : this.dataset['20000062']?.Value;
  }

  get '20000062'(): Element {
    return this.dataset['20000062'];
  }

  // Collation Flag
  get CollationFlag(): any {
    const element = this.dataset['20000063'];
    return (element?.Value.length === 1)
      ? this.dataset['20000063']?.Value[0]
      : this.dataset['20000063']?.Value;
  }

  get '20000063'(): Element {
    return this.dataset['20000063'];
  }

  // Annotation Flag
  get AnnotationFlag(): any {
    const element = this.dataset['20000065'];
    return (element?.Value.length === 1)
      ? this.dataset['20000065']?.Value[0]
      : this.dataset['20000065']?.Value;
  }

  get '20000065'(): Element {
    return this.dataset['20000065'];
  }

  // Image Overlay Flag
  get ImageOverlayFlag(): any {
    const element = this.dataset['20000067'];
    return (element?.Value.length === 1)
      ? this.dataset['20000067']?.Value[0]
      : this.dataset['20000067']?.Value;
  }

  get '20000067'(): Element {
    return this.dataset['20000067'];
  }

  // Presentation LUT Flag
  get PresentationLUTFlag(): any {
    const element = this.dataset['20000069'];
    return (element?.Value.length === 1)
      ? this.dataset['20000069']?.Value[0]
      : this.dataset['20000069']?.Value;
  }

  get '20000069'(): Element {
    return this.dataset['20000069'];
  }

  // Image Box Presentation LUT Flag
  get ImageBoxPresentationLUTFlag(): any {
    const element = this.dataset['2000006A'];
    return (element?.Value.length === 1)
      ? this.dataset['2000006A']?.Value[0]
      : this.dataset['2000006A']?.Value;
  }

  get '2000006A'(): Element {
    return this.dataset['2000006A'];
  }

  // Memory Bit Depth
  get MemoryBitDepth(): any {
    const element = this.dataset['200000A0'];
    return (element?.Value.length === 1)
      ? this.dataset['200000A0']?.Value[0]
      : this.dataset['200000A0']?.Value;
  }

  get '200000A0'(): Element {
    return this.dataset['200000A0'];
  }

  // Printing Bit Depth
  get PrintingBitDepth(): any {
    const element = this.dataset['200000A1'];
    return (element?.Value.length === 1)
      ? this.dataset['200000A1']?.Value[0]
      : this.dataset['200000A1']?.Value;
  }

  get '200000A1'(): Element {
    return this.dataset['200000A1'];
  }

  // Media Installed Sequence
  get MediaInstalledSequence(): any {
    const element = this.dataset['200000A2'];
    return (element?.Value.length === 1)
      ? this.dataset['200000A2']?.Value[0]
      : this.dataset['200000A2']?.Value;
  }

  get '200000A2'(): Element {
    return this.dataset['200000A2'];
  }

  // Other Media Available Sequence
  get OtherMediaAvailableSequence(): any {
    const element = this.dataset['200000A4'];
    return (element?.Value.length === 1)
      ? this.dataset['200000A4']?.Value[0]
      : this.dataset['200000A4']?.Value;
  }

  get '200000A4'(): Element {
    return this.dataset['200000A4'];
  }

  // Supported Image Display Formats Sequence
  get SupportedImageDisplayFormatsSequence(): any {
    const element = this.dataset['200000A8'];
    return (element?.Value.length === 1)
      ? this.dataset['200000A8']?.Value[0]
      : this.dataset['200000A8']?.Value;
  }

  get '200000A8'(): Element {
    return this.dataset['200000A8'];
  }

  // Referenced Film Box Sequence
  get ReferencedFilmBoxSequence(): any {
    const element = this.dataset['20000500'];
    return (element?.Value.length === 1)
      ? this.dataset['20000500']?.Value[0]
      : this.dataset['20000500']?.Value;
  }

  get '20000500'(): Element {
    return this.dataset['20000500'];
  }

  // Referenced Stored Print Sequence
  get ReferencedStoredPrintSequence(): any {
    const element = this.dataset['20000510'];
    return (element?.Value.length === 1)
      ? this.dataset['20000510']?.Value[0]
      : this.dataset['20000510']?.Value;
  }

  get '20000510'(): Element {
    return this.dataset['20000510'];
  }

  // Image Display Format
  get ImageDisplayFormat(): any {
    const element = this.dataset['20100010'];
    return (element?.Value.length === 1)
      ? this.dataset['20100010']?.Value[0]
      : this.dataset['20100010']?.Value;
  }

  get '20100010'(): Element {
    return this.dataset['20100010'];
  }

  // Annotation Display Format ID
  get AnnotationDisplayFormatID(): any {
    const element = this.dataset['20100030'];
    return (element?.Value.length === 1)
      ? this.dataset['20100030']?.Value[0]
      : this.dataset['20100030']?.Value;
  }

  get '20100030'(): Element {
    return this.dataset['20100030'];
  }

  // Film Orientation
  get FilmOrientation(): any {
    const element = this.dataset['20100040'];
    return (element?.Value.length === 1)
      ? this.dataset['20100040']?.Value[0]
      : this.dataset['20100040']?.Value;
  }

  get '20100040'(): Element {
    return this.dataset['20100040'];
  }

  // Film Size ID
  get FilmSizeID(): any {
    const element = this.dataset['20100050'];
    return (element?.Value.length === 1)
      ? this.dataset['20100050']?.Value[0]
      : this.dataset['20100050']?.Value;
  }

  get '20100050'(): Element {
    return this.dataset['20100050'];
  }

  // Printer Resolution ID
  get PrinterResolutionID(): any {
    const element = this.dataset['20100052'];
    return (element?.Value.length === 1)
      ? this.dataset['20100052']?.Value[0]
      : this.dataset['20100052']?.Value;
  }

  get '20100052'(): Element {
    return this.dataset['20100052'];
  }

  // Default Printer Resolution ID
  get DefaultPrinterResolutionID(): any {
    const element = this.dataset['20100054'];
    return (element?.Value.length === 1)
      ? this.dataset['20100054']?.Value[0]
      : this.dataset['20100054']?.Value;
  }

  get '20100054'(): Element {
    return this.dataset['20100054'];
  }

  // Magnification Type
  get MagnificationType(): any {
    const element = this.dataset['20100060'];
    return (element?.Value.length === 1)
      ? this.dataset['20100060']?.Value[0]
      : this.dataset['20100060']?.Value;
  }

  get '20100060'(): Element {
    return this.dataset['20100060'];
  }

  // Smoothing Type
  get SmoothingType(): any {
    const element = this.dataset['20100080'];
    return (element?.Value.length === 1)
      ? this.dataset['20100080']?.Value[0]
      : this.dataset['20100080']?.Value;
  }

  get '20100080'(): Element {
    return this.dataset['20100080'];
  }

  // Default Magnification Type
  get DefaultMagnificationType(): any {
    const element = this.dataset['201000A6'];
    return (element?.Value.length === 1)
      ? this.dataset['201000A6']?.Value[0]
      : this.dataset['201000A6']?.Value;
  }

  get '201000A6'(): Element {
    return this.dataset['201000A6'];
  }

  // Other Magnification Types Available
  get OtherMagnificationTypesAvailable(): any {
    const element = this.dataset['201000A7'];
    return (element?.Value.length === 1)
      ? this.dataset['201000A7']?.Value[0]
      : this.dataset['201000A7']?.Value;
  }

  get '201000A7'(): Element {
    return this.dataset['201000A7'];
  }

  // Default Smoothing Type
  get DefaultSmoothingType(): any {
    const element = this.dataset['201000A8'];
    return (element?.Value.length === 1)
      ? this.dataset['201000A8']?.Value[0]
      : this.dataset['201000A8']?.Value;
  }

  get '201000A8'(): Element {
    return this.dataset['201000A8'];
  }

  // Other Smoothing Types Available
  get OtherSmoothingTypesAvailable(): any {
    const element = this.dataset['201000A9'];
    return (element?.Value.length === 1)
      ? this.dataset['201000A9']?.Value[0]
      : this.dataset['201000A9']?.Value;
  }

  get '201000A9'(): Element {
    return this.dataset['201000A9'];
  }

  // Border Density
  get BorderDensity(): any {
    const element = this.dataset['20100100'];
    return (element?.Value.length === 1)
      ? this.dataset['20100100']?.Value[0]
      : this.dataset['20100100']?.Value;
  }

  get '20100100'(): Element {
    return this.dataset['20100100'];
  }

  // Empty Image Density
  get EmptyImageDensity(): any {
    const element = this.dataset['20100110'];
    return (element?.Value.length === 1)
      ? this.dataset['20100110']?.Value[0]
      : this.dataset['20100110']?.Value;
  }

  get '20100110'(): Element {
    return this.dataset['20100110'];
  }

  // Min Density
  get MinDensity(): any {
    const element = this.dataset['20100120'];
    return (element?.Value.length === 1)
      ? this.dataset['20100120']?.Value[0]
      : this.dataset['20100120']?.Value;
  }

  get '20100120'(): Element {
    return this.dataset['20100120'];
  }

  // Max Density
  get MaxDensity(): any {
    const element = this.dataset['20100130'];
    return (element?.Value.length === 1)
      ? this.dataset['20100130']?.Value[0]
      : this.dataset['20100130']?.Value;
  }

  get '20100130'(): Element {
    return this.dataset['20100130'];
  }

  // Trim
  get Trim(): any {
    const element = this.dataset['20100140'];
    return (element?.Value.length === 1)
      ? this.dataset['20100140']?.Value[0]
      : this.dataset['20100140']?.Value;
  }

  get '20100140'(): Element {
    return this.dataset['20100140'];
  }

  // Configuration Information
  get ConfigurationInformation(): any {
    const element = this.dataset['20100150'];
    return (element?.Value.length === 1)
      ? this.dataset['20100150']?.Value[0]
      : this.dataset['20100150']?.Value;
  }

  get '20100150'(): Element {
    return this.dataset['20100150'];
  }

  // Configuration Information Description
  get ConfigurationInformationDescription(): any {
    const element = this.dataset['20100152'];
    return (element?.Value.length === 1)
      ? this.dataset['20100152']?.Value[0]
      : this.dataset['20100152']?.Value;
  }

  get '20100152'(): Element {
    return this.dataset['20100152'];
  }

  // Maximum Collated Films
  get MaximumCollatedFilms(): any {
    const element = this.dataset['20100154'];
    return (element?.Value.length === 1)
      ? this.dataset['20100154']?.Value[0]
      : this.dataset['20100154']?.Value;
  }

  get '20100154'(): Element {
    return this.dataset['20100154'];
  }

  // Illumination
  get Illumination(): any {
    const element = this.dataset['2010015E'];
    return (element?.Value.length === 1)
      ? this.dataset['2010015E']?.Value[0]
      : this.dataset['2010015E']?.Value;
  }

  get '2010015E'(): Element {
    return this.dataset['2010015E'];
  }

  // Reflected Ambient Light
  get ReflectedAmbientLight(): any {
    const element = this.dataset['20100160'];
    return (element?.Value.length === 1)
      ? this.dataset['20100160']?.Value[0]
      : this.dataset['20100160']?.Value;
  }

  get '20100160'(): Element {
    return this.dataset['20100160'];
  }

  // Printer Pixel Spacing
  get PrinterPixelSpacing(): any {
    const element = this.dataset['20100376'];
    return (element?.Value.length === 1)
      ? this.dataset['20100376']?.Value[0]
      : this.dataset['20100376']?.Value;
  }

  get '20100376'(): Element {
    return this.dataset['20100376'];
  }

  // Referenced Film Session Sequence
  get ReferencedFilmSessionSequence(): any {
    const element = this.dataset['20100500'];
    return (element?.Value.length === 1)
      ? this.dataset['20100500']?.Value[0]
      : this.dataset['20100500']?.Value;
  }

  get '20100500'(): Element {
    return this.dataset['20100500'];
  }

  // Referenced Image Box Sequence
  get ReferencedImageBoxSequence(): any {
    const element = this.dataset['20100510'];
    return (element?.Value.length === 1)
      ? this.dataset['20100510']?.Value[0]
      : this.dataset['20100510']?.Value;
  }

  get '20100510'(): Element {
    return this.dataset['20100510'];
  }

  // Referenced Basic Annotation Box Sequence
  get ReferencedBasicAnnotationBoxSequence(): any {
    const element = this.dataset['20100520'];
    return (element?.Value.length === 1)
      ? this.dataset['20100520']?.Value[0]
      : this.dataset['20100520']?.Value;
  }

  get '20100520'(): Element {
    return this.dataset['20100520'];
  }

  // Image Box Position
  get ImageBoxPosition(): any {
    const element = this.dataset['20200010'];
    return (element?.Value.length === 1)
      ? this.dataset['20200010']?.Value[0]
      : this.dataset['20200010']?.Value;
  }

  get '20200010'(): Element {
    return this.dataset['20200010'];
  }

  // Polarity
  get Polarity(): any {
    const element = this.dataset['20200020'];
    return (element?.Value.length === 1)
      ? this.dataset['20200020']?.Value[0]
      : this.dataset['20200020']?.Value;
  }

  get '20200020'(): Element {
    return this.dataset['20200020'];
  }

  // Requested Image Size
  get RequestedImageSize(): any {
    const element = this.dataset['20200030'];
    return (element?.Value.length === 1)
      ? this.dataset['20200030']?.Value[0]
      : this.dataset['20200030']?.Value;
  }

  get '20200030'(): Element {
    return this.dataset['20200030'];
  }

  // Requested Decimate/Crop Behavior
  get RequestedDecimateCropBehavior(): any {
    const element = this.dataset['20200040'];
    return (element?.Value.length === 1)
      ? this.dataset['20200040']?.Value[0]
      : this.dataset['20200040']?.Value;
  }

  get '20200040'(): Element {
    return this.dataset['20200040'];
  }

  // Requested Resolution ID
  get RequestedResolutionID(): any {
    const element = this.dataset['20200050'];
    return (element?.Value.length === 1)
      ? this.dataset['20200050']?.Value[0]
      : this.dataset['20200050']?.Value;
  }

  get '20200050'(): Element {
    return this.dataset['20200050'];
  }

  // Requested Image Size Flag
  get RequestedImageSizeFlag(): any {
    const element = this.dataset['202000A0'];
    return (element?.Value.length === 1)
      ? this.dataset['202000A0']?.Value[0]
      : this.dataset['202000A0']?.Value;
  }

  get '202000A0'(): Element {
    return this.dataset['202000A0'];
  }

  // Decimate/Crop Result
  get DecimateCropResult(): any {
    const element = this.dataset['202000A2'];
    return (element?.Value.length === 1)
      ? this.dataset['202000A2']?.Value[0]
      : this.dataset['202000A2']?.Value;
  }

  get '202000A2'(): Element {
    return this.dataset['202000A2'];
  }

  // Basic Grayscale Image Sequence
  get BasicGrayscaleImageSequence(): any {
    const element = this.dataset['20200110'];
    return (element?.Value.length === 1)
      ? this.dataset['20200110']?.Value[0]
      : this.dataset['20200110']?.Value;
  }

  get '20200110'(): Element {
    return this.dataset['20200110'];
  }

  // Basic Color Image Sequence
  get BasicColorImageSequence(): any {
    const element = this.dataset['20200111'];
    return (element?.Value.length === 1)
      ? this.dataset['20200111']?.Value[0]
      : this.dataset['20200111']?.Value;
  }

  get '20200111'(): Element {
    return this.dataset['20200111'];
  }

  // Referenced Image Overlay Box Sequence
  get ReferencedImageOverlayBoxSequence(): any {
    const element = this.dataset['20200130'];
    return (element?.Value.length === 1)
      ? this.dataset['20200130']?.Value[0]
      : this.dataset['20200130']?.Value;
  }

  get '20200130'(): Element {
    return this.dataset['20200130'];
  }

  // Referenced VOI LUT Box Sequence
  get ReferencedVOILUTBoxSequence(): any {
    const element = this.dataset['20200140'];
    return (element?.Value.length === 1)
      ? this.dataset['20200140']?.Value[0]
      : this.dataset['20200140']?.Value;
  }

  get '20200140'(): Element {
    return this.dataset['20200140'];
  }

  // Annotation Position
  get AnnotationPosition(): any {
    const element = this.dataset['20300010'];
    return (element?.Value.length === 1)
      ? this.dataset['20300010']?.Value[0]
      : this.dataset['20300010']?.Value;
  }

  get '20300010'(): Element {
    return this.dataset['20300010'];
  }

  // Text String
  get TextString(): any {
    const element = this.dataset['20300020'];
    return (element?.Value.length === 1)
      ? this.dataset['20300020']?.Value[0]
      : this.dataset['20300020']?.Value;
  }

  get '20300020'(): Element {
    return this.dataset['20300020'];
  }

  // Referenced Overlay Plane Sequence
  get ReferencedOverlayPlaneSequence(): any {
    const element = this.dataset['20400010'];
    return (element?.Value.length === 1)
      ? this.dataset['20400010']?.Value[0]
      : this.dataset['20400010']?.Value;
  }

  get '20400010'(): Element {
    return this.dataset['20400010'];
  }

  // Referenced Overlay Plane Groups
  get ReferencedOverlayPlaneGroups(): any {
    const element = this.dataset['20400011'];
    return (element?.Value.length === 1)
      ? this.dataset['20400011']?.Value[0]
      : this.dataset['20400011']?.Value;
  }

  get '20400011'(): Element {
    return this.dataset['20400011'];
  }

  // Overlay Pixel Data Sequence
  get OverlayPixelDataSequence(): any {
    const element = this.dataset['20400020'];
    return (element?.Value.length === 1)
      ? this.dataset['20400020']?.Value[0]
      : this.dataset['20400020']?.Value;
  }

  get '20400020'(): Element {
    return this.dataset['20400020'];
  }

  // Overlay Magnification Type
  get OverlayMagnificationType(): any {
    const element = this.dataset['20400060'];
    return (element?.Value.length === 1)
      ? this.dataset['20400060']?.Value[0]
      : this.dataset['20400060']?.Value;
  }

  get '20400060'(): Element {
    return this.dataset['20400060'];
  }

  // Overlay Smoothing Type
  get OverlaySmoothingType(): any {
    const element = this.dataset['20400070'];
    return (element?.Value.length === 1)
      ? this.dataset['20400070']?.Value[0]
      : this.dataset['20400070']?.Value;
  }

  get '20400070'(): Element {
    return this.dataset['20400070'];
  }

  // Overlay or Image Magnification
  get OverlayOrImageMagnification(): any {
    const element = this.dataset['20400072'];
    return (element?.Value.length === 1)
      ? this.dataset['20400072']?.Value[0]
      : this.dataset['20400072']?.Value;
  }

  get '20400072'(): Element {
    return this.dataset['20400072'];
  }

  // Magnify to Number of Columns
  get MagnifyToNumberOfColumns(): any {
    const element = this.dataset['20400074'];
    return (element?.Value.length === 1)
      ? this.dataset['20400074']?.Value[0]
      : this.dataset['20400074']?.Value;
  }

  get '20400074'(): Element {
    return this.dataset['20400074'];
  }

  // Overlay Foreground Density
  get OverlayForegroundDensity(): any {
    const element = this.dataset['20400080'];
    return (element?.Value.length === 1)
      ? this.dataset['20400080']?.Value[0]
      : this.dataset['20400080']?.Value;
  }

  get '20400080'(): Element {
    return this.dataset['20400080'];
  }

  // Overlay Background Density
  get OverlayBackgroundDensity(): any {
    const element = this.dataset['20400082'];
    return (element?.Value.length === 1)
      ? this.dataset['20400082']?.Value[0]
      : this.dataset['20400082']?.Value;
  }

  get '20400082'(): Element {
    return this.dataset['20400082'];
  }

  // Overlay Mode
  get OverlayMode(): any {
    const element = this.dataset['20400090'];
    return (element?.Value.length === 1)
      ? this.dataset['20400090']?.Value[0]
      : this.dataset['20400090']?.Value;
  }

  get '20400090'(): Element {
    return this.dataset['20400090'];
  }

  // Threshold Density
  get ThresholdDensity(): any {
    const element = this.dataset['20400100'];
    return (element?.Value.length === 1)
      ? this.dataset['20400100']?.Value[0]
      : this.dataset['20400100']?.Value;
  }

  get '20400100'(): Element {
    return this.dataset['20400100'];
  }

  // Referenced Image Box Sequence (Retired)
  get ReferencedImageBoxSequenceRetired(): any {
    const element = this.dataset['20400500'];
    return (element?.Value.length === 1)
      ? this.dataset['20400500']?.Value[0]
      : this.dataset['20400500']?.Value;
  }

  get '20400500'(): Element {
    return this.dataset['20400500'];
  }

  // Presentation LUT Sequence
  get PresentationLUTSequence(): any {
    const element = this.dataset['20500010'];
    return (element?.Value.length === 1)
      ? this.dataset['20500010']?.Value[0]
      : this.dataset['20500010']?.Value;
  }

  get '20500010'(): Element {
    return this.dataset['20500010'];
  }

  // Presentation LUT Shape
  get PresentationLUTShape(): any {
    const element = this.dataset['20500020'];
    return (element?.Value.length === 1)
      ? this.dataset['20500020']?.Value[0]
      : this.dataset['20500020']?.Value;
  }

  get '20500020'(): Element {
    return this.dataset['20500020'];
  }

  // Referenced Presentation LUT Sequence
  get ReferencedPresentationLUTSequence(): any {
    const element = this.dataset['20500500'];
    return (element?.Value.length === 1)
      ? this.dataset['20500500']?.Value[0]
      : this.dataset['20500500']?.Value;
  }

  get '20500500'(): Element {
    return this.dataset['20500500'];
  }

  // Print Job ID
  get PrintJobID(): any {
    const element = this.dataset['21000010'];
    return (element?.Value.length === 1)
      ? this.dataset['21000010']?.Value[0]
      : this.dataset['21000010']?.Value;
  }

  get '21000010'(): Element {
    return this.dataset['21000010'];
  }

  // Execution Status
  get ExecutionStatus(): any {
    const element = this.dataset['21000020'];
    return (element?.Value.length === 1)
      ? this.dataset['21000020']?.Value[0]
      : this.dataset['21000020']?.Value;
  }

  get '21000020'(): Element {
    return this.dataset['21000020'];
  }

  // Execution Status Info
  get ExecutionStatusInfo(): any {
    const element = this.dataset['21000030'];
    return (element?.Value.length === 1)
      ? this.dataset['21000030']?.Value[0]
      : this.dataset['21000030']?.Value;
  }

  get '21000030'(): Element {
    return this.dataset['21000030'];
  }

  // Creation Date
  get CreationDate(): any {
    const element = this.dataset['21000040'];
    return (element?.Value.length === 1)
      ? this.dataset['21000040']?.Value[0]
      : this.dataset['21000040']?.Value;
  }

  get '21000040'(): Element {
    return this.dataset['21000040'];
  }

  // Creation Time
  get CreationTime(): any {
    const element = this.dataset['21000050'];
    return (element?.Value.length === 1)
      ? this.dataset['21000050']?.Value[0]
      : this.dataset['21000050']?.Value;
  }

  get '21000050'(): Element {
    return this.dataset['21000050'];
  }

  // Originator
  get Originator(): any {
    const element = this.dataset['21000070'];
    return (element?.Value.length === 1)
      ? this.dataset['21000070']?.Value[0]
      : this.dataset['21000070']?.Value;
  }

  get '21000070'(): Element {
    return this.dataset['21000070'];
  }

  // Destination AE
  get DestinationAE(): any {
    const element = this.dataset['21000140'];
    return (element?.Value.length === 1)
      ? this.dataset['21000140']?.Value[0]
      : this.dataset['21000140']?.Value;
  }

  get '21000140'(): Element {
    return this.dataset['21000140'];
  }

  // Owner ID
  get OwnerID(): any {
    const element = this.dataset['21000160'];
    return (element?.Value.length === 1)
      ? this.dataset['21000160']?.Value[0]
      : this.dataset['21000160']?.Value;
  }

  get '21000160'(): Element {
    return this.dataset['21000160'];
  }

  // Number of Films
  get NumberOfFilms(): any {
    const element = this.dataset['21000170'];
    return (element?.Value.length === 1)
      ? this.dataset['21000170']?.Value[0]
      : this.dataset['21000170']?.Value;
  }

  get '21000170'(): Element {
    return this.dataset['21000170'];
  }

  // Referenced Print Job Sequence (Pull Stored Print)
  get ReferencedPrintJobSequencePullStoredPrint(): any {
    const element = this.dataset['21000500'];
    return (element?.Value.length === 1)
      ? this.dataset['21000500']?.Value[0]
      : this.dataset['21000500']?.Value;
  }

  get '21000500'(): Element {
    return this.dataset['21000500'];
  }

  // Printer Status
  get PrinterStatus(): any {
    const element = this.dataset['21100010'];
    return (element?.Value.length === 1)
      ? this.dataset['21100010']?.Value[0]
      : this.dataset['21100010']?.Value;
  }

  get '21100010'(): Element {
    return this.dataset['21100010'];
  }

  // Printer Status Info
  get PrinterStatusInfo(): any {
    const element = this.dataset['21100020'];
    return (element?.Value.length === 1)
      ? this.dataset['21100020']?.Value[0]
      : this.dataset['21100020']?.Value;
  }

  get '21100020'(): Element {
    return this.dataset['21100020'];
  }

  // Printer Name
  get PrinterName(): any {
    const element = this.dataset['21100030'];
    return (element?.Value.length === 1)
      ? this.dataset['21100030']?.Value[0]
      : this.dataset['21100030']?.Value;
  }

  get '21100030'(): Element {
    return this.dataset['21100030'];
  }

  // Print Queue ID
  get PrintQueueID(): any {
    const element = this.dataset['21100099'];
    return (element?.Value.length === 1)
      ? this.dataset['21100099']?.Value[0]
      : this.dataset['21100099']?.Value;
  }

  get '21100099'(): Element {
    return this.dataset['21100099'];
  }

  // Queue Status
  get QueueStatus(): any {
    const element = this.dataset['21200010'];
    return (element?.Value.length === 1)
      ? this.dataset['21200010']?.Value[0]
      : this.dataset['21200010']?.Value;
  }

  get '21200010'(): Element {
    return this.dataset['21200010'];
  }

  // Print Job Description Sequence
  get PrintJobDescriptionSequence(): any {
    const element = this.dataset['21200050'];
    return (element?.Value.length === 1)
      ? this.dataset['21200050']?.Value[0]
      : this.dataset['21200050']?.Value;
  }

  get '21200050'(): Element {
    return this.dataset['21200050'];
  }

  // Referenced Print Job Sequence
  get ReferencedPrintJobSequence(): any {
    const element = this.dataset['21200070'];
    return (element?.Value.length === 1)
      ? this.dataset['21200070']?.Value[0]
      : this.dataset['21200070']?.Value;
  }

  get '21200070'(): Element {
    return this.dataset['21200070'];
  }

  // Print Management Capabilities Sequence
  get PrintManagementCapabilitiesSequence(): any {
    const element = this.dataset['21300010'];
    return (element?.Value.length === 1)
      ? this.dataset['21300010']?.Value[0]
      : this.dataset['21300010']?.Value;
  }

  get '21300010'(): Element {
    return this.dataset['21300010'];
  }

  // Printer Characteristics Sequence
  get PrinterCharacteristicsSequence(): any {
    const element = this.dataset['21300015'];
    return (element?.Value.length === 1)
      ? this.dataset['21300015']?.Value[0]
      : this.dataset['21300015']?.Value;
  }

  get '21300015'(): Element {
    return this.dataset['21300015'];
  }

  // Film Box Content Sequence
  get FilmBoxContentSequence(): any {
    const element = this.dataset['21300030'];
    return (element?.Value.length === 1)
      ? this.dataset['21300030']?.Value[0]
      : this.dataset['21300030']?.Value;
  }

  get '21300030'(): Element {
    return this.dataset['21300030'];
  }

  // Image Box Content Sequence
  get ImageBoxContentSequence(): any {
    const element = this.dataset['21300040'];
    return (element?.Value.length === 1)
      ? this.dataset['21300040']?.Value[0]
      : this.dataset['21300040']?.Value;
  }

  get '21300040'(): Element {
    return this.dataset['21300040'];
  }

  // Annotation Content Sequence
  get AnnotationContentSequence(): any {
    const element = this.dataset['21300050'];
    return (element?.Value.length === 1)
      ? this.dataset['21300050']?.Value[0]
      : this.dataset['21300050']?.Value;
  }

  get '21300050'(): Element {
    return this.dataset['21300050'];
  }

  // Image Overlay Box Content Sequence
  get ImageOverlayBoxContentSequence(): any {
    const element = this.dataset['21300060'];
    return (element?.Value.length === 1)
      ? this.dataset['21300060']?.Value[0]
      : this.dataset['21300060']?.Value;
  }

  get '21300060'(): Element {
    return this.dataset['21300060'];
  }

  // Presentation LUT Content Sequence
  get PresentationLUTContentSequence(): any {
    const element = this.dataset['21300080'];
    return (element?.Value.length === 1)
      ? this.dataset['21300080']?.Value[0]
      : this.dataset['21300080']?.Value;
  }

  get '21300080'(): Element {
    return this.dataset['21300080'];
  }

  // Proposed Study Sequence
  get ProposedStudySequence(): any {
    const element = this.dataset['213000A0'];
    return (element?.Value.length === 1)
      ? this.dataset['213000A0']?.Value[0]
      : this.dataset['213000A0']?.Value;
  }

  get '213000A0'(): Element {
    return this.dataset['213000A0'];
  }

  // Original Image Sequence
  get OriginalImageSequence(): any {
    const element = this.dataset['213000C0'];
    return (element?.Value.length === 1)
      ? this.dataset['213000C0']?.Value[0]
      : this.dataset['213000C0']?.Value;
  }

  get '213000C0'(): Element {
    return this.dataset['213000C0'];
  }

  // Label Using Information Extracted From Instances
  get LabelUsingInformationExtractedFromInstances(): any {
    const element = this.dataset['22000001'];
    return (element?.Value.length === 1)
      ? this.dataset['22000001']?.Value[0]
      : this.dataset['22000001']?.Value;
  }

  get '22000001'(): Element {
    return this.dataset['22000001'];
  }

  // Label Text
  get LabelText(): any {
    const element = this.dataset['22000002'];
    return (element?.Value.length === 1)
      ? this.dataset['22000002']?.Value[0]
      : this.dataset['22000002']?.Value;
  }

  get '22000002'(): Element {
    return this.dataset['22000002'];
  }

  // Label Style Selection
  get LabelStyleSelection(): any {
    const element = this.dataset['22000003'];
    return (element?.Value.length === 1)
      ? this.dataset['22000003']?.Value[0]
      : this.dataset['22000003']?.Value;
  }

  get '22000003'(): Element {
    return this.dataset['22000003'];
  }

  // Media Disposition
  get MediaDisposition(): any {
    const element = this.dataset['22000004'];
    return (element?.Value.length === 1)
      ? this.dataset['22000004']?.Value[0]
      : this.dataset['22000004']?.Value;
  }

  get '22000004'(): Element {
    return this.dataset['22000004'];
  }

  // Barcode Value
  get BarcodeValue(): any {
    const element = this.dataset['22000005'];
    return (element?.Value.length === 1)
      ? this.dataset['22000005']?.Value[0]
      : this.dataset['22000005']?.Value;
  }

  get '22000005'(): Element {
    return this.dataset['22000005'];
  }

  // Barcode Symbology
  get BarcodeSymbology(): any {
    const element = this.dataset['22000006'];
    return (element?.Value.length === 1)
      ? this.dataset['22000006']?.Value[0]
      : this.dataset['22000006']?.Value;
  }

  get '22000006'(): Element {
    return this.dataset['22000006'];
  }

  // Allow Media Splitting
  get AllowMediaSplitting(): any {
    const element = this.dataset['22000007'];
    return (element?.Value.length === 1)
      ? this.dataset['22000007']?.Value[0]
      : this.dataset['22000007']?.Value;
  }

  get '22000007'(): Element {
    return this.dataset['22000007'];
  }

  // Include Non-DICOM Objects
  get IncludeNonDICOMObjects(): any {
    const element = this.dataset['22000008'];
    return (element?.Value.length === 1)
      ? this.dataset['22000008']?.Value[0]
      : this.dataset['22000008']?.Value;
  }

  get '22000008'(): Element {
    return this.dataset['22000008'];
  }

  // Include Display Application
  get IncludeDisplayApplication(): any {
    const element = this.dataset['22000009'];
    return (element?.Value.length === 1)
      ? this.dataset['22000009']?.Value[0]
      : this.dataset['22000009']?.Value;
  }

  get '22000009'(): Element {
    return this.dataset['22000009'];
  }

  // Preserve Composite Instances After Media Creation
  get PreserveCompositeInstancesAfterMediaCreation(): any {
    const element = this.dataset['2200000A'];
    return (element?.Value.length === 1)
      ? this.dataset['2200000A']?.Value[0]
      : this.dataset['2200000A']?.Value;
  }

  get '2200000A'(): Element {
    return this.dataset['2200000A'];
  }

  // Total Number of Pieces of Media Created
  get TotalNumberOfPiecesOfMediaCreated(): any {
    const element = this.dataset['2200000B'];
    return (element?.Value.length === 1)
      ? this.dataset['2200000B']?.Value[0]
      : this.dataset['2200000B']?.Value;
  }

  get '2200000B'(): Element {
    return this.dataset['2200000B'];
  }

  // Requested Media Application Profile
  get RequestedMediaApplicationProfile(): any {
    const element = this.dataset['2200000C'];
    return (element?.Value.length === 1)
      ? this.dataset['2200000C']?.Value[0]
      : this.dataset['2200000C']?.Value;
  }

  get '2200000C'(): Element {
    return this.dataset['2200000C'];
  }

  // Referenced Storage Media Sequence
  get ReferencedStorageMediaSequence(): any {
    const element = this.dataset['2200000D'];
    return (element?.Value.length === 1)
      ? this.dataset['2200000D']?.Value[0]
      : this.dataset['2200000D']?.Value;
  }

  get '2200000D'(): Element {
    return this.dataset['2200000D'];
  }

  // Failure Attributes
  get FailureAttributes(): any {
    const element = this.dataset['2200000E'];
    return (element?.Value.length === 1)
      ? this.dataset['2200000E']?.Value[0]
      : this.dataset['2200000E']?.Value;
  }

  get '2200000E'(): Element {
    return this.dataset['2200000E'];
  }

  // Allow Lossy Compression
  get AllowLossyCompression(): any {
    const element = this.dataset['2200000F'];
    return (element?.Value.length === 1)
      ? this.dataset['2200000F']?.Value[0]
      : this.dataset['2200000F']?.Value;
  }

  get '2200000F'(): Element {
    return this.dataset['2200000F'];
  }

  // Request Priority
  get RequestPriority(): any {
    const element = this.dataset['22000020'];
    return (element?.Value.length === 1)
      ? this.dataset['22000020']?.Value[0]
      : this.dataset['22000020']?.Value;
  }

  get '22000020'(): Element {
    return this.dataset['22000020'];
  }

  // RT Image Label
  get RTImageLabel(): any {
    const element = this.dataset['30020002'];
    return (element?.Value.length === 1)
      ? this.dataset['30020002']?.Value[0]
      : this.dataset['30020002']?.Value;
  }

  get '30020002'(): Element {
    return this.dataset['30020002'];
  }

  // RT Image Name
  get RTImageName(): any {
    const element = this.dataset['30020003'];
    return (element?.Value.length === 1)
      ? this.dataset['30020003']?.Value[0]
      : this.dataset['30020003']?.Value;
  }

  get '30020003'(): Element {
    return this.dataset['30020003'];
  }

  // RT Image Description
  get RTImageDescription(): any {
    const element = this.dataset['30020004'];
    return (element?.Value.length === 1)
      ? this.dataset['30020004']?.Value[0]
      : this.dataset['30020004']?.Value;
  }

  get '30020004'(): Element {
    return this.dataset['30020004'];
  }

  // Reported Values Origin
  get ReportedValuesOrigin(): any {
    const element = this.dataset['3002000A'];
    return (element?.Value.length === 1)
      ? this.dataset['3002000A']?.Value[0]
      : this.dataset['3002000A']?.Value;
  }

  get '3002000A'(): Element {
    return this.dataset['3002000A'];
  }

  // RT Image Plane
  get RTImagePlane(): any {
    const element = this.dataset['3002000C'];
    return (element?.Value.length === 1)
      ? this.dataset['3002000C']?.Value[0]
      : this.dataset['3002000C']?.Value;
  }

  get '3002000C'(): Element {
    return this.dataset['3002000C'];
  }

  // X-Ray Image Receptor Translation
  get XRayImageReceptorTranslation(): any {
    const element = this.dataset['3002000D'];
    return (element?.Value.length === 1)
      ? this.dataset['3002000D']?.Value[0]
      : this.dataset['3002000D']?.Value;
  }

  get '3002000D'(): Element {
    return this.dataset['3002000D'];
  }

  // X-Ray Image Receptor Angle
  get XRayImageReceptorAngle(): any {
    const element = this.dataset['3002000E'];
    return (element?.Value.length === 1)
      ? this.dataset['3002000E']?.Value[0]
      : this.dataset['3002000E']?.Value;
  }

  get '3002000E'(): Element {
    return this.dataset['3002000E'];
  }

  // RT Image Orientation
  get RTImageOrientation(): any {
    const element = this.dataset['30020010'];
    return (element?.Value.length === 1)
      ? this.dataset['30020010']?.Value[0]
      : this.dataset['30020010']?.Value;
  }

  get '30020010'(): Element {
    return this.dataset['30020010'];
  }

  // Image Plane Pixel Spacing
  get ImagePlanePixelSpacing(): any {
    const element = this.dataset['30020011'];
    return (element?.Value.length === 1)
      ? this.dataset['30020011']?.Value[0]
      : this.dataset['30020011']?.Value;
  }

  get '30020011'(): Element {
    return this.dataset['30020011'];
  }

  // RT Image Position
  get RTImagePosition(): any {
    const element = this.dataset['30020012'];
    return (element?.Value.length === 1)
      ? this.dataset['30020012']?.Value[0]
      : this.dataset['30020012']?.Value;
  }

  get '30020012'(): Element {
    return this.dataset['30020012'];
  }

  // Radiation Machine Name
  get RadiationMachineName(): any {
    const element = this.dataset['30020020'];
    return (element?.Value.length === 1)
      ? this.dataset['30020020']?.Value[0]
      : this.dataset['30020020']?.Value;
  }

  get '30020020'(): Element {
    return this.dataset['30020020'];
  }

  // Radiation Machine SAD
  get RadiationMachineSAD(): any {
    const element = this.dataset['30020022'];
    return (element?.Value.length === 1)
      ? this.dataset['30020022']?.Value[0]
      : this.dataset['30020022']?.Value;
  }

  get '30020022'(): Element {
    return this.dataset['30020022'];
  }

  // Radiation Machine SSD
  get RadiationMachineSSD(): any {
    const element = this.dataset['30020024'];
    return (element?.Value.length === 1)
      ? this.dataset['30020024']?.Value[0]
      : this.dataset['30020024']?.Value;
  }

  get '30020024'(): Element {
    return this.dataset['30020024'];
  }

  // RT Image SID
  get RTImageSID(): any {
    const element = this.dataset['30020026'];
    return (element?.Value.length === 1)
      ? this.dataset['30020026']?.Value[0]
      : this.dataset['30020026']?.Value;
  }

  get '30020026'(): Element {
    return this.dataset['30020026'];
  }

  // Source to Reference Object Distance
  get SourceToReferenceObjectDistance(): any {
    const element = this.dataset['30020028'];
    return (element?.Value.length === 1)
      ? this.dataset['30020028']?.Value[0]
      : this.dataset['30020028']?.Value;
  }

  get '30020028'(): Element {
    return this.dataset['30020028'];
  }

  // Fraction Number
  get FractionNumber(): any {
    const element = this.dataset['30020029'];
    return (element?.Value.length === 1)
      ? this.dataset['30020029']?.Value[0]
      : this.dataset['30020029']?.Value;
  }

  get '30020029'(): Element {
    return this.dataset['30020029'];
  }

  // Exposure Sequence
  get ExposureSequence(): any {
    const element = this.dataset['30020030'];
    return (element?.Value.length === 1)
      ? this.dataset['30020030']?.Value[0]
      : this.dataset['30020030']?.Value;
  }

  get '30020030'(): Element {
    return this.dataset['30020030'];
  }

  // Meterset Exposure
  get MetersetExposure(): any {
    const element = this.dataset['30020032'];
    return (element?.Value.length === 1)
      ? this.dataset['30020032']?.Value[0]
      : this.dataset['30020032']?.Value;
  }

  get '30020032'(): Element {
    return this.dataset['30020032'];
  }

  // Diaphragm Position
  get DiaphragmPosition(): any {
    const element = this.dataset['30020034'];
    return (element?.Value.length === 1)
      ? this.dataset['30020034']?.Value[0]
      : this.dataset['30020034']?.Value;
  }

  get '30020034'(): Element {
    return this.dataset['30020034'];
  }

  // Fluence Map Sequence
  get FluenceMapSequence(): any {
    const element = this.dataset['30020040'];
    return (element?.Value.length === 1)
      ? this.dataset['30020040']?.Value[0]
      : this.dataset['30020040']?.Value;
  }

  get '30020040'(): Element {
    return this.dataset['30020040'];
  }

  // Fluence Data Source
  get FluenceDataSource(): any {
    const element = this.dataset['30020041'];
    return (element?.Value.length === 1)
      ? this.dataset['30020041']?.Value[0]
      : this.dataset['30020041']?.Value;
  }

  get '30020041'(): Element {
    return this.dataset['30020041'];
  }

  // Fluence Data Scale
  get FluenceDataScale(): any {
    const element = this.dataset['30020042'];
    return (element?.Value.length === 1)
      ? this.dataset['30020042']?.Value[0]
      : this.dataset['30020042']?.Value;
  }

  get '30020042'(): Element {
    return this.dataset['30020042'];
  }

  // Primary Fluence Mode Sequence
  get PrimaryFluenceModeSequence(): any {
    const element = this.dataset['30020050'];
    return (element?.Value.length === 1)
      ? this.dataset['30020050']?.Value[0]
      : this.dataset['30020050']?.Value;
  }

  get '30020050'(): Element {
    return this.dataset['30020050'];
  }

  // Fluence Mode
  get FluenceMode(): any {
    const element = this.dataset['30020051'];
    return (element?.Value.length === 1)
      ? this.dataset['30020051']?.Value[0]
      : this.dataset['30020051']?.Value;
  }

  get '30020051'(): Element {
    return this.dataset['30020051'];
  }

  // Fluence Mode ID
  get FluenceModeID(): any {
    const element = this.dataset['30020052'];
    return (element?.Value.length === 1)
      ? this.dataset['30020052']?.Value[0]
      : this.dataset['30020052']?.Value;
  }

  get '30020052'(): Element {
    return this.dataset['30020052'];
  }

  // DVH Type
  get DVHType(): any {
    const element = this.dataset['30040001'];
    return (element?.Value.length === 1)
      ? this.dataset['30040001']?.Value[0]
      : this.dataset['30040001']?.Value;
  }

  get '30040001'(): Element {
    return this.dataset['30040001'];
  }

  // Dose Units
  get DoseUnits(): any {
    const element = this.dataset['30040002'];
    return (element?.Value.length === 1)
      ? this.dataset['30040002']?.Value[0]
      : this.dataset['30040002']?.Value;
  }

  get '30040002'(): Element {
    return this.dataset['30040002'];
  }

  // Dose Type
  get DoseType(): any {
    const element = this.dataset['30040004'];
    return (element?.Value.length === 1)
      ? this.dataset['30040004']?.Value[0]
      : this.dataset['30040004']?.Value;
  }

  get '30040004'(): Element {
    return this.dataset['30040004'];
  }

  // Spatial Transform of Dose
  get SpatialTransformOfDose(): any {
    const element = this.dataset['30040005'];
    return (element?.Value.length === 1)
      ? this.dataset['30040005']?.Value[0]
      : this.dataset['30040005']?.Value;
  }

  get '30040005'(): Element {
    return this.dataset['30040005'];
  }

  // Dose Comment
  get DoseComment(): any {
    const element = this.dataset['30040006'];
    return (element?.Value.length === 1)
      ? this.dataset['30040006']?.Value[0]
      : this.dataset['30040006']?.Value;
  }

  get '30040006'(): Element {
    return this.dataset['30040006'];
  }

  // Normalization Point
  get NormalizationPoint(): any {
    const element = this.dataset['30040008'];
    return (element?.Value.length === 1)
      ? this.dataset['30040008']?.Value[0]
      : this.dataset['30040008']?.Value;
  }

  get '30040008'(): Element {
    return this.dataset['30040008'];
  }

  // Dose Summation Type
  get DoseSummationType(): any {
    const element = this.dataset['3004000A'];
    return (element?.Value.length === 1)
      ? this.dataset['3004000A']?.Value[0]
      : this.dataset['3004000A']?.Value;
  }

  get '3004000A'(): Element {
    return this.dataset['3004000A'];
  }

  // Grid Frame Offset Vector
  get GridFrameOffsetVector(): any {
    const element = this.dataset['3004000C'];
    return (element?.Value.length === 1)
      ? this.dataset['3004000C']?.Value[0]
      : this.dataset['3004000C']?.Value;
  }

  get '3004000C'(): Element {
    return this.dataset['3004000C'];
  }

  // Dose Grid Scaling
  get DoseGridScaling(): any {
    const element = this.dataset['3004000E'];
    return (element?.Value.length === 1)
      ? this.dataset['3004000E']?.Value[0]
      : this.dataset['3004000E']?.Value;
  }

  get '3004000E'(): Element {
    return this.dataset['3004000E'];
  }

  // RT Dose ROI Sequence
  get RTDoseROISequence(): any {
    const element = this.dataset['30040010'];
    return (element?.Value.length === 1)
      ? this.dataset['30040010']?.Value[0]
      : this.dataset['30040010']?.Value;
  }

  get '30040010'(): Element {
    return this.dataset['30040010'];
  }

  // Dose Value
  get DoseValue(): any {
    const element = this.dataset['30040012'];
    return (element?.Value.length === 1)
      ? this.dataset['30040012']?.Value[0]
      : this.dataset['30040012']?.Value;
  }

  get '30040012'(): Element {
    return this.dataset['30040012'];
  }

  // Tissue Heterogeneity Correction
  get TissueHeterogeneityCorrection(): any {
    const element = this.dataset['30040014'];
    return (element?.Value.length === 1)
      ? this.dataset['30040014']?.Value[0]
      : this.dataset['30040014']?.Value;
  }

  get '30040014'(): Element {
    return this.dataset['30040014'];
  }

  // DVH Normalization Point
  get DVHNormalizationPoint(): any {
    const element = this.dataset['30040040'];
    return (element?.Value.length === 1)
      ? this.dataset['30040040']?.Value[0]
      : this.dataset['30040040']?.Value;
  }

  get '30040040'(): Element {
    return this.dataset['30040040'];
  }

  // DVH Normalization Dose Value
  get DVHNormalizationDoseValue(): any {
    const element = this.dataset['30040042'];
    return (element?.Value.length === 1)
      ? this.dataset['30040042']?.Value[0]
      : this.dataset['30040042']?.Value;
  }

  get '30040042'(): Element {
    return this.dataset['30040042'];
  }

  // DVH Sequence
  get DVHSequence(): any {
    const element = this.dataset['30040050'];
    return (element?.Value.length === 1)
      ? this.dataset['30040050']?.Value[0]
      : this.dataset['30040050']?.Value;
  }

  get '30040050'(): Element {
    return this.dataset['30040050'];
  }

  // DVH Dose Scaling
  get DVHDoseScaling(): any {
    const element = this.dataset['30040052'];
    return (element?.Value.length === 1)
      ? this.dataset['30040052']?.Value[0]
      : this.dataset['30040052']?.Value;
  }

  get '30040052'(): Element {
    return this.dataset['30040052'];
  }

  // DVH Volume Units
  get DVHVolumeUnits(): any {
    const element = this.dataset['30040054'];
    return (element?.Value.length === 1)
      ? this.dataset['30040054']?.Value[0]
      : this.dataset['30040054']?.Value;
  }

  get '30040054'(): Element {
    return this.dataset['30040054'];
  }

  // DVH Number of Bins
  get DVHNumberOfBins(): any {
    const element = this.dataset['30040056'];
    return (element?.Value.length === 1)
      ? this.dataset['30040056']?.Value[0]
      : this.dataset['30040056']?.Value;
  }

  get '30040056'(): Element {
    return this.dataset['30040056'];
  }

  // DVH Data
  get DVHData(): any {
    const element = this.dataset['30040058'];
    return (element?.Value.length === 1)
      ? this.dataset['30040058']?.Value[0]
      : this.dataset['30040058']?.Value;
  }

  get '30040058'(): Element {
    return this.dataset['30040058'];
  }

  // DVH Referenced ROI Sequence
  get DVHReferencedROISequence(): any {
    const element = this.dataset['30040060'];
    return (element?.Value.length === 1)
      ? this.dataset['30040060']?.Value[0]
      : this.dataset['30040060']?.Value;
  }

  get '30040060'(): Element {
    return this.dataset['30040060'];
  }

  // DVH ROI Contribution Type
  get DVHROIContributionType(): any {
    const element = this.dataset['30040062'];
    return (element?.Value.length === 1)
      ? this.dataset['30040062']?.Value[0]
      : this.dataset['30040062']?.Value;
  }

  get '30040062'(): Element {
    return this.dataset['30040062'];
  }

  // DVH Minimum Dose
  get DVHMinimumDose(): any {
    const element = this.dataset['30040070'];
    return (element?.Value.length === 1)
      ? this.dataset['30040070']?.Value[0]
      : this.dataset['30040070']?.Value;
  }

  get '30040070'(): Element {
    return this.dataset['30040070'];
  }

  // DVH Maximum Dose
  get DVHMaximumDose(): any {
    const element = this.dataset['30040072'];
    return (element?.Value.length === 1)
      ? this.dataset['30040072']?.Value[0]
      : this.dataset['30040072']?.Value;
  }

  get '30040072'(): Element {
    return this.dataset['30040072'];
  }

  // DVH Mean Dose
  get DVHMeanDose(): any {
    const element = this.dataset['30040074'];
    return (element?.Value.length === 1)
      ? this.dataset['30040074']?.Value[0]
      : this.dataset['30040074']?.Value;
  }

  get '30040074'(): Element {
    return this.dataset['30040074'];
  }

  // Structure Set Label
  get StructureSetLabel(): any {
    const element = this.dataset['30060002'];
    return (element?.Value.length === 1)
      ? this.dataset['30060002']?.Value[0]
      : this.dataset['30060002']?.Value;
  }

  get '30060002'(): Element {
    return this.dataset['30060002'];
  }

  // Structure Set Name
  get StructureSetName(): any {
    const element = this.dataset['30060004'];
    return (element?.Value.length === 1)
      ? this.dataset['30060004']?.Value[0]
      : this.dataset['30060004']?.Value;
  }

  get '30060004'(): Element {
    return this.dataset['30060004'];
  }

  // Structure Set Description
  get StructureSetDescription(): any {
    const element = this.dataset['30060006'];
    return (element?.Value.length === 1)
      ? this.dataset['30060006']?.Value[0]
      : this.dataset['30060006']?.Value;
  }

  get '30060006'(): Element {
    return this.dataset['30060006'];
  }

  // Structure Set Date
  get StructureSetDate(): any {
    const element = this.dataset['30060008'];
    return (element?.Value.length === 1)
      ? this.dataset['30060008']?.Value[0]
      : this.dataset['30060008']?.Value;
  }

  get '30060008'(): Element {
    return this.dataset['30060008'];
  }

  // Structure Set Time
  get StructureSetTime(): any {
    const element = this.dataset['30060009'];
    return (element?.Value.length === 1)
      ? this.dataset['30060009']?.Value[0]
      : this.dataset['30060009']?.Value;
  }

  get '30060009'(): Element {
    return this.dataset['30060009'];
  }

  // Referenced Frame of Reference Sequence
  get ReferencedFrameOfReferenceSequence(): any {
    const element = this.dataset['30060010'];
    return (element?.Value.length === 1)
      ? this.dataset['30060010']?.Value[0]
      : this.dataset['30060010']?.Value;
  }

  get '30060010'(): Element {
    return this.dataset['30060010'];
  }

  // RT Referenced Study Sequence
  get RTReferencedStudySequence(): any {
    const element = this.dataset['30060012'];
    return (element?.Value.length === 1)
      ? this.dataset['30060012']?.Value[0]
      : this.dataset['30060012']?.Value;
  }

  get '30060012'(): Element {
    return this.dataset['30060012'];
  }

  // RT Referenced Series Sequence
  get RTReferencedSeriesSequence(): any {
    const element = this.dataset['30060014'];
    return (element?.Value.length === 1)
      ? this.dataset['30060014']?.Value[0]
      : this.dataset['30060014']?.Value;
  }

  get '30060014'(): Element {
    return this.dataset['30060014'];
  }

  // Contour Image Sequence
  get ContourImageSequence(): any {
    const element = this.dataset['30060016'];
    return (element?.Value.length === 1)
      ? this.dataset['30060016']?.Value[0]
      : this.dataset['30060016']?.Value;
  }

  get '30060016'(): Element {
    return this.dataset['30060016'];
  }

  // Predecessor Structure Set Sequence
  get PredecessorStructureSetSequence(): any {
    const element = this.dataset['30060018'];
    return (element?.Value.length === 1)
      ? this.dataset['30060018']?.Value[0]
      : this.dataset['30060018']?.Value;
  }

  get '30060018'(): Element {
    return this.dataset['30060018'];
  }

  // Structure Set ROI Sequence
  get StructureSetROISequence(): any {
    const element = this.dataset['30060020'];
    return (element?.Value.length === 1)
      ? this.dataset['30060020']?.Value[0]
      : this.dataset['30060020']?.Value;
  }

  get '30060020'(): Element {
    return this.dataset['30060020'];
  }

  // ROI Number
  get ROINumber(): any {
    const element = this.dataset['30060022'];
    return (element?.Value.length === 1)
      ? this.dataset['30060022']?.Value[0]
      : this.dataset['30060022']?.Value;
  }

  get '30060022'(): Element {
    return this.dataset['30060022'];
  }

  // Referenced Frame of Reference UID
  get ReferencedFrameOfReferenceUID(): any {
    const element = this.dataset['30060024'];
    return (element?.Value.length === 1)
      ? this.dataset['30060024']?.Value[0]
      : this.dataset['30060024']?.Value;
  }

  get '30060024'(): Element {
    return this.dataset['30060024'];
  }

  // ROI Name
  get ROIName(): any {
    const element = this.dataset['30060026'];
    return (element?.Value.length === 1)
      ? this.dataset['30060026']?.Value[0]
      : this.dataset['30060026']?.Value;
  }

  get '30060026'(): Element {
    return this.dataset['30060026'];
  }

  // ROI Description
  get ROIDescription(): any {
    const element = this.dataset['30060028'];
    return (element?.Value.length === 1)
      ? this.dataset['30060028']?.Value[0]
      : this.dataset['30060028']?.Value;
  }

  get '30060028'(): Element {
    return this.dataset['30060028'];
  }

  // ROI Display Color
  get ROIDisplayColor(): any {
    const element = this.dataset['3006002A'];
    return (element?.Value.length === 1)
      ? this.dataset['3006002A']?.Value[0]
      : this.dataset['3006002A']?.Value;
  }

  get '3006002A'(): Element {
    return this.dataset['3006002A'];
  }

  // ROI Volume
  get ROIVolume(): any {
    const element = this.dataset['3006002C'];
    return (element?.Value.length === 1)
      ? this.dataset['3006002C']?.Value[0]
      : this.dataset['3006002C']?.Value;
  }

  get '3006002C'(): Element {
    return this.dataset['3006002C'];
  }

  // RT Related ROI Sequence
  get RTRelatedROISequence(): any {
    const element = this.dataset['30060030'];
    return (element?.Value.length === 1)
      ? this.dataset['30060030']?.Value[0]
      : this.dataset['30060030']?.Value;
  }

  get '30060030'(): Element {
    return this.dataset['30060030'];
  }

  // RT ROI Relationship
  get RTROIRelationship(): any {
    const element = this.dataset['30060033'];
    return (element?.Value.length === 1)
      ? this.dataset['30060033']?.Value[0]
      : this.dataset['30060033']?.Value;
  }

  get '30060033'(): Element {
    return this.dataset['30060033'];
  }

  // ROI Generation Algorithm
  get ROIGenerationAlgorithm(): any {
    const element = this.dataset['30060036'];
    return (element?.Value.length === 1)
      ? this.dataset['30060036']?.Value[0]
      : this.dataset['30060036']?.Value;
  }

  get '30060036'(): Element {
    return this.dataset['30060036'];
  }

  // ROI Generation Description
  get ROIGenerationDescription(): any {
    const element = this.dataset['30060038'];
    return (element?.Value.length === 1)
      ? this.dataset['30060038']?.Value[0]
      : this.dataset['30060038']?.Value;
  }

  get '30060038'(): Element {
    return this.dataset['30060038'];
  }

  // ROI Contour Sequence
  get ROIContourSequence(): any {
    const element = this.dataset['30060039'];
    return (element?.Value.length === 1)
      ? this.dataset['30060039']?.Value[0]
      : this.dataset['30060039']?.Value;
  }

  get '30060039'(): Element {
    return this.dataset['30060039'];
  }

  // Contour Sequence
  get ContourSequence(): any {
    const element = this.dataset['30060040'];
    return (element?.Value.length === 1)
      ? this.dataset['30060040']?.Value[0]
      : this.dataset['30060040']?.Value;
  }

  get '30060040'(): Element {
    return this.dataset['30060040'];
  }

  // Contour Geometric Type
  get ContourGeometricType(): any {
    const element = this.dataset['30060042'];
    return (element?.Value.length === 1)
      ? this.dataset['30060042']?.Value[0]
      : this.dataset['30060042']?.Value;
  }

  get '30060042'(): Element {
    return this.dataset['30060042'];
  }

  // Contour Slab Thickness
  get ContourSlabThickness(): any {
    const element = this.dataset['30060044'];
    return (element?.Value.length === 1)
      ? this.dataset['30060044']?.Value[0]
      : this.dataset['30060044']?.Value;
  }

  get '30060044'(): Element {
    return this.dataset['30060044'];
  }

  // Contour Offset Vector
  get ContourOffsetVector(): any {
    const element = this.dataset['30060045'];
    return (element?.Value.length === 1)
      ? this.dataset['30060045']?.Value[0]
      : this.dataset['30060045']?.Value;
  }

  get '30060045'(): Element {
    return this.dataset['30060045'];
  }

  // Number of Contour Points
  get NumberOfContourPoints(): any {
    const element = this.dataset['30060046'];
    return (element?.Value.length === 1)
      ? this.dataset['30060046']?.Value[0]
      : this.dataset['30060046']?.Value;
  }

  get '30060046'(): Element {
    return this.dataset['30060046'];
  }

  // Contour Number
  get ContourNumber(): any {
    const element = this.dataset['30060048'];
    return (element?.Value.length === 1)
      ? this.dataset['30060048']?.Value[0]
      : this.dataset['30060048']?.Value;
  }

  get '30060048'(): Element {
    return this.dataset['30060048'];
  }

  // Attached Contours
  get AttachedContours(): any {
    const element = this.dataset['30060049'];
    return (element?.Value.length === 1)
      ? this.dataset['30060049']?.Value[0]
      : this.dataset['30060049']?.Value;
  }

  get '30060049'(): Element {
    return this.dataset['30060049'];
  }

  // Contour Data
  get ContourData(): any {
    const element = this.dataset['30060050'];
    return (element?.Value.length === 1)
      ? this.dataset['30060050']?.Value[0]
      : this.dataset['30060050']?.Value;
  }

  get '30060050'(): Element {
    return this.dataset['30060050'];
  }

  // RT ROI Observations Sequence
  get RTROIObservationsSequence(): any {
    const element = this.dataset['30060080'];
    return (element?.Value.length === 1)
      ? this.dataset['30060080']?.Value[0]
      : this.dataset['30060080']?.Value;
  }

  get '30060080'(): Element {
    return this.dataset['30060080'];
  }

  // Observation Number
  get ObservationNumber(): any {
    const element = this.dataset['30060082'];
    return (element?.Value.length === 1)
      ? this.dataset['30060082']?.Value[0]
      : this.dataset['30060082']?.Value;
  }

  get '30060082'(): Element {
    return this.dataset['30060082'];
  }

  // Referenced ROI Number
  get ReferencedROINumber(): any {
    const element = this.dataset['30060084'];
    return (element?.Value.length === 1)
      ? this.dataset['30060084']?.Value[0]
      : this.dataset['30060084']?.Value;
  }

  get '30060084'(): Element {
    return this.dataset['30060084'];
  }

  // ROI Observation Label
  get ROIObservationLabel(): any {
    const element = this.dataset['30060085'];
    return (element?.Value.length === 1)
      ? this.dataset['30060085']?.Value[0]
      : this.dataset['30060085']?.Value;
  }

  get '30060085'(): Element {
    return this.dataset['30060085'];
  }

  // RT ROI Identification Code Sequence
  get RTROIIdentificationCodeSequence(): any {
    const element = this.dataset['30060086'];
    return (element?.Value.length === 1)
      ? this.dataset['30060086']?.Value[0]
      : this.dataset['30060086']?.Value;
  }

  get '30060086'(): Element {
    return this.dataset['30060086'];
  }

  // ROI Observation Description
  get ROIObservationDescription(): any {
    const element = this.dataset['30060088'];
    return (element?.Value.length === 1)
      ? this.dataset['30060088']?.Value[0]
      : this.dataset['30060088']?.Value;
  }

  get '30060088'(): Element {
    return this.dataset['30060088'];
  }

  // Related RT ROI Observations Sequence
  get RelatedRTROIObservationsSequence(): any {
    const element = this.dataset['300600A0'];
    return (element?.Value.length === 1)
      ? this.dataset['300600A0']?.Value[0]
      : this.dataset['300600A0']?.Value;
  }

  get '300600A0'(): Element {
    return this.dataset['300600A0'];
  }

  // RT ROI Interpreted Type
  get RTROIInterpretedType(): any {
    const element = this.dataset['300600A4'];
    return (element?.Value.length === 1)
      ? this.dataset['300600A4']?.Value[0]
      : this.dataset['300600A4']?.Value;
  }

  get '300600A4'(): Element {
    return this.dataset['300600A4'];
  }

  // ROI Interpreter
  get ROIInterpreter(): any {
    const element = this.dataset['300600A6'];
    return (element?.Value.length === 1)
      ? this.dataset['300600A6']?.Value[0]
      : this.dataset['300600A6']?.Value;
  }

  get '300600A6'(): Element {
    return this.dataset['300600A6'];
  }

  // ROI Physical Properties Sequence
  get ROIPhysicalPropertiesSequence(): any {
    const element = this.dataset['300600B0'];
    return (element?.Value.length === 1)
      ? this.dataset['300600B0']?.Value[0]
      : this.dataset['300600B0']?.Value;
  }

  get '300600B0'(): Element {
    return this.dataset['300600B0'];
  }

  // ROI Physical Property
  get ROIPhysicalProperty(): any {
    const element = this.dataset['300600B2'];
    return (element?.Value.length === 1)
      ? this.dataset['300600B2']?.Value[0]
      : this.dataset['300600B2']?.Value;
  }

  get '300600B2'(): Element {
    return this.dataset['300600B2'];
  }

  // ROI Physical Property Value
  get ROIPhysicalPropertyValue(): any {
    const element = this.dataset['300600B4'];
    return (element?.Value.length === 1)
      ? this.dataset['300600B4']?.Value[0]
      : this.dataset['300600B4']?.Value;
  }

  get '300600B4'(): Element {
    return this.dataset['300600B4'];
  }

  // ROI Elemental Composition Sequence
  get ROIElementalCompositionSequence(): any {
    const element = this.dataset['300600B6'];
    return (element?.Value.length === 1)
      ? this.dataset['300600B6']?.Value[0]
      : this.dataset['300600B6']?.Value;
  }

  get '300600B6'(): Element {
    return this.dataset['300600B6'];
  }

  // ROI Elemental Composition Atomic Number
  get ROIElementalCompositionAtomicNumber(): any {
    const element = this.dataset['300600B7'];
    return (element?.Value.length === 1)
      ? this.dataset['300600B7']?.Value[0]
      : this.dataset['300600B7']?.Value;
  }

  get '300600B7'(): Element {
    return this.dataset['300600B7'];
  }

  // ROI Elemental Composition Atomic Mass Fraction
  get ROIElementalCompositionAtomicMassFraction(): any {
    const element = this.dataset['300600B8'];
    return (element?.Value.length === 1)
      ? this.dataset['300600B8']?.Value[0]
      : this.dataset['300600B8']?.Value;
  }

  get '300600B8'(): Element {
    return this.dataset['300600B8'];
  }

  // Additional RT ROI Identification Code Sequence
  get AdditionalRTROIIdentificationCodeSequence(): any {
    const element = this.dataset['300600B9'];
    return (element?.Value.length === 1)
      ? this.dataset['300600B9']?.Value[0]
      : this.dataset['300600B9']?.Value;
  }

  get '300600B9'(): Element {
    return this.dataset['300600B9'];
  }

  // Frame of Reference Relationship Sequence
  get FrameOfReferenceRelationshipSequence(): any {
    const element = this.dataset['300600C0'];
    return (element?.Value.length === 1)
      ? this.dataset['300600C0']?.Value[0]
      : this.dataset['300600C0']?.Value;
  }

  get '300600C0'(): Element {
    return this.dataset['300600C0'];
  }

  // Related Frame of Reference UID
  get RelatedFrameOfReferenceUID(): any {
    const element = this.dataset['300600C2'];
    return (element?.Value.length === 1)
      ? this.dataset['300600C2']?.Value[0]
      : this.dataset['300600C2']?.Value;
  }

  get '300600C2'(): Element {
    return this.dataset['300600C2'];
  }

  // Frame of Reference Transformation Type
  get FrameOfReferenceTransformationType(): any {
    const element = this.dataset['300600C4'];
    return (element?.Value.length === 1)
      ? this.dataset['300600C4']?.Value[0]
      : this.dataset['300600C4']?.Value;
  }

  get '300600C4'(): Element {
    return this.dataset['300600C4'];
  }

  // Frame of Reference Transformation Matrix
  get FrameOfReferenceTransformationMatrix(): any {
    const element = this.dataset['300600C6'];
    return (element?.Value.length === 1)
      ? this.dataset['300600C6']?.Value[0]
      : this.dataset['300600C6']?.Value;
  }

  get '300600C6'(): Element {
    return this.dataset['300600C6'];
  }

  // Frame of Reference Transformation Comment
  get FrameOfReferenceTransformationComment(): any {
    const element = this.dataset['300600C8'];
    return (element?.Value.length === 1)
      ? this.dataset['300600C8']?.Value[0]
      : this.dataset['300600C8']?.Value;
  }

  get '300600C8'(): Element {
    return this.dataset['300600C8'];
  }

  // Measured Dose Reference Sequence
  get MeasuredDoseReferenceSequence(): any {
    const element = this.dataset['30080010'];
    return (element?.Value.length === 1)
      ? this.dataset['30080010']?.Value[0]
      : this.dataset['30080010']?.Value;
  }

  get '30080010'(): Element {
    return this.dataset['30080010'];
  }

  // Measured Dose Description
  get MeasuredDoseDescription(): any {
    const element = this.dataset['30080012'];
    return (element?.Value.length === 1)
      ? this.dataset['30080012']?.Value[0]
      : this.dataset['30080012']?.Value;
  }

  get '30080012'(): Element {
    return this.dataset['30080012'];
  }

  // Measured Dose Type
  get MeasuredDoseType(): any {
    const element = this.dataset['30080014'];
    return (element?.Value.length === 1)
      ? this.dataset['30080014']?.Value[0]
      : this.dataset['30080014']?.Value;
  }

  get '30080014'(): Element {
    return this.dataset['30080014'];
  }

  // Measured Dose Value
  get MeasuredDoseValue(): any {
    const element = this.dataset['30080016'];
    return (element?.Value.length === 1)
      ? this.dataset['30080016']?.Value[0]
      : this.dataset['30080016']?.Value;
  }

  get '30080016'(): Element {
    return this.dataset['30080016'];
  }

  // Treatment Session Beam Sequence
  get TreatmentSessionBeamSequence(): any {
    const element = this.dataset['30080020'];
    return (element?.Value.length === 1)
      ? this.dataset['30080020']?.Value[0]
      : this.dataset['30080020']?.Value;
  }

  get '30080020'(): Element {
    return this.dataset['30080020'];
  }

  // Treatment Session Ion Beam Sequence
  get TreatmentSessionIonBeamSequence(): any {
    const element = this.dataset['30080021'];
    return (element?.Value.length === 1)
      ? this.dataset['30080021']?.Value[0]
      : this.dataset['30080021']?.Value;
  }

  get '30080021'(): Element {
    return this.dataset['30080021'];
  }

  // Current Fraction Number
  get CurrentFractionNumber(): any {
    const element = this.dataset['30080022'];
    return (element?.Value.length === 1)
      ? this.dataset['30080022']?.Value[0]
      : this.dataset['30080022']?.Value;
  }

  get '30080022'(): Element {
    return this.dataset['30080022'];
  }

  // Treatment Control Point Date
  get TreatmentControlPointDate(): any {
    const element = this.dataset['30080024'];
    return (element?.Value.length === 1)
      ? this.dataset['30080024']?.Value[0]
      : this.dataset['30080024']?.Value;
  }

  get '30080024'(): Element {
    return this.dataset['30080024'];
  }

  // Treatment Control Point Time
  get TreatmentControlPointTime(): any {
    const element = this.dataset['30080025'];
    return (element?.Value.length === 1)
      ? this.dataset['30080025']?.Value[0]
      : this.dataset['30080025']?.Value;
  }

  get '30080025'(): Element {
    return this.dataset['30080025'];
  }

  // Treatment Termination Status
  get TreatmentTerminationStatus(): any {
    const element = this.dataset['3008002A'];
    return (element?.Value.length === 1)
      ? this.dataset['3008002A']?.Value[0]
      : this.dataset['3008002A']?.Value;
  }

  get '3008002A'(): Element {
    return this.dataset['3008002A'];
  }

  // Treatment Termination Code
  get TreatmentTerminationCode(): any {
    const element = this.dataset['3008002B'];
    return (element?.Value.length === 1)
      ? this.dataset['3008002B']?.Value[0]
      : this.dataset['3008002B']?.Value;
  }

  get '3008002B'(): Element {
    return this.dataset['3008002B'];
  }

  // Treatment Verification Status
  get TreatmentVerificationStatus(): any {
    const element = this.dataset['3008002C'];
    return (element?.Value.length === 1)
      ? this.dataset['3008002C']?.Value[0]
      : this.dataset['3008002C']?.Value;
  }

  get '3008002C'(): Element {
    return this.dataset['3008002C'];
  }

  // Referenced Treatment Record Sequence
  get ReferencedTreatmentRecordSequence(): any {
    const element = this.dataset['30080030'];
    return (element?.Value.length === 1)
      ? this.dataset['30080030']?.Value[0]
      : this.dataset['30080030']?.Value;
  }

  get '30080030'(): Element {
    return this.dataset['30080030'];
  }

  // Specified Primary Meterset
  get SpecifiedPrimaryMeterset(): any {
    const element = this.dataset['30080032'];
    return (element?.Value.length === 1)
      ? this.dataset['30080032']?.Value[0]
      : this.dataset['30080032']?.Value;
  }

  get '30080032'(): Element {
    return this.dataset['30080032'];
  }

  // Specified Secondary Meterset
  get SpecifiedSecondaryMeterset(): any {
    const element = this.dataset['30080033'];
    return (element?.Value.length === 1)
      ? this.dataset['30080033']?.Value[0]
      : this.dataset['30080033']?.Value;
  }

  get '30080033'(): Element {
    return this.dataset['30080033'];
  }

  // Delivered Primary Meterset
  get DeliveredPrimaryMeterset(): any {
    const element = this.dataset['30080036'];
    return (element?.Value.length === 1)
      ? this.dataset['30080036']?.Value[0]
      : this.dataset['30080036']?.Value;
  }

  get '30080036'(): Element {
    return this.dataset['30080036'];
  }

  // Delivered Secondary Meterset
  get DeliveredSecondaryMeterset(): any {
    const element = this.dataset['30080037'];
    return (element?.Value.length === 1)
      ? this.dataset['30080037']?.Value[0]
      : this.dataset['30080037']?.Value;
  }

  get '30080037'(): Element {
    return this.dataset['30080037'];
  }

  // Specified Treatment Time
  get SpecifiedTreatmentTime(): any {
    const element = this.dataset['3008003A'];
    return (element?.Value.length === 1)
      ? this.dataset['3008003A']?.Value[0]
      : this.dataset['3008003A']?.Value;
  }

  get '3008003A'(): Element {
    return this.dataset['3008003A'];
  }

  // Delivered Treatment Time
  get DeliveredTreatmentTime(): any {
    const element = this.dataset['3008003B'];
    return (element?.Value.length === 1)
      ? this.dataset['3008003B']?.Value[0]
      : this.dataset['3008003B']?.Value;
  }

  get '3008003B'(): Element {
    return this.dataset['3008003B'];
  }

  // Control Point Delivery Sequence
  get ControlPointDeliverySequence(): any {
    const element = this.dataset['30080040'];
    return (element?.Value.length === 1)
      ? this.dataset['30080040']?.Value[0]
      : this.dataset['30080040']?.Value;
  }

  get '30080040'(): Element {
    return this.dataset['30080040'];
  }

  // Ion Control Point Delivery Sequence
  get IonControlPointDeliverySequence(): any {
    const element = this.dataset['30080041'];
    return (element?.Value.length === 1)
      ? this.dataset['30080041']?.Value[0]
      : this.dataset['30080041']?.Value;
  }

  get '30080041'(): Element {
    return this.dataset['30080041'];
  }

  // Specified Meterset
  get SpecifiedMeterset(): any {
    const element = this.dataset['30080042'];
    return (element?.Value.length === 1)
      ? this.dataset['30080042']?.Value[0]
      : this.dataset['30080042']?.Value;
  }

  get '30080042'(): Element {
    return this.dataset['30080042'];
  }

  // Delivered Meterset
  get DeliveredMeterset(): any {
    const element = this.dataset['30080044'];
    return (element?.Value.length === 1)
      ? this.dataset['30080044']?.Value[0]
      : this.dataset['30080044']?.Value;
  }

  get '30080044'(): Element {
    return this.dataset['30080044'];
  }

  // Meterset Rate Set
  get MetersetRateSet(): any {
    const element = this.dataset['30080045'];
    return (element?.Value.length === 1)
      ? this.dataset['30080045']?.Value[0]
      : this.dataset['30080045']?.Value;
  }

  get '30080045'(): Element {
    return this.dataset['30080045'];
  }

  // Meterset Rate Delivered
  get MetersetRateDelivered(): any {
    const element = this.dataset['30080046'];
    return (element?.Value.length === 1)
      ? this.dataset['30080046']?.Value[0]
      : this.dataset['30080046']?.Value;
  }

  get '30080046'(): Element {
    return this.dataset['30080046'];
  }

  // Scan Spot Metersets Delivered
  get ScanSpotMetersetsDelivered(): any {
    const element = this.dataset['30080047'];
    return (element?.Value.length === 1)
      ? this.dataset['30080047']?.Value[0]
      : this.dataset['30080047']?.Value;
  }

  get '30080047'(): Element {
    return this.dataset['30080047'];
  }

  // Dose Rate Delivered
  get DoseRateDelivered(): any {
    const element = this.dataset['30080048'];
    return (element?.Value.length === 1)
      ? this.dataset['30080048']?.Value[0]
      : this.dataset['30080048']?.Value;
  }

  get '30080048'(): Element {
    return this.dataset['30080048'];
  }

  // Treatment Summary Calculated Dose Reference Sequence
  get TreatmentSummaryCalculatedDoseReferenceSequence(): any {
    const element = this.dataset['30080050'];
    return (element?.Value.length === 1)
      ? this.dataset['30080050']?.Value[0]
      : this.dataset['30080050']?.Value;
  }

  get '30080050'(): Element {
    return this.dataset['30080050'];
  }

  // Cumulative Dose to Dose Reference
  get CumulativeDoseToDoseReference(): any {
    const element = this.dataset['30080052'];
    return (element?.Value.length === 1)
      ? this.dataset['30080052']?.Value[0]
      : this.dataset['30080052']?.Value;
  }

  get '30080052'(): Element {
    return this.dataset['30080052'];
  }

  // First Treatment Date
  get FirstTreatmentDate(): any {
    const element = this.dataset['30080054'];
    return (element?.Value.length === 1)
      ? this.dataset['30080054']?.Value[0]
      : this.dataset['30080054']?.Value;
  }

  get '30080054'(): Element {
    return this.dataset['30080054'];
  }

  // Most Recent Treatment Date
  get MostRecentTreatmentDate(): any {
    const element = this.dataset['30080056'];
    return (element?.Value.length === 1)
      ? this.dataset['30080056']?.Value[0]
      : this.dataset['30080056']?.Value;
  }

  get '30080056'(): Element {
    return this.dataset['30080056'];
  }

  // Number of Fractions Delivered
  get NumberOfFractionsDelivered(): any {
    const element = this.dataset['3008005A'];
    return (element?.Value.length === 1)
      ? this.dataset['3008005A']?.Value[0]
      : this.dataset['3008005A']?.Value;
  }

  get '3008005A'(): Element {
    return this.dataset['3008005A'];
  }

  // Override Sequence
  get OverrideSequence(): any {
    const element = this.dataset['30080060'];
    return (element?.Value.length === 1)
      ? this.dataset['30080060']?.Value[0]
      : this.dataset['30080060']?.Value;
  }

  get '30080060'(): Element {
    return this.dataset['30080060'];
  }

  // Parameter Sequence Pointer
  get ParameterSequencePointer(): any {
    const element = this.dataset['30080061'];
    return (element?.Value.length === 1)
      ? this.dataset['30080061']?.Value[0]
      : this.dataset['30080061']?.Value;
  }

  get '30080061'(): Element {
    return this.dataset['30080061'];
  }

  // Override Parameter Pointer
  get OverrideParameterPointer(): any {
    const element = this.dataset['30080062'];
    return (element?.Value.length === 1)
      ? this.dataset['30080062']?.Value[0]
      : this.dataset['30080062']?.Value;
  }

  get '30080062'(): Element {
    return this.dataset['30080062'];
  }

  // Parameter Item Index
  get ParameterItemIndex(): any {
    const element = this.dataset['30080063'];
    return (element?.Value.length === 1)
      ? this.dataset['30080063']?.Value[0]
      : this.dataset['30080063']?.Value;
  }

  get '30080063'(): Element {
    return this.dataset['30080063'];
  }

  // Measured Dose Reference Number
  get MeasuredDoseReferenceNumber(): any {
    const element = this.dataset['30080064'];
    return (element?.Value.length === 1)
      ? this.dataset['30080064']?.Value[0]
      : this.dataset['30080064']?.Value;
  }

  get '30080064'(): Element {
    return this.dataset['30080064'];
  }

  // Parameter Pointer
  get ParameterPointer(): any {
    const element = this.dataset['30080065'];
    return (element?.Value.length === 1)
      ? this.dataset['30080065']?.Value[0]
      : this.dataset['30080065']?.Value;
  }

  get '30080065'(): Element {
    return this.dataset['30080065'];
  }

  // Override Reason
  get OverrideReason(): any {
    const element = this.dataset['30080066'];
    return (element?.Value.length === 1)
      ? this.dataset['30080066']?.Value[0]
      : this.dataset['30080066']?.Value;
  }

  get '30080066'(): Element {
    return this.dataset['30080066'];
  }

  // Corrected Parameter Sequence
  get CorrectedParameterSequence(): any {
    const element = this.dataset['30080068'];
    return (element?.Value.length === 1)
      ? this.dataset['30080068']?.Value[0]
      : this.dataset['30080068']?.Value;
  }

  get '30080068'(): Element {
    return this.dataset['30080068'];
  }

  // Correction Value
  get CorrectionValue(): any {
    const element = this.dataset['3008006A'];
    return (element?.Value.length === 1)
      ? this.dataset['3008006A']?.Value[0]
      : this.dataset['3008006A']?.Value;
  }

  get '3008006A'(): Element {
    return this.dataset['3008006A'];
  }

  // Calculated Dose Reference Sequence
  get CalculatedDoseReferenceSequence(): any {
    const element = this.dataset['30080070'];
    return (element?.Value.length === 1)
      ? this.dataset['30080070']?.Value[0]
      : this.dataset['30080070']?.Value;
  }

  get '30080070'(): Element {
    return this.dataset['30080070'];
  }

  // Calculated Dose Reference Number
  get CalculatedDoseReferenceNumber(): any {
    const element = this.dataset['30080072'];
    return (element?.Value.length === 1)
      ? this.dataset['30080072']?.Value[0]
      : this.dataset['30080072']?.Value;
  }

  get '30080072'(): Element {
    return this.dataset['30080072'];
  }

  // Calculated Dose Reference Description
  get CalculatedDoseReferenceDescription(): any {
    const element = this.dataset['30080074'];
    return (element?.Value.length === 1)
      ? this.dataset['30080074']?.Value[0]
      : this.dataset['30080074']?.Value;
  }

  get '30080074'(): Element {
    return this.dataset['30080074'];
  }

  // Calculated Dose Reference Dose Value
  get CalculatedDoseReferenceDoseValue(): any {
    const element = this.dataset['30080076'];
    return (element?.Value.length === 1)
      ? this.dataset['30080076']?.Value[0]
      : this.dataset['30080076']?.Value;
  }

  get '30080076'(): Element {
    return this.dataset['30080076'];
  }

  // Start Meterset
  get StartMeterset(): any {
    const element = this.dataset['30080078'];
    return (element?.Value.length === 1)
      ? this.dataset['30080078']?.Value[0]
      : this.dataset['30080078']?.Value;
  }

  get '30080078'(): Element {
    return this.dataset['30080078'];
  }

  // End Meterset
  get EndMeterset(): any {
    const element = this.dataset['3008007A'];
    return (element?.Value.length === 1)
      ? this.dataset['3008007A']?.Value[0]
      : this.dataset['3008007A']?.Value;
  }

  get '3008007A'(): Element {
    return this.dataset['3008007A'];
  }

  // Referenced Measured Dose Reference Sequence
  get ReferencedMeasuredDoseReferenceSequence(): any {
    const element = this.dataset['30080080'];
    return (element?.Value.length === 1)
      ? this.dataset['30080080']?.Value[0]
      : this.dataset['30080080']?.Value;
  }

  get '30080080'(): Element {
    return this.dataset['30080080'];
  }

  // Referenced Measured Dose Reference Number
  get ReferencedMeasuredDoseReferenceNumber(): any {
    const element = this.dataset['30080082'];
    return (element?.Value.length === 1)
      ? this.dataset['30080082']?.Value[0]
      : this.dataset['30080082']?.Value;
  }

  get '30080082'(): Element {
    return this.dataset['30080082'];
  }

  // Referenced Calculated Dose Reference Sequence
  get ReferencedCalculatedDoseReferenceSequence(): any {
    const element = this.dataset['30080090'];
    return (element?.Value.length === 1)
      ? this.dataset['30080090']?.Value[0]
      : this.dataset['30080090']?.Value;
  }

  get '30080090'(): Element {
    return this.dataset['30080090'];
  }

  // Referenced Calculated Dose Reference Number
  get ReferencedCalculatedDoseReferenceNumber(): any {
    const element = this.dataset['30080092'];
    return (element?.Value.length === 1)
      ? this.dataset['30080092']?.Value[0]
      : this.dataset['30080092']?.Value;
  }

  get '30080092'(): Element {
    return this.dataset['30080092'];
  }

  // Beam Limiting Device Leaf Pairs Sequence
  get BeamLimitingDeviceLeafPairsSequence(): any {
    const element = this.dataset['300800A0'];
    return (element?.Value.length === 1)
      ? this.dataset['300800A0']?.Value[0]
      : this.dataset['300800A0']?.Value;
  }

  get '300800A0'(): Element {
    return this.dataset['300800A0'];
  }

  // Recorded Wedge Sequence
  get RecordedWedgeSequence(): any {
    const element = this.dataset['300800B0'];
    return (element?.Value.length === 1)
      ? this.dataset['300800B0']?.Value[0]
      : this.dataset['300800B0']?.Value;
  }

  get '300800B0'(): Element {
    return this.dataset['300800B0'];
  }

  // Recorded Compensator Sequence
  get RecordedCompensatorSequence(): any {
    const element = this.dataset['300800C0'];
    return (element?.Value.length === 1)
      ? this.dataset['300800C0']?.Value[0]
      : this.dataset['300800C0']?.Value;
  }

  get '300800C0'(): Element {
    return this.dataset['300800C0'];
  }

  // Recorded Block Sequence
  get RecordedBlockSequence(): any {
    const element = this.dataset['300800D0'];
    return (element?.Value.length === 1)
      ? this.dataset['300800D0']?.Value[0]
      : this.dataset['300800D0']?.Value;
  }

  get '300800D0'(): Element {
    return this.dataset['300800D0'];
  }

  // Treatment Summary Measured Dose Reference Sequence
  get TreatmentSummaryMeasuredDoseReferenceSequence(): any {
    const element = this.dataset['300800E0'];
    return (element?.Value.length === 1)
      ? this.dataset['300800E0']?.Value[0]
      : this.dataset['300800E0']?.Value;
  }

  get '300800E0'(): Element {
    return this.dataset['300800E0'];
  }

  // Recorded Snout Sequence
  get RecordedSnoutSequence(): any {
    const element = this.dataset['300800F0'];
    return (element?.Value.length === 1)
      ? this.dataset['300800F0']?.Value[0]
      : this.dataset['300800F0']?.Value;
  }

  get '300800F0'(): Element {
    return this.dataset['300800F0'];
  }

  // Recorded Range Shifter Sequence
  get RecordedRangeShifterSequence(): any {
    const element = this.dataset['300800F2'];
    return (element?.Value.length === 1)
      ? this.dataset['300800F2']?.Value[0]
      : this.dataset['300800F2']?.Value;
  }

  get '300800F2'(): Element {
    return this.dataset['300800F2'];
  }

  // Recorded Lateral Spreading Device Sequence
  get RecordedLateralSpreadingDeviceSequence(): any {
    const element = this.dataset['300800F4'];
    return (element?.Value.length === 1)
      ? this.dataset['300800F4']?.Value[0]
      : this.dataset['300800F4']?.Value;
  }

  get '300800F4'(): Element {
    return this.dataset['300800F4'];
  }

  // Recorded Range Modulator Sequence
  get RecordedRangeModulatorSequence(): any {
    const element = this.dataset['300800F6'];
    return (element?.Value.length === 1)
      ? this.dataset['300800F6']?.Value[0]
      : this.dataset['300800F6']?.Value;
  }

  get '300800F6'(): Element {
    return this.dataset['300800F6'];
  }

  // Recorded Source Sequence
  get RecordedSourceSequence(): any {
    const element = this.dataset['30080100'];
    return (element?.Value.length === 1)
      ? this.dataset['30080100']?.Value[0]
      : this.dataset['30080100']?.Value;
  }

  get '30080100'(): Element {
    return this.dataset['30080100'];
  }

  // Source Serial Number
  get SourceSerialNumber(): any {
    const element = this.dataset['30080105'];
    return (element?.Value.length === 1)
      ? this.dataset['30080105']?.Value[0]
      : this.dataset['30080105']?.Value;
  }

  get '30080105'(): Element {
    return this.dataset['30080105'];
  }

  // Treatment Session Application Setup Sequence
  get TreatmentSessionApplicationSetupSequence(): any {
    const element = this.dataset['30080110'];
    return (element?.Value.length === 1)
      ? this.dataset['30080110']?.Value[0]
      : this.dataset['30080110']?.Value;
  }

  get '30080110'(): Element {
    return this.dataset['30080110'];
  }

  // Application Setup Check
  get ApplicationSetupCheck(): any {
    const element = this.dataset['30080116'];
    return (element?.Value.length === 1)
      ? this.dataset['30080116']?.Value[0]
      : this.dataset['30080116']?.Value;
  }

  get '30080116'(): Element {
    return this.dataset['30080116'];
  }

  // Recorded Brachy Accessory Device Sequence
  get RecordedBrachyAccessoryDeviceSequence(): any {
    const element = this.dataset['30080120'];
    return (element?.Value.length === 1)
      ? this.dataset['30080120']?.Value[0]
      : this.dataset['30080120']?.Value;
  }

  get '30080120'(): Element {
    return this.dataset['30080120'];
  }

  // Referenced Brachy Accessory Device Number
  get ReferencedBrachyAccessoryDeviceNumber(): any {
    const element = this.dataset['30080122'];
    return (element?.Value.length === 1)
      ? this.dataset['30080122']?.Value[0]
      : this.dataset['30080122']?.Value;
  }

  get '30080122'(): Element {
    return this.dataset['30080122'];
  }

  // Recorded Channel Sequence
  get RecordedChannelSequence(): any {
    const element = this.dataset['30080130'];
    return (element?.Value.length === 1)
      ? this.dataset['30080130']?.Value[0]
      : this.dataset['30080130']?.Value;
  }

  get '30080130'(): Element {
    return this.dataset['30080130'];
  }

  // Specified Channel Total Time
  get SpecifiedChannelTotalTime(): any {
    const element = this.dataset['30080132'];
    return (element?.Value.length === 1)
      ? this.dataset['30080132']?.Value[0]
      : this.dataset['30080132']?.Value;
  }

  get '30080132'(): Element {
    return this.dataset['30080132'];
  }

  // Delivered Channel Total Time
  get DeliveredChannelTotalTime(): any {
    const element = this.dataset['30080134'];
    return (element?.Value.length === 1)
      ? this.dataset['30080134']?.Value[0]
      : this.dataset['30080134']?.Value;
  }

  get '30080134'(): Element {
    return this.dataset['30080134'];
  }

  // Specified Number of Pulses
  get SpecifiedNumberOfPulses(): any {
    const element = this.dataset['30080136'];
    return (element?.Value.length === 1)
      ? this.dataset['30080136']?.Value[0]
      : this.dataset['30080136']?.Value;
  }

  get '30080136'(): Element {
    return this.dataset['30080136'];
  }

  // Delivered Number of Pulses
  get DeliveredNumberOfPulses(): any {
    const element = this.dataset['30080138'];
    return (element?.Value.length === 1)
      ? this.dataset['30080138']?.Value[0]
      : this.dataset['30080138']?.Value;
  }

  get '30080138'(): Element {
    return this.dataset['30080138'];
  }

  // Specified Pulse Repetition Interval
  get SpecifiedPulseRepetitionInterval(): any {
    const element = this.dataset['3008013A'];
    return (element?.Value.length === 1)
      ? this.dataset['3008013A']?.Value[0]
      : this.dataset['3008013A']?.Value;
  }

  get '3008013A'(): Element {
    return this.dataset['3008013A'];
  }

  // Delivered Pulse Repetition Interval
  get DeliveredPulseRepetitionInterval(): any {
    const element = this.dataset['3008013C'];
    return (element?.Value.length === 1)
      ? this.dataset['3008013C']?.Value[0]
      : this.dataset['3008013C']?.Value;
  }

  get '3008013C'(): Element {
    return this.dataset['3008013C'];
  }

  // Recorded Source Applicator Sequence
  get RecordedSourceApplicatorSequence(): any {
    const element = this.dataset['30080140'];
    return (element?.Value.length === 1)
      ? this.dataset['30080140']?.Value[0]
      : this.dataset['30080140']?.Value;
  }

  get '30080140'(): Element {
    return this.dataset['30080140'];
  }

  // Referenced Source Applicator Number
  get ReferencedSourceApplicatorNumber(): any {
    const element = this.dataset['30080142'];
    return (element?.Value.length === 1)
      ? this.dataset['30080142']?.Value[0]
      : this.dataset['30080142']?.Value;
  }

  get '30080142'(): Element {
    return this.dataset['30080142'];
  }

  // Recorded Channel Shield Sequence
  get RecordedChannelShieldSequence(): any {
    const element = this.dataset['30080150'];
    return (element?.Value.length === 1)
      ? this.dataset['30080150']?.Value[0]
      : this.dataset['30080150']?.Value;
  }

  get '30080150'(): Element {
    return this.dataset['30080150'];
  }

  // Referenced Channel Shield Number
  get ReferencedChannelShieldNumber(): any {
    const element = this.dataset['30080152'];
    return (element?.Value.length === 1)
      ? this.dataset['30080152']?.Value[0]
      : this.dataset['30080152']?.Value;
  }

  get '30080152'(): Element {
    return this.dataset['30080152'];
  }

  // Brachy Control Point Delivered Sequence
  get BrachyControlPointDeliveredSequence(): any {
    const element = this.dataset['30080160'];
    return (element?.Value.length === 1)
      ? this.dataset['30080160']?.Value[0]
      : this.dataset['30080160']?.Value;
  }

  get '30080160'(): Element {
    return this.dataset['30080160'];
  }

  // Safe Position Exit Date
  get SafePositionExitDate(): any {
    const element = this.dataset['30080162'];
    return (element?.Value.length === 1)
      ? this.dataset['30080162']?.Value[0]
      : this.dataset['30080162']?.Value;
  }

  get '30080162'(): Element {
    return this.dataset['30080162'];
  }

  // Safe Position Exit Time
  get SafePositionExitTime(): any {
    const element = this.dataset['30080164'];
    return (element?.Value.length === 1)
      ? this.dataset['30080164']?.Value[0]
      : this.dataset['30080164']?.Value;
  }

  get '30080164'(): Element {
    return this.dataset['30080164'];
  }

  // Safe Position Return Date
  get SafePositionReturnDate(): any {
    const element = this.dataset['30080166'];
    return (element?.Value.length === 1)
      ? this.dataset['30080166']?.Value[0]
      : this.dataset['30080166']?.Value;
  }

  get '30080166'(): Element {
    return this.dataset['30080166'];
  }

  // Safe Position Return Time
  get SafePositionReturnTime(): any {
    const element = this.dataset['30080168'];
    return (element?.Value.length === 1)
      ? this.dataset['30080168']?.Value[0]
      : this.dataset['30080168']?.Value;
  }

  get '30080168'(): Element {
    return this.dataset['30080168'];
  }

  // Pulse Specific Brachy Control Point Delivered Sequence
  get PulseSpecificBrachyControlPointDeliveredSequence(): any {
    const element = this.dataset['30080171'];
    return (element?.Value.length === 1)
      ? this.dataset['30080171']?.Value[0]
      : this.dataset['30080171']?.Value;
  }

  get '30080171'(): Element {
    return this.dataset['30080171'];
  }

  // Pulse Number
  get PulseNumber(): any {
    const element = this.dataset['30080172'];
    return (element?.Value.length === 1)
      ? this.dataset['30080172']?.Value[0]
      : this.dataset['30080172']?.Value;
  }

  get '30080172'(): Element {
    return this.dataset['30080172'];
  }

  // Brachy Pulse Control Point Delivered Sequence
  get BrachyPulseControlPointDeliveredSequence(): any {
    const element = this.dataset['30080173'];
    return (element?.Value.length === 1)
      ? this.dataset['30080173']?.Value[0]
      : this.dataset['30080173']?.Value;
  }

  get '30080173'(): Element {
    return this.dataset['30080173'];
  }

  // Current Treatment Status
  get CurrentTreatmentStatus(): any {
    const element = this.dataset['30080200'];
    return (element?.Value.length === 1)
      ? this.dataset['30080200']?.Value[0]
      : this.dataset['30080200']?.Value;
  }

  get '30080200'(): Element {
    return this.dataset['30080200'];
  }

  // Treatment Status Comment
  get TreatmentStatusComment(): any {
    const element = this.dataset['30080202'];
    return (element?.Value.length === 1)
      ? this.dataset['30080202']?.Value[0]
      : this.dataset['30080202']?.Value;
  }

  get '30080202'(): Element {
    return this.dataset['30080202'];
  }

  // Fraction Group Summary Sequence
  get FractionGroupSummarySequence(): any {
    const element = this.dataset['30080220'];
    return (element?.Value.length === 1)
      ? this.dataset['30080220']?.Value[0]
      : this.dataset['30080220']?.Value;
  }

  get '30080220'(): Element {
    return this.dataset['30080220'];
  }

  // Referenced Fraction Number
  get ReferencedFractionNumber(): any {
    const element = this.dataset['30080223'];
    return (element?.Value.length === 1)
      ? this.dataset['30080223']?.Value[0]
      : this.dataset['30080223']?.Value;
  }

  get '30080223'(): Element {
    return this.dataset['30080223'];
  }

  // Fraction Group Type
  get FractionGroupType(): any {
    const element = this.dataset['30080224'];
    return (element?.Value.length === 1)
      ? this.dataset['30080224']?.Value[0]
      : this.dataset['30080224']?.Value;
  }

  get '30080224'(): Element {
    return this.dataset['30080224'];
  }

  // Beam Stopper Position
  get BeamStopperPosition(): any {
    const element = this.dataset['30080230'];
    return (element?.Value.length === 1)
      ? this.dataset['30080230']?.Value[0]
      : this.dataset['30080230']?.Value;
  }

  get '30080230'(): Element {
    return this.dataset['30080230'];
  }

  // Fraction Status Summary Sequence
  get FractionStatusSummarySequence(): any {
    const element = this.dataset['30080240'];
    return (element?.Value.length === 1)
      ? this.dataset['30080240']?.Value[0]
      : this.dataset['30080240']?.Value;
  }

  get '30080240'(): Element {
    return this.dataset['30080240'];
  }

  // Treatment Date
  get TreatmentDate(): any {
    const element = this.dataset['30080250'];
    return (element?.Value.length === 1)
      ? this.dataset['30080250']?.Value[0]
      : this.dataset['30080250']?.Value;
  }

  get '30080250'(): Element {
    return this.dataset['30080250'];
  }

  // Treatment Time
  get TreatmentTime(): any {
    const element = this.dataset['30080251'];
    return (element?.Value.length === 1)
      ? this.dataset['30080251']?.Value[0]
      : this.dataset['30080251']?.Value;
  }

  get '30080251'(): Element {
    return this.dataset['30080251'];
  }

  // RT Plan Label
  get RTPlanLabel(): any {
    const element = this.dataset['300A0002'];
    return (element?.Value.length === 1)
      ? this.dataset['300A0002']?.Value[0]
      : this.dataset['300A0002']?.Value;
  }

  get '300A0002'(): Element {
    return this.dataset['300A0002'];
  }

  // RT Plan Name
  get RTPlanName(): any {
    const element = this.dataset['300A0003'];
    return (element?.Value.length === 1)
      ? this.dataset['300A0003']?.Value[0]
      : this.dataset['300A0003']?.Value;
  }

  get '300A0003'(): Element {
    return this.dataset['300A0003'];
  }

  // RT Plan Description
  get RTPlanDescription(): any {
    const element = this.dataset['300A0004'];
    return (element?.Value.length === 1)
      ? this.dataset['300A0004']?.Value[0]
      : this.dataset['300A0004']?.Value;
  }

  get '300A0004'(): Element {
    return this.dataset['300A0004'];
  }

  // RT Plan Date
  get RTPlanDate(): any {
    const element = this.dataset['300A0006'];
    return (element?.Value.length === 1)
      ? this.dataset['300A0006']?.Value[0]
      : this.dataset['300A0006']?.Value;
  }

  get '300A0006'(): Element {
    return this.dataset['300A0006'];
  }

  // RT Plan Time
  get RTPlanTime(): any {
    const element = this.dataset['300A0007'];
    return (element?.Value.length === 1)
      ? this.dataset['300A0007']?.Value[0]
      : this.dataset['300A0007']?.Value;
  }

  get '300A0007'(): Element {
    return this.dataset['300A0007'];
  }

  // Treatment Protocols
  get TreatmentProtocols(): any {
    const element = this.dataset['300A0009'];
    return (element?.Value.length === 1)
      ? this.dataset['300A0009']?.Value[0]
      : this.dataset['300A0009']?.Value;
  }

  get '300A0009'(): Element {
    return this.dataset['300A0009'];
  }

  // Plan Intent
  get PlanIntent(): any {
    const element = this.dataset['300A000A'];
    return (element?.Value.length === 1)
      ? this.dataset['300A000A']?.Value[0]
      : this.dataset['300A000A']?.Value;
  }

  get '300A000A'(): Element {
    return this.dataset['300A000A'];
  }

  // Treatment Sites
  get TreatmentSites(): any {
    const element = this.dataset['300A000B'];
    return (element?.Value.length === 1)
      ? this.dataset['300A000B']?.Value[0]
      : this.dataset['300A000B']?.Value;
  }

  get '300A000B'(): Element {
    return this.dataset['300A000B'];
  }

  // RT Plan Geometry
  get RTPlanGeometry(): any {
    const element = this.dataset['300A000C'];
    return (element?.Value.length === 1)
      ? this.dataset['300A000C']?.Value[0]
      : this.dataset['300A000C']?.Value;
  }

  get '300A000C'(): Element {
    return this.dataset['300A000C'];
  }

  // Prescription Description
  get PrescriptionDescription(): any {
    const element = this.dataset['300A000E'];
    return (element?.Value.length === 1)
      ? this.dataset['300A000E']?.Value[0]
      : this.dataset['300A000E']?.Value;
  }

  get '300A000E'(): Element {
    return this.dataset['300A000E'];
  }

  // Dose Reference Sequence
  get DoseReferenceSequence(): any {
    const element = this.dataset['300A0010'];
    return (element?.Value.length === 1)
      ? this.dataset['300A0010']?.Value[0]
      : this.dataset['300A0010']?.Value;
  }

  get '300A0010'(): Element {
    return this.dataset['300A0010'];
  }

  // Dose Reference Number
  get DoseReferenceNumber(): any {
    const element = this.dataset['300A0012'];
    return (element?.Value.length === 1)
      ? this.dataset['300A0012']?.Value[0]
      : this.dataset['300A0012']?.Value;
  }

  get '300A0012'(): Element {
    return this.dataset['300A0012'];
  }

  // Dose Reference UID
  get DoseReferenceUID(): any {
    const element = this.dataset['300A0013'];
    return (element?.Value.length === 1)
      ? this.dataset['300A0013']?.Value[0]
      : this.dataset['300A0013']?.Value;
  }

  get '300A0013'(): Element {
    return this.dataset['300A0013'];
  }

  // Dose Reference Structure Type
  get DoseReferenceStructureType(): any {
    const element = this.dataset['300A0014'];
    return (element?.Value.length === 1)
      ? this.dataset['300A0014']?.Value[0]
      : this.dataset['300A0014']?.Value;
  }

  get '300A0014'(): Element {
    return this.dataset['300A0014'];
  }

  // Nominal Beam Energy Unit
  get NominalBeamEnergyUnit(): any {
    const element = this.dataset['300A0015'];
    return (element?.Value.length === 1)
      ? this.dataset['300A0015']?.Value[0]
      : this.dataset['300A0015']?.Value;
  }

  get '300A0015'(): Element {
    return this.dataset['300A0015'];
  }

  // Dose Reference Description
  get DoseReferenceDescription(): any {
    const element = this.dataset['300A0016'];
    return (element?.Value.length === 1)
      ? this.dataset['300A0016']?.Value[0]
      : this.dataset['300A0016']?.Value;
  }

  get '300A0016'(): Element {
    return this.dataset['300A0016'];
  }

  // Dose Reference Point Coordinates
  get DoseReferencePointCoordinates(): any {
    const element = this.dataset['300A0018'];
    return (element?.Value.length === 1)
      ? this.dataset['300A0018']?.Value[0]
      : this.dataset['300A0018']?.Value;
  }

  get '300A0018'(): Element {
    return this.dataset['300A0018'];
  }

  // Nominal Prior Dose
  get NominalPriorDose(): any {
    const element = this.dataset['300A001A'];
    return (element?.Value.length === 1)
      ? this.dataset['300A001A']?.Value[0]
      : this.dataset['300A001A']?.Value;
  }

  get '300A001A'(): Element {
    return this.dataset['300A001A'];
  }

  // Dose Reference Type
  get DoseReferenceType(): any {
    const element = this.dataset['300A0020'];
    return (element?.Value.length === 1)
      ? this.dataset['300A0020']?.Value[0]
      : this.dataset['300A0020']?.Value;
  }

  get '300A0020'(): Element {
    return this.dataset['300A0020'];
  }

  // Constraint Weight
  get ConstraintWeight(): any {
    const element = this.dataset['300A0021'];
    return (element?.Value.length === 1)
      ? this.dataset['300A0021']?.Value[0]
      : this.dataset['300A0021']?.Value;
  }

  get '300A0021'(): Element {
    return this.dataset['300A0021'];
  }

  // Delivery Warning Dose
  get DeliveryWarningDose(): any {
    const element = this.dataset['300A0022'];
    return (element?.Value.length === 1)
      ? this.dataset['300A0022']?.Value[0]
      : this.dataset['300A0022']?.Value;
  }

  get '300A0022'(): Element {
    return this.dataset['300A0022'];
  }

  // Delivery Maximum Dose
  get DeliveryMaximumDose(): any {
    const element = this.dataset['300A0023'];
    return (element?.Value.length === 1)
      ? this.dataset['300A0023']?.Value[0]
      : this.dataset['300A0023']?.Value;
  }

  get '300A0023'(): Element {
    return this.dataset['300A0023'];
  }

  // Target Minimum Dose
  get TargetMinimumDose(): any {
    const element = this.dataset['300A0025'];
    return (element?.Value.length === 1)
      ? this.dataset['300A0025']?.Value[0]
      : this.dataset['300A0025']?.Value;
  }

  get '300A0025'(): Element {
    return this.dataset['300A0025'];
  }

  // Target Prescription Dose
  get TargetPrescriptionDose(): any {
    const element = this.dataset['300A0026'];
    return (element?.Value.length === 1)
      ? this.dataset['300A0026']?.Value[0]
      : this.dataset['300A0026']?.Value;
  }

  get '300A0026'(): Element {
    return this.dataset['300A0026'];
  }

  // Target Maximum Dose
  get TargetMaximumDose(): any {
    const element = this.dataset['300A0027'];
    return (element?.Value.length === 1)
      ? this.dataset['300A0027']?.Value[0]
      : this.dataset['300A0027']?.Value;
  }

  get '300A0027'(): Element {
    return this.dataset['300A0027'];
  }

  // Target Underdose Volume Fraction
  get TargetUnderdoseVolumeFraction(): any {
    const element = this.dataset['300A0028'];
    return (element?.Value.length === 1)
      ? this.dataset['300A0028']?.Value[0]
      : this.dataset['300A0028']?.Value;
  }

  get '300A0028'(): Element {
    return this.dataset['300A0028'];
  }

  // Organ at Risk Full-volume Dose
  get OrganAtRiskFullVolumeDose(): any {
    const element = this.dataset['300A002A'];
    return (element?.Value.length === 1)
      ? this.dataset['300A002A']?.Value[0]
      : this.dataset['300A002A']?.Value;
  }

  get '300A002A'(): Element {
    return this.dataset['300A002A'];
  }

  // Organ at Risk Limit Dose
  get OrganAtRiskLimitDose(): any {
    const element = this.dataset['300A002B'];
    return (element?.Value.length === 1)
      ? this.dataset['300A002B']?.Value[0]
      : this.dataset['300A002B']?.Value;
  }

  get '300A002B'(): Element {
    return this.dataset['300A002B'];
  }

  // Organ at Risk Maximum Dose
  get OrganAtRiskMaximumDose(): any {
    const element = this.dataset['300A002C'];
    return (element?.Value.length === 1)
      ? this.dataset['300A002C']?.Value[0]
      : this.dataset['300A002C']?.Value;
  }

  get '300A002C'(): Element {
    return this.dataset['300A002C'];
  }

  // Organ at Risk Overdose Volume Fraction
  get OrganAtRiskOverdoseVolumeFraction(): any {
    const element = this.dataset['300A002D'];
    return (element?.Value.length === 1)
      ? this.dataset['300A002D']?.Value[0]
      : this.dataset['300A002D']?.Value;
  }

  get '300A002D'(): Element {
    return this.dataset['300A002D'];
  }

  // Tolerance Table Sequence
  get ToleranceTableSequence(): any {
    const element = this.dataset['300A0040'];
    return (element?.Value.length === 1)
      ? this.dataset['300A0040']?.Value[0]
      : this.dataset['300A0040']?.Value;
  }

  get '300A0040'(): Element {
    return this.dataset['300A0040'];
  }

  // Tolerance Table Number
  get ToleranceTableNumber(): any {
    const element = this.dataset['300A0042'];
    return (element?.Value.length === 1)
      ? this.dataset['300A0042']?.Value[0]
      : this.dataset['300A0042']?.Value;
  }

  get '300A0042'(): Element {
    return this.dataset['300A0042'];
  }

  // Tolerance Table Label
  get ToleranceTableLabel(): any {
    const element = this.dataset['300A0043'];
    return (element?.Value.length === 1)
      ? this.dataset['300A0043']?.Value[0]
      : this.dataset['300A0043']?.Value;
  }

  get '300A0043'(): Element {
    return this.dataset['300A0043'];
  }

  // Gantry Angle Tolerance
  get GantryAngleTolerance(): any {
    const element = this.dataset['300A0044'];
    return (element?.Value.length === 1)
      ? this.dataset['300A0044']?.Value[0]
      : this.dataset['300A0044']?.Value;
  }

  get '300A0044'(): Element {
    return this.dataset['300A0044'];
  }

  // Beam Limiting Device Angle Tolerance
  get BeamLimitingDeviceAngleTolerance(): any {
    const element = this.dataset['300A0046'];
    return (element?.Value.length === 1)
      ? this.dataset['300A0046']?.Value[0]
      : this.dataset['300A0046']?.Value;
  }

  get '300A0046'(): Element {
    return this.dataset['300A0046'];
  }

  // Beam Limiting Device Tolerance Sequence
  get BeamLimitingDeviceToleranceSequence(): any {
    const element = this.dataset['300A0048'];
    return (element?.Value.length === 1)
      ? this.dataset['300A0048']?.Value[0]
      : this.dataset['300A0048']?.Value;
  }

  get '300A0048'(): Element {
    return this.dataset['300A0048'];
  }

  // Beam Limiting Device Position Tolerance
  get BeamLimitingDevicePositionTolerance(): any {
    const element = this.dataset['300A004A'];
    return (element?.Value.length === 1)
      ? this.dataset['300A004A']?.Value[0]
      : this.dataset['300A004A']?.Value;
  }

  get '300A004A'(): Element {
    return this.dataset['300A004A'];
  }

  // Snout Position Tolerance
  get SnoutPositionTolerance(): any {
    const element = this.dataset['300A004B'];
    return (element?.Value.length === 1)
      ? this.dataset['300A004B']?.Value[0]
      : this.dataset['300A004B']?.Value;
  }

  get '300A004B'(): Element {
    return this.dataset['300A004B'];
  }

  // Patient Support Angle Tolerance
  get PatientSupportAngleTolerance(): any {
    const element = this.dataset['300A004C'];
    return (element?.Value.length === 1)
      ? this.dataset['300A004C']?.Value[0]
      : this.dataset['300A004C']?.Value;
  }

  get '300A004C'(): Element {
    return this.dataset['300A004C'];
  }

  // Table Top Eccentric Angle Tolerance
  get TableTopEccentricAngleTolerance(): any {
    const element = this.dataset['300A004E'];
    return (element?.Value.length === 1)
      ? this.dataset['300A004E']?.Value[0]
      : this.dataset['300A004E']?.Value;
  }

  get '300A004E'(): Element {
    return this.dataset['300A004E'];
  }

  // Table Top Pitch Angle Tolerance
  get TableTopPitchAngleTolerance(): any {
    const element = this.dataset['300A004F'];
    return (element?.Value.length === 1)
      ? this.dataset['300A004F']?.Value[0]
      : this.dataset['300A004F']?.Value;
  }

  get '300A004F'(): Element {
    return this.dataset['300A004F'];
  }

  // Table Top Roll Angle Tolerance
  get TableTopRollAngleTolerance(): any {
    const element = this.dataset['300A0050'];
    return (element?.Value.length === 1)
      ? this.dataset['300A0050']?.Value[0]
      : this.dataset['300A0050']?.Value;
  }

  get '300A0050'(): Element {
    return this.dataset['300A0050'];
  }

  // Table Top Vertical Position Tolerance
  get TableTopVerticalPositionTolerance(): any {
    const element = this.dataset['300A0051'];
    return (element?.Value.length === 1)
      ? this.dataset['300A0051']?.Value[0]
      : this.dataset['300A0051']?.Value;
  }

  get '300A0051'(): Element {
    return this.dataset['300A0051'];
  }

  // Table Top Longitudinal Position Tolerance
  get TableTopLongitudinalPositionTolerance(): any {
    const element = this.dataset['300A0052'];
    return (element?.Value.length === 1)
      ? this.dataset['300A0052']?.Value[0]
      : this.dataset['300A0052']?.Value;
  }

  get '300A0052'(): Element {
    return this.dataset['300A0052'];
  }

  // Table Top Lateral Position Tolerance
  get TableTopLateralPositionTolerance(): any {
    const element = this.dataset['300A0053'];
    return (element?.Value.length === 1)
      ? this.dataset['300A0053']?.Value[0]
      : this.dataset['300A0053']?.Value;
  }

  get '300A0053'(): Element {
    return this.dataset['300A0053'];
  }

  // RT Plan Relationship
  get RTPlanRelationship(): any {
    const element = this.dataset['300A0055'];
    return (element?.Value.length === 1)
      ? this.dataset['300A0055']?.Value[0]
      : this.dataset['300A0055']?.Value;
  }

  get '300A0055'(): Element {
    return this.dataset['300A0055'];
  }

  // Fraction Group Sequence
  get FractionGroupSequence(): any {
    const element = this.dataset['300A0070'];
    return (element?.Value.length === 1)
      ? this.dataset['300A0070']?.Value[0]
      : this.dataset['300A0070']?.Value;
  }

  get '300A0070'(): Element {
    return this.dataset['300A0070'];
  }

  // Fraction Group Number
  get FractionGroupNumber(): any {
    const element = this.dataset['300A0071'];
    return (element?.Value.length === 1)
      ? this.dataset['300A0071']?.Value[0]
      : this.dataset['300A0071']?.Value;
  }

  get '300A0071'(): Element {
    return this.dataset['300A0071'];
  }

  // Fraction Group Description
  get FractionGroupDescription(): any {
    const element = this.dataset['300A0072'];
    return (element?.Value.length === 1)
      ? this.dataset['300A0072']?.Value[0]
      : this.dataset['300A0072']?.Value;
  }

  get '300A0072'(): Element {
    return this.dataset['300A0072'];
  }

  // Number of Fractions Planned
  get NumberOfFractionsPlanned(): any {
    const element = this.dataset['300A0078'];
    return (element?.Value.length === 1)
      ? this.dataset['300A0078']?.Value[0]
      : this.dataset['300A0078']?.Value;
  }

  get '300A0078'(): Element {
    return this.dataset['300A0078'];
  }

  // Number of Fraction Pattern Digits Per Day
  get NumberOfFractionPatternDigitsPerDay(): any {
    const element = this.dataset['300A0079'];
    return (element?.Value.length === 1)
      ? this.dataset['300A0079']?.Value[0]
      : this.dataset['300A0079']?.Value;
  }

  get '300A0079'(): Element {
    return this.dataset['300A0079'];
  }

  // Repeat Fraction Cycle Length
  get RepeatFractionCycleLength(): any {
    const element = this.dataset['300A007A'];
    return (element?.Value.length === 1)
      ? this.dataset['300A007A']?.Value[0]
      : this.dataset['300A007A']?.Value;
  }

  get '300A007A'(): Element {
    return this.dataset['300A007A'];
  }

  // Fraction Pattern
  get FractionPattern(): any {
    const element = this.dataset['300A007B'];
    return (element?.Value.length === 1)
      ? this.dataset['300A007B']?.Value[0]
      : this.dataset['300A007B']?.Value;
  }

  get '300A007B'(): Element {
    return this.dataset['300A007B'];
  }

  // Number of Beams
  get NumberOfBeams(): any {
    const element = this.dataset['300A0080'];
    return (element?.Value.length === 1)
      ? this.dataset['300A0080']?.Value[0]
      : this.dataset['300A0080']?.Value;
  }

  get '300A0080'(): Element {
    return this.dataset['300A0080'];
  }

  // Beam Dose Specification Point
  get BeamDoseSpecificationPoint(): any {
    const element = this.dataset['300A0082'];
    return (element?.Value.length === 1)
      ? this.dataset['300A0082']?.Value[0]
      : this.dataset['300A0082']?.Value;
  }

  get '300A0082'(): Element {
    return this.dataset['300A0082'];
  }

  // Beam Dose
  get BeamDose(): any {
    const element = this.dataset['300A0084'];
    return (element?.Value.length === 1)
      ? this.dataset['300A0084']?.Value[0]
      : this.dataset['300A0084']?.Value;
  }

  get '300A0084'(): Element {
    return this.dataset['300A0084'];
  }

  // Beam Meterset
  get BeamMeterset(): any {
    const element = this.dataset['300A0086'];
    return (element?.Value.length === 1)
      ? this.dataset['300A0086']?.Value[0]
      : this.dataset['300A0086']?.Value;
  }

  get '300A0086'(): Element {
    return this.dataset['300A0086'];
  }

  // Beam Dose Point Depth
  get BeamDosePointDepth(): any {
    const element = this.dataset['300A0088'];
    return (element?.Value.length === 1)
      ? this.dataset['300A0088']?.Value[0]
      : this.dataset['300A0088']?.Value;
  }

  get '300A0088'(): Element {
    return this.dataset['300A0088'];
  }

  // Beam Dose Point Equivalent Depth
  get BeamDosePointEquivalentDepth(): any {
    const element = this.dataset['300A0089'];
    return (element?.Value.length === 1)
      ? this.dataset['300A0089']?.Value[0]
      : this.dataset['300A0089']?.Value;
  }

  get '300A0089'(): Element {
    return this.dataset['300A0089'];
  }

  // Beam Dose Point SSD
  get BeamDosePointSSD(): any {
    const element = this.dataset['300A008A'];
    return (element?.Value.length === 1)
      ? this.dataset['300A008A']?.Value[0]
      : this.dataset['300A008A']?.Value;
  }

  get '300A008A'(): Element {
    return this.dataset['300A008A'];
  }

  // Beam Dose Meaning
  get BeamDoseMeaning(): any {
    const element = this.dataset['300A008B'];
    return (element?.Value.length === 1)
      ? this.dataset['300A008B']?.Value[0]
      : this.dataset['300A008B']?.Value;
  }

  get '300A008B'(): Element {
    return this.dataset['300A008B'];
  }

  // Beam Dose Verification Control Point Sequence
  get BeamDoseVerificationControlPointSequence(): any {
    const element = this.dataset['300A008C'];
    return (element?.Value.length === 1)
      ? this.dataset['300A008C']?.Value[0]
      : this.dataset['300A008C']?.Value;
  }

  get '300A008C'(): Element {
    return this.dataset['300A008C'];
  }

  // Average Beam Dose Point Depth
  get AverageBeamDosePointDepth(): any {
    const element = this.dataset['300A008D'];
    return (element?.Value.length === 1)
      ? this.dataset['300A008D']?.Value[0]
      : this.dataset['300A008D']?.Value;
  }

  get '300A008D'(): Element {
    return this.dataset['300A008D'];
  }

  // Average Beam Dose Point Equivalent Depth
  get AverageBeamDosePointEquivalentDepth(): any {
    const element = this.dataset['300A008E'];
    return (element?.Value.length === 1)
      ? this.dataset['300A008E']?.Value[0]
      : this.dataset['300A008E']?.Value;
  }

  get '300A008E'(): Element {
    return this.dataset['300A008E'];
  }

  // Average Beam Dose Point SSD
  get AverageBeamDosePointSSD(): any {
    const element = this.dataset['300A008F'];
    return (element?.Value.length === 1)
      ? this.dataset['300A008F']?.Value[0]
      : this.dataset['300A008F']?.Value;
  }

  get '300A008F'(): Element {
    return this.dataset['300A008F'];
  }

  // Number of Brachy Application Setups
  get NumberOfBrachyApplicationSetups(): any {
    const element = this.dataset['300A00A0'];
    return (element?.Value.length === 1)
      ? this.dataset['300A00A0']?.Value[0]
      : this.dataset['300A00A0']?.Value;
  }

  get '300A00A0'(): Element {
    return this.dataset['300A00A0'];
  }

  // Brachy Application Setup Dose Specification Point
  get BrachyApplicationSetupDoseSpecificationPoint(): any {
    const element = this.dataset['300A00A2'];
    return (element?.Value.length === 1)
      ? this.dataset['300A00A2']?.Value[0]
      : this.dataset['300A00A2']?.Value;
  }

  get '300A00A2'(): Element {
    return this.dataset['300A00A2'];
  }

  // Brachy Application Setup Dose
  get BrachyApplicationSetupDose(): any {
    const element = this.dataset['300A00A4'];
    return (element?.Value.length === 1)
      ? this.dataset['300A00A4']?.Value[0]
      : this.dataset['300A00A4']?.Value;
  }

  get '300A00A4'(): Element {
    return this.dataset['300A00A4'];
  }

  // Beam Sequence
  get BeamSequence(): any {
    const element = this.dataset['300A00B0'];
    return (element?.Value.length === 1)
      ? this.dataset['300A00B0']?.Value[0]
      : this.dataset['300A00B0']?.Value;
  }

  get '300A00B0'(): Element {
    return this.dataset['300A00B0'];
  }

  // Treatment Machine Name
  get TreatmentMachineName(): any {
    const element = this.dataset['300A00B2'];
    return (element?.Value.length === 1)
      ? this.dataset['300A00B2']?.Value[0]
      : this.dataset['300A00B2']?.Value;
  }

  get '300A00B2'(): Element {
    return this.dataset['300A00B2'];
  }

  // Primary Dosimeter Unit
  get PrimaryDosimeterUnit(): any {
    const element = this.dataset['300A00B3'];
    return (element?.Value.length === 1)
      ? this.dataset['300A00B3']?.Value[0]
      : this.dataset['300A00B3']?.Value;
  }

  get '300A00B3'(): Element {
    return this.dataset['300A00B3'];
  }

  // Source-Axis Distance
  get SourceAxisDistance(): any {
    const element = this.dataset['300A00B4'];
    return (element?.Value.length === 1)
      ? this.dataset['300A00B4']?.Value[0]
      : this.dataset['300A00B4']?.Value;
  }

  get '300A00B4'(): Element {
    return this.dataset['300A00B4'];
  }

  // Beam Limiting Device Sequence
  get BeamLimitingDeviceSequence(): any {
    const element = this.dataset['300A00B6'];
    return (element?.Value.length === 1)
      ? this.dataset['300A00B6']?.Value[0]
      : this.dataset['300A00B6']?.Value;
  }

  get '300A00B6'(): Element {
    return this.dataset['300A00B6'];
  }

  // RT Beam Limiting Device Type
  get RTBeamLimitingDeviceType(): any {
    const element = this.dataset['300A00B8'];
    return (element?.Value.length === 1)
      ? this.dataset['300A00B8']?.Value[0]
      : this.dataset['300A00B8']?.Value;
  }

  get '300A00B8'(): Element {
    return this.dataset['300A00B8'];
  }

  // Source to Beam Limiting Device Distance
  get SourceToBeamLimitingDeviceDistance(): any {
    const element = this.dataset['300A00BA'];
    return (element?.Value.length === 1)
      ? this.dataset['300A00BA']?.Value[0]
      : this.dataset['300A00BA']?.Value;
  }

  get '300A00BA'(): Element {
    return this.dataset['300A00BA'];
  }

  // Isocenter to Beam Limiting Device Distance
  get IsocenterToBeamLimitingDeviceDistance(): any {
    const element = this.dataset['300A00BB'];
    return (element?.Value.length === 1)
      ? this.dataset['300A00BB']?.Value[0]
      : this.dataset['300A00BB']?.Value;
  }

  get '300A00BB'(): Element {
    return this.dataset['300A00BB'];
  }

  // Number of Leaf/Jaw Pairs
  get NumberOfLeafJawPairs(): any {
    const element = this.dataset['300A00BC'];
    return (element?.Value.length === 1)
      ? this.dataset['300A00BC']?.Value[0]
      : this.dataset['300A00BC']?.Value;
  }

  get '300A00BC'(): Element {
    return this.dataset['300A00BC'];
  }

  // Leaf Position Boundaries
  get LeafPositionBoundaries(): any {
    const element = this.dataset['300A00BE'];
    return (element?.Value.length === 1)
      ? this.dataset['300A00BE']?.Value[0]
      : this.dataset['300A00BE']?.Value;
  }

  get '300A00BE'(): Element {
    return this.dataset['300A00BE'];
  }

  // Beam Number
  get BeamNumber(): any {
    const element = this.dataset['300A00C0'];
    return (element?.Value.length === 1)
      ? this.dataset['300A00C0']?.Value[0]
      : this.dataset['300A00C0']?.Value;
  }

  get '300A00C0'(): Element {
    return this.dataset['300A00C0'];
  }

  // Beam Name
  get BeamName(): any {
    const element = this.dataset['300A00C2'];
    return (element?.Value.length === 1)
      ? this.dataset['300A00C2']?.Value[0]
      : this.dataset['300A00C2']?.Value;
  }

  get '300A00C2'(): Element {
    return this.dataset['300A00C2'];
  }

  // Beam Description
  get BeamDescription(): any {
    const element = this.dataset['300A00C3'];
    return (element?.Value.length === 1)
      ? this.dataset['300A00C3']?.Value[0]
      : this.dataset['300A00C3']?.Value;
  }

  get '300A00C3'(): Element {
    return this.dataset['300A00C3'];
  }

  // Beam Type
  get BeamType(): any {
    const element = this.dataset['300A00C4'];
    return (element?.Value.length === 1)
      ? this.dataset['300A00C4']?.Value[0]
      : this.dataset['300A00C4']?.Value;
  }

  get '300A00C4'(): Element {
    return this.dataset['300A00C4'];
  }

  // Beam Delivery Duration Limit
  get BeamDeliveryDurationLimit(): any {
    const element = this.dataset['300A00C5'];
    return (element?.Value.length === 1)
      ? this.dataset['300A00C5']?.Value[0]
      : this.dataset['300A00C5']?.Value;
  }

  get '300A00C5'(): Element {
    return this.dataset['300A00C5'];
  }

  // Radiation Type
  get RadiationType(): any {
    const element = this.dataset['300A00C6'];
    return (element?.Value.length === 1)
      ? this.dataset['300A00C6']?.Value[0]
      : this.dataset['300A00C6']?.Value;
  }

  get '300A00C6'(): Element {
    return this.dataset['300A00C6'];
  }

  // High-Dose Technique Type
  get HighDoseTechniqueType(): any {
    const element = this.dataset['300A00C7'];
    return (element?.Value.length === 1)
      ? this.dataset['300A00C7']?.Value[0]
      : this.dataset['300A00C7']?.Value;
  }

  get '300A00C7'(): Element {
    return this.dataset['300A00C7'];
  }

  // Reference Image Number
  get ReferenceImageNumber(): any {
    const element = this.dataset['300A00C8'];
    return (element?.Value.length === 1)
      ? this.dataset['300A00C8']?.Value[0]
      : this.dataset['300A00C8']?.Value;
  }

  get '300A00C8'(): Element {
    return this.dataset['300A00C8'];
  }

  // Planned Verification Image Sequence
  get PlannedVerificationImageSequence(): any {
    const element = this.dataset['300A00CA'];
    return (element?.Value.length === 1)
      ? this.dataset['300A00CA']?.Value[0]
      : this.dataset['300A00CA']?.Value;
  }

  get '300A00CA'(): Element {
    return this.dataset['300A00CA'];
  }

  // Imaging Device-Specific Acquisition Parameters
  get ImagingDeviceSpecificAcquisitionParameters(): any {
    const element = this.dataset['300A00CC'];
    return (element?.Value.length === 1)
      ? this.dataset['300A00CC']?.Value[0]
      : this.dataset['300A00CC']?.Value;
  }

  get '300A00CC'(): Element {
    return this.dataset['300A00CC'];
  }

  // Treatment Delivery Type
  get TreatmentDeliveryType(): any {
    const element = this.dataset['300A00CE'];
    return (element?.Value.length === 1)
      ? this.dataset['300A00CE']?.Value[0]
      : this.dataset['300A00CE']?.Value;
  }

  get '300A00CE'(): Element {
    return this.dataset['300A00CE'];
  }

  // Number of Wedges
  get NumberOfWedges(): any {
    const element = this.dataset['300A00D0'];
    return (element?.Value.length === 1)
      ? this.dataset['300A00D0']?.Value[0]
      : this.dataset['300A00D0']?.Value;
  }

  get '300A00D0'(): Element {
    return this.dataset['300A00D0'];
  }

  // Wedge Sequence
  get WedgeSequence(): any {
    const element = this.dataset['300A00D1'];
    return (element?.Value.length === 1)
      ? this.dataset['300A00D1']?.Value[0]
      : this.dataset['300A00D1']?.Value;
  }

  get '300A00D1'(): Element {
    return this.dataset['300A00D1'];
  }

  // Wedge Number
  get WedgeNumber(): any {
    const element = this.dataset['300A00D2'];
    return (element?.Value.length === 1)
      ? this.dataset['300A00D2']?.Value[0]
      : this.dataset['300A00D2']?.Value;
  }

  get '300A00D2'(): Element {
    return this.dataset['300A00D2'];
  }

  // Wedge Type
  get WedgeType(): any {
    const element = this.dataset['300A00D3'];
    return (element?.Value.length === 1)
      ? this.dataset['300A00D3']?.Value[0]
      : this.dataset['300A00D3']?.Value;
  }

  get '300A00D3'(): Element {
    return this.dataset['300A00D3'];
  }

  // Wedge ID
  get WedgeID(): any {
    const element = this.dataset['300A00D4'];
    return (element?.Value.length === 1)
      ? this.dataset['300A00D4']?.Value[0]
      : this.dataset['300A00D4']?.Value;
  }

  get '300A00D4'(): Element {
    return this.dataset['300A00D4'];
  }

  // Wedge Angle
  get WedgeAngle(): any {
    const element = this.dataset['300A00D5'];
    return (element?.Value.length === 1)
      ? this.dataset['300A00D5']?.Value[0]
      : this.dataset['300A00D5']?.Value;
  }

  get '300A00D5'(): Element {
    return this.dataset['300A00D5'];
  }

  // Wedge Factor
  get WedgeFactor(): any {
    const element = this.dataset['300A00D6'];
    return (element?.Value.length === 1)
      ? this.dataset['300A00D6']?.Value[0]
      : this.dataset['300A00D6']?.Value;
  }

  get '300A00D6'(): Element {
    return this.dataset['300A00D6'];
  }

  // Total Wedge Tray Water-Equivalent Thickness
  get TotalWedgeTrayWaterEquivalentThickness(): any {
    const element = this.dataset['300A00D7'];
    return (element?.Value.length === 1)
      ? this.dataset['300A00D7']?.Value[0]
      : this.dataset['300A00D7']?.Value;
  }

  get '300A00D7'(): Element {
    return this.dataset['300A00D7'];
  }

  // Wedge Orientation
  get WedgeOrientation(): any {
    const element = this.dataset['300A00D8'];
    return (element?.Value.length === 1)
      ? this.dataset['300A00D8']?.Value[0]
      : this.dataset['300A00D8']?.Value;
  }

  get '300A00D8'(): Element {
    return this.dataset['300A00D8'];
  }

  // Isocenter to Wedge Tray Distance
  get IsocenterToWedgeTrayDistance(): any {
    const element = this.dataset['300A00D9'];
    return (element?.Value.length === 1)
      ? this.dataset['300A00D9']?.Value[0]
      : this.dataset['300A00D9']?.Value;
  }

  get '300A00D9'(): Element {
    return this.dataset['300A00D9'];
  }

  // Source to Wedge Tray Distance
  get SourceToWedgeTrayDistance(): any {
    const element = this.dataset['300A00DA'];
    return (element?.Value.length === 1)
      ? this.dataset['300A00DA']?.Value[0]
      : this.dataset['300A00DA']?.Value;
  }

  get '300A00DA'(): Element {
    return this.dataset['300A00DA'];
  }

  // Wedge Thin Edge Position
  get WedgeThinEdgePosition(): any {
    const element = this.dataset['300A00DB'];
    return (element?.Value.length === 1)
      ? this.dataset['300A00DB']?.Value[0]
      : this.dataset['300A00DB']?.Value;
  }

  get '300A00DB'(): Element {
    return this.dataset['300A00DB'];
  }

  // Bolus ID
  get BolusID(): any {
    const element = this.dataset['300A00DC'];
    return (element?.Value.length === 1)
      ? this.dataset['300A00DC']?.Value[0]
      : this.dataset['300A00DC']?.Value;
  }

  get '300A00DC'(): Element {
    return this.dataset['300A00DC'];
  }

  // Bolus Description
  get BolusDescription(): any {
    const element = this.dataset['300A00DD'];
    return (element?.Value.length === 1)
      ? this.dataset['300A00DD']?.Value[0]
      : this.dataset['300A00DD']?.Value;
  }

  get '300A00DD'(): Element {
    return this.dataset['300A00DD'];
  }

  // Number of Compensators
  get NumberOfCompensators(): any {
    const element = this.dataset['300A00E0'];
    return (element?.Value.length === 1)
      ? this.dataset['300A00E0']?.Value[0]
      : this.dataset['300A00E0']?.Value;
  }

  get '300A00E0'(): Element {
    return this.dataset['300A00E0'];
  }

  // Material ID
  get MaterialID(): any {
    const element = this.dataset['300A00E1'];
    return (element?.Value.length === 1)
      ? this.dataset['300A00E1']?.Value[0]
      : this.dataset['300A00E1']?.Value;
  }

  get '300A00E1'(): Element {
    return this.dataset['300A00E1'];
  }

  // Total Compensator Tray Factor
  get TotalCompensatorTrayFactor(): any {
    const element = this.dataset['300A00E2'];
    return (element?.Value.length === 1)
      ? this.dataset['300A00E2']?.Value[0]
      : this.dataset['300A00E2']?.Value;
  }

  get '300A00E2'(): Element {
    return this.dataset['300A00E2'];
  }

  // Compensator Sequence
  get CompensatorSequence(): any {
    const element = this.dataset['300A00E3'];
    return (element?.Value.length === 1)
      ? this.dataset['300A00E3']?.Value[0]
      : this.dataset['300A00E3']?.Value;
  }

  get '300A00E3'(): Element {
    return this.dataset['300A00E3'];
  }

  // Compensator Number
  get CompensatorNumber(): any {
    const element = this.dataset['300A00E4'];
    return (element?.Value.length === 1)
      ? this.dataset['300A00E4']?.Value[0]
      : this.dataset['300A00E4']?.Value;
  }

  get '300A00E4'(): Element {
    return this.dataset['300A00E4'];
  }

  // Compensator ID
  get CompensatorID(): any {
    const element = this.dataset['300A00E5'];
    return (element?.Value.length === 1)
      ? this.dataset['300A00E5']?.Value[0]
      : this.dataset['300A00E5']?.Value;
  }

  get '300A00E5'(): Element {
    return this.dataset['300A00E5'];
  }

  // Source to Compensator Tray Distance
  get SourceToCompensatorTrayDistance(): any {
    const element = this.dataset['300A00E6'];
    return (element?.Value.length === 1)
      ? this.dataset['300A00E6']?.Value[0]
      : this.dataset['300A00E6']?.Value;
  }

  get '300A00E6'(): Element {
    return this.dataset['300A00E6'];
  }

  // Compensator Rows
  get CompensatorRows(): any {
    const element = this.dataset['300A00E7'];
    return (element?.Value.length === 1)
      ? this.dataset['300A00E7']?.Value[0]
      : this.dataset['300A00E7']?.Value;
  }

  get '300A00E7'(): Element {
    return this.dataset['300A00E7'];
  }

  // Compensator Columns
  get CompensatorColumns(): any {
    const element = this.dataset['300A00E8'];
    return (element?.Value.length === 1)
      ? this.dataset['300A00E8']?.Value[0]
      : this.dataset['300A00E8']?.Value;
  }

  get '300A00E8'(): Element {
    return this.dataset['300A00E8'];
  }

  // Compensator Pixel Spacing
  get CompensatorPixelSpacing(): any {
    const element = this.dataset['300A00E9'];
    return (element?.Value.length === 1)
      ? this.dataset['300A00E9']?.Value[0]
      : this.dataset['300A00E9']?.Value;
  }

  get '300A00E9'(): Element {
    return this.dataset['300A00E9'];
  }

  // Compensator Position
  get CompensatorPosition(): any {
    const element = this.dataset['300A00EA'];
    return (element?.Value.length === 1)
      ? this.dataset['300A00EA']?.Value[0]
      : this.dataset['300A00EA']?.Value;
  }

  get '300A00EA'(): Element {
    return this.dataset['300A00EA'];
  }

  // Compensator Transmission Data
  get CompensatorTransmissionData(): any {
    const element = this.dataset['300A00EB'];
    return (element?.Value.length === 1)
      ? this.dataset['300A00EB']?.Value[0]
      : this.dataset['300A00EB']?.Value;
  }

  get '300A00EB'(): Element {
    return this.dataset['300A00EB'];
  }

  // Compensator Thickness Data
  get CompensatorThicknessData(): any {
    const element = this.dataset['300A00EC'];
    return (element?.Value.length === 1)
      ? this.dataset['300A00EC']?.Value[0]
      : this.dataset['300A00EC']?.Value;
  }

  get '300A00EC'(): Element {
    return this.dataset['300A00EC'];
  }

  // Number of Boli
  get NumberOfBoli(): any {
    const element = this.dataset['300A00ED'];
    return (element?.Value.length === 1)
      ? this.dataset['300A00ED']?.Value[0]
      : this.dataset['300A00ED']?.Value;
  }

  get '300A00ED'(): Element {
    return this.dataset['300A00ED'];
  }

  // Compensator Type
  get CompensatorType(): any {
    const element = this.dataset['300A00EE'];
    return (element?.Value.length === 1)
      ? this.dataset['300A00EE']?.Value[0]
      : this.dataset['300A00EE']?.Value;
  }

  get '300A00EE'(): Element {
    return this.dataset['300A00EE'];
  }

  // Compensator Tray ID
  get CompensatorTrayID(): any {
    const element = this.dataset['300A00EF'];
    return (element?.Value.length === 1)
      ? this.dataset['300A00EF']?.Value[0]
      : this.dataset['300A00EF']?.Value;
  }

  get '300A00EF'(): Element {
    return this.dataset['300A00EF'];
  }

  // Number of Blocks
  get NumberOfBlocks(): any {
    const element = this.dataset['300A00F0'];
    return (element?.Value.length === 1)
      ? this.dataset['300A00F0']?.Value[0]
      : this.dataset['300A00F0']?.Value;
  }

  get '300A00F0'(): Element {
    return this.dataset['300A00F0'];
  }

  // Total Block Tray Factor
  get TotalBlockTrayFactor(): any {
    const element = this.dataset['300A00F2'];
    return (element?.Value.length === 1)
      ? this.dataset['300A00F2']?.Value[0]
      : this.dataset['300A00F2']?.Value;
  }

  get '300A00F2'(): Element {
    return this.dataset['300A00F2'];
  }

  // Total Block Tray Water-Equivalent Thickness
  get TotalBlockTrayWaterEquivalentThickness(): any {
    const element = this.dataset['300A00F3'];
    return (element?.Value.length === 1)
      ? this.dataset['300A00F3']?.Value[0]
      : this.dataset['300A00F3']?.Value;
  }

  get '300A00F3'(): Element {
    return this.dataset['300A00F3'];
  }

  // Block Sequence
  get BlockSequence(): any {
    const element = this.dataset['300A00F4'];
    return (element?.Value.length === 1)
      ? this.dataset['300A00F4']?.Value[0]
      : this.dataset['300A00F4']?.Value;
  }

  get '300A00F4'(): Element {
    return this.dataset['300A00F4'];
  }

  // Block Tray ID
  get BlockTrayID(): any {
    const element = this.dataset['300A00F5'];
    return (element?.Value.length === 1)
      ? this.dataset['300A00F5']?.Value[0]
      : this.dataset['300A00F5']?.Value;
  }

  get '300A00F5'(): Element {
    return this.dataset['300A00F5'];
  }

  // Source to Block Tray Distance
  get SourceToBlockTrayDistance(): any {
    const element = this.dataset['300A00F6'];
    return (element?.Value.length === 1)
      ? this.dataset['300A00F6']?.Value[0]
      : this.dataset['300A00F6']?.Value;
  }

  get '300A00F6'(): Element {
    return this.dataset['300A00F6'];
  }

  // Isocenter to Block Tray Distance
  get IsocenterToBlockTrayDistance(): any {
    const element = this.dataset['300A00F7'];
    return (element?.Value.length === 1)
      ? this.dataset['300A00F7']?.Value[0]
      : this.dataset['300A00F7']?.Value;
  }

  get '300A00F7'(): Element {
    return this.dataset['300A00F7'];
  }

  // Block Type
  get BlockType(): any {
    const element = this.dataset['300A00F8'];
    return (element?.Value.length === 1)
      ? this.dataset['300A00F8']?.Value[0]
      : this.dataset['300A00F8']?.Value;
  }

  get '300A00F8'(): Element {
    return this.dataset['300A00F8'];
  }

  // Accessory Code
  get AccessoryCode(): any {
    const element = this.dataset['300A00F9'];
    return (element?.Value.length === 1)
      ? this.dataset['300A00F9']?.Value[0]
      : this.dataset['300A00F9']?.Value;
  }

  get '300A00F9'(): Element {
    return this.dataset['300A00F9'];
  }

  // Block Divergence
  get BlockDivergence(): any {
    const element = this.dataset['300A00FA'];
    return (element?.Value.length === 1)
      ? this.dataset['300A00FA']?.Value[0]
      : this.dataset['300A00FA']?.Value;
  }

  get '300A00FA'(): Element {
    return this.dataset['300A00FA'];
  }

  // Block Mounting Position
  get BlockMountingPosition(): any {
    const element = this.dataset['300A00FB'];
    return (element?.Value.length === 1)
      ? this.dataset['300A00FB']?.Value[0]
      : this.dataset['300A00FB']?.Value;
  }

  get '300A00FB'(): Element {
    return this.dataset['300A00FB'];
  }

  // Block Number
  get BlockNumber(): any {
    const element = this.dataset['300A00FC'];
    return (element?.Value.length === 1)
      ? this.dataset['300A00FC']?.Value[0]
      : this.dataset['300A00FC']?.Value;
  }

  get '300A00FC'(): Element {
    return this.dataset['300A00FC'];
  }

  // Block Name
  get BlockName(): any {
    const element = this.dataset['300A00FE'];
    return (element?.Value.length === 1)
      ? this.dataset['300A00FE']?.Value[0]
      : this.dataset['300A00FE']?.Value;
  }

  get '300A00FE'(): Element {
    return this.dataset['300A00FE'];
  }

  // Block Thickness
  get BlockThickness(): any {
    const element = this.dataset['300A0100'];
    return (element?.Value.length === 1)
      ? this.dataset['300A0100']?.Value[0]
      : this.dataset['300A0100']?.Value;
  }

  get '300A0100'(): Element {
    return this.dataset['300A0100'];
  }

  // Block Transmission
  get BlockTransmission(): any {
    const element = this.dataset['300A0102'];
    return (element?.Value.length === 1)
      ? this.dataset['300A0102']?.Value[0]
      : this.dataset['300A0102']?.Value;
  }

  get '300A0102'(): Element {
    return this.dataset['300A0102'];
  }

  // Block Number of Points
  get BlockNumberOfPoints(): any {
    const element = this.dataset['300A0104'];
    return (element?.Value.length === 1)
      ? this.dataset['300A0104']?.Value[0]
      : this.dataset['300A0104']?.Value;
  }

  get '300A0104'(): Element {
    return this.dataset['300A0104'];
  }

  // Block Data
  get BlockData(): any {
    const element = this.dataset['300A0106'];
    return (element?.Value.length === 1)
      ? this.dataset['300A0106']?.Value[0]
      : this.dataset['300A0106']?.Value;
  }

  get '300A0106'(): Element {
    return this.dataset['300A0106'];
  }

  // Applicator Sequence
  get ApplicatorSequence(): any {
    const element = this.dataset['300A0107'];
    return (element?.Value.length === 1)
      ? this.dataset['300A0107']?.Value[0]
      : this.dataset['300A0107']?.Value;
  }

  get '300A0107'(): Element {
    return this.dataset['300A0107'];
  }

  // Applicator ID
  get ApplicatorID(): any {
    const element = this.dataset['300A0108'];
    return (element?.Value.length === 1)
      ? this.dataset['300A0108']?.Value[0]
      : this.dataset['300A0108']?.Value;
  }

  get '300A0108'(): Element {
    return this.dataset['300A0108'];
  }

  // Applicator Type
  get ApplicatorType(): any {
    const element = this.dataset['300A0109'];
    return (element?.Value.length === 1)
      ? this.dataset['300A0109']?.Value[0]
      : this.dataset['300A0109']?.Value;
  }

  get '300A0109'(): Element {
    return this.dataset['300A0109'];
  }

  // Applicator Description
  get ApplicatorDescription(): any {
    const element = this.dataset['300A010A'];
    return (element?.Value.length === 1)
      ? this.dataset['300A010A']?.Value[0]
      : this.dataset['300A010A']?.Value;
  }

  get '300A010A'(): Element {
    return this.dataset['300A010A'];
  }

  // Cumulative Dose Reference Coefficient
  get CumulativeDoseReferenceCoefficient(): any {
    const element = this.dataset['300A010C'];
    return (element?.Value.length === 1)
      ? this.dataset['300A010C']?.Value[0]
      : this.dataset['300A010C']?.Value;
  }

  get '300A010C'(): Element {
    return this.dataset['300A010C'];
  }

  // Final Cumulative Meterset Weight
  get FinalCumulativeMetersetWeight(): any {
    const element = this.dataset['300A010E'];
    return (element?.Value.length === 1)
      ? this.dataset['300A010E']?.Value[0]
      : this.dataset['300A010E']?.Value;
  }

  get '300A010E'(): Element {
    return this.dataset['300A010E'];
  }

  // Number of Control Points
  get NumberOfControlPoints(): any {
    const element = this.dataset['300A0110'];
    return (element?.Value.length === 1)
      ? this.dataset['300A0110']?.Value[0]
      : this.dataset['300A0110']?.Value;
  }

  get '300A0110'(): Element {
    return this.dataset['300A0110'];
  }

  // Control Point Sequence
  get ControlPointSequence(): any {
    const element = this.dataset['300A0111'];
    return (element?.Value.length === 1)
      ? this.dataset['300A0111']?.Value[0]
      : this.dataset['300A0111']?.Value;
  }

  get '300A0111'(): Element {
    return this.dataset['300A0111'];
  }

  // Control Point Index
  get ControlPointIndex(): any {
    const element = this.dataset['300A0112'];
    return (element?.Value.length === 1)
      ? this.dataset['300A0112']?.Value[0]
      : this.dataset['300A0112']?.Value;
  }

  get '300A0112'(): Element {
    return this.dataset['300A0112'];
  }

  // Nominal Beam Energy
  get NominalBeamEnergy(): any {
    const element = this.dataset['300A0114'];
    return (element?.Value.length === 1)
      ? this.dataset['300A0114']?.Value[0]
      : this.dataset['300A0114']?.Value;
  }

  get '300A0114'(): Element {
    return this.dataset['300A0114'];
  }

  // Dose Rate Set
  get DoseRateSet(): any {
    const element = this.dataset['300A0115'];
    return (element?.Value.length === 1)
      ? this.dataset['300A0115']?.Value[0]
      : this.dataset['300A0115']?.Value;
  }

  get '300A0115'(): Element {
    return this.dataset['300A0115'];
  }

  // Wedge Position Sequence
  get WedgePositionSequence(): any {
    const element = this.dataset['300A0116'];
    return (element?.Value.length === 1)
      ? this.dataset['300A0116']?.Value[0]
      : this.dataset['300A0116']?.Value;
  }

  get '300A0116'(): Element {
    return this.dataset['300A0116'];
  }

  // Wedge Position
  get WedgePosition(): any {
    const element = this.dataset['300A0118'];
    return (element?.Value.length === 1)
      ? this.dataset['300A0118']?.Value[0]
      : this.dataset['300A0118']?.Value;
  }

  get '300A0118'(): Element {
    return this.dataset['300A0118'];
  }

  // Beam Limiting Device Position Sequence
  get BeamLimitingDevicePositionSequence(): any {
    const element = this.dataset['300A011A'];
    return (element?.Value.length === 1)
      ? this.dataset['300A011A']?.Value[0]
      : this.dataset['300A011A']?.Value;
  }

  get '300A011A'(): Element {
    return this.dataset['300A011A'];
  }

  // Leaf/Jaw Positions
  get LeafJawPositions(): any {
    const element = this.dataset['300A011C'];
    return (element?.Value.length === 1)
      ? this.dataset['300A011C']?.Value[0]
      : this.dataset['300A011C']?.Value;
  }

  get '300A011C'(): Element {
    return this.dataset['300A011C'];
  }

  // Gantry Angle
  get GantryAngle(): any {
    const element = this.dataset['300A011E'];
    return (element?.Value.length === 1)
      ? this.dataset['300A011E']?.Value[0]
      : this.dataset['300A011E']?.Value;
  }

  get '300A011E'(): Element {
    return this.dataset['300A011E'];
  }

  // Gantry Rotation Direction
  get GantryRotationDirection(): any {
    const element = this.dataset['300A011F'];
    return (element?.Value.length === 1)
      ? this.dataset['300A011F']?.Value[0]
      : this.dataset['300A011F']?.Value;
  }

  get '300A011F'(): Element {
    return this.dataset['300A011F'];
  }

  // Beam Limiting Device Angle
  get BeamLimitingDeviceAngle(): any {
    const element = this.dataset['300A0120'];
    return (element?.Value.length === 1)
      ? this.dataset['300A0120']?.Value[0]
      : this.dataset['300A0120']?.Value;
  }

  get '300A0120'(): Element {
    return this.dataset['300A0120'];
  }

  // Beam Limiting Device Rotation Direction
  get BeamLimitingDeviceRotationDirection(): any {
    const element = this.dataset['300A0121'];
    return (element?.Value.length === 1)
      ? this.dataset['300A0121']?.Value[0]
      : this.dataset['300A0121']?.Value;
  }

  get '300A0121'(): Element {
    return this.dataset['300A0121'];
  }

  // Patient Support Angle
  get PatientSupportAngle(): any {
    const element = this.dataset['300A0122'];
    return (element?.Value.length === 1)
      ? this.dataset['300A0122']?.Value[0]
      : this.dataset['300A0122']?.Value;
  }

  get '300A0122'(): Element {
    return this.dataset['300A0122'];
  }

  // Patient Support Rotation Direction
  get PatientSupportRotationDirection(): any {
    const element = this.dataset['300A0123'];
    return (element?.Value.length === 1)
      ? this.dataset['300A0123']?.Value[0]
      : this.dataset['300A0123']?.Value;
  }

  get '300A0123'(): Element {
    return this.dataset['300A0123'];
  }

  // Table Top Eccentric Axis Distance
  get TableTopEccentricAxisDistance(): any {
    const element = this.dataset['300A0124'];
    return (element?.Value.length === 1)
      ? this.dataset['300A0124']?.Value[0]
      : this.dataset['300A0124']?.Value;
  }

  get '300A0124'(): Element {
    return this.dataset['300A0124'];
  }

  // Table Top Eccentric Angle
  get TableTopEccentricAngle(): any {
    const element = this.dataset['300A0125'];
    return (element?.Value.length === 1)
      ? this.dataset['300A0125']?.Value[0]
      : this.dataset['300A0125']?.Value;
  }

  get '300A0125'(): Element {
    return this.dataset['300A0125'];
  }

  // Table Top Eccentric Rotation Direction
  get TableTopEccentricRotationDirection(): any {
    const element = this.dataset['300A0126'];
    return (element?.Value.length === 1)
      ? this.dataset['300A0126']?.Value[0]
      : this.dataset['300A0126']?.Value;
  }

  get '300A0126'(): Element {
    return this.dataset['300A0126'];
  }

  // Table Top Vertical Position
  get TableTopVerticalPosition(): any {
    const element = this.dataset['300A0128'];
    return (element?.Value.length === 1)
      ? this.dataset['300A0128']?.Value[0]
      : this.dataset['300A0128']?.Value;
  }

  get '300A0128'(): Element {
    return this.dataset['300A0128'];
  }

  // Table Top Longitudinal Position
  get TableTopLongitudinalPosition(): any {
    const element = this.dataset['300A0129'];
    return (element?.Value.length === 1)
      ? this.dataset['300A0129']?.Value[0]
      : this.dataset['300A0129']?.Value;
  }

  get '300A0129'(): Element {
    return this.dataset['300A0129'];
  }

  // Table Top Lateral Position
  get TableTopLateralPosition(): any {
    const element = this.dataset['300A012A'];
    return (element?.Value.length === 1)
      ? this.dataset['300A012A']?.Value[0]
      : this.dataset['300A012A']?.Value;
  }

  get '300A012A'(): Element {
    return this.dataset['300A012A'];
  }

  // Isocenter Position
  get IsocenterPosition(): any {
    const element = this.dataset['300A012C'];
    return (element?.Value.length === 1)
      ? this.dataset['300A012C']?.Value[0]
      : this.dataset['300A012C']?.Value;
  }

  get '300A012C'(): Element {
    return this.dataset['300A012C'];
  }

  // Surface Entry Point
  get SurfaceEntryPoint(): any {
    const element = this.dataset['300A012E'];
    return (element?.Value.length === 1)
      ? this.dataset['300A012E']?.Value[0]
      : this.dataset['300A012E']?.Value;
  }

  get '300A012E'(): Element {
    return this.dataset['300A012E'];
  }

  // Source to Surface Distance
  get SourceToSurfaceDistance(): any {
    const element = this.dataset['300A0130'];
    return (element?.Value.length === 1)
      ? this.dataset['300A0130']?.Value[0]
      : this.dataset['300A0130']?.Value;
  }

  get '300A0130'(): Element {
    return this.dataset['300A0130'];
  }

  // Cumulative Meterset Weight
  get CumulativeMetersetWeight(): any {
    const element = this.dataset['300A0134'];
    return (element?.Value.length === 1)
      ? this.dataset['300A0134']?.Value[0]
      : this.dataset['300A0134']?.Value;
  }

  get '300A0134'(): Element {
    return this.dataset['300A0134'];
  }

  // Table Top Pitch Angle
  get TableTopPitchAngle(): any {
    const element = this.dataset['300A0140'];
    return (element?.Value.length === 1)
      ? this.dataset['300A0140']?.Value[0]
      : this.dataset['300A0140']?.Value;
  }

  get '300A0140'(): Element {
    return this.dataset['300A0140'];
  }

  // Table Top Pitch Rotation Direction
  get TableTopPitchRotationDirection(): any {
    const element = this.dataset['300A0142'];
    return (element?.Value.length === 1)
      ? this.dataset['300A0142']?.Value[0]
      : this.dataset['300A0142']?.Value;
  }

  get '300A0142'(): Element {
    return this.dataset['300A0142'];
  }

  // Table Top Roll Angle
  get TableTopRollAngle(): any {
    const element = this.dataset['300A0144'];
    return (element?.Value.length === 1)
      ? this.dataset['300A0144']?.Value[0]
      : this.dataset['300A0144']?.Value;
  }

  get '300A0144'(): Element {
    return this.dataset['300A0144'];
  }

  // Table Top Roll Rotation Direction
  get TableTopRollRotationDirection(): any {
    const element = this.dataset['300A0146'];
    return (element?.Value.length === 1)
      ? this.dataset['300A0146']?.Value[0]
      : this.dataset['300A0146']?.Value;
  }

  get '300A0146'(): Element {
    return this.dataset['300A0146'];
  }

  // Head Fixation Angle
  get HeadFixationAngle(): any {
    const element = this.dataset['300A0148'];
    return (element?.Value.length === 1)
      ? this.dataset['300A0148']?.Value[0]
      : this.dataset['300A0148']?.Value;
  }

  get '300A0148'(): Element {
    return this.dataset['300A0148'];
  }

  // Gantry Pitch Angle
  get GantryPitchAngle(): any {
    const element = this.dataset['300A014A'];
    return (element?.Value.length === 1)
      ? this.dataset['300A014A']?.Value[0]
      : this.dataset['300A014A']?.Value;
  }

  get '300A014A'(): Element {
    return this.dataset['300A014A'];
  }

  // Gantry Pitch Rotation Direction
  get GantryPitchRotationDirection(): any {
    const element = this.dataset['300A014C'];
    return (element?.Value.length === 1)
      ? this.dataset['300A014C']?.Value[0]
      : this.dataset['300A014C']?.Value;
  }

  get '300A014C'(): Element {
    return this.dataset['300A014C'];
  }

  // Gantry Pitch Angle Tolerance
  get GantryPitchAngleTolerance(): any {
    const element = this.dataset['300A014E'];
    return (element?.Value.length === 1)
      ? this.dataset['300A014E']?.Value[0]
      : this.dataset['300A014E']?.Value;
  }

  get '300A014E'(): Element {
    return this.dataset['300A014E'];
  }

  // Patient Setup Sequence
  get PatientSetupSequence(): any {
    const element = this.dataset['300A0180'];
    return (element?.Value.length === 1)
      ? this.dataset['300A0180']?.Value[0]
      : this.dataset['300A0180']?.Value;
  }

  get '300A0180'(): Element {
    return this.dataset['300A0180'];
  }

  // Patient Setup Number
  get PatientSetupNumber(): any {
    const element = this.dataset['300A0182'];
    return (element?.Value.length === 1)
      ? this.dataset['300A0182']?.Value[0]
      : this.dataset['300A0182']?.Value;
  }

  get '300A0182'(): Element {
    return this.dataset['300A0182'];
  }

  // Patient Setup Label
  get PatientSetupLabel(): any {
    const element = this.dataset['300A0183'];
    return (element?.Value.length === 1)
      ? this.dataset['300A0183']?.Value[0]
      : this.dataset['300A0183']?.Value;
  }

  get '300A0183'(): Element {
    return this.dataset['300A0183'];
  }

  // Patient Additional Position
  get PatientAdditionalPosition(): any {
    const element = this.dataset['300A0184'];
    return (element?.Value.length === 1)
      ? this.dataset['300A0184']?.Value[0]
      : this.dataset['300A0184']?.Value;
  }

  get '300A0184'(): Element {
    return this.dataset['300A0184'];
  }

  // Fixation Device Sequence
  get FixationDeviceSequence(): any {
    const element = this.dataset['300A0190'];
    return (element?.Value.length === 1)
      ? this.dataset['300A0190']?.Value[0]
      : this.dataset['300A0190']?.Value;
  }

  get '300A0190'(): Element {
    return this.dataset['300A0190'];
  }

  // Fixation Device Type
  get FixationDeviceType(): any {
    const element = this.dataset['300A0192'];
    return (element?.Value.length === 1)
      ? this.dataset['300A0192']?.Value[0]
      : this.dataset['300A0192']?.Value;
  }

  get '300A0192'(): Element {
    return this.dataset['300A0192'];
  }

  // Fixation Device Label
  get FixationDeviceLabel(): any {
    const element = this.dataset['300A0194'];
    return (element?.Value.length === 1)
      ? this.dataset['300A0194']?.Value[0]
      : this.dataset['300A0194']?.Value;
  }

  get '300A0194'(): Element {
    return this.dataset['300A0194'];
  }

  // Fixation Device Description
  get FixationDeviceDescription(): any {
    const element = this.dataset['300A0196'];
    return (element?.Value.length === 1)
      ? this.dataset['300A0196']?.Value[0]
      : this.dataset['300A0196']?.Value;
  }

  get '300A0196'(): Element {
    return this.dataset['300A0196'];
  }

  // Fixation Device Position
  get FixationDevicePosition(): any {
    const element = this.dataset['300A0198'];
    return (element?.Value.length === 1)
      ? this.dataset['300A0198']?.Value[0]
      : this.dataset['300A0198']?.Value;
  }

  get '300A0198'(): Element {
    return this.dataset['300A0198'];
  }

  // Fixation Device Pitch Angle
  get FixationDevicePitchAngle(): any {
    const element = this.dataset['300A0199'];
    return (element?.Value.length === 1)
      ? this.dataset['300A0199']?.Value[0]
      : this.dataset['300A0199']?.Value;
  }

  get '300A0199'(): Element {
    return this.dataset['300A0199'];
  }

  // Fixation Device Roll Angle
  get FixationDeviceRollAngle(): any {
    const element = this.dataset['300A019A'];
    return (element?.Value.length === 1)
      ? this.dataset['300A019A']?.Value[0]
      : this.dataset['300A019A']?.Value;
  }

  get '300A019A'(): Element {
    return this.dataset['300A019A'];
  }

  // Shielding Device Sequence
  get ShieldingDeviceSequence(): any {
    const element = this.dataset['300A01A0'];
    return (element?.Value.length === 1)
      ? this.dataset['300A01A0']?.Value[0]
      : this.dataset['300A01A0']?.Value;
  }

  get '300A01A0'(): Element {
    return this.dataset['300A01A0'];
  }

  // Shielding Device Type
  get ShieldingDeviceType(): any {
    const element = this.dataset['300A01A2'];
    return (element?.Value.length === 1)
      ? this.dataset['300A01A2']?.Value[0]
      : this.dataset['300A01A2']?.Value;
  }

  get '300A01A2'(): Element {
    return this.dataset['300A01A2'];
  }

  // Shielding Device Label
  get ShieldingDeviceLabel(): any {
    const element = this.dataset['300A01A4'];
    return (element?.Value.length === 1)
      ? this.dataset['300A01A4']?.Value[0]
      : this.dataset['300A01A4']?.Value;
  }

  get '300A01A4'(): Element {
    return this.dataset['300A01A4'];
  }

  // Shielding Device Description
  get ShieldingDeviceDescription(): any {
    const element = this.dataset['300A01A6'];
    return (element?.Value.length === 1)
      ? this.dataset['300A01A6']?.Value[0]
      : this.dataset['300A01A6']?.Value;
  }

  get '300A01A6'(): Element {
    return this.dataset['300A01A6'];
  }

  // Shielding Device Position
  get ShieldingDevicePosition(): any {
    const element = this.dataset['300A01A8'];
    return (element?.Value.length === 1)
      ? this.dataset['300A01A8']?.Value[0]
      : this.dataset['300A01A8']?.Value;
  }

  get '300A01A8'(): Element {
    return this.dataset['300A01A8'];
  }

  // Setup Technique
  get SetupTechnique(): any {
    const element = this.dataset['300A01B0'];
    return (element?.Value.length === 1)
      ? this.dataset['300A01B0']?.Value[0]
      : this.dataset['300A01B0']?.Value;
  }

  get '300A01B0'(): Element {
    return this.dataset['300A01B0'];
  }

  // Setup Technique Description
  get SetupTechniqueDescription(): any {
    const element = this.dataset['300A01B2'];
    return (element?.Value.length === 1)
      ? this.dataset['300A01B2']?.Value[0]
      : this.dataset['300A01B2']?.Value;
  }

  get '300A01B2'(): Element {
    return this.dataset['300A01B2'];
  }

  // Setup Device Sequence
  get SetupDeviceSequence(): any {
    const element = this.dataset['300A01B4'];
    return (element?.Value.length === 1)
      ? this.dataset['300A01B4']?.Value[0]
      : this.dataset['300A01B4']?.Value;
  }

  get '300A01B4'(): Element {
    return this.dataset['300A01B4'];
  }

  // Setup Device Type
  get SetupDeviceType(): any {
    const element = this.dataset['300A01B6'];
    return (element?.Value.length === 1)
      ? this.dataset['300A01B6']?.Value[0]
      : this.dataset['300A01B6']?.Value;
  }

  get '300A01B6'(): Element {
    return this.dataset['300A01B6'];
  }

  // Setup Device Label
  get SetupDeviceLabel(): any {
    const element = this.dataset['300A01B8'];
    return (element?.Value.length === 1)
      ? this.dataset['300A01B8']?.Value[0]
      : this.dataset['300A01B8']?.Value;
  }

  get '300A01B8'(): Element {
    return this.dataset['300A01B8'];
  }

  // Setup Device Description
  get SetupDeviceDescription(): any {
    const element = this.dataset['300A01BA'];
    return (element?.Value.length === 1)
      ? this.dataset['300A01BA']?.Value[0]
      : this.dataset['300A01BA']?.Value;
  }

  get '300A01BA'(): Element {
    return this.dataset['300A01BA'];
  }

  // Setup Device Parameter
  get SetupDeviceParameter(): any {
    const element = this.dataset['300A01BC'];
    return (element?.Value.length === 1)
      ? this.dataset['300A01BC']?.Value[0]
      : this.dataset['300A01BC']?.Value;
  }

  get '300A01BC'(): Element {
    return this.dataset['300A01BC'];
  }

  // Setup Reference Description
  get SetupReferenceDescription(): any {
    const element = this.dataset['300A01D0'];
    return (element?.Value.length === 1)
      ? this.dataset['300A01D0']?.Value[0]
      : this.dataset['300A01D0']?.Value;
  }

  get '300A01D0'(): Element {
    return this.dataset['300A01D0'];
  }

  // Table Top Vertical Setup Displacement
  get TableTopVerticalSetupDisplacement(): any {
    const element = this.dataset['300A01D2'];
    return (element?.Value.length === 1)
      ? this.dataset['300A01D2']?.Value[0]
      : this.dataset['300A01D2']?.Value;
  }

  get '300A01D2'(): Element {
    return this.dataset['300A01D2'];
  }

  // Table Top Longitudinal Setup Displacement
  get TableTopLongitudinalSetupDisplacement(): any {
    const element = this.dataset['300A01D4'];
    return (element?.Value.length === 1)
      ? this.dataset['300A01D4']?.Value[0]
      : this.dataset['300A01D4']?.Value;
  }

  get '300A01D4'(): Element {
    return this.dataset['300A01D4'];
  }

  // Table Top Lateral Setup Displacement
  get TableTopLateralSetupDisplacement(): any {
    const element = this.dataset['300A01D6'];
    return (element?.Value.length === 1)
      ? this.dataset['300A01D6']?.Value[0]
      : this.dataset['300A01D6']?.Value;
  }

  get '300A01D6'(): Element {
    return this.dataset['300A01D6'];
  }

  // Brachy Treatment Technique
  get BrachyTreatmentTechnique(): any {
    const element = this.dataset['300A0200'];
    return (element?.Value.length === 1)
      ? this.dataset['300A0200']?.Value[0]
      : this.dataset['300A0200']?.Value;
  }

  get '300A0200'(): Element {
    return this.dataset['300A0200'];
  }

  // Brachy Treatment Type
  get BrachyTreatmentType(): any {
    const element = this.dataset['300A0202'];
    return (element?.Value.length === 1)
      ? this.dataset['300A0202']?.Value[0]
      : this.dataset['300A0202']?.Value;
  }

  get '300A0202'(): Element {
    return this.dataset['300A0202'];
  }

  // Treatment Machine Sequence
  get TreatmentMachineSequence(): any {
    const element = this.dataset['300A0206'];
    return (element?.Value.length === 1)
      ? this.dataset['300A0206']?.Value[0]
      : this.dataset['300A0206']?.Value;
  }

  get '300A0206'(): Element {
    return this.dataset['300A0206'];
  }

  // Source Sequence
  get SourceSequence(): any {
    const element = this.dataset['300A0210'];
    return (element?.Value.length === 1)
      ? this.dataset['300A0210']?.Value[0]
      : this.dataset['300A0210']?.Value;
  }

  get '300A0210'(): Element {
    return this.dataset['300A0210'];
  }

  // Source Number
  get SourceNumber(): any {
    const element = this.dataset['300A0212'];
    return (element?.Value.length === 1)
      ? this.dataset['300A0212']?.Value[0]
      : this.dataset['300A0212']?.Value;
  }

  get '300A0212'(): Element {
    return this.dataset['300A0212'];
  }

  // Source Type
  get SourceType(): any {
    const element = this.dataset['300A0214'];
    return (element?.Value.length === 1)
      ? this.dataset['300A0214']?.Value[0]
      : this.dataset['300A0214']?.Value;
  }

  get '300A0214'(): Element {
    return this.dataset['300A0214'];
  }

  // Source Manufacturer
  get SourceManufacturer(): any {
    const element = this.dataset['300A0216'];
    return (element?.Value.length === 1)
      ? this.dataset['300A0216']?.Value[0]
      : this.dataset['300A0216']?.Value;
  }

  get '300A0216'(): Element {
    return this.dataset['300A0216'];
  }

  // Active Source Diameter
  get ActiveSourceDiameter(): any {
    const element = this.dataset['300A0218'];
    return (element?.Value.length === 1)
      ? this.dataset['300A0218']?.Value[0]
      : this.dataset['300A0218']?.Value;
  }

  get '300A0218'(): Element {
    return this.dataset['300A0218'];
  }

  // Active Source Length
  get ActiveSourceLength(): any {
    const element = this.dataset['300A021A'];
    return (element?.Value.length === 1)
      ? this.dataset['300A021A']?.Value[0]
      : this.dataset['300A021A']?.Value;
  }

  get '300A021A'(): Element {
    return this.dataset['300A021A'];
  }

  // Source Model ID
  get SourceModelID(): any {
    const element = this.dataset['300A021B'];
    return (element?.Value.length === 1)
      ? this.dataset['300A021B']?.Value[0]
      : this.dataset['300A021B']?.Value;
  }

  get '300A021B'(): Element {
    return this.dataset['300A021B'];
  }

  // Source Description
  get SourceDescription(): any {
    const element = this.dataset['300A021C'];
    return (element?.Value.length === 1)
      ? this.dataset['300A021C']?.Value[0]
      : this.dataset['300A021C']?.Value;
  }

  get '300A021C'(): Element {
    return this.dataset['300A021C'];
  }

  // Source Encapsulation Nominal Thickness
  get SourceEncapsulationNominalThickness(): any {
    const element = this.dataset['300A0222'];
    return (element?.Value.length === 1)
      ? this.dataset['300A0222']?.Value[0]
      : this.dataset['300A0222']?.Value;
  }

  get '300A0222'(): Element {
    return this.dataset['300A0222'];
  }

  // Source Encapsulation Nominal Transmission
  get SourceEncapsulationNominalTransmission(): any {
    const element = this.dataset['300A0224'];
    return (element?.Value.length === 1)
      ? this.dataset['300A0224']?.Value[0]
      : this.dataset['300A0224']?.Value;
  }

  get '300A0224'(): Element {
    return this.dataset['300A0224'];
  }

  // Source Isotope Name
  get SourceIsotopeName(): any {
    const element = this.dataset['300A0226'];
    return (element?.Value.length === 1)
      ? this.dataset['300A0226']?.Value[0]
      : this.dataset['300A0226']?.Value;
  }

  get '300A0226'(): Element {
    return this.dataset['300A0226'];
  }

  // Source Isotope Half Life
  get SourceIsotopeHalfLife(): any {
    const element = this.dataset['300A0228'];
    return (element?.Value.length === 1)
      ? this.dataset['300A0228']?.Value[0]
      : this.dataset['300A0228']?.Value;
  }

  get '300A0228'(): Element {
    return this.dataset['300A0228'];
  }

  // Source Strength Units
  get SourceStrengthUnits(): any {
    const element = this.dataset['300A0229'];
    return (element?.Value.length === 1)
      ? this.dataset['300A0229']?.Value[0]
      : this.dataset['300A0229']?.Value;
  }

  get '300A0229'(): Element {
    return this.dataset['300A0229'];
  }

  // Reference Air Kerma Rate
  get ReferenceAirKermaRate(): any {
    const element = this.dataset['300A022A'];
    return (element?.Value.length === 1)
      ? this.dataset['300A022A']?.Value[0]
      : this.dataset['300A022A']?.Value;
  }

  get '300A022A'(): Element {
    return this.dataset['300A022A'];
  }

  // Source Strength
  get SourceStrength(): any {
    const element = this.dataset['300A022B'];
    return (element?.Value.length === 1)
      ? this.dataset['300A022B']?.Value[0]
      : this.dataset['300A022B']?.Value;
  }

  get '300A022B'(): Element {
    return this.dataset['300A022B'];
  }

  // Source Strength Reference Date
  get SourceStrengthReferenceDate(): any {
    const element = this.dataset['300A022C'];
    return (element?.Value.length === 1)
      ? this.dataset['300A022C']?.Value[0]
      : this.dataset['300A022C']?.Value;
  }

  get '300A022C'(): Element {
    return this.dataset['300A022C'];
  }

  // Source Strength Reference Time
  get SourceStrengthReferenceTime(): any {
    const element = this.dataset['300A022E'];
    return (element?.Value.length === 1)
      ? this.dataset['300A022E']?.Value[0]
      : this.dataset['300A022E']?.Value;
  }

  get '300A022E'(): Element {
    return this.dataset['300A022E'];
  }

  // Application Setup Sequence
  get ApplicationSetupSequence(): any {
    const element = this.dataset['300A0230'];
    return (element?.Value.length === 1)
      ? this.dataset['300A0230']?.Value[0]
      : this.dataset['300A0230']?.Value;
  }

  get '300A0230'(): Element {
    return this.dataset['300A0230'];
  }

  // Application Setup Type
  get ApplicationSetupType(): any {
    const element = this.dataset['300A0232'];
    return (element?.Value.length === 1)
      ? this.dataset['300A0232']?.Value[0]
      : this.dataset['300A0232']?.Value;
  }

  get '300A0232'(): Element {
    return this.dataset['300A0232'];
  }

  // Application Setup Number
  get ApplicationSetupNumber(): any {
    const element = this.dataset['300A0234'];
    return (element?.Value.length === 1)
      ? this.dataset['300A0234']?.Value[0]
      : this.dataset['300A0234']?.Value;
  }

  get '300A0234'(): Element {
    return this.dataset['300A0234'];
  }

  // Application Setup Name
  get ApplicationSetupName(): any {
    const element = this.dataset['300A0236'];
    return (element?.Value.length === 1)
      ? this.dataset['300A0236']?.Value[0]
      : this.dataset['300A0236']?.Value;
  }

  get '300A0236'(): Element {
    return this.dataset['300A0236'];
  }

  // Application Setup Manufacturer
  get ApplicationSetupManufacturer(): any {
    const element = this.dataset['300A0238'];
    return (element?.Value.length === 1)
      ? this.dataset['300A0238']?.Value[0]
      : this.dataset['300A0238']?.Value;
  }

  get '300A0238'(): Element {
    return this.dataset['300A0238'];
  }

  // Template Number
  get TemplateNumber(): any {
    const element = this.dataset['300A0240'];
    return (element?.Value.length === 1)
      ? this.dataset['300A0240']?.Value[0]
      : this.dataset['300A0240']?.Value;
  }

  get '300A0240'(): Element {
    return this.dataset['300A0240'];
  }

  // Template Type
  get TemplateType(): any {
    const element = this.dataset['300A0242'];
    return (element?.Value.length === 1)
      ? this.dataset['300A0242']?.Value[0]
      : this.dataset['300A0242']?.Value;
  }

  get '300A0242'(): Element {
    return this.dataset['300A0242'];
  }

  // Template Name
  get TemplateName(): any {
    const element = this.dataset['300A0244'];
    return (element?.Value.length === 1)
      ? this.dataset['300A0244']?.Value[0]
      : this.dataset['300A0244']?.Value;
  }

  get '300A0244'(): Element {
    return this.dataset['300A0244'];
  }

  // Total Reference Air Kerma
  get TotalReferenceAirKerma(): any {
    const element = this.dataset['300A0250'];
    return (element?.Value.length === 1)
      ? this.dataset['300A0250']?.Value[0]
      : this.dataset['300A0250']?.Value;
  }

  get '300A0250'(): Element {
    return this.dataset['300A0250'];
  }

  // Brachy Accessory Device Sequence
  get BrachyAccessoryDeviceSequence(): any {
    const element = this.dataset['300A0260'];
    return (element?.Value.length === 1)
      ? this.dataset['300A0260']?.Value[0]
      : this.dataset['300A0260']?.Value;
  }

  get '300A0260'(): Element {
    return this.dataset['300A0260'];
  }

  // Brachy Accessory Device Number
  get BrachyAccessoryDeviceNumber(): any {
    const element = this.dataset['300A0262'];
    return (element?.Value.length === 1)
      ? this.dataset['300A0262']?.Value[0]
      : this.dataset['300A0262']?.Value;
  }

  get '300A0262'(): Element {
    return this.dataset['300A0262'];
  }

  // Brachy Accessory Device ID
  get BrachyAccessoryDeviceID(): any {
    const element = this.dataset['300A0263'];
    return (element?.Value.length === 1)
      ? this.dataset['300A0263']?.Value[0]
      : this.dataset['300A0263']?.Value;
  }

  get '300A0263'(): Element {
    return this.dataset['300A0263'];
  }

  // Brachy Accessory Device Type
  get BrachyAccessoryDeviceType(): any {
    const element = this.dataset['300A0264'];
    return (element?.Value.length === 1)
      ? this.dataset['300A0264']?.Value[0]
      : this.dataset['300A0264']?.Value;
  }

  get '300A0264'(): Element {
    return this.dataset['300A0264'];
  }

  // Brachy Accessory Device Name
  get BrachyAccessoryDeviceName(): any {
    const element = this.dataset['300A0266'];
    return (element?.Value.length === 1)
      ? this.dataset['300A0266']?.Value[0]
      : this.dataset['300A0266']?.Value;
  }

  get '300A0266'(): Element {
    return this.dataset['300A0266'];
  }

  // Brachy Accessory Device Nominal Thickness
  get BrachyAccessoryDeviceNominalThickness(): any {
    const element = this.dataset['300A026A'];
    return (element?.Value.length === 1)
      ? this.dataset['300A026A']?.Value[0]
      : this.dataset['300A026A']?.Value;
  }

  get '300A026A'(): Element {
    return this.dataset['300A026A'];
  }

  // Brachy Accessory Device Nominal Transmission
  get BrachyAccessoryDeviceNominalTransmission(): any {
    const element = this.dataset['300A026C'];
    return (element?.Value.length === 1)
      ? this.dataset['300A026C']?.Value[0]
      : this.dataset['300A026C']?.Value;
  }

  get '300A026C'(): Element {
    return this.dataset['300A026C'];
  }

  // Channel Sequence
  get ChannelSequence(): any {
    const element = this.dataset['300A0280'];
    return (element?.Value.length === 1)
      ? this.dataset['300A0280']?.Value[0]
      : this.dataset['300A0280']?.Value;
  }

  get '300A0280'(): Element {
    return this.dataset['300A0280'];
  }

  // Channel Number
  get ChannelNumber(): any {
    const element = this.dataset['300A0282'];
    return (element?.Value.length === 1)
      ? this.dataset['300A0282']?.Value[0]
      : this.dataset['300A0282']?.Value;
  }

  get '300A0282'(): Element {
    return this.dataset['300A0282'];
  }

  // Channel Length
  get ChannelLength(): any {
    const element = this.dataset['300A0284'];
    return (element?.Value.length === 1)
      ? this.dataset['300A0284']?.Value[0]
      : this.dataset['300A0284']?.Value;
  }

  get '300A0284'(): Element {
    return this.dataset['300A0284'];
  }

  // Channel Total Time
  get ChannelTotalTime(): any {
    const element = this.dataset['300A0286'];
    return (element?.Value.length === 1)
      ? this.dataset['300A0286']?.Value[0]
      : this.dataset['300A0286']?.Value;
  }

  get '300A0286'(): Element {
    return this.dataset['300A0286'];
  }

  // Source Movement Type
  get SourceMovementType(): any {
    const element = this.dataset['300A0288'];
    return (element?.Value.length === 1)
      ? this.dataset['300A0288']?.Value[0]
      : this.dataset['300A0288']?.Value;
  }

  get '300A0288'(): Element {
    return this.dataset['300A0288'];
  }

  // Number of Pulses
  get NumberOfPulses(): any {
    const element = this.dataset['300A028A'];
    return (element?.Value.length === 1)
      ? this.dataset['300A028A']?.Value[0]
      : this.dataset['300A028A']?.Value;
  }

  get '300A028A'(): Element {
    return this.dataset['300A028A'];
  }

  // Pulse Repetition Interval
  get PulseRepetitionInterval(): any {
    const element = this.dataset['300A028C'];
    return (element?.Value.length === 1)
      ? this.dataset['300A028C']?.Value[0]
      : this.dataset['300A028C']?.Value;
  }

  get '300A028C'(): Element {
    return this.dataset['300A028C'];
  }

  // Source Applicator Number
  get SourceApplicatorNumber(): any {
    const element = this.dataset['300A0290'];
    return (element?.Value.length === 1)
      ? this.dataset['300A0290']?.Value[0]
      : this.dataset['300A0290']?.Value;
  }

  get '300A0290'(): Element {
    return this.dataset['300A0290'];
  }

  // Source Applicator ID
  get SourceApplicatorID(): any {
    const element = this.dataset['300A0291'];
    return (element?.Value.length === 1)
      ? this.dataset['300A0291']?.Value[0]
      : this.dataset['300A0291']?.Value;
  }

  get '300A0291'(): Element {
    return this.dataset['300A0291'];
  }

  // Source Applicator Type
  get SourceApplicatorType(): any {
    const element = this.dataset['300A0292'];
    return (element?.Value.length === 1)
      ? this.dataset['300A0292']?.Value[0]
      : this.dataset['300A0292']?.Value;
  }

  get '300A0292'(): Element {
    return this.dataset['300A0292'];
  }

  // Source Applicator Name
  get SourceApplicatorName(): any {
    const element = this.dataset['300A0294'];
    return (element?.Value.length === 1)
      ? this.dataset['300A0294']?.Value[0]
      : this.dataset['300A0294']?.Value;
  }

  get '300A0294'(): Element {
    return this.dataset['300A0294'];
  }

  // Source Applicator Length
  get SourceApplicatorLength(): any {
    const element = this.dataset['300A0296'];
    return (element?.Value.length === 1)
      ? this.dataset['300A0296']?.Value[0]
      : this.dataset['300A0296']?.Value;
  }

  get '300A0296'(): Element {
    return this.dataset['300A0296'];
  }

  // Source Applicator Manufacturer
  get SourceApplicatorManufacturer(): any {
    const element = this.dataset['300A0298'];
    return (element?.Value.length === 1)
      ? this.dataset['300A0298']?.Value[0]
      : this.dataset['300A0298']?.Value;
  }

  get '300A0298'(): Element {
    return this.dataset['300A0298'];
  }

  // Source Applicator Wall Nominal Thickness
  get SourceApplicatorWallNominalThickness(): any {
    const element = this.dataset['300A029C'];
    return (element?.Value.length === 1)
      ? this.dataset['300A029C']?.Value[0]
      : this.dataset['300A029C']?.Value;
  }

  get '300A029C'(): Element {
    return this.dataset['300A029C'];
  }

  // Source Applicator Wall Nominal Transmission
  get SourceApplicatorWallNominalTransmission(): any {
    const element = this.dataset['300A029E'];
    return (element?.Value.length === 1)
      ? this.dataset['300A029E']?.Value[0]
      : this.dataset['300A029E']?.Value;
  }

  get '300A029E'(): Element {
    return this.dataset['300A029E'];
  }

  // Source Applicator Step Size
  get SourceApplicatorStepSize(): any {
    const element = this.dataset['300A02A0'];
    return (element?.Value.length === 1)
      ? this.dataset['300A02A0']?.Value[0]
      : this.dataset['300A02A0']?.Value;
  }

  get '300A02A0'(): Element {
    return this.dataset['300A02A0'];
  }

  // Transfer Tube Number
  get TransferTubeNumber(): any {
    const element = this.dataset['300A02A2'];
    return (element?.Value.length === 1)
      ? this.dataset['300A02A2']?.Value[0]
      : this.dataset['300A02A2']?.Value;
  }

  get '300A02A2'(): Element {
    return this.dataset['300A02A2'];
  }

  // Transfer Tube Length
  get TransferTubeLength(): any {
    const element = this.dataset['300A02A4'];
    return (element?.Value.length === 1)
      ? this.dataset['300A02A4']?.Value[0]
      : this.dataset['300A02A4']?.Value;
  }

  get '300A02A4'(): Element {
    return this.dataset['300A02A4'];
  }

  // Channel Shield Sequence
  get ChannelShieldSequence(): any {
    const element = this.dataset['300A02B0'];
    return (element?.Value.length === 1)
      ? this.dataset['300A02B0']?.Value[0]
      : this.dataset['300A02B0']?.Value;
  }

  get '300A02B0'(): Element {
    return this.dataset['300A02B0'];
  }

  // Channel Shield Number
  get ChannelShieldNumber(): any {
    const element = this.dataset['300A02B2'];
    return (element?.Value.length === 1)
      ? this.dataset['300A02B2']?.Value[0]
      : this.dataset['300A02B2']?.Value;
  }

  get '300A02B2'(): Element {
    return this.dataset['300A02B2'];
  }

  // Channel Shield ID
  get ChannelShieldID(): any {
    const element = this.dataset['300A02B3'];
    return (element?.Value.length === 1)
      ? this.dataset['300A02B3']?.Value[0]
      : this.dataset['300A02B3']?.Value;
  }

  get '300A02B3'(): Element {
    return this.dataset['300A02B3'];
  }

  // Channel Shield Name
  get ChannelShieldName(): any {
    const element = this.dataset['300A02B4'];
    return (element?.Value.length === 1)
      ? this.dataset['300A02B4']?.Value[0]
      : this.dataset['300A02B4']?.Value;
  }

  get '300A02B4'(): Element {
    return this.dataset['300A02B4'];
  }

  // Channel Shield Nominal Thickness
  get ChannelShieldNominalThickness(): any {
    const element = this.dataset['300A02B8'];
    return (element?.Value.length === 1)
      ? this.dataset['300A02B8']?.Value[0]
      : this.dataset['300A02B8']?.Value;
  }

  get '300A02B8'(): Element {
    return this.dataset['300A02B8'];
  }

  // Channel Shield Nominal Transmission
  get ChannelShieldNominalTransmission(): any {
    const element = this.dataset['300A02BA'];
    return (element?.Value.length === 1)
      ? this.dataset['300A02BA']?.Value[0]
      : this.dataset['300A02BA']?.Value;
  }

  get '300A02BA'(): Element {
    return this.dataset['300A02BA'];
  }

  // Final Cumulative Time Weight
  get FinalCumulativeTimeWeight(): any {
    const element = this.dataset['300A02C8'];
    return (element?.Value.length === 1)
      ? this.dataset['300A02C8']?.Value[0]
      : this.dataset['300A02C8']?.Value;
  }

  get '300A02C8'(): Element {
    return this.dataset['300A02C8'];
  }

  // Brachy Control Point Sequence
  get BrachyControlPointSequence(): any {
    const element = this.dataset['300A02D0'];
    return (element?.Value.length === 1)
      ? this.dataset['300A02D0']?.Value[0]
      : this.dataset['300A02D0']?.Value;
  }

  get '300A02D0'(): Element {
    return this.dataset['300A02D0'];
  }

  // Control Point Relative Position
  get ControlPointRelativePosition(): any {
    const element = this.dataset['300A02D2'];
    return (element?.Value.length === 1)
      ? this.dataset['300A02D2']?.Value[0]
      : this.dataset['300A02D2']?.Value;
  }

  get '300A02D2'(): Element {
    return this.dataset['300A02D2'];
  }

  // Control Point 3D Position
  get ControlPoint3DPosition(): any {
    const element = this.dataset['300A02D4'];
    return (element?.Value.length === 1)
      ? this.dataset['300A02D4']?.Value[0]
      : this.dataset['300A02D4']?.Value;
  }

  get '300A02D4'(): Element {
    return this.dataset['300A02D4'];
  }

  // Cumulative Time Weight
  get CumulativeTimeWeight(): any {
    const element = this.dataset['300A02D6'];
    return (element?.Value.length === 1)
      ? this.dataset['300A02D6']?.Value[0]
      : this.dataset['300A02D6']?.Value;
  }

  get '300A02D6'(): Element {
    return this.dataset['300A02D6'];
  }

  // Compensator Divergence
  get CompensatorDivergence(): any {
    const element = this.dataset['300A02E0'];
    return (element?.Value.length === 1)
      ? this.dataset['300A02E0']?.Value[0]
      : this.dataset['300A02E0']?.Value;
  }

  get '300A02E0'(): Element {
    return this.dataset['300A02E0'];
  }

  // Compensator Mounting Position
  get CompensatorMountingPosition(): any {
    const element = this.dataset['300A02E1'];
    return (element?.Value.length === 1)
      ? this.dataset['300A02E1']?.Value[0]
      : this.dataset['300A02E1']?.Value;
  }

  get '300A02E1'(): Element {
    return this.dataset['300A02E1'];
  }

  // Source to Compensator Distance
  get SourceToCompensatorDistance(): any {
    const element = this.dataset['300A02E2'];
    return (element?.Value.length === 1)
      ? this.dataset['300A02E2']?.Value[0]
      : this.dataset['300A02E2']?.Value;
  }

  get '300A02E2'(): Element {
    return this.dataset['300A02E2'];
  }

  // Total Compensator Tray Water-Equivalent Thickness
  get TotalCompensatorTrayWaterEquivalentThickness(): any {
    const element = this.dataset['300A02E3'];
    return (element?.Value.length === 1)
      ? this.dataset['300A02E3']?.Value[0]
      : this.dataset['300A02E3']?.Value;
  }

  get '300A02E3'(): Element {
    return this.dataset['300A02E3'];
  }

  // Isocenter to Compensator Tray Distance
  get IsocenterToCompensatorTrayDistance(): any {
    const element = this.dataset['300A02E4'];
    return (element?.Value.length === 1)
      ? this.dataset['300A02E4']?.Value[0]
      : this.dataset['300A02E4']?.Value;
  }

  get '300A02E4'(): Element {
    return this.dataset['300A02E4'];
  }

  // Compensator Column Offset
  get CompensatorColumnOffset(): any {
    const element = this.dataset['300A02E5'];
    return (element?.Value.length === 1)
      ? this.dataset['300A02E5']?.Value[0]
      : this.dataset['300A02E5']?.Value;
  }

  get '300A02E5'(): Element {
    return this.dataset['300A02E5'];
  }

  // Isocenter to Compensator Distances
  get IsocenterToCompensatorDistances(): any {
    const element = this.dataset['300A02E6'];
    return (element?.Value.length === 1)
      ? this.dataset['300A02E6']?.Value[0]
      : this.dataset['300A02E6']?.Value;
  }

  get '300A02E6'(): Element {
    return this.dataset['300A02E6'];
  }

  // Compensator Relative Stopping Power Ratio
  get CompensatorRelativeStoppingPowerRatio(): any {
    const element = this.dataset['300A02E7'];
    return (element?.Value.length === 1)
      ? this.dataset['300A02E7']?.Value[0]
      : this.dataset['300A02E7']?.Value;
  }

  get '300A02E7'(): Element {
    return this.dataset['300A02E7'];
  }

  // Compensator Milling Tool Diameter
  get CompensatorMillingToolDiameter(): any {
    const element = this.dataset['300A02E8'];
    return (element?.Value.length === 1)
      ? this.dataset['300A02E8']?.Value[0]
      : this.dataset['300A02E8']?.Value;
  }

  get '300A02E8'(): Element {
    return this.dataset['300A02E8'];
  }

  // Ion Range Compensator Sequence
  get IonRangeCompensatorSequence(): any {
    const element = this.dataset['300A02EA'];
    return (element?.Value.length === 1)
      ? this.dataset['300A02EA']?.Value[0]
      : this.dataset['300A02EA']?.Value;
  }

  get '300A02EA'(): Element {
    return this.dataset['300A02EA'];
  }

  // Compensator Description
  get CompensatorDescription(): any {
    const element = this.dataset['300A02EB'];
    return (element?.Value.length === 1)
      ? this.dataset['300A02EB']?.Value[0]
      : this.dataset['300A02EB']?.Value;
  }

  get '300A02EB'(): Element {
    return this.dataset['300A02EB'];
  }

  // Radiation Mass Number
  get RadiationMassNumber(): any {
    const element = this.dataset['300A0302'];
    return (element?.Value.length === 1)
      ? this.dataset['300A0302']?.Value[0]
      : this.dataset['300A0302']?.Value;
  }

  get '300A0302'(): Element {
    return this.dataset['300A0302'];
  }

  // Radiation Atomic Number
  get RadiationAtomicNumber(): any {
    const element = this.dataset['300A0304'];
    return (element?.Value.length === 1)
      ? this.dataset['300A0304']?.Value[0]
      : this.dataset['300A0304']?.Value;
  }

  get '300A0304'(): Element {
    return this.dataset['300A0304'];
  }

  // Radiation Charge State
  get RadiationChargeState(): any {
    const element = this.dataset['300A0306'];
    return (element?.Value.length === 1)
      ? this.dataset['300A0306']?.Value[0]
      : this.dataset['300A0306']?.Value;
  }

  get '300A0306'(): Element {
    return this.dataset['300A0306'];
  }

  // Scan Mode
  get ScanMode(): any {
    const element = this.dataset['300A0308'];
    return (element?.Value.length === 1)
      ? this.dataset['300A0308']?.Value[0]
      : this.dataset['300A0308']?.Value;
  }

  get '300A0308'(): Element {
    return this.dataset['300A0308'];
  }

  // Virtual Source-Axis Distances
  get VirtualSourceAxisDistances(): any {
    const element = this.dataset['300A030A'];
    return (element?.Value.length === 1)
      ? this.dataset['300A030A']?.Value[0]
      : this.dataset['300A030A']?.Value;
  }

  get '300A030A'(): Element {
    return this.dataset['300A030A'];
  }

  // Snout Sequence
  get SnoutSequence(): any {
    const element = this.dataset['300A030C'];
    return (element?.Value.length === 1)
      ? this.dataset['300A030C']?.Value[0]
      : this.dataset['300A030C']?.Value;
  }

  get '300A030C'(): Element {
    return this.dataset['300A030C'];
  }

  // Snout Position
  get SnoutPosition(): any {
    const element = this.dataset['300A030D'];
    return (element?.Value.length === 1)
      ? this.dataset['300A030D']?.Value[0]
      : this.dataset['300A030D']?.Value;
  }

  get '300A030D'(): Element {
    return this.dataset['300A030D'];
  }

  // Snout ID
  get SnoutID(): any {
    const element = this.dataset['300A030F'];
    return (element?.Value.length === 1)
      ? this.dataset['300A030F']?.Value[0]
      : this.dataset['300A030F']?.Value;
  }

  get '300A030F'(): Element {
    return this.dataset['300A030F'];
  }

  // Number of Range Shifters
  get NumberOfRangeShifters(): any {
    const element = this.dataset['300A0312'];
    return (element?.Value.length === 1)
      ? this.dataset['300A0312']?.Value[0]
      : this.dataset['300A0312']?.Value;
  }

  get '300A0312'(): Element {
    return this.dataset['300A0312'];
  }

  // Range Shifter Sequence
  get RangeShifterSequence(): any {
    const element = this.dataset['300A0314'];
    return (element?.Value.length === 1)
      ? this.dataset['300A0314']?.Value[0]
      : this.dataset['300A0314']?.Value;
  }

  get '300A0314'(): Element {
    return this.dataset['300A0314'];
  }

  // Range Shifter Number
  get RangeShifterNumber(): any {
    const element = this.dataset['300A0316'];
    return (element?.Value.length === 1)
      ? this.dataset['300A0316']?.Value[0]
      : this.dataset['300A0316']?.Value;
  }

  get '300A0316'(): Element {
    return this.dataset['300A0316'];
  }

  // Range Shifter ID
  get RangeShifterID(): any {
    const element = this.dataset['300A0318'];
    return (element?.Value.length === 1)
      ? this.dataset['300A0318']?.Value[0]
      : this.dataset['300A0318']?.Value;
  }

  get '300A0318'(): Element {
    return this.dataset['300A0318'];
  }

  // Range Shifter Type
  get RangeShifterType(): any {
    const element = this.dataset['300A0320'];
    return (element?.Value.length === 1)
      ? this.dataset['300A0320']?.Value[0]
      : this.dataset['300A0320']?.Value;
  }

  get '300A0320'(): Element {
    return this.dataset['300A0320'];
  }

  // Range Shifter Description
  get RangeShifterDescription(): any {
    const element = this.dataset['300A0322'];
    return (element?.Value.length === 1)
      ? this.dataset['300A0322']?.Value[0]
      : this.dataset['300A0322']?.Value;
  }

  get '300A0322'(): Element {
    return this.dataset['300A0322'];
  }

  // Number of Lateral Spreading Devices
  get NumberOfLateralSpreadingDevices(): any {
    const element = this.dataset['300A0330'];
    return (element?.Value.length === 1)
      ? this.dataset['300A0330']?.Value[0]
      : this.dataset['300A0330']?.Value;
  }

  get '300A0330'(): Element {
    return this.dataset['300A0330'];
  }

  // Lateral Spreading Device Sequence
  get LateralSpreadingDeviceSequence(): any {
    const element = this.dataset['300A0332'];
    return (element?.Value.length === 1)
      ? this.dataset['300A0332']?.Value[0]
      : this.dataset['300A0332']?.Value;
  }

  get '300A0332'(): Element {
    return this.dataset['300A0332'];
  }

  // Lateral Spreading Device Number
  get LateralSpreadingDeviceNumber(): any {
    const element = this.dataset['300A0334'];
    return (element?.Value.length === 1)
      ? this.dataset['300A0334']?.Value[0]
      : this.dataset['300A0334']?.Value;
  }

  get '300A0334'(): Element {
    return this.dataset['300A0334'];
  }

  // Lateral Spreading Device ID
  get LateralSpreadingDeviceID(): any {
    const element = this.dataset['300A0336'];
    return (element?.Value.length === 1)
      ? this.dataset['300A0336']?.Value[0]
      : this.dataset['300A0336']?.Value;
  }

  get '300A0336'(): Element {
    return this.dataset['300A0336'];
  }

  // Lateral Spreading Device Type
  get LateralSpreadingDeviceType(): any {
    const element = this.dataset['300A0338'];
    return (element?.Value.length === 1)
      ? this.dataset['300A0338']?.Value[0]
      : this.dataset['300A0338']?.Value;
  }

  get '300A0338'(): Element {
    return this.dataset['300A0338'];
  }

  // Lateral Spreading Device Description
  get LateralSpreadingDeviceDescription(): any {
    const element = this.dataset['300A033A'];
    return (element?.Value.length === 1)
      ? this.dataset['300A033A']?.Value[0]
      : this.dataset['300A033A']?.Value;
  }

  get '300A033A'(): Element {
    return this.dataset['300A033A'];
  }

  // Lateral Spreading Device Water Equivalent Thickness
  get LateralSpreadingDeviceWaterEquivalentThickness(): any {
    const element = this.dataset['300A033C'];
    return (element?.Value.length === 1)
      ? this.dataset['300A033C']?.Value[0]
      : this.dataset['300A033C']?.Value;
  }

  get '300A033C'(): Element {
    return this.dataset['300A033C'];
  }

  // Number of Range Modulators
  get NumberOfRangeModulators(): any {
    const element = this.dataset['300A0340'];
    return (element?.Value.length === 1)
      ? this.dataset['300A0340']?.Value[0]
      : this.dataset['300A0340']?.Value;
  }

  get '300A0340'(): Element {
    return this.dataset['300A0340'];
  }

  // Range Modulator Sequence
  get RangeModulatorSequence(): any {
    const element = this.dataset['300A0342'];
    return (element?.Value.length === 1)
      ? this.dataset['300A0342']?.Value[0]
      : this.dataset['300A0342']?.Value;
  }

  get '300A0342'(): Element {
    return this.dataset['300A0342'];
  }

  // Range Modulator Number
  get RangeModulatorNumber(): any {
    const element = this.dataset['300A0344'];
    return (element?.Value.length === 1)
      ? this.dataset['300A0344']?.Value[0]
      : this.dataset['300A0344']?.Value;
  }

  get '300A0344'(): Element {
    return this.dataset['300A0344'];
  }

  // Range Modulator ID
  get RangeModulatorID(): any {
    const element = this.dataset['300A0346'];
    return (element?.Value.length === 1)
      ? this.dataset['300A0346']?.Value[0]
      : this.dataset['300A0346']?.Value;
  }

  get '300A0346'(): Element {
    return this.dataset['300A0346'];
  }

  // Range Modulator Type
  get RangeModulatorType(): any {
    const element = this.dataset['300A0348'];
    return (element?.Value.length === 1)
      ? this.dataset['300A0348']?.Value[0]
      : this.dataset['300A0348']?.Value;
  }

  get '300A0348'(): Element {
    return this.dataset['300A0348'];
  }

  // Range Modulator Description
  get RangeModulatorDescription(): any {
    const element = this.dataset['300A034A'];
    return (element?.Value.length === 1)
      ? this.dataset['300A034A']?.Value[0]
      : this.dataset['300A034A']?.Value;
  }

  get '300A034A'(): Element {
    return this.dataset['300A034A'];
  }

  // Beam Current Modulation ID
  get BeamCurrentModulationID(): any {
    const element = this.dataset['300A034C'];
    return (element?.Value.length === 1)
      ? this.dataset['300A034C']?.Value[0]
      : this.dataset['300A034C']?.Value;
  }

  get '300A034C'(): Element {
    return this.dataset['300A034C'];
  }

  // Patient Support Type
  get PatientSupportType(): any {
    const element = this.dataset['300A0350'];
    return (element?.Value.length === 1)
      ? this.dataset['300A0350']?.Value[0]
      : this.dataset['300A0350']?.Value;
  }

  get '300A0350'(): Element {
    return this.dataset['300A0350'];
  }

  // Patient Support ID
  get PatientSupportID(): any {
    const element = this.dataset['300A0352'];
    return (element?.Value.length === 1)
      ? this.dataset['300A0352']?.Value[0]
      : this.dataset['300A0352']?.Value;
  }

  get '300A0352'(): Element {
    return this.dataset['300A0352'];
  }

  // Patient Support Accessory Code
  get PatientSupportAccessoryCode(): any {
    const element = this.dataset['300A0354'];
    return (element?.Value.length === 1)
      ? this.dataset['300A0354']?.Value[0]
      : this.dataset['300A0354']?.Value;
  }

  get '300A0354'(): Element {
    return this.dataset['300A0354'];
  }

  // Fixation Light Azimuthal Angle
  get FixationLightAzimuthalAngle(): any {
    const element = this.dataset['300A0356'];
    return (element?.Value.length === 1)
      ? this.dataset['300A0356']?.Value[0]
      : this.dataset['300A0356']?.Value;
  }

  get '300A0356'(): Element {
    return this.dataset['300A0356'];
  }

  // Fixation Light Polar Angle
  get FixationLightPolarAngle(): any {
    const element = this.dataset['300A0358'];
    return (element?.Value.length === 1)
      ? this.dataset['300A0358']?.Value[0]
      : this.dataset['300A0358']?.Value;
  }

  get '300A0358'(): Element {
    return this.dataset['300A0358'];
  }

  // Meterset Rate
  get MetersetRate(): any {
    const element = this.dataset['300A035A'];
    return (element?.Value.length === 1)
      ? this.dataset['300A035A']?.Value[0]
      : this.dataset['300A035A']?.Value;
  }

  get '300A035A'(): Element {
    return this.dataset['300A035A'];
  }

  // Range Shifter Settings Sequence
  get RangeShifterSettingsSequence(): any {
    const element = this.dataset['300A0360'];
    return (element?.Value.length === 1)
      ? this.dataset['300A0360']?.Value[0]
      : this.dataset['300A0360']?.Value;
  }

  get '300A0360'(): Element {
    return this.dataset['300A0360'];
  }

  // Range Shifter Setting
  get RangeShifterSetting(): any {
    const element = this.dataset['300A0362'];
    return (element?.Value.length === 1)
      ? this.dataset['300A0362']?.Value[0]
      : this.dataset['300A0362']?.Value;
  }

  get '300A0362'(): Element {
    return this.dataset['300A0362'];
  }

  // Isocenter to Range Shifter Distance
  get IsocenterToRangeShifterDistance(): any {
    const element = this.dataset['300A0364'];
    return (element?.Value.length === 1)
      ? this.dataset['300A0364']?.Value[0]
      : this.dataset['300A0364']?.Value;
  }

  get '300A0364'(): Element {
    return this.dataset['300A0364'];
  }

  // Range Shifter Water Equivalent Thickness
  get RangeShifterWaterEquivalentThickness(): any {
    const element = this.dataset['300A0366'];
    return (element?.Value.length === 1)
      ? this.dataset['300A0366']?.Value[0]
      : this.dataset['300A0366']?.Value;
  }

  get '300A0366'(): Element {
    return this.dataset['300A0366'];
  }

  // Lateral Spreading Device Settings Sequence
  get LateralSpreadingDeviceSettingsSequence(): any {
    const element = this.dataset['300A0370'];
    return (element?.Value.length === 1)
      ? this.dataset['300A0370']?.Value[0]
      : this.dataset['300A0370']?.Value;
  }

  get '300A0370'(): Element {
    return this.dataset['300A0370'];
  }

  // Lateral Spreading Device Setting
  get LateralSpreadingDeviceSetting(): any {
    const element = this.dataset['300A0372'];
    return (element?.Value.length === 1)
      ? this.dataset['300A0372']?.Value[0]
      : this.dataset['300A0372']?.Value;
  }

  get '300A0372'(): Element {
    return this.dataset['300A0372'];
  }

  // Isocenter to Lateral Spreading Device Distance
  get IsocenterToLateralSpreadingDeviceDistance(): any {
    const element = this.dataset['300A0374'];
    return (element?.Value.length === 1)
      ? this.dataset['300A0374']?.Value[0]
      : this.dataset['300A0374']?.Value;
  }

  get '300A0374'(): Element {
    return this.dataset['300A0374'];
  }

  // Range Modulator Settings Sequence
  get RangeModulatorSettingsSequence(): any {
    const element = this.dataset['300A0380'];
    return (element?.Value.length === 1)
      ? this.dataset['300A0380']?.Value[0]
      : this.dataset['300A0380']?.Value;
  }

  get '300A0380'(): Element {
    return this.dataset['300A0380'];
  }

  // Range Modulator Gating Start Value
  get RangeModulatorGatingStartValue(): any {
    const element = this.dataset['300A0382'];
    return (element?.Value.length === 1)
      ? this.dataset['300A0382']?.Value[0]
      : this.dataset['300A0382']?.Value;
  }

  get '300A0382'(): Element {
    return this.dataset['300A0382'];
  }

  // Range Modulator Gating Stop Value
  get RangeModulatorGatingStopValue(): any {
    const element = this.dataset['300A0384'];
    return (element?.Value.length === 1)
      ? this.dataset['300A0384']?.Value[0]
      : this.dataset['300A0384']?.Value;
  }

  get '300A0384'(): Element {
    return this.dataset['300A0384'];
  }

  // Range Modulator Gating Start Water Equivalent Thickness
  get RangeModulatorGatingStartWaterEquivalentThickness(): any {
    const element = this.dataset['300A0386'];
    return (element?.Value.length === 1)
      ? this.dataset['300A0386']?.Value[0]
      : this.dataset['300A0386']?.Value;
  }

  get '300A0386'(): Element {
    return this.dataset['300A0386'];
  }

  // Range Modulator Gating Stop Water Equivalent Thickness
  get RangeModulatorGatingStopWaterEquivalentThickness(): any {
    const element = this.dataset['300A0388'];
    return (element?.Value.length === 1)
      ? this.dataset['300A0388']?.Value[0]
      : this.dataset['300A0388']?.Value;
  }

  get '300A0388'(): Element {
    return this.dataset['300A0388'];
  }

  // Isocenter to Range Modulator Distance
  get IsocenterToRangeModulatorDistance(): any {
    const element = this.dataset['300A038A'];
    return (element?.Value.length === 1)
      ? this.dataset['300A038A']?.Value[0]
      : this.dataset['300A038A']?.Value;
  }

  get '300A038A'(): Element {
    return this.dataset['300A038A'];
  }

  // Scan Spot Tune ID
  get ScanSpotTuneID(): any {
    const element = this.dataset['300A0390'];
    return (element?.Value.length === 1)
      ? this.dataset['300A0390']?.Value[0]
      : this.dataset['300A0390']?.Value;
  }

  get '300A0390'(): Element {
    return this.dataset['300A0390'];
  }

  // Number of Scan Spot Positions
  get NumberOfScanSpotPositions(): any {
    const element = this.dataset['300A0392'];
    return (element?.Value.length === 1)
      ? this.dataset['300A0392']?.Value[0]
      : this.dataset['300A0392']?.Value;
  }

  get '300A0392'(): Element {
    return this.dataset['300A0392'];
  }

  // Scan Spot Position Map
  get ScanSpotPositionMap(): any {
    const element = this.dataset['300A0394'];
    return (element?.Value.length === 1)
      ? this.dataset['300A0394']?.Value[0]
      : this.dataset['300A0394']?.Value;
  }

  get '300A0394'(): Element {
    return this.dataset['300A0394'];
  }

  // Scan Spot Meterset Weights
  get ScanSpotMetersetWeights(): any {
    const element = this.dataset['300A0396'];
    return (element?.Value.length === 1)
      ? this.dataset['300A0396']?.Value[0]
      : this.dataset['300A0396']?.Value;
  }

  get '300A0396'(): Element {
    return this.dataset['300A0396'];
  }

  // Scanning Spot Size
  get ScanningSpotSize(): any {
    const element = this.dataset['300A0398'];
    return (element?.Value.length === 1)
      ? this.dataset['300A0398']?.Value[0]
      : this.dataset['300A0398']?.Value;
  }

  get '300A0398'(): Element {
    return this.dataset['300A0398'];
  }

  // Number of Paintings
  get NumberOfPaintings(): any {
    const element = this.dataset['300A039A'];
    return (element?.Value.length === 1)
      ? this.dataset['300A039A']?.Value[0]
      : this.dataset['300A039A']?.Value;
  }

  get '300A039A'(): Element {
    return this.dataset['300A039A'];
  }

  // Ion Tolerance Table Sequence
  get IonToleranceTableSequence(): any {
    const element = this.dataset['300A03A0'];
    return (element?.Value.length === 1)
      ? this.dataset['300A03A0']?.Value[0]
      : this.dataset['300A03A0']?.Value;
  }

  get '300A03A0'(): Element {
    return this.dataset['300A03A0'];
  }

  // Ion Beam Sequence
  get IonBeamSequence(): any {
    const element = this.dataset['300A03A2'];
    return (element?.Value.length === 1)
      ? this.dataset['300A03A2']?.Value[0]
      : this.dataset['300A03A2']?.Value;
  }

  get '300A03A2'(): Element {
    return this.dataset['300A03A2'];
  }

  // Ion Beam Limiting Device Sequence
  get IonBeamLimitingDeviceSequence(): any {
    const element = this.dataset['300A03A4'];
    return (element?.Value.length === 1)
      ? this.dataset['300A03A4']?.Value[0]
      : this.dataset['300A03A4']?.Value;
  }

  get '300A03A4'(): Element {
    return this.dataset['300A03A4'];
  }

  // Ion Block Sequence
  get IonBlockSequence(): any {
    const element = this.dataset['300A03A6'];
    return (element?.Value.length === 1)
      ? this.dataset['300A03A6']?.Value[0]
      : this.dataset['300A03A6']?.Value;
  }

  get '300A03A6'(): Element {
    return this.dataset['300A03A6'];
  }

  // Ion Control Point Sequence
  get IonControlPointSequence(): any {
    const element = this.dataset['300A03A8'];
    return (element?.Value.length === 1)
      ? this.dataset['300A03A8']?.Value[0]
      : this.dataset['300A03A8']?.Value;
  }

  get '300A03A8'(): Element {
    return this.dataset['300A03A8'];
  }

  // Ion Wedge Sequence
  get IonWedgeSequence(): any {
    const element = this.dataset['300A03AA'];
    return (element?.Value.length === 1)
      ? this.dataset['300A03AA']?.Value[0]
      : this.dataset['300A03AA']?.Value;
  }

  get '300A03AA'(): Element {
    return this.dataset['300A03AA'];
  }

  // Ion Wedge Position Sequence
  get IonWedgePositionSequence(): any {
    const element = this.dataset['300A03AC'];
    return (element?.Value.length === 1)
      ? this.dataset['300A03AC']?.Value[0]
      : this.dataset['300A03AC']?.Value;
  }

  get '300A03AC'(): Element {
    return this.dataset['300A03AC'];
  }

  // Referenced Setup Image Sequence
  get ReferencedSetupImageSequence(): any {
    const element = this.dataset['300A0401'];
    return (element?.Value.length === 1)
      ? this.dataset['300A0401']?.Value[0]
      : this.dataset['300A0401']?.Value;
  }

  get '300A0401'(): Element {
    return this.dataset['300A0401'];
  }

  // Setup Image Comment
  get SetupImageComment(): any {
    const element = this.dataset['300A0402'];
    return (element?.Value.length === 1)
      ? this.dataset['300A0402']?.Value[0]
      : this.dataset['300A0402']?.Value;
  }

  get '300A0402'(): Element {
    return this.dataset['300A0402'];
  }

  // Motion Synchronization Sequence
  get MotionSynchronizationSequence(): any {
    const element = this.dataset['300A0410'];
    return (element?.Value.length === 1)
      ? this.dataset['300A0410']?.Value[0]
      : this.dataset['300A0410']?.Value;
  }

  get '300A0410'(): Element {
    return this.dataset['300A0410'];
  }

  // Control Point Orientation
  get ControlPointOrientation(): any {
    const element = this.dataset['300A0412'];
    return (element?.Value.length === 1)
      ? this.dataset['300A0412']?.Value[0]
      : this.dataset['300A0412']?.Value;
  }

  get '300A0412'(): Element {
    return this.dataset['300A0412'];
  }

  // General Accessory Sequence
  get GeneralAccessorySequence(): any {
    const element = this.dataset['300A0420'];
    return (element?.Value.length === 1)
      ? this.dataset['300A0420']?.Value[0]
      : this.dataset['300A0420']?.Value;
  }

  get '300A0420'(): Element {
    return this.dataset['300A0420'];
  }

  // General Accessory ID
  get GeneralAccessoryID(): any {
    const element = this.dataset['300A0421'];
    return (element?.Value.length === 1)
      ? this.dataset['300A0421']?.Value[0]
      : this.dataset['300A0421']?.Value;
  }

  get '300A0421'(): Element {
    return this.dataset['300A0421'];
  }

  // General Accessory Description
  get GeneralAccessoryDescription(): any {
    const element = this.dataset['300A0422'];
    return (element?.Value.length === 1)
      ? this.dataset['300A0422']?.Value[0]
      : this.dataset['300A0422']?.Value;
  }

  get '300A0422'(): Element {
    return this.dataset['300A0422'];
  }

  // General Accessory Type
  get GeneralAccessoryType(): any {
    const element = this.dataset['300A0423'];
    return (element?.Value.length === 1)
      ? this.dataset['300A0423']?.Value[0]
      : this.dataset['300A0423']?.Value;
  }

  get '300A0423'(): Element {
    return this.dataset['300A0423'];
  }

  // General Accessory Number
  get GeneralAccessoryNumber(): any {
    const element = this.dataset['300A0424'];
    return (element?.Value.length === 1)
      ? this.dataset['300A0424']?.Value[0]
      : this.dataset['300A0424']?.Value;
  }

  get '300A0424'(): Element {
    return this.dataset['300A0424'];
  }

  // Source to General Accessory Distance
  get SourceToGeneralAccessoryDistance(): any {
    const element = this.dataset['300A0425'];
    return (element?.Value.length === 1)
      ? this.dataset['300A0425']?.Value[0]
      : this.dataset['300A0425']?.Value;
  }

  get '300A0425'(): Element {
    return this.dataset['300A0425'];
  }

  // Applicator Geometry Sequence
  get ApplicatorGeometrySequence(): any {
    const element = this.dataset['300A0431'];
    return (element?.Value.length === 1)
      ? this.dataset['300A0431']?.Value[0]
      : this.dataset['300A0431']?.Value;
  }

  get '300A0431'(): Element {
    return this.dataset['300A0431'];
  }

  // Applicator Aperture Shape
  get ApplicatorApertureShape(): any {
    const element = this.dataset['300A0432'];
    return (element?.Value.length === 1)
      ? this.dataset['300A0432']?.Value[0]
      : this.dataset['300A0432']?.Value;
  }

  get '300A0432'(): Element {
    return this.dataset['300A0432'];
  }

  // Applicator Opening
  get ApplicatorOpening(): any {
    const element = this.dataset['300A0433'];
    return (element?.Value.length === 1)
      ? this.dataset['300A0433']?.Value[0]
      : this.dataset['300A0433']?.Value;
  }

  get '300A0433'(): Element {
    return this.dataset['300A0433'];
  }

  // Applicator Opening X
  get ApplicatorOpeningX(): any {
    const element = this.dataset['300A0434'];
    return (element?.Value.length === 1)
      ? this.dataset['300A0434']?.Value[0]
      : this.dataset['300A0434']?.Value;
  }

  get '300A0434'(): Element {
    return this.dataset['300A0434'];
  }

  // Applicator Opening Y
  get ApplicatorOpeningY(): any {
    const element = this.dataset['300A0435'];
    return (element?.Value.length === 1)
      ? this.dataset['300A0435']?.Value[0]
      : this.dataset['300A0435']?.Value;
  }

  get '300A0435'(): Element {
    return this.dataset['300A0435'];
  }

  // Source to Applicator Mounting Position Distance
  get SourceToApplicatorMountingPositionDistance(): any {
    const element = this.dataset['300A0436'];
    return (element?.Value.length === 1)
      ? this.dataset['300A0436']?.Value[0]
      : this.dataset['300A0436']?.Value;
  }

  get '300A0436'(): Element {
    return this.dataset['300A0436'];
  }

  // Referenced RT Plan Sequence
  get ReferencedRTPlanSequence(): any {
    const element = this.dataset['300C0002'];
    return (element?.Value.length === 1)
      ? this.dataset['300C0002']?.Value[0]
      : this.dataset['300C0002']?.Value;
  }

  get '300C0002'(): Element {
    return this.dataset['300C0002'];
  }

  // Referenced Beam Sequence
  get ReferencedBeamSequence(): any {
    const element = this.dataset['300C0004'];
    return (element?.Value.length === 1)
      ? this.dataset['300C0004']?.Value[0]
      : this.dataset['300C0004']?.Value;
  }

  get '300C0004'(): Element {
    return this.dataset['300C0004'];
  }

  // Referenced Beam Number
  get ReferencedBeamNumber(): any {
    const element = this.dataset['300C0006'];
    return (element?.Value.length === 1)
      ? this.dataset['300C0006']?.Value[0]
      : this.dataset['300C0006']?.Value;
  }

  get '300C0006'(): Element {
    return this.dataset['300C0006'];
  }

  // Referenced Reference Image Number
  get ReferencedReferenceImageNumber(): any {
    const element = this.dataset['300C0007'];
    return (element?.Value.length === 1)
      ? this.dataset['300C0007']?.Value[0]
      : this.dataset['300C0007']?.Value;
  }

  get '300C0007'(): Element {
    return this.dataset['300C0007'];
  }

  // Start Cumulative Meterset Weight
  get StartCumulativeMetersetWeight(): any {
    const element = this.dataset['300C0008'];
    return (element?.Value.length === 1)
      ? this.dataset['300C0008']?.Value[0]
      : this.dataset['300C0008']?.Value;
  }

  get '300C0008'(): Element {
    return this.dataset['300C0008'];
  }

  // End Cumulative Meterset Weight
  get EndCumulativeMetersetWeight(): any {
    const element = this.dataset['300C0009'];
    return (element?.Value.length === 1)
      ? this.dataset['300C0009']?.Value[0]
      : this.dataset['300C0009']?.Value;
  }

  get '300C0009'(): Element {
    return this.dataset['300C0009'];
  }

  // Referenced Brachy Application Setup Sequence
  get ReferencedBrachyApplicationSetupSequence(): any {
    const element = this.dataset['300C000A'];
    return (element?.Value.length === 1)
      ? this.dataset['300C000A']?.Value[0]
      : this.dataset['300C000A']?.Value;
  }

  get '300C000A'(): Element {
    return this.dataset['300C000A'];
  }

  // Referenced Brachy Application Setup Number
  get ReferencedBrachyApplicationSetupNumber(): any {
    const element = this.dataset['300C000C'];
    return (element?.Value.length === 1)
      ? this.dataset['300C000C']?.Value[0]
      : this.dataset['300C000C']?.Value;
  }

  get '300C000C'(): Element {
    return this.dataset['300C000C'];
  }

  // Referenced Source Number
  get ReferencedSourceNumber(): any {
    const element = this.dataset['300C000E'];
    return (element?.Value.length === 1)
      ? this.dataset['300C000E']?.Value[0]
      : this.dataset['300C000E']?.Value;
  }

  get '300C000E'(): Element {
    return this.dataset['300C000E'];
  }

  // Referenced Fraction Group Sequence
  get ReferencedFractionGroupSequence(): any {
    const element = this.dataset['300C0020'];
    return (element?.Value.length === 1)
      ? this.dataset['300C0020']?.Value[0]
      : this.dataset['300C0020']?.Value;
  }

  get '300C0020'(): Element {
    return this.dataset['300C0020'];
  }

  // Referenced Fraction Group Number
  get ReferencedFractionGroupNumber(): any {
    const element = this.dataset['300C0022'];
    return (element?.Value.length === 1)
      ? this.dataset['300C0022']?.Value[0]
      : this.dataset['300C0022']?.Value;
  }

  get '300C0022'(): Element {
    return this.dataset['300C0022'];
  }

  // Referenced Verification Image Sequence
  get ReferencedVerificationImageSequence(): any {
    const element = this.dataset['300C0040'];
    return (element?.Value.length === 1)
      ? this.dataset['300C0040']?.Value[0]
      : this.dataset['300C0040']?.Value;
  }

  get '300C0040'(): Element {
    return this.dataset['300C0040'];
  }

  // Referenced Reference Image Sequence
  get ReferencedReferenceImageSequence(): any {
    const element = this.dataset['300C0042'];
    return (element?.Value.length === 1)
      ? this.dataset['300C0042']?.Value[0]
      : this.dataset['300C0042']?.Value;
  }

  get '300C0042'(): Element {
    return this.dataset['300C0042'];
  }

  // Referenced Dose Reference Sequence
  get ReferencedDoseReferenceSequence(): any {
    const element = this.dataset['300C0050'];
    return (element?.Value.length === 1)
      ? this.dataset['300C0050']?.Value[0]
      : this.dataset['300C0050']?.Value;
  }

  get '300C0050'(): Element {
    return this.dataset['300C0050'];
  }

  // Referenced Dose Reference Number
  get ReferencedDoseReferenceNumber(): any {
    const element = this.dataset['300C0051'];
    return (element?.Value.length === 1)
      ? this.dataset['300C0051']?.Value[0]
      : this.dataset['300C0051']?.Value;
  }

  get '300C0051'(): Element {
    return this.dataset['300C0051'];
  }

  // Brachy Referenced Dose Reference Sequence
  get BrachyReferencedDoseReferenceSequence(): any {
    const element = this.dataset['300C0055'];
    return (element?.Value.length === 1)
      ? this.dataset['300C0055']?.Value[0]
      : this.dataset['300C0055']?.Value;
  }

  get '300C0055'(): Element {
    return this.dataset['300C0055'];
  }

  // Referenced Structure Set Sequence
  get ReferencedStructureSetSequence(): any {
    const element = this.dataset['300C0060'];
    return (element?.Value.length === 1)
      ? this.dataset['300C0060']?.Value[0]
      : this.dataset['300C0060']?.Value;
  }

  get '300C0060'(): Element {
    return this.dataset['300C0060'];
  }

  // Referenced Patient Setup Number
  get ReferencedPatientSetupNumber(): any {
    const element = this.dataset['300C006A'];
    return (element?.Value.length === 1)
      ? this.dataset['300C006A']?.Value[0]
      : this.dataset['300C006A']?.Value;
  }

  get '300C006A'(): Element {
    return this.dataset['300C006A'];
  }

  // Referenced Dose Sequence
  get ReferencedDoseSequence(): any {
    const element = this.dataset['300C0080'];
    return (element?.Value.length === 1)
      ? this.dataset['300C0080']?.Value[0]
      : this.dataset['300C0080']?.Value;
  }

  get '300C0080'(): Element {
    return this.dataset['300C0080'];
  }

  // Referenced Tolerance Table Number
  get ReferencedToleranceTableNumber(): any {
    const element = this.dataset['300C00A0'];
    return (element?.Value.length === 1)
      ? this.dataset['300C00A0']?.Value[0]
      : this.dataset['300C00A0']?.Value;
  }

  get '300C00A0'(): Element {
    return this.dataset['300C00A0'];
  }

  // Referenced Bolus Sequence
  get ReferencedBolusSequence(): any {
    const element = this.dataset['300C00B0'];
    return (element?.Value.length === 1)
      ? this.dataset['300C00B0']?.Value[0]
      : this.dataset['300C00B0']?.Value;
  }

  get '300C00B0'(): Element {
    return this.dataset['300C00B0'];
  }

  // Referenced Wedge Number
  get ReferencedWedgeNumber(): any {
    const element = this.dataset['300C00C0'];
    return (element?.Value.length === 1)
      ? this.dataset['300C00C0']?.Value[0]
      : this.dataset['300C00C0']?.Value;
  }

  get '300C00C0'(): Element {
    return this.dataset['300C00C0'];
  }

  // Referenced Compensator Number
  get ReferencedCompensatorNumber(): any {
    const element = this.dataset['300C00D0'];
    return (element?.Value.length === 1)
      ? this.dataset['300C00D0']?.Value[0]
      : this.dataset['300C00D0']?.Value;
  }

  get '300C00D0'(): Element {
    return this.dataset['300C00D0'];
  }

  // Referenced Block Number
  get ReferencedBlockNumber(): any {
    const element = this.dataset['300C00E0'];
    return (element?.Value.length === 1)
      ? this.dataset['300C00E0']?.Value[0]
      : this.dataset['300C00E0']?.Value;
  }

  get '300C00E0'(): Element {
    return this.dataset['300C00E0'];
  }

  // Referenced Control Point Index
  get ReferencedControlPointIndex(): any {
    const element = this.dataset['300C00F0'];
    return (element?.Value.length === 1)
      ? this.dataset['300C00F0']?.Value[0]
      : this.dataset['300C00F0']?.Value;
  }

  get '300C00F0'(): Element {
    return this.dataset['300C00F0'];
  }

  // Referenced Control Point Sequence
  get ReferencedControlPointSequence(): any {
    const element = this.dataset['300C00F2'];
    return (element?.Value.length === 1)
      ? this.dataset['300C00F2']?.Value[0]
      : this.dataset['300C00F2']?.Value;
  }

  get '300C00F2'(): Element {
    return this.dataset['300C00F2'];
  }

  // Referenced Start Control Point Index
  get ReferencedStartControlPointIndex(): any {
    const element = this.dataset['300C00F4'];
    return (element?.Value.length === 1)
      ? this.dataset['300C00F4']?.Value[0]
      : this.dataset['300C00F4']?.Value;
  }

  get '300C00F4'(): Element {
    return this.dataset['300C00F4'];
  }

  // Referenced Stop Control Point Index
  get ReferencedStopControlPointIndex(): any {
    const element = this.dataset['300C00F6'];
    return (element?.Value.length === 1)
      ? this.dataset['300C00F6']?.Value[0]
      : this.dataset['300C00F6']?.Value;
  }

  get '300C00F6'(): Element {
    return this.dataset['300C00F6'];
  }

  // Referenced Range Shifter Number
  get ReferencedRangeShifterNumber(): any {
    const element = this.dataset['300C0100'];
    return (element?.Value.length === 1)
      ? this.dataset['300C0100']?.Value[0]
      : this.dataset['300C0100']?.Value;
  }

  get '300C0100'(): Element {
    return this.dataset['300C0100'];
  }

  // Referenced Lateral Spreading Device Number
  get ReferencedLateralSpreadingDeviceNumber(): any {
    const element = this.dataset['300C0102'];
    return (element?.Value.length === 1)
      ? this.dataset['300C0102']?.Value[0]
      : this.dataset['300C0102']?.Value;
  }

  get '300C0102'(): Element {
    return this.dataset['300C0102'];
  }

  // Referenced Range Modulator Number
  get ReferencedRangeModulatorNumber(): any {
    const element = this.dataset['300C0104'];
    return (element?.Value.length === 1)
      ? this.dataset['300C0104']?.Value[0]
      : this.dataset['300C0104']?.Value;
  }

  get '300C0104'(): Element {
    return this.dataset['300C0104'];
  }

  // Approval Status
  get ApprovalStatus(): any {
    const element = this.dataset['300E0002'];
    return (element?.Value.length === 1)
      ? this.dataset['300E0002']?.Value[0]
      : this.dataset['300E0002']?.Value;
  }

  get '300E0002'(): Element {
    return this.dataset['300E0002'];
  }

  // Review Date
  get ReviewDate(): any {
    const element = this.dataset['300E0004'];
    return (element?.Value.length === 1)
      ? this.dataset['300E0004']?.Value[0]
      : this.dataset['300E0004']?.Value;
  }

  get '300E0004'(): Element {
    return this.dataset['300E0004'];
  }

  // Review Time
  get ReviewTime(): any {
    const element = this.dataset['300E0005'];
    return (element?.Value.length === 1)
      ? this.dataset['300E0005']?.Value[0]
      : this.dataset['300E0005']?.Value;
  }

  get '300E0005'(): Element {
    return this.dataset['300E0005'];
  }

  // Reviewer Name
  get ReviewerName(): any {
    const element = this.dataset['300E0008'];
    return (element?.Value.length === 1)
      ? this.dataset['300E0008']?.Value[0]
      : this.dataset['300E0008']?.Value;
  }

  get '300E0008'(): Element {
    return this.dataset['300E0008'];
  }

  // Arbitrary
  get Arbitrary(): any {
    const element = this.dataset['40000010'];
    return (element?.Value.length === 1)
      ? this.dataset['40000010']?.Value[0]
      : this.dataset['40000010']?.Value;
  }

  get '40000010'(): Element {
    return this.dataset['40000010'];
  }

  // Text Comments
  get TextComments(): any {
    const element = this.dataset['40004000'];
    return (element?.Value.length === 1)
      ? this.dataset['40004000']?.Value[0]
      : this.dataset['40004000']?.Value;
  }

  get '40004000'(): Element {
    return this.dataset['40004000'];
  }

  // Results ID
  get ResultsID(): any {
    const element = this.dataset['40080040'];
    return (element?.Value.length === 1)
      ? this.dataset['40080040']?.Value[0]
      : this.dataset['40080040']?.Value;
  }

  get '40080040'(): Element {
    return this.dataset['40080040'];
  }

  // Results ID Issuer
  get ResultsIDIssuer(): any {
    const element = this.dataset['40080042'];
    return (element?.Value.length === 1)
      ? this.dataset['40080042']?.Value[0]
      : this.dataset['40080042']?.Value;
  }

  get '40080042'(): Element {
    return this.dataset['40080042'];
  }

  // Referenced Interpretation Sequence
  get ReferencedInterpretationSequence(): any {
    const element = this.dataset['40080050'];
    return (element?.Value.length === 1)
      ? this.dataset['40080050']?.Value[0]
      : this.dataset['40080050']?.Value;
  }

  get '40080050'(): Element {
    return this.dataset['40080050'];
  }

  // Report Production Status (Trial)
  get ReportProductionStatusTrial(): any {
    const element = this.dataset['400800FF'];
    return (element?.Value.length === 1)
      ? this.dataset['400800FF']?.Value[0]
      : this.dataset['400800FF']?.Value;
  }

  get '400800FF'(): Element {
    return this.dataset['400800FF'];
  }

  // Interpretation Recorded Date
  get InterpretationRecordedDate(): any {
    const element = this.dataset['40080100'];
    return (element?.Value.length === 1)
      ? this.dataset['40080100']?.Value[0]
      : this.dataset['40080100']?.Value;
  }

  get '40080100'(): Element {
    return this.dataset['40080100'];
  }

  // Interpretation Recorded Time
  get InterpretationRecordedTime(): any {
    const element = this.dataset['40080101'];
    return (element?.Value.length === 1)
      ? this.dataset['40080101']?.Value[0]
      : this.dataset['40080101']?.Value;
  }

  get '40080101'(): Element {
    return this.dataset['40080101'];
  }

  // Interpretation Recorder
  get InterpretationRecorder(): any {
    const element = this.dataset['40080102'];
    return (element?.Value.length === 1)
      ? this.dataset['40080102']?.Value[0]
      : this.dataset['40080102']?.Value;
  }

  get '40080102'(): Element {
    return this.dataset['40080102'];
  }

  // Reference to Recorded Sound
  get ReferenceToRecordedSound(): any {
    const element = this.dataset['40080103'];
    return (element?.Value.length === 1)
      ? this.dataset['40080103']?.Value[0]
      : this.dataset['40080103']?.Value;
  }

  get '40080103'(): Element {
    return this.dataset['40080103'];
  }

  // Interpretation Transcription Date
  get InterpretationTranscriptionDate(): any {
    const element = this.dataset['40080108'];
    return (element?.Value.length === 1)
      ? this.dataset['40080108']?.Value[0]
      : this.dataset['40080108']?.Value;
  }

  get '40080108'(): Element {
    return this.dataset['40080108'];
  }

  // Interpretation Transcription Time
  get InterpretationTranscriptionTime(): any {
    const element = this.dataset['40080109'];
    return (element?.Value.length === 1)
      ? this.dataset['40080109']?.Value[0]
      : this.dataset['40080109']?.Value;
  }

  get '40080109'(): Element {
    return this.dataset['40080109'];
  }

  // Interpretation Transcriber
  get InterpretationTranscriber(): any {
    const element = this.dataset['4008010A'];
    return (element?.Value.length === 1)
      ? this.dataset['4008010A']?.Value[0]
      : this.dataset['4008010A']?.Value;
  }

  get '4008010A'(): Element {
    return this.dataset['4008010A'];
  }

  // Interpretation Text
  get InterpretationText(): any {
    const element = this.dataset['4008010B'];
    return (element?.Value.length === 1)
      ? this.dataset['4008010B']?.Value[0]
      : this.dataset['4008010B']?.Value;
  }

  get '4008010B'(): Element {
    return this.dataset['4008010B'];
  }

  // Interpretation Author
  get InterpretationAuthor(): any {
    const element = this.dataset['4008010C'];
    return (element?.Value.length === 1)
      ? this.dataset['4008010C']?.Value[0]
      : this.dataset['4008010C']?.Value;
  }

  get '4008010C'(): Element {
    return this.dataset['4008010C'];
  }

  // Interpretation Approver Sequence
  get InterpretationApproverSequence(): any {
    const element = this.dataset['40080111'];
    return (element?.Value.length === 1)
      ? this.dataset['40080111']?.Value[0]
      : this.dataset['40080111']?.Value;
  }

  get '40080111'(): Element {
    return this.dataset['40080111'];
  }

  // Interpretation Approval Date
  get InterpretationApprovalDate(): any {
    const element = this.dataset['40080112'];
    return (element?.Value.length === 1)
      ? this.dataset['40080112']?.Value[0]
      : this.dataset['40080112']?.Value;
  }

  get '40080112'(): Element {
    return this.dataset['40080112'];
  }

  // Interpretation Approval Time
  get InterpretationApprovalTime(): any {
    const element = this.dataset['40080113'];
    return (element?.Value.length === 1)
      ? this.dataset['40080113']?.Value[0]
      : this.dataset['40080113']?.Value;
  }

  get '40080113'(): Element {
    return this.dataset['40080113'];
  }

  // Physician Approving Interpretation
  get PhysicianApprovingInterpretation(): any {
    const element = this.dataset['40080114'];
    return (element?.Value.length === 1)
      ? this.dataset['40080114']?.Value[0]
      : this.dataset['40080114']?.Value;
  }

  get '40080114'(): Element {
    return this.dataset['40080114'];
  }

  // Interpretation Diagnosis Description
  get InterpretationDiagnosisDescription(): any {
    const element = this.dataset['40080115'];
    return (element?.Value.length === 1)
      ? this.dataset['40080115']?.Value[0]
      : this.dataset['40080115']?.Value;
  }

  get '40080115'(): Element {
    return this.dataset['40080115'];
  }

  // Interpretation Diagnosis Code Sequence
  get InterpretationDiagnosisCodeSequence(): any {
    const element = this.dataset['40080117'];
    return (element?.Value.length === 1)
      ? this.dataset['40080117']?.Value[0]
      : this.dataset['40080117']?.Value;
  }

  get '40080117'(): Element {
    return this.dataset['40080117'];
  }

  // Results Distribution List Sequence
  get ResultsDistributionListSequence(): any {
    const element = this.dataset['40080118'];
    return (element?.Value.length === 1)
      ? this.dataset['40080118']?.Value[0]
      : this.dataset['40080118']?.Value;
  }

  get '40080118'(): Element {
    return this.dataset['40080118'];
  }

  // Distribution Name
  get DistributionName(): any {
    const element = this.dataset['40080119'];
    return (element?.Value.length === 1)
      ? this.dataset['40080119']?.Value[0]
      : this.dataset['40080119']?.Value;
  }

  get '40080119'(): Element {
    return this.dataset['40080119'];
  }

  // Distribution Address
  get DistributionAddress(): any {
    const element = this.dataset['4008011A'];
    return (element?.Value.length === 1)
      ? this.dataset['4008011A']?.Value[0]
      : this.dataset['4008011A']?.Value;
  }

  get '4008011A'(): Element {
    return this.dataset['4008011A'];
  }

  // Interpretation ID
  get InterpretationID(): any {
    const element = this.dataset['40080200'];
    return (element?.Value.length === 1)
      ? this.dataset['40080200']?.Value[0]
      : this.dataset['40080200']?.Value;
  }

  get '40080200'(): Element {
    return this.dataset['40080200'];
  }

  // Interpretation ID Issuer
  get InterpretationIDIssuer(): any {
    const element = this.dataset['40080202'];
    return (element?.Value.length === 1)
      ? this.dataset['40080202']?.Value[0]
      : this.dataset['40080202']?.Value;
  }

  get '40080202'(): Element {
    return this.dataset['40080202'];
  }

  // Interpretation Type ID
  get InterpretationTypeID(): any {
    const element = this.dataset['40080210'];
    return (element?.Value.length === 1)
      ? this.dataset['40080210']?.Value[0]
      : this.dataset['40080210']?.Value;
  }

  get '40080210'(): Element {
    return this.dataset['40080210'];
  }

  // Interpretation Status ID
  get InterpretationStatusID(): any {
    const element = this.dataset['40080212'];
    return (element?.Value.length === 1)
      ? this.dataset['40080212']?.Value[0]
      : this.dataset['40080212']?.Value;
  }

  get '40080212'(): Element {
    return this.dataset['40080212'];
  }

  // Impressions
  get Impressions(): any {
    const element = this.dataset['40080300'];
    return (element?.Value.length === 1)
      ? this.dataset['40080300']?.Value[0]
      : this.dataset['40080300']?.Value;
  }

  get '40080300'(): Element {
    return this.dataset['40080300'];
  }

  // Results Comments
  get ResultsComments(): any {
    const element = this.dataset['40084000'];
    return (element?.Value.length === 1)
      ? this.dataset['40084000']?.Value[0]
      : this.dataset['40084000']?.Value;
  }

  get '40084000'(): Element {
    return this.dataset['40084000'];
  }

  // Low Energy Detectors
  get LowEnergyDetectors(): any {
    const element = this.dataset['40100001'];
    return (element?.Value.length === 1)
      ? this.dataset['40100001']?.Value[0]
      : this.dataset['40100001']?.Value;
  }

  get '40100001'(): Element {
    return this.dataset['40100001'];
  }

  // High Energy Detectors
  get HighEnergyDetectors(): any {
    const element = this.dataset['40100002'];
    return (element?.Value.length === 1)
      ? this.dataset['40100002']?.Value[0]
      : this.dataset['40100002']?.Value;
  }

  get '40100002'(): Element {
    return this.dataset['40100002'];
  }

  // Detector Geometry Sequence
  get DetectorGeometrySequence(): any {
    const element = this.dataset['40100004'];
    return (element?.Value.length === 1)
      ? this.dataset['40100004']?.Value[0]
      : this.dataset['40100004']?.Value;
  }

  get '40100004'(): Element {
    return this.dataset['40100004'];
  }

  // Threat ROI Voxel Sequence
  get ThreatROIVoxelSequence(): any {
    const element = this.dataset['40101001'];
    return (element?.Value.length === 1)
      ? this.dataset['40101001']?.Value[0]
      : this.dataset['40101001']?.Value;
  }

  get '40101001'(): Element {
    return this.dataset['40101001'];
  }

  // Threat ROI Base
  get ThreatROIBase(): any {
    const element = this.dataset['40101004'];
    return (element?.Value.length === 1)
      ? this.dataset['40101004']?.Value[0]
      : this.dataset['40101004']?.Value;
  }

  get '40101004'(): Element {
    return this.dataset['40101004'];
  }

  // Threat ROI Extents
  get ThreatROIExtents(): any {
    const element = this.dataset['40101005'];
    return (element?.Value.length === 1)
      ? this.dataset['40101005']?.Value[0]
      : this.dataset['40101005']?.Value;
  }

  get '40101005'(): Element {
    return this.dataset['40101005'];
  }

  // Threat ROI Bitmap
  get ThreatROIBitmap(): any {
    const element = this.dataset['40101006'];
    return (element?.Value.length === 1)
      ? this.dataset['40101006']?.Value[0]
      : this.dataset['40101006']?.Value;
  }

  get '40101006'(): Element {
    return this.dataset['40101006'];
  }

  // Route Segment ID
  get RouteSegmentID(): any {
    const element = this.dataset['40101007'];
    return (element?.Value.length === 1)
      ? this.dataset['40101007']?.Value[0]
      : this.dataset['40101007']?.Value;
  }

  get '40101007'(): Element {
    return this.dataset['40101007'];
  }

  // Gantry Type
  get GantryType(): any {
    const element = this.dataset['40101008'];
    return (element?.Value.length === 1)
      ? this.dataset['40101008']?.Value[0]
      : this.dataset['40101008']?.Value;
  }

  get '40101008'(): Element {
    return this.dataset['40101008'];
  }

  // OOI Owner Type
  get OOIOwnerType(): any {
    const element = this.dataset['40101009'];
    return (element?.Value.length === 1)
      ? this.dataset['40101009']?.Value[0]
      : this.dataset['40101009']?.Value;
  }

  get '40101009'(): Element {
    return this.dataset['40101009'];
  }

  // Route Segment Sequence
  get RouteSegmentSequence(): any {
    const element = this.dataset['4010100A'];
    return (element?.Value.length === 1)
      ? this.dataset['4010100A']?.Value[0]
      : this.dataset['4010100A']?.Value;
  }

  get '4010100A'(): Element {
    return this.dataset['4010100A'];
  }

  // Potential Threat Object ID
  get PotentialThreatObjectID(): any {
    const element = this.dataset['40101010'];
    return (element?.Value.length === 1)
      ? this.dataset['40101010']?.Value[0]
      : this.dataset['40101010']?.Value;
  }

  get '40101010'(): Element {
    return this.dataset['40101010'];
  }

  // Threat Sequence
  get ThreatSequence(): any {
    const element = this.dataset['40101011'];
    return (element?.Value.length === 1)
      ? this.dataset['40101011']?.Value[0]
      : this.dataset['40101011']?.Value;
  }

  get '40101011'(): Element {
    return this.dataset['40101011'];
  }

  // Threat Category
  get ThreatCategory(): any {
    const element = this.dataset['40101012'];
    return (element?.Value.length === 1)
      ? this.dataset['40101012']?.Value[0]
      : this.dataset['40101012']?.Value;
  }

  get '40101012'(): Element {
    return this.dataset['40101012'];
  }

  // Threat Category Description
  get ThreatCategoryDescription(): any {
    const element = this.dataset['40101013'];
    return (element?.Value.length === 1)
      ? this.dataset['40101013']?.Value[0]
      : this.dataset['40101013']?.Value;
  }

  get '40101013'(): Element {
    return this.dataset['40101013'];
  }

  // ATD Ability Assessment
  get ATDAbilityAssessment(): any {
    const element = this.dataset['40101014'];
    return (element?.Value.length === 1)
      ? this.dataset['40101014']?.Value[0]
      : this.dataset['40101014']?.Value;
  }

  get '40101014'(): Element {
    return this.dataset['40101014'];
  }

  // ATD Assessment Flag
  get ATDAssessmentFlag(): any {
    const element = this.dataset['40101015'];
    return (element?.Value.length === 1)
      ? this.dataset['40101015']?.Value[0]
      : this.dataset['40101015']?.Value;
  }

  get '40101015'(): Element {
    return this.dataset['40101015'];
  }

  // ATD Assessment Probability
  get ATDAssessmentProbability(): any {
    const element = this.dataset['40101016'];
    return (element?.Value.length === 1)
      ? this.dataset['40101016']?.Value[0]
      : this.dataset['40101016']?.Value;
  }

  get '40101016'(): Element {
    return this.dataset['40101016'];
  }

  // Mass
  get Mass(): any {
    const element = this.dataset['40101017'];
    return (element?.Value.length === 1)
      ? this.dataset['40101017']?.Value[0]
      : this.dataset['40101017']?.Value;
  }

  get '40101017'(): Element {
    return this.dataset['40101017'];
  }

  // Density
  get Density(): any {
    const element = this.dataset['40101018'];
    return (element?.Value.length === 1)
      ? this.dataset['40101018']?.Value[0]
      : this.dataset['40101018']?.Value;
  }

  get '40101018'(): Element {
    return this.dataset['40101018'];
  }

  // Z Effective
  get ZEffective(): any {
    const element = this.dataset['40101019'];
    return (element?.Value.length === 1)
      ? this.dataset['40101019']?.Value[0]
      : this.dataset['40101019']?.Value;
  }

  get '40101019'(): Element {
    return this.dataset['40101019'];
  }

  // Boarding Pass ID
  get BoardingPassID(): any {
    const element = this.dataset['4010101A'];
    return (element?.Value.length === 1)
      ? this.dataset['4010101A']?.Value[0]
      : this.dataset['4010101A']?.Value;
  }

  get '4010101A'(): Element {
    return this.dataset['4010101A'];
  }

  // Center of Mass
  get CenterOfMass(): any {
    const element = this.dataset['4010101B'];
    return (element?.Value.length === 1)
      ? this.dataset['4010101B']?.Value[0]
      : this.dataset['4010101B']?.Value;
  }

  get '4010101B'(): Element {
    return this.dataset['4010101B'];
  }

  // Center of PTO
  get CenterOfPTO(): any {
    const element = this.dataset['4010101C'];
    return (element?.Value.length === 1)
      ? this.dataset['4010101C']?.Value[0]
      : this.dataset['4010101C']?.Value;
  }

  get '4010101C'(): Element {
    return this.dataset['4010101C'];
  }

  // Bounding Polygon
  get BoundingPolygon(): any {
    const element = this.dataset['4010101D'];
    return (element?.Value.length === 1)
      ? this.dataset['4010101D']?.Value[0]
      : this.dataset['4010101D']?.Value;
  }

  get '4010101D'(): Element {
    return this.dataset['4010101D'];
  }

  // Route Segment Start Location ID
  get RouteSegmentStartLocationID(): any {
    const element = this.dataset['4010101E'];
    return (element?.Value.length === 1)
      ? this.dataset['4010101E']?.Value[0]
      : this.dataset['4010101E']?.Value;
  }

  get '4010101E'(): Element {
    return this.dataset['4010101E'];
  }

  // Route Segment End Location ID
  get RouteSegmentEndLocationID(): any {
    const element = this.dataset['4010101F'];
    return (element?.Value.length === 1)
      ? this.dataset['4010101F']?.Value[0]
      : this.dataset['4010101F']?.Value;
  }

  get '4010101F'(): Element {
    return this.dataset['4010101F'];
  }

  // Route Segment Location ID Type
  get RouteSegmentLocationIDType(): any {
    const element = this.dataset['40101020'];
    return (element?.Value.length === 1)
      ? this.dataset['40101020']?.Value[0]
      : this.dataset['40101020']?.Value;
  }

  get '40101020'(): Element {
    return this.dataset['40101020'];
  }

  // Abort Reason
  get AbortReason(): any {
    const element = this.dataset['40101021'];
    return (element?.Value.length === 1)
      ? this.dataset['40101021']?.Value[0]
      : this.dataset['40101021']?.Value;
  }

  get '40101021'(): Element {
    return this.dataset['40101021'];
  }

  // Volume of PTO
  get VolumeOfPTO(): any {
    const element = this.dataset['40101023'];
    return (element?.Value.length === 1)
      ? this.dataset['40101023']?.Value[0]
      : this.dataset['40101023']?.Value;
  }

  get '40101023'(): Element {
    return this.dataset['40101023'];
  }

  // Abort Flag
  get AbortFlag(): any {
    const element = this.dataset['40101024'];
    return (element?.Value.length === 1)
      ? this.dataset['40101024']?.Value[0]
      : this.dataset['40101024']?.Value;
  }

  get '40101024'(): Element {
    return this.dataset['40101024'];
  }

  // Route Segment Start Time
  get RouteSegmentStartTime(): any {
    const element = this.dataset['40101025'];
    return (element?.Value.length === 1)
      ? this.dataset['40101025']?.Value[0]
      : this.dataset['40101025']?.Value;
  }

  get '40101025'(): Element {
    return this.dataset['40101025'];
  }

  // Route Segment End Time
  get RouteSegmentEndTime(): any {
    const element = this.dataset['40101026'];
    return (element?.Value.length === 1)
      ? this.dataset['40101026']?.Value[0]
      : this.dataset['40101026']?.Value;
  }

  get '40101026'(): Element {
    return this.dataset['40101026'];
  }

  // TDR Type
  get TDRType(): any {
    const element = this.dataset['40101027'];
    return (element?.Value.length === 1)
      ? this.dataset['40101027']?.Value[0]
      : this.dataset['40101027']?.Value;
  }

  get '40101027'(): Element {
    return this.dataset['40101027'];
  }

  // International Route Segment
  get InternationalRouteSegment(): any {
    const element = this.dataset['40101028'];
    return (element?.Value.length === 1)
      ? this.dataset['40101028']?.Value[0]
      : this.dataset['40101028']?.Value;
  }

  get '40101028'(): Element {
    return this.dataset['40101028'];
  }

  // Threat Detection Algorithm and Version
  get ThreatDetectionAlgorithmandVersion(): any {
    const element = this.dataset['40101029'];
    return (element?.Value.length === 1)
      ? this.dataset['40101029']?.Value[0]
      : this.dataset['40101029']?.Value;
  }

  get '40101029'(): Element {
    return this.dataset['40101029'];
  }

  // Assigned Location
  get AssignedLocation(): any {
    const element = this.dataset['4010102A'];
    return (element?.Value.length === 1)
      ? this.dataset['4010102A']?.Value[0]
      : this.dataset['4010102A']?.Value;
  }

  get '4010102A'(): Element {
    return this.dataset['4010102A'];
  }

  // Alarm Decision Time
  get AlarmDecisionTime(): any {
    const element = this.dataset['4010102B'];
    return (element?.Value.length === 1)
      ? this.dataset['4010102B']?.Value[0]
      : this.dataset['4010102B']?.Value;
  }

  get '4010102B'(): Element {
    return this.dataset['4010102B'];
  }

  // Alarm Decision
  get AlarmDecision(): any {
    const element = this.dataset['40101031'];
    return (element?.Value.length === 1)
      ? this.dataset['40101031']?.Value[0]
      : this.dataset['40101031']?.Value;
  }

  get '40101031'(): Element {
    return this.dataset['40101031'];
  }

  // Number of Total Objects
  get NumberOfTotalObjects(): any {
    const element = this.dataset['40101033'];
    return (element?.Value.length === 1)
      ? this.dataset['40101033']?.Value[0]
      : this.dataset['40101033']?.Value;
  }

  get '40101033'(): Element {
    return this.dataset['40101033'];
  }

  // Number of Alarm Objects
  get NumberOfAlarmObjects(): any {
    const element = this.dataset['40101034'];
    return (element?.Value.length === 1)
      ? this.dataset['40101034']?.Value[0]
      : this.dataset['40101034']?.Value;
  }

  get '40101034'(): Element {
    return this.dataset['40101034'];
  }

  // PTO Representation Sequence
  get PTORepresentationSequence(): any {
    const element = this.dataset['40101037'];
    return (element?.Value.length === 1)
      ? this.dataset['40101037']?.Value[0]
      : this.dataset['40101037']?.Value;
  }

  get '40101037'(): Element {
    return this.dataset['40101037'];
  }

  // ATD Assessment Sequence
  get ATDAssessmentSequence(): any {
    const element = this.dataset['40101038'];
    return (element?.Value.length === 1)
      ? this.dataset['40101038']?.Value[0]
      : this.dataset['40101038']?.Value;
  }

  get '40101038'(): Element {
    return this.dataset['40101038'];
  }

  // TIP Type
  get TIPType(): any {
    const element = this.dataset['40101039'];
    return (element?.Value.length === 1)
      ? this.dataset['40101039']?.Value[0]
      : this.dataset['40101039']?.Value;
  }

  get '40101039'(): Element {
    return this.dataset['40101039'];
  }

  // DICOS Version
  get DICOSVersion(): any {
    const element = this.dataset['4010103A'];
    return (element?.Value.length === 1)
      ? this.dataset['4010103A']?.Value[0]
      : this.dataset['4010103A']?.Value;
  }

  get '4010103A'(): Element {
    return this.dataset['4010103A'];
  }

  // OOI Owner Creation Time
  get OOIOwnerCreationTime(): any {
    const element = this.dataset['40101041'];
    return (element?.Value.length === 1)
      ? this.dataset['40101041']?.Value[0]
      : this.dataset['40101041']?.Value;
  }

  get '40101041'(): Element {
    return this.dataset['40101041'];
  }

  // OOI Type
  get OOIType(): any {
    const element = this.dataset['40101042'];
    return (element?.Value.length === 1)
      ? this.dataset['40101042']?.Value[0]
      : this.dataset['40101042']?.Value;
  }

  get '40101042'(): Element {
    return this.dataset['40101042'];
  }

  // OOI Size
  get OOISize(): any {
    const element = this.dataset['40101043'];
    return (element?.Value.length === 1)
      ? this.dataset['40101043']?.Value[0]
      : this.dataset['40101043']?.Value;
  }

  get '40101043'(): Element {
    return this.dataset['40101043'];
  }

  // Acquisition Status
  get AcquisitionStatus(): any {
    const element = this.dataset['40101044'];
    return (element?.Value.length === 1)
      ? this.dataset['40101044']?.Value[0]
      : this.dataset['40101044']?.Value;
  }

  get '40101044'(): Element {
    return this.dataset['40101044'];
  }

  // Basis Materials Code Sequence
  get BasisMaterialsCodeSequence(): any {
    const element = this.dataset['40101045'];
    return (element?.Value.length === 1)
      ? this.dataset['40101045']?.Value[0]
      : this.dataset['40101045']?.Value;
  }

  get '40101045'(): Element {
    return this.dataset['40101045'];
  }

  // Phantom Type
  get PhantomType(): any {
    const element = this.dataset['40101046'];
    return (element?.Value.length === 1)
      ? this.dataset['40101046']?.Value[0]
      : this.dataset['40101046']?.Value;
  }

  get '40101046'(): Element {
    return this.dataset['40101046'];
  }

  // OOI Owner Sequence
  get OOIOwnerSequence(): any {
    const element = this.dataset['40101047'];
    return (element?.Value.length === 1)
      ? this.dataset['40101047']?.Value[0]
      : this.dataset['40101047']?.Value;
  }

  get '40101047'(): Element {
    return this.dataset['40101047'];
  }

  // Scan Type
  get ScanType(): any {
    const element = this.dataset['40101048'];
    return (element?.Value.length === 1)
      ? this.dataset['40101048']?.Value[0]
      : this.dataset['40101048']?.Value;
  }

  get '40101048'(): Element {
    return this.dataset['40101048'];
  }

  // Itinerary ID
  get ItineraryID(): any {
    const element = this.dataset['40101051'];
    return (element?.Value.length === 1)
      ? this.dataset['40101051']?.Value[0]
      : this.dataset['40101051']?.Value;
  }

  get '40101051'(): Element {
    return this.dataset['40101051'];
  }

  // Itinerary ID Type
  get ItineraryIDType(): any {
    const element = this.dataset['40101052'];
    return (element?.Value.length === 1)
      ? this.dataset['40101052']?.Value[0]
      : this.dataset['40101052']?.Value;
  }

  get '40101052'(): Element {
    return this.dataset['40101052'];
  }

  // Itinerary ID Assigning Authority
  get ItineraryIDAssigningAuthority(): any {
    const element = this.dataset['40101053'];
    return (element?.Value.length === 1)
      ? this.dataset['40101053']?.Value[0]
      : this.dataset['40101053']?.Value;
  }

  get '40101053'(): Element {
    return this.dataset['40101053'];
  }

  // Route ID
  get RouteID(): any {
    const element = this.dataset['40101054'];
    return (element?.Value.length === 1)
      ? this.dataset['40101054']?.Value[0]
      : this.dataset['40101054']?.Value;
  }

  get '40101054'(): Element {
    return this.dataset['40101054'];
  }

  // Route ID Assigning Authority
  get RouteIDAssigningAuthority(): any {
    const element = this.dataset['40101055'];
    return (element?.Value.length === 1)
      ? this.dataset['40101055']?.Value[0]
      : this.dataset['40101055']?.Value;
  }

  get '40101055'(): Element {
    return this.dataset['40101055'];
  }

  // Inbound Arrival Type
  get InboundArrivalType(): any {
    const element = this.dataset['40101056'];
    return (element?.Value.length === 1)
      ? this.dataset['40101056']?.Value[0]
      : this.dataset['40101056']?.Value;
  }

  get '40101056'(): Element {
    return this.dataset['40101056'];
  }

  // Carrier ID
  get CarrierID(): any {
    const element = this.dataset['40101058'];
    return (element?.Value.length === 1)
      ? this.dataset['40101058']?.Value[0]
      : this.dataset['40101058']?.Value;
  }

  get '40101058'(): Element {
    return this.dataset['40101058'];
  }

  // Carrier ID Assigning Authority
  get CarrierIDAssigningAuthority(): any {
    const element = this.dataset['40101059'];
    return (element?.Value.length === 1)
      ? this.dataset['40101059']?.Value[0]
      : this.dataset['40101059']?.Value;
  }

  get '40101059'(): Element {
    return this.dataset['40101059'];
  }

  // Source Orientation
  get SourceOrientation(): any {
    const element = this.dataset['40101060'];
    return (element?.Value.length === 1)
      ? this.dataset['40101060']?.Value[0]
      : this.dataset['40101060']?.Value;
  }

  get '40101060'(): Element {
    return this.dataset['40101060'];
  }

  // Source Position
  get SourcePosition(): any {
    const element = this.dataset['40101061'];
    return (element?.Value.length === 1)
      ? this.dataset['40101061']?.Value[0]
      : this.dataset['40101061']?.Value;
  }

  get '40101061'(): Element {
    return this.dataset['40101061'];
  }

  // Belt Height
  get BeltHeight(): any {
    const element = this.dataset['40101062'];
    return (element?.Value.length === 1)
      ? this.dataset['40101062']?.Value[0]
      : this.dataset['40101062']?.Value;
  }

  get '40101062'(): Element {
    return this.dataset['40101062'];
  }

  // Algorithm Routing Code Sequence
  get AlgorithmRoutingCodeSequence(): any {
    const element = this.dataset['40101064'];
    return (element?.Value.length === 1)
      ? this.dataset['40101064']?.Value[0]
      : this.dataset['40101064']?.Value;
  }

  get '40101064'(): Element {
    return this.dataset['40101064'];
  }

  // Transport Classification
  get TransportClassification(): any {
    const element = this.dataset['40101067'];
    return (element?.Value.length === 1)
      ? this.dataset['40101067']?.Value[0]
      : this.dataset['40101067']?.Value;
  }

  get '40101067'(): Element {
    return this.dataset['40101067'];
  }

  // OOI Type Descriptor
  get OOITypeDescriptor(): any {
    const element = this.dataset['40101068'];
    return (element?.Value.length === 1)
      ? this.dataset['40101068']?.Value[0]
      : this.dataset['40101068']?.Value;
  }

  get '40101068'(): Element {
    return this.dataset['40101068'];
  }

  // Total Processing Time
  get TotalProcessingTime(): any {
    const element = this.dataset['40101069'];
    return (element?.Value.length === 1)
      ? this.dataset['40101069']?.Value[0]
      : this.dataset['40101069']?.Value;
  }

  get '40101069'(): Element {
    return this.dataset['40101069'];
  }

  // Detector Calibration Data
  get DetectorCalibrationData(): any {
    const element = this.dataset['4010106C'];
    return (element?.Value.length === 1)
      ? this.dataset['4010106C']?.Value[0]
      : this.dataset['4010106C']?.Value;
  }

  get '4010106C'(): Element {
    return this.dataset['4010106C'];
  }

  // Additional Screening Performed
  get AdditionalScreeningPerformed(): any {
    const element = this.dataset['4010106D'];
    return (element?.Value.length === 1)
      ? this.dataset['4010106D']?.Value[0]
      : this.dataset['4010106D']?.Value;
  }

  get '4010106D'(): Element {
    return this.dataset['4010106D'];
  }

  // Additional Inspection Selection Criteria
  get AdditionalInspectionSelectionCriteria(): any {
    const element = this.dataset['4010106E'];
    return (element?.Value.length === 1)
      ? this.dataset['4010106E']?.Value[0]
      : this.dataset['4010106E']?.Value;
  }

  get '4010106E'(): Element {
    return this.dataset['4010106E'];
  }

  // Additional Inspection Method Sequence
  get AdditionalInspectionMethodSequence(): any {
    const element = this.dataset['4010106F'];
    return (element?.Value.length === 1)
      ? this.dataset['4010106F']?.Value[0]
      : this.dataset['4010106F']?.Value;
  }

  get '4010106F'(): Element {
    return this.dataset['4010106F'];
  }

  // AIT Device Type
  get AITDeviceType(): any {
    const element = this.dataset['40101070'];
    return (element?.Value.length === 1)
      ? this.dataset['40101070']?.Value[0]
      : this.dataset['40101070']?.Value;
  }

  get '40101070'(): Element {
    return this.dataset['40101070'];
  }

  // QR Measurements Sequence
  get QRMeasurementsSequence(): any {
    const element = this.dataset['40101071'];
    return (element?.Value.length === 1)
      ? this.dataset['40101071']?.Value[0]
      : this.dataset['40101071']?.Value;
  }

  get '40101071'(): Element {
    return this.dataset['40101071'];
  }

  // Target Material Sequence
  get TargetMaterialSequence(): any {
    const element = this.dataset['40101072'];
    return (element?.Value.length === 1)
      ? this.dataset['40101072']?.Value[0]
      : this.dataset['40101072']?.Value;
  }

  get '40101072'(): Element {
    return this.dataset['40101072'];
  }

  // SNR Threshold
  get SNRThreshold(): any {
    const element = this.dataset['40101073'];
    return (element?.Value.length === 1)
      ? this.dataset['40101073']?.Value[0]
      : this.dataset['40101073']?.Value;
  }

  get '40101073'(): Element {
    return this.dataset['40101073'];
  }

  // Image Scale Representation
  get ImageScaleRepresentation(): any {
    const element = this.dataset['40101075'];
    return (element?.Value.length === 1)
      ? this.dataset['40101075']?.Value[0]
      : this.dataset['40101075']?.Value;
  }

  get '40101075'(): Element {
    return this.dataset['40101075'];
  }

  // Referenced PTO Sequence
  get ReferencedPTOSequence(): any {
    const element = this.dataset['40101076'];
    return (element?.Value.length === 1)
      ? this.dataset['40101076']?.Value[0]
      : this.dataset['40101076']?.Value;
  }

  get '40101076'(): Element {
    return this.dataset['40101076'];
  }

  // Referenced TDR Instance Sequence
  get ReferencedTDRInstanceSequence(): any {
    const element = this.dataset['40101077'];
    return (element?.Value.length === 1)
      ? this.dataset['40101077']?.Value[0]
      : this.dataset['40101077']?.Value;
  }

  get '40101077'(): Element {
    return this.dataset['40101077'];
  }

  // PTO Location Description
  get PTOLocationDescription(): any {
    const element = this.dataset['40101078'];
    return (element?.Value.length === 1)
      ? this.dataset['40101078']?.Value[0]
      : this.dataset['40101078']?.Value;
  }

  get '40101078'(): Element {
    return this.dataset['40101078'];
  }

  // Anomaly Locator Indicator Sequence
  get AnomalyLocatorIndicatorSequence(): any {
    const element = this.dataset['40101079'];
    return (element?.Value.length === 1)
      ? this.dataset['40101079']?.Value[0]
      : this.dataset['40101079']?.Value;
  }

  get '40101079'(): Element {
    return this.dataset['40101079'];
  }

  // Anomaly Locator Indicator
  get AnomalyLocatorIndicator(): any {
    const element = this.dataset['4010107A'];
    return (element?.Value.length === 1)
      ? this.dataset['4010107A']?.Value[0]
      : this.dataset['4010107A']?.Value;
  }

  get '4010107A'(): Element {
    return this.dataset['4010107A'];
  }

  // PTO Region Sequence
  get PTORegionSequence(): any {
    const element = this.dataset['4010107B'];
    return (element?.Value.length === 1)
      ? this.dataset['4010107B']?.Value[0]
      : this.dataset['4010107B']?.Value;
  }

  get '4010107B'(): Element {
    return this.dataset['4010107B'];
  }

  // Inspection Selection Criteria
  get InspectionSelectionCriteria(): any {
    const element = this.dataset['4010107C'];
    return (element?.Value.length === 1)
      ? this.dataset['4010107C']?.Value[0]
      : this.dataset['4010107C']?.Value;
  }

  get '4010107C'(): Element {
    return this.dataset['4010107C'];
  }

  // Secondary Inspection Method Sequence
  get SecondaryInspectionMethodSequence(): any {
    const element = this.dataset['4010107D'];
    return (element?.Value.length === 1)
      ? this.dataset['4010107D']?.Value[0]
      : this.dataset['4010107D']?.Value;
  }

  get '4010107D'(): Element {
    return this.dataset['4010107D'];
  }

  // PRCS to RCS Orientation
  get PRCSToRCSOrientation(): any {
    const element = this.dataset['4010107E'];
    return (element?.Value.length === 1)
      ? this.dataset['4010107E']?.Value[0]
      : this.dataset['4010107E']?.Value;
  }

  get '4010107E'(): Element {
    return this.dataset['4010107E'];
  }

  // MAC Parameters Sequence
  get MACParametersSequence(): any {
    const element = this.dataset['4FFE0001'];
    return (element?.Value.length === 1)
      ? this.dataset['4FFE0001']?.Value[0]
      : this.dataset['4FFE0001']?.Value;
  }

  get '4FFE0001'(): Element {
    return this.dataset['4FFE0001'];
  }

  // Curve Dimensions
  get CurveDimensions(): any {
    const element = this.dataset['50xx0005'];
    return (element?.Value.length === 1)
      ? this.dataset['50xx0005']?.Value[0]
      : this.dataset['50xx0005']?.Value;
  }

  get '50xx0005'(): Element {
    return this.dataset['50xx0005'];
  }

  // Number of Points
  get NumberOfPoints(): any {
    const element = this.dataset['50xx0010'];
    return (element?.Value.length === 1)
      ? this.dataset['50xx0010']?.Value[0]
      : this.dataset['50xx0010']?.Value;
  }

  get '50xx0010'(): Element {
    return this.dataset['50xx0010'];
  }

  // Type of Data
  get TypeOfData(): any {
    const element = this.dataset['50xx0020'];
    return (element?.Value.length === 1)
      ? this.dataset['50xx0020']?.Value[0]
      : this.dataset['50xx0020']?.Value;
  }

  get '50xx0020'(): Element {
    return this.dataset['50xx0020'];
  }

  // Curve Description
  get CurveDescription(): any {
    const element = this.dataset['50xx0022'];
    return (element?.Value.length === 1)
      ? this.dataset['50xx0022']?.Value[0]
      : this.dataset['50xx0022']?.Value;
  }

  get '50xx0022'(): Element {
    return this.dataset['50xx0022'];
  }

  // Axis Units
  get AxisUnits(): any {
    const element = this.dataset['50xx0030'];
    return (element?.Value.length === 1)
      ? this.dataset['50xx0030']?.Value[0]
      : this.dataset['50xx0030']?.Value;
  }

  get '50xx0030'(): Element {
    return this.dataset['50xx0030'];
  }

  // Axis Labels
  get AxisLabels(): any {
    const element = this.dataset['50xx0040'];
    return (element?.Value.length === 1)
      ? this.dataset['50xx0040']?.Value[0]
      : this.dataset['50xx0040']?.Value;
  }

  get '50xx0040'(): Element {
    return this.dataset['50xx0040'];
  }

  // Data Value Representation
  get DataValueRepresentation(): any {
    const element = this.dataset['50xx0103'];
    return (element?.Value.length === 1)
      ? this.dataset['50xx0103']?.Value[0]
      : this.dataset['50xx0103']?.Value;
  }

  get '50xx0103'(): Element {
    return this.dataset['50xx0103'];
  }

  // Minimum Coordinate Value
  get MinimumCoordinateValue(): any {
    const element = this.dataset['50xx0104'];
    return (element?.Value.length === 1)
      ? this.dataset['50xx0104']?.Value[0]
      : this.dataset['50xx0104']?.Value;
  }

  get '50xx0104'(): Element {
    return this.dataset['50xx0104'];
  }

  // Maximum Coordinate Value
  get MaximumCoordinateValue(): any {
    const element = this.dataset['50xx0105'];
    return (element?.Value.length === 1)
      ? this.dataset['50xx0105']?.Value[0]
      : this.dataset['50xx0105']?.Value;
  }

  get '50xx0105'(): Element {
    return this.dataset['50xx0105'];
  }

  // Curve Range
  get CurveRange(): any {
    const element = this.dataset['50xx0106'];
    return (element?.Value.length === 1)
      ? this.dataset['50xx0106']?.Value[0]
      : this.dataset['50xx0106']?.Value;
  }

  get '50xx0106'(): Element {
    return this.dataset['50xx0106'];
  }

  // Curve Data Descriptor
  get CurveDataDescriptor(): any {
    const element = this.dataset['50xx0110'];
    return (element?.Value.length === 1)
      ? this.dataset['50xx0110']?.Value[0]
      : this.dataset['50xx0110']?.Value;
  }

  get '50xx0110'(): Element {
    return this.dataset['50xx0110'];
  }

  // Coordinate Start Value
  get CoordinateStartValue(): any {
    const element = this.dataset['50xx0112'];
    return (element?.Value.length === 1)
      ? this.dataset['50xx0112']?.Value[0]
      : this.dataset['50xx0112']?.Value;
  }

  get '50xx0112'(): Element {
    return this.dataset['50xx0112'];
  }

  // Coordinate Step Value
  get CoordinateStepValue(): any {
    const element = this.dataset['50xx0114'];
    return (element?.Value.length === 1)
      ? this.dataset['50xx0114']?.Value[0]
      : this.dataset['50xx0114']?.Value;
  }

  get '50xx0114'(): Element {
    return this.dataset['50xx0114'];
  }

  // Curve Activation Layer
  get CurveActivationLayer(): any {
    const element = this.dataset['50xx1001'];
    return (element?.Value.length === 1)
      ? this.dataset['50xx1001']?.Value[0]
      : this.dataset['50xx1001']?.Value;
  }

  get '50xx1001'(): Element {
    return this.dataset['50xx1001'];
  }

  // Audio Type
  get AudioType(): any {
    const element = this.dataset['50xx2000'];
    return (element?.Value.length === 1)
      ? this.dataset['50xx2000']?.Value[0]
      : this.dataset['50xx2000']?.Value;
  }

  get '50xx2000'(): Element {
    return this.dataset['50xx2000'];
  }

  // Audio Sample Format
  get AudioSampleFormat(): any {
    const element = this.dataset['50xx2002'];
    return (element?.Value.length === 1)
      ? this.dataset['50xx2002']?.Value[0]
      : this.dataset['50xx2002']?.Value;
  }

  get '50xx2002'(): Element {
    return this.dataset['50xx2002'];
  }

  // Number of Channels
  get NumberOfChannels(): any {
    const element = this.dataset['50xx2004'];
    return (element?.Value.length === 1)
      ? this.dataset['50xx2004']?.Value[0]
      : this.dataset['50xx2004']?.Value;
  }

  get '50xx2004'(): Element {
    return this.dataset['50xx2004'];
  }

  // Number of Samples
  get NumberOfSamples(): any {
    const element = this.dataset['50xx2006'];
    return (element?.Value.length === 1)
      ? this.dataset['50xx2006']?.Value[0]
      : this.dataset['50xx2006']?.Value;
  }

  get '50xx2006'(): Element {
    return this.dataset['50xx2006'];
  }

  // Sample Rate
  get SampleRate(): any {
    const element = this.dataset['50xx2008'];
    return (element?.Value.length === 1)
      ? this.dataset['50xx2008']?.Value[0]
      : this.dataset['50xx2008']?.Value;
  }

  get '50xx2008'(): Element {
    return this.dataset['50xx2008'];
  }

  // Total Time
  get TotalTime(): any {
    const element = this.dataset['50xx200A'];
    return (element?.Value.length === 1)
      ? this.dataset['50xx200A']?.Value[0]
      : this.dataset['50xx200A']?.Value;
  }

  get '50xx200A'(): Element {
    return this.dataset['50xx200A'];
  }

  // Audio Sample Data
  get AudioSampleData(): any {
    const element = this.dataset['50xx200C'];
    return (element?.Value.length === 1)
      ? this.dataset['50xx200C']?.Value[0]
      : this.dataset['50xx200C']?.Value;
  }

  get '50xx200C'(): Element {
    return this.dataset['50xx200C'];
  }

  // Audio Comments
  get AudioComments(): any {
    const element = this.dataset['50xx200E'];
    return (element?.Value.length === 1)
      ? this.dataset['50xx200E']?.Value[0]
      : this.dataset['50xx200E']?.Value;
  }

  get '50xx200E'(): Element {
    return this.dataset['50xx200E'];
  }

  // Curve Label
  get CurveLabel(): any {
    const element = this.dataset['50xx2500'];
    return (element?.Value.length === 1)
      ? this.dataset['50xx2500']?.Value[0]
      : this.dataset['50xx2500']?.Value;
  }

  get '50xx2500'(): Element {
    return this.dataset['50xx2500'];
  }

  // Curve Referenced Overlay Sequence
  get CurveReferencedOverlaySequence(): any {
    const element = this.dataset['50xx2600'];
    return (element?.Value.length === 1)
      ? this.dataset['50xx2600']?.Value[0]
      : this.dataset['50xx2600']?.Value;
  }

  get '50xx2600'(): Element {
    return this.dataset['50xx2600'];
  }

  // Curve Referenced Overlay Group
  get CurveReferencedOverlayGroup(): any {
    const element = this.dataset['50xx2610'];
    return (element?.Value.length === 1)
      ? this.dataset['50xx2610']?.Value[0]
      : this.dataset['50xx2610']?.Value;
  }

  get '50xx2610'(): Element {
    return this.dataset['50xx2610'];
  }

  // Curve Data
  get CurveData(): any {
    const element = this.dataset['50xx3000'];
    return (element?.Value.length === 1)
      ? this.dataset['50xx3000']?.Value[0]
      : this.dataset['50xx3000']?.Value;
  }

  get '50xx3000'(): Element {
    return this.dataset['50xx3000'];
  }

  // Shared Functional Groups Sequence
  get SharedFunctionalGroupsSequence(): any {
    const element = this.dataset['52009229'];
    return (element?.Value.length === 1)
      ? this.dataset['52009229']?.Value[0]
      : this.dataset['52009229']?.Value;
  }

  get '52009229'(): Element {
    return this.dataset['52009229'];
  }

  // Per-frame Functional Groups Sequence
  get PerFrameFunctionalGroupsSequence(): any {
    const element = this.dataset['52009230'];
    return (element?.Value.length === 1)
      ? this.dataset['52009230']?.Value[0]
      : this.dataset['52009230']?.Value;
  }

  get '52009230'(): Element {
    return this.dataset['52009230'];
  }

  // Waveform Sequence
  get WaveformSequence(): any {
    const element = this.dataset['54000100'];
    return (element?.Value.length === 1)
      ? this.dataset['54000100']?.Value[0]
      : this.dataset['54000100']?.Value;
  }

  get '54000100'(): Element {
    return this.dataset['54000100'];
  }

  // Channel Minimum Value
  get ChannelMinimumValue(): any {
    const element = this.dataset['54000110'];
    return (element?.Value.length === 1)
      ? this.dataset['54000110']?.Value[0]
      : this.dataset['54000110']?.Value;
  }

  get '54000110'(): Element {
    return this.dataset['54000110'];
  }

  // Channel Maximum Value
  get ChannelMaximumValue(): any {
    const element = this.dataset['54000112'];
    return (element?.Value.length === 1)
      ? this.dataset['54000112']?.Value[0]
      : this.dataset['54000112']?.Value;
  }

  get '54000112'(): Element {
    return this.dataset['54000112'];
  }

  // Waveform Bits Allocated
  get WaveformBitsAllocated(): any {
    const element = this.dataset['54001004'];
    return (element?.Value.length === 1)
      ? this.dataset['54001004']?.Value[0]
      : this.dataset['54001004']?.Value;
  }

  get '54001004'(): Element {
    return this.dataset['54001004'];
  }

  // Waveform Sample Interpretation
  get WaveformSampleInterpretation(): any {
    const element = this.dataset['54001006'];
    return (element?.Value.length === 1)
      ? this.dataset['54001006']?.Value[0]
      : this.dataset['54001006']?.Value;
  }

  get '54001006'(): Element {
    return this.dataset['54001006'];
  }

  // Waveform Padding Value
  get WaveformPaddingValue(): any {
    const element = this.dataset['5400100A'];
    return (element?.Value.length === 1)
      ? this.dataset['5400100A']?.Value[0]
      : this.dataset['5400100A']?.Value;
  }

  get '5400100A'(): Element {
    return this.dataset['5400100A'];
  }

  // Waveform Data
  get WaveformData(): any {
    const element = this.dataset['54001010'];
    return (element?.Value.length === 1)
      ? this.dataset['54001010']?.Value[0]
      : this.dataset['54001010']?.Value;
  }

  get '54001010'(): Element {
    return this.dataset['54001010'];
  }

  // First Order Phase Correction Angle
  get FirstOrderPhaseCorrectionAngle(): any {
    const element = this.dataset['56000010'];
    return (element?.Value.length === 1)
      ? this.dataset['56000010']?.Value[0]
      : this.dataset['56000010']?.Value;
  }

  get '56000010'(): Element {
    return this.dataset['56000010'];
  }

  // Spectroscopy Data
  get SpectroscopyData(): any {
    const element = this.dataset['56000020'];
    return (element?.Value.length === 1)
      ? this.dataset['56000020']?.Value[0]
      : this.dataset['56000020']?.Value;
  }

  get '56000020'(): Element {
    return this.dataset['56000020'];
  }

  // Overlay Rows
  get OverlayRows(): any {
    const element = this.dataset['60xx0010'];
    return (element?.Value.length === 1)
      ? this.dataset['60xx0010']?.Value[0]
      : this.dataset['60xx0010']?.Value;
  }

  get '60xx0010'(): Element {
    return this.dataset['60xx0010'];
  }

  // Overlay Columns
  get OverlayColumns(): any {
    const element = this.dataset['60xx0011'];
    return (element?.Value.length === 1)
      ? this.dataset['60xx0011']?.Value[0]
      : this.dataset['60xx0011']?.Value;
  }

  get '60xx0011'(): Element {
    return this.dataset['60xx0011'];
  }

  // Overlay Planes
  get OverlayPlanes(): any {
    const element = this.dataset['60xx0012'];
    return (element?.Value.length === 1)
      ? this.dataset['60xx0012']?.Value[0]
      : this.dataset['60xx0012']?.Value;
  }

  get '60xx0012'(): Element {
    return this.dataset['60xx0012'];
  }

  // Number of Frames in Overlay
  get NumberOfFramesInOverlay(): any {
    const element = this.dataset['60xx0015'];
    return (element?.Value.length === 1)
      ? this.dataset['60xx0015']?.Value[0]
      : this.dataset['60xx0015']?.Value;
  }

  get '60xx0015'(): Element {
    return this.dataset['60xx0015'];
  }

  // Overlay Description
  get OverlayDescription(): any {
    const element = this.dataset['60xx0022'];
    return (element?.Value.length === 1)
      ? this.dataset['60xx0022']?.Value[0]
      : this.dataset['60xx0022']?.Value;
  }

  get '60xx0022'(): Element {
    return this.dataset['60xx0022'];
  }

  // Overlay Type
  get OverlayType(): any {
    const element = this.dataset['60xx0040'];
    return (element?.Value.length === 1)
      ? this.dataset['60xx0040']?.Value[0]
      : this.dataset['60xx0040']?.Value;
  }

  get '60xx0040'(): Element {
    return this.dataset['60xx0040'];
  }

  // Overlay Subtype
  get OverlaySubtype(): any {
    const element = this.dataset['60xx0045'];
    return (element?.Value.length === 1)
      ? this.dataset['60xx0045']?.Value[0]
      : this.dataset['60xx0045']?.Value;
  }

  get '60xx0045'(): Element {
    return this.dataset['60xx0045'];
  }

  // Overlay Origin
  get OverlayOrigin(): any {
    const element = this.dataset['60xx0050'];
    return (element?.Value.length === 1)
      ? this.dataset['60xx0050']?.Value[0]
      : this.dataset['60xx0050']?.Value;
  }

  get '60xx0050'(): Element {
    return this.dataset['60xx0050'];
  }

  // Image Frame Origin
  get ImageFrameOrigin(): any {
    const element = this.dataset['60xx0051'];
    return (element?.Value.length === 1)
      ? this.dataset['60xx0051']?.Value[0]
      : this.dataset['60xx0051']?.Value;
  }

  get '60xx0051'(): Element {
    return this.dataset['60xx0051'];
  }

  // Overlay Plane Origin
  get OverlayPlaneOrigin(): any {
    const element = this.dataset['60xx0052'];
    return (element?.Value.length === 1)
      ? this.dataset['60xx0052']?.Value[0]
      : this.dataset['60xx0052']?.Value;
  }

  get '60xx0052'(): Element {
    return this.dataset['60xx0052'];
  }

  // Overlay Compression Code
  get OverlayCompressionCode(): any {
    const element = this.dataset['60xx0060'];
    return (element?.Value.length === 1)
      ? this.dataset['60xx0060']?.Value[0]
      : this.dataset['60xx0060']?.Value;
  }

  get '60xx0060'(): Element {
    return this.dataset['60xx0060'];
  }

  // Overlay Compression Originator
  get OverlayCompressionOriginator(): any {
    const element = this.dataset['60xx0061'];
    return (element?.Value.length === 1)
      ? this.dataset['60xx0061']?.Value[0]
      : this.dataset['60xx0061']?.Value;
  }

  get '60xx0061'(): Element {
    return this.dataset['60xx0061'];
  }

  // Overlay Compression Label
  get OverlayCompressionLabel(): any {
    const element = this.dataset['60xx0062'];
    return (element?.Value.length === 1)
      ? this.dataset['60xx0062']?.Value[0]
      : this.dataset['60xx0062']?.Value;
  }

  get '60xx0062'(): Element {
    return this.dataset['60xx0062'];
  }

  // Overlay Compression Description
  get OverlayCompressionDescription(): any {
    const element = this.dataset['60xx0063'];
    return (element?.Value.length === 1)
      ? this.dataset['60xx0063']?.Value[0]
      : this.dataset['60xx0063']?.Value;
  }

  get '60xx0063'(): Element {
    return this.dataset['60xx0063'];
  }

  // Overlay Compression Step Pointers
  get OverlayCompressionStepPointers(): any {
    const element = this.dataset['60xx0066'];
    return (element?.Value.length === 1)
      ? this.dataset['60xx0066']?.Value[0]
      : this.dataset['60xx0066']?.Value;
  }

  get '60xx0066'(): Element {
    return this.dataset['60xx0066'];
  }

  // Overlay Repeat Interval
  get OverlayRepeatInterval(): any {
    const element = this.dataset['60xx0068'];
    return (element?.Value.length === 1)
      ? this.dataset['60xx0068']?.Value[0]
      : this.dataset['60xx0068']?.Value;
  }

  get '60xx0068'(): Element {
    return this.dataset['60xx0068'];
  }

  // Overlay Bits Grouped
  get OverlayBitsGrouped(): any {
    const element = this.dataset['60xx0069'];
    return (element?.Value.length === 1)
      ? this.dataset['60xx0069']?.Value[0]
      : this.dataset['60xx0069']?.Value;
  }

  get '60xx0069'(): Element {
    return this.dataset['60xx0069'];
  }

  // Overlay Bits Allocated
  get OverlayBitsAllocated(): any {
    const element = this.dataset['60xx0100'];
    return (element?.Value.length === 1)
      ? this.dataset['60xx0100']?.Value[0]
      : this.dataset['60xx0100']?.Value;
  }

  get '60xx0100'(): Element {
    return this.dataset['60xx0100'];
  }

  // Overlay Bit Position
  get OverlayBitPosition(): any {
    const element = this.dataset['60xx0102'];
    return (element?.Value.length === 1)
      ? this.dataset['60xx0102']?.Value[0]
      : this.dataset['60xx0102']?.Value;
  }

  get '60xx0102'(): Element {
    return this.dataset['60xx0102'];
  }

  // Overlay Format
  get OverlayFormat(): any {
    const element = this.dataset['60xx0110'];
    return (element?.Value.length === 1)
      ? this.dataset['60xx0110']?.Value[0]
      : this.dataset['60xx0110']?.Value;
  }

  get '60xx0110'(): Element {
    return this.dataset['60xx0110'];
  }

  // Overlay Location
  get OverlayLocation(): any {
    const element = this.dataset['60xx0200'];
    return (element?.Value.length === 1)
      ? this.dataset['60xx0200']?.Value[0]
      : this.dataset['60xx0200']?.Value;
  }

  get '60xx0200'(): Element {
    return this.dataset['60xx0200'];
  }

  // Overlay Code Label
  get OverlayCodeLabel(): any {
    const element = this.dataset['60xx0800'];
    return (element?.Value.length === 1)
      ? this.dataset['60xx0800']?.Value[0]
      : this.dataset['60xx0800']?.Value;
  }

  get '60xx0800'(): Element {
    return this.dataset['60xx0800'];
  }

  // Overlay Number of Tables
  get OverlayNumberOfTables(): any {
    const element = this.dataset['60xx0802'];
    return (element?.Value.length === 1)
      ? this.dataset['60xx0802']?.Value[0]
      : this.dataset['60xx0802']?.Value;
  }

  get '60xx0802'(): Element {
    return this.dataset['60xx0802'];
  }

  // Overlay Code Table Location
  get OverlayCodeTableLocation(): any {
    const element = this.dataset['60xx0803'];
    return (element?.Value.length === 1)
      ? this.dataset['60xx0803']?.Value[0]
      : this.dataset['60xx0803']?.Value;
  }

  get '60xx0803'(): Element {
    return this.dataset['60xx0803'];
  }

  // Overlay Bits For Code Word
  get OverlayBitsForCodeWord(): any {
    const element = this.dataset['60xx0804'];
    return (element?.Value.length === 1)
      ? this.dataset['60xx0804']?.Value[0]
      : this.dataset['60xx0804']?.Value;
  }

  get '60xx0804'(): Element {
    return this.dataset['60xx0804'];
  }

  // Overlay Activation Layer
  get OverlayActivationLayer(): any {
    const element = this.dataset['60xx1001'];
    return (element?.Value.length === 1)
      ? this.dataset['60xx1001']?.Value[0]
      : this.dataset['60xx1001']?.Value;
  }

  get '60xx1001'(): Element {
    return this.dataset['60xx1001'];
  }

  // Overlay Descriptor - Gray
  get OverlayDescriptorGray(): any {
    const element = this.dataset['60xx1100'];
    return (element?.Value.length === 1)
      ? this.dataset['60xx1100']?.Value[0]
      : this.dataset['60xx1100']?.Value;
  }

  get '60xx1100'(): Element {
    return this.dataset['60xx1100'];
  }

  // Overlay Descriptor - Red
  get OverlayDescriptorRed(): any {
    const element = this.dataset['60xx1101'];
    return (element?.Value.length === 1)
      ? this.dataset['60xx1101']?.Value[0]
      : this.dataset['60xx1101']?.Value;
  }

  get '60xx1101'(): Element {
    return this.dataset['60xx1101'];
  }

  // Overlay Descriptor - Green
  get OverlayDescriptorGreen(): any {
    const element = this.dataset['60xx1102'];
    return (element?.Value.length === 1)
      ? this.dataset['60xx1102']?.Value[0]
      : this.dataset['60xx1102']?.Value;
  }

  get '60xx1102'(): Element {
    return this.dataset['60xx1102'];
  }

  // Overlay Descriptor - Blue
  get OverlayDescriptorBlue(): any {
    const element = this.dataset['60xx1103'];
    return (element?.Value.length === 1)
      ? this.dataset['60xx1103']?.Value[0]
      : this.dataset['60xx1103']?.Value;
  }

  get '60xx1103'(): Element {
    return this.dataset['60xx1103'];
  }

  // Overlays - Gray
  get OverlaysGray(): any {
    const element = this.dataset['60xx1200'];
    return (element?.Value.length === 1)
      ? this.dataset['60xx1200']?.Value[0]
      : this.dataset['60xx1200']?.Value;
  }

  get '60xx1200'(): Element {
    return this.dataset['60xx1200'];
  }

  // Overlays - Red
  get OverlaysRed(): any {
    const element = this.dataset['60xx1201'];
    return (element?.Value.length === 1)
      ? this.dataset['60xx1201']?.Value[0]
      : this.dataset['60xx1201']?.Value;
  }

  get '60xx1201'(): Element {
    return this.dataset['60xx1201'];
  }

  // Overlays - Green
  get OverlaysGreen(): any {
    const element = this.dataset['60xx1202'];
    return (element?.Value.length === 1)
      ? this.dataset['60xx1202']?.Value[0]
      : this.dataset['60xx1202']?.Value;
  }

  get '60xx1202'(): Element {
    return this.dataset['60xx1202'];
  }

  // Overlays - Blue
  get OverlaysBlue(): any {
    const element = this.dataset['60xx1203'];
    return (element?.Value.length === 1)
      ? this.dataset['60xx1203']?.Value[0]
      : this.dataset['60xx1203']?.Value;
  }

  get '60xx1203'(): Element {
    return this.dataset['60xx1203'];
  }

  // ROI Area
  get ROIArea(): any {
    const element = this.dataset['60xx1301'];
    return (element?.Value.length === 1)
      ? this.dataset['60xx1301']?.Value[0]
      : this.dataset['60xx1301']?.Value;
  }

  get '60xx1301'(): Element {
    return this.dataset['60xx1301'];
  }

  // ROI Mean
  get ROIMean(): any {
    const element = this.dataset['60xx1302'];
    return (element?.Value.length === 1)
      ? this.dataset['60xx1302']?.Value[0]
      : this.dataset['60xx1302']?.Value;
  }

  get '60xx1302'(): Element {
    return this.dataset['60xx1302'];
  }

  // ROI Standard Deviation
  get ROIStandardDeviation(): any {
    const element = this.dataset['60xx1303'];
    return (element?.Value.length === 1)
      ? this.dataset['60xx1303']?.Value[0]
      : this.dataset['60xx1303']?.Value;
  }

  get '60xx1303'(): Element {
    return this.dataset['60xx1303'];
  }

  // Overlay Label
  get OverlayLabel(): any {
    const element = this.dataset['60xx1500'];
    return (element?.Value.length === 1)
      ? this.dataset['60xx1500']?.Value[0]
      : this.dataset['60xx1500']?.Value;
  }

  get '60xx1500'(): Element {
    return this.dataset['60xx1500'];
  }

  // Overlay Data
  get OverlayData(): any {
    const element = this.dataset['60xx3000'];
    return (element?.Value.length === 1)
      ? this.dataset['60xx3000']?.Value[0]
      : this.dataset['60xx3000']?.Value;
  }

  get '60xx3000'(): Element {
    return this.dataset['60xx3000'];
  }

  // Overlay Comments
  get OverlayComments(): any {
    const element = this.dataset['60xx4000'];
    return (element?.Value.length === 1)
      ? this.dataset['60xx4000']?.Value[0]
      : this.dataset['60xx4000']?.Value;
  }

  get '60xx4000'(): Element {
    return this.dataset['60xx4000'];
  }

  // Pixel Data
  get PixelData(): any {
    const element = this.dataset['7FE00010'];
    return (element?.Value.length === 1)
      ? this.dataset['7FE00010']?.Value[0]
      : this.dataset['7FE00010']?.Value;
  }

  get '7FE00010'(): Element {
    return this.dataset['7FE00010'];
  }

  // Coefficients SDVN
  get CoefficientsSDVN(): any {
    const element = this.dataset['7FE00020'];
    return (element?.Value.length === 1)
      ? this.dataset['7FE00020']?.Value[0]
      : this.dataset['7FE00020']?.Value;
  }

  get '7FE00020'(): Element {
    return this.dataset['7FE00020'];
  }

  // Coefficients SDHN
  get CoefficientsSDHN(): any {
    const element = this.dataset['7FE00030'];
    return (element?.Value.length === 1)
      ? this.dataset['7FE00030']?.Value[0]
      : this.dataset['7FE00030']?.Value;
  }

  get '7FE00030'(): Element {
    return this.dataset['7FE00030'];
  }

  // Coefficients SDDN
  get CoefficientsSDDN(): any {
    const element = this.dataset['7FE00040'];
    return (element?.Value.length === 1)
      ? this.dataset['7FE00040']?.Value[0]
      : this.dataset['7FE00040']?.Value;
  }

  get '7FE00040'(): Element {
    return this.dataset['7FE00040'];
  }

  // Variable Pixel Data
  get VariablePixelData(): any {
    const element = this.dataset['7Fxx0010'];
    return (element?.Value.length === 1)
      ? this.dataset['7Fxx0010']?.Value[0]
      : this.dataset['7Fxx0010']?.Value;
  }

  get '7Fxx0010'(): Element {
    return this.dataset['7Fxx0010'];
  }

  // Variable Next Data Group
  get VariableNextDataGroup(): any {
    const element = this.dataset['7Fxx0011'];
    return (element?.Value.length === 1)
      ? this.dataset['7Fxx0011']?.Value[0]
      : this.dataset['7Fxx0011']?.Value;
  }

  get '7Fxx0011'(): Element {
    return this.dataset['7Fxx0011'];
  }

  // Variable Coefficients SDVN
  get VariableCoefficientsSDVN(): any {
    const element = this.dataset['7Fxx0020'];
    return (element?.Value.length === 1)
      ? this.dataset['7Fxx0020']?.Value[0]
      : this.dataset['7Fxx0020']?.Value;
  }

  get '7Fxx0020'(): Element {
    return this.dataset['7Fxx0020'];
  }

  // Variable Coefficients SDHN
  get VariableCoefficientsSDHN(): any {
    const element = this.dataset['7Fxx0030'];
    return (element?.Value.length === 1)
      ? this.dataset['7Fxx0030']?.Value[0]
      : this.dataset['7Fxx0030']?.Value;
  }

  get '7Fxx0030'(): Element {
    return this.dataset['7Fxx0030'];
  }

  // Variable Coefficients SDDN
  get VariableCoefficientsSDDN(): any {
    const element = this.dataset['7Fxx0040'];
    return (element?.Value.length === 1)
      ? this.dataset['7Fxx0040']?.Value[0]
      : this.dataset['7Fxx0040']?.Value;
  }

  get '7Fxx0040'(): Element {
    return this.dataset['7Fxx0040'];
  }

  // Digital Signatures Sequence
  get DigitalSignaturesSequence(): any {
    const element = this.dataset['FFFAFFFA'];
    return (element?.Value.length === 1)
      ? this.dataset['FFFAFFFA']?.Value[0]
      : this.dataset['FFFAFFFA']?.Value;
  }

  get 'FFFAFFFA'(): Element {
    return this.dataset['FFFAFFFA'];
  }

  // Data Set Trailing Padding
  get DataSetTrailingPadding(): any {
    const element = this.dataset['FFFCFFFC'];
    return (element?.Value.length === 1)
      ? this.dataset['FFFCFFFC']?.Value[0]
      : this.dataset['FFFCFFFC']?.Value;
  }

  get 'FFFCFFFC'(): Element {
    return this.dataset['FFFCFFFC'];
  }

  // Item
  get Item(): any {
    const element = this.dataset['FFFEE000'];
    return (element?.Value.length === 1)
      ? this.dataset['FFFEE000']?.Value[0]
      : this.dataset['FFFEE000']?.Value;
  }

  get 'FFFEE000'(): Element {
    return this.dataset['FFFEE000'];
  }

  // Item Delimitation Item
  get ItemDelimitationItem(): any {
    const element = this.dataset['FFFEE00D'];
    return (element?.Value.length === 1)
      ? this.dataset['FFFEE00D']?.Value[0]
      : this.dataset['FFFEE00D']?.Value;
  }

  get 'FFFEE00D'(): Element {
    return this.dataset['FFFEE00D'];
  }

  // Sequence Delimitation Item
  get SequenceDelimitationItem(): any {
    const element = this.dataset['FFFEE0DD'];
    return (element?.Value.length === 1)
      ? this.dataset['FFFEE0DD']?.Value[0]
      : this.dataset['FFFEE0DD']?.Value;
  }

  get 'FFFEE0DD'(): Element {
    return this.dataset['FFFEE0DD'];
  }


}
